{"version":3,"file":"TreeNodeInfoDialog-oP2bcXgW.js","sources":["../../../lib/dist/components/TreePanel/dialogs/TreeNodeInfoDialog.js"],"sourcesContent":["import React from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { DialogContent, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { Attributes, BaseCard, } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n    dialogContent: {\n        background: 'lightgrey',\n        margin: 4,\n        width: '80em',\n    },\n});\nexport default observer(function ({ info, model, nodeName, onClose, }) {\n    const { classes } = useStyles();\n    const { treeMetadata, rows } = model;\n    const metadata = treeMetadata[nodeName];\n    const [name, sequence] = rows.find(f => f[0] === nodeName);\n    return (React.createElement(Dialog, { onClose: () => onClose(), open: true, title: \"Tree node info\", maxWidth: \"xl\" },\n        React.createElement(DialogContent, null,\n            React.createElement(BaseCard, { title: \"Attributes\" },\n                React.createElement(Attributes, { attributes: { nodeName, ...info } })),\n            React.createElement(BaseCard, { title: \"Sequence\" },\n                React.createElement(TextField, { variant: \"outlined\", multiline: true, className: classes.dialogContent, minRows: 5, maxRows: 10, fullWidth: true, value: `>${name}\\n${sequence.replaceAll('-', '')}`, InputProps: {\n                        readOnly: true,\n                        classes: {\n                            input: classes.textAreaFont,\n                        },\n                    } })),\n            metadata ? (React.createElement(BaseCard, { title: \"Extra metadata\" },\n                React.createElement(Attributes, { attributes: metadata }))) : null)));\n});\n//# sourceMappingURL=TreeNodeInfoDialog.js.map"],"names":["useStyles","makeStyles","TreeNodeInfoDialog","observer","info","model","nodeName","onClose","classes","treeMetadata","rows","metadata","name","sequence","f","React","Dialog","DialogContent","BaseCard","Attributes","TextField"],"mappings":"mHAMA,MAAMA,EAAYC,EAAU,EAAG,CAC3B,aAAc,CACV,WAAY,aACf,EACD,cAAe,CACX,WAAY,YACZ,OAAQ,EACR,MAAO,MACV,CACL,CAAC,EACDC,EAAeC,EAAS,SAAU,CAAE,KAAAC,EAAM,MAAAC,EAAO,SAAAC,EAAU,QAAAC,CAAO,EAAK,CACnE,KAAM,CAAE,QAAAC,GAAYR,IACd,CAAE,aAAAS,EAAc,KAAAC,CAAM,EAAGL,EACzBM,EAAWF,EAAaH,CAAQ,EAChC,CAACM,EAAMC,CAAQ,EAAIH,EAAK,KAAKI,GAAKA,EAAE,CAAC,IAAMR,CAAQ,EACzD,OAAQS,EAAM,cAAcC,SAAQ,CAAE,QAAS,IAAMT,IAAW,KAAM,GAAM,MAAO,iBAAkB,SAAU,IAAM,EACjHQ,EAAM,cAAcE,EAAe,KAC/BF,EAAM,cAAcG,EAAAA,SAAU,CAAE,MAAO,YAAc,EACjDH,EAAM,cAAcI,EAAAA,WAAY,CAAE,WAAY,CAAE,SAAAb,EAAU,GAAGF,CAAM,CAAA,CAAE,CAAC,EAC1EW,EAAM,cAAcG,EAAAA,SAAU,CAAE,MAAO,UAAY,EAC/CH,EAAM,cAAcK,EAAW,CAAE,QAAS,WAAY,UAAW,GAAM,UAAWZ,EAAQ,cAAe,QAAS,EAAG,QAAS,GAAI,UAAW,GAAM,MAAO,IAAII,CAAI;AAAA,EAAKC,EAAS,WAAW,IAAK,EAAE,CAAC,GAAI,WAAY,CAC3M,SAAU,GACV,QAAS,CACL,MAAOL,EAAQ,YAClB,CACJ,CAAA,CAAE,CAAC,EACZG,EAAYI,EAAM,cAAcG,EAAQ,SAAE,CAAE,MAAO,gBAAkB,EACjEH,EAAM,cAAcI,EAAAA,WAAY,CAAE,WAAYR,EAAU,CAAC,EAAK,IAAI,CAAC,CACnF,CAAC"}