{"version":3,"file":"SequenceTextArea-C7WzkREx.js","sources":["../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/prop-types/index.js","../../../node_modules/@mui/icons-material/ExpandMore.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/hooks.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SettingsDialog.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SequenceFeatureMenu.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SequenceTypeSelector.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/util.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/util.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/SequenceDisplay.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/CDNASequence.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/ProteinSequence.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/GenomicSequence.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/CDSSequence.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/SequencePanel.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SequenceDialog.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeatureDetails.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/HelpDialog.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeaturePanel.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/index.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/util.js","../../../node_modules/@mui/x-data-grid/components/GridApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiRef.js","../../../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/debounce/debounce.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../../../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../../../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../../../node_modules/@mui/x-data-grid/constants/envConstants.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/reselect/dist/reselect.mjs","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../../../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/utils/platform.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/columnResizeSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCellItem.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridToolbarContainer.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarColumnsButton.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarDensitySelector.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarQuickFilter.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbar.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-internals/EventManager/EventManager.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-internals/throttle/throttle.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/index.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/DataGridDetails.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/ArrayValue.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/UriField.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/index.js","../../../lib/dist/components/SequenceTextArea.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useFeatureSequence = useFeatureSequence;\nconst react_1 = require(\"react\");\nconst util_1 = require(\"../../util\");\nconst configuration_1 = require(\"../../configuration\");\nconst BPLIMIT = 500000;\nfunction useFeatureSequence(model, feature, upDownBp, forceLoad) {\n    const [sequence, setSequence] = (0, react_1.useState)();\n    const [error, setError] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        var _a, _b;\n        if (!model) {\n            return;\n        }\n        const { assemblyManager, rpcManager } = (0, util_1.getSession)(model);\n        const assemblyName = ((_b = (_a = model.view) === null || _a === void 0 ? void 0 : _a.assemblyNames) === null || _b === void 0 ? void 0 : _b[0]) || '';\n        async function fetchSeq(start, end, refName) {\n            const assembly = await assemblyManager.waitForAssembly(assemblyName);\n            if (!assembly) {\n                throw new Error('assembly not found');\n            }\n            const sessionId = 'getSequence';\n            const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n                adapterConfig: (0, configuration_1.getConf)(assembly, ['sequence', 'adapter']),\n                sessionId,\n                regions: [\n                    {\n                        start,\n                        end,\n                        refName: assembly.getCanonicalRefName(refName),\n                        assemblyName,\n                    },\n                ],\n            });\n            const [feat] = feats;\n            return (feat === null || feat === void 0 ? void 0 : feat.get('seq')) || '';\n        }\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;\n        (async () => {\n            try {\n                setError(undefined);\n                const { start, end, refName } = feature;\n                if (!forceLoad && end - start > BPLIMIT) {\n                    setSequence({\n                        error: `Genomic sequence larger than ${BPLIMIT}bp, use \"force load\" button to display`,\n                    });\n                }\n                else {\n                    const b = start - upDownBp;\n                    const e = end + upDownBp;\n                    const seq = await fetchSeq(start, end, refName);\n                    const up = await fetchSeq(Math.max(0, b), start, refName);\n                    const down = await fetchSeq(end, e, refName);\n                    setSequence({ seq, upstream: up, downstream: down });\n                }\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n    }, [feature, model, upDownBp, forceLoad]);\n    return { sequence, error };\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst ui_1 = require(\"@jbrowse/core/ui\");\nconst mui_1 = require(\"tss-react/mui\");\nconst mobx_react_1 = require(\"mobx-react\");\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    formElt: {\n        margin: theme.spacing(3),\n        width: 400,\n    },\n    dialogContent: {\n        width: '80em',\n    },\n    root: {\n        padding: 4,\n    },\n}));\nfunction TextField2(props) {\n    return (react_1.default.createElement(\"div\", null,\n        react_1.default.createElement(material_1.TextField, { ...props })));\n}\nfunction FormControl2({ children }) {\n    return (react_1.default.createElement(\"div\", null,\n        react_1.default.createElement(material_1.FormControl, null, children)));\n}\nconst SequenceFeatureSettingsDialog = (0, mobx_react_1.observer)(function ({ handleClose, model, }) {\n    const { classes } = useStyles();\n    const { upperCaseCDS } = model;\n    const [intronBp, setIntronBp] = (0, react_1.useState)(`${model.intronBp}`);\n    const [upDownBp, setUpDownBp] = (0, react_1.useState)(`${model.upDownBp}`);\n    const intronBpValid = !Number.isNaN(+intronBp);\n    const upDownBpValid = !Number.isNaN(+upDownBp);\n    return (react_1.default.createElement(ui_1.Dialog, { maxWidth: \"xl\", open: true, onClose: () => {\n            handleClose();\n        }, title: \"Feature sequence settings\" },\n        react_1.default.createElement(material_1.DialogContent, { className: classes.dialogContent },\n            react_1.default.createElement(TextField2, { label: \"Number of intronic bases around splice site to display\", className: classes.formElt, value: intronBp, helperText: !intronBpValid ? 'Not a number' : '', error: !intronBpValid, onChange: event => {\n                    setIntronBp(event.target.value);\n                } }),\n            react_1.default.createElement(TextField2, { label: \"Number of bases up/down stream of feature to display\", className: classes.formElt, value: upDownBp, helperText: !upDownBpValid ? 'Not a number' : '', error: !upDownBpValid, onChange: event => {\n                    setUpDownBp(event.target.value);\n                } }),\n            react_1.default.createElement(FormControl2, null,\n                react_1.default.createElement(material_1.FormLabel, null, \"Sequence capitalization\"),\n                react_1.default.createElement(material_1.RadioGroup, { value: upperCaseCDS ? 'cds' : 'unchanged', onChange: e => {\n                        model.setUpperCaseCDS(e.target.value === 'cds');\n                    } },\n                    react_1.default.createElement(material_1.FormControlLabel, { value: \"cds\", control: react_1.default.createElement(material_1.Radio, { className: classes.root, size: \"small\" }), label: \"Capitalize CDS and lower case everything else\" }),\n                    react_1.default.createElement(material_1.FormControlLabel, { value: \"unchanged\", control: react_1.default.createElement(material_1.Radio, { className: classes.root, size: \"small\" }), label: \"Capitalization from reference genome sequence\" })))),\n        react_1.default.createElement(material_1.DialogActions, null,\n            react_1.default.createElement(material_1.Button, { onClick: () => {\n                    model.setIntronBp(+intronBp);\n                    model.setUpDownBp(+upDownBp);\n                    handleClose();\n                }, disabled: !intronBpValid || !upDownBpValid, color: \"primary\", variant: \"contained\" }, \"Submit\"),\n            react_1.default.createElement(material_1.Button, { onClick: () => {\n                    handleClose();\n                }, color: \"secondary\", autoFocus: true, variant: \"contained\" }, \"Cancel\"))));\n});\nexports.default = SequenceFeatureSettingsDialog;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\nconst copy_to_clipboard_1 = __importDefault(require(\"copy-to-clipboard\"));\nconst file_saver_1 = require(\"file-saver\");\n// locals\nconst CascadingMenuButton_1 = __importDefault(require(\"../../../ui/CascadingMenuButton\"));\n// icons\nconst MoreVert_1 = __importDefault(require(\"@mui/icons-material/MoreVert\"));\nconst Settings_1 = __importDefault(require(\"@mui/icons-material/Settings\"));\n// lazies\nconst SequenceFeatureSettingsDialog = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./SettingsDialog'))));\nconst SequenceFeatureMenu = (0, mobx_react_1.observer)(react_1.default.forwardRef(function SequenceFeatureMenu2({ model, extraItems = [] }, ref) {\n    if (typeof ref === 'function') {\n        throw new Error('needs a non function ref');\n    }\n    const [showSettings, setShowSettings] = (0, react_1.useState)(false);\n    const { showCoordinatesSetting, showGenomicCoordsOption } = model;\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(CascadingMenuButton_1.default, { menuItems: [\n                {\n                    label: 'Copy plaintext',\n                    onClick: () => {\n                        const r = ref === null || ref === void 0 ? void 0 : ref.current;\n                        if (r) {\n                            (0, copy_to_clipboard_1.default)(r.textContent || '', { format: 'text/plain' });\n                        }\n                    },\n                },\n                {\n                    label: 'Copy HTML',\n                    onClick: () => {\n                        const r = ref === null || ref === void 0 ? void 0 : ref.current;\n                        if (r) {\n                            (0, copy_to_clipboard_1.default)(r.outerHTML, { format: 'text/html' });\n                        }\n                    },\n                },\n                {\n                    label: 'Download plaintext',\n                    onClick: () => {\n                        const r = ref === null || ref === void 0 ? void 0 : ref.current;\n                        if (r) {\n                            (0, file_saver_1.saveAs)(new Blob([r.textContent || ''], {\n                                type: 'text/plain;charset=utf-8',\n                            }), 'sequence.txt');\n                        }\n                    },\n                },\n                {\n                    label: 'Download HTML',\n                    onClick: () => {\n                        const r = ref === null || ref === void 0 ? void 0 : ref.current;\n                        if (r) {\n                            (0, file_saver_1.saveAs)(new Blob([r.outerHTML || ''], {\n                                type: 'text/html;charset=utf-8',\n                            }), 'sequence.html');\n                        }\n                    },\n                },\n                ...extraItems,\n                {\n                    label: 'Show coordinates?',\n                    type: 'subMenu',\n                    subMenu: [\n                        {\n                            label: 'No coordinates',\n                            type: 'radio',\n                            checked: showCoordinatesSetting === 'none',\n                            onClick: () => {\n                                model.setShowCoordinates('none');\n                            },\n                        },\n                        {\n                            label: 'Coordinates relative to feature start',\n                            type: 'radio',\n                            checked: showCoordinatesSetting === 'relative',\n                            onClick: () => {\n                                model.setShowCoordinates('relative');\n                            },\n                        },\n                        ...(showGenomicCoordsOption\n                            ? [\n                                {\n                                    label: 'Coordinates relative to genome (only available for continuous genome based sequence types)',\n                                    type: 'radio',\n                                    checked: showCoordinatesSetting === 'genomic',\n                                    onClick: () => {\n                                        model.setShowCoordinates('genomic');\n                                    },\n                                },\n                            ]\n                            : []),\n                    ],\n                },\n                {\n                    label: 'Settings',\n                    icon: Settings_1.default,\n                    onClick: () => {\n                        setShowSettings(true);\n                    },\n                },\n            ] },\n            react_1.default.createElement(MoreVert_1.default, null)),\n        showSettings ? (react_1.default.createElement(SequenceFeatureSettingsDialog, { model: model, handleClose: () => {\n                setShowSettings(false);\n            } })) : null));\n}));\nexports.default = SequenceFeatureMenu;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst mobx_react_1 = require(\"mobx-react\");\nconst mui_1 = require(\"tss-react/mui\");\nconst useStyles = (0, mui_1.makeStyles)()({\n    formControl: {\n        margin: 0,\n        marginLeft: 4,\n    },\n});\nconst SequenceTypeSelector = (0, mobx_react_1.observer)(function ({ model, }) {\n    const { classes } = useStyles();\n    const { intronBp, upDownBp, mode, hasCDS, hasExonOrCDS } = model;\n    return (react_1.default.createElement(material_1.FormControl, { className: classes.formControl },\n        react_1.default.createElement(material_1.Select, { size: \"small\", value: mode, onChange: event => {\n                model.setMode(event.target.value);\n            } }, Object.entries({\n            ...(hasCDS\n                ? {\n                    cds: 'CDS',\n                }\n                : {}),\n            ...(hasCDS\n                ? {\n                    protein: 'Protein',\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    cdna: 'cDNA',\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    gene: 'Genomic w/ full introns',\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    gene_updownstream: `Genomic w/ full introns +/- ${upDownBp}bp up+down stream`,\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    gene_collapsed_intron: `Genomic w/ ${intronBp}bp intron`,\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    gene_updownstream_collapsed_intron: `Genomic w/ ${intronBp}bp intron +/- ${upDownBp}bp up+down stream `,\n                }\n                : {}),\n            ...(!hasExonOrCDS\n                ? {\n                    genomic: 'Genomic',\n                }\n                : {}),\n            ...(!hasExonOrCDS\n                ? {\n                    genomic_sequence_updownstream: `Genomic +/- ${upDownBp}bp up+down stream`,\n                }\n                : {}),\n        }).map(([key, val]) => (react_1.default.createElement(material_1.MenuItem, { key: key, value: key }, val))))));\n});\nexports.default = SequenceTypeSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stitch = stitch;\nexports.dedupe = dedupe;\nexports.revlist = revlist;\nexports.calculateUTRs = calculateUTRs;\nexports.calculateUTRs2 = calculateUTRs2;\nexports.ellipses = ellipses;\nfunction stitch(subfeats, sequence) {\n    return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('');\n}\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat) {\n    return `${feat.start}-${feat.end}`;\n}\n// filters if successive elements share same start/end\nfunction dedupe(list) {\n    return list.filter((item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]));\n}\nfunction revlist(list, seqlen) {\n    return list\n        .map(sub => ({\n        ...sub,\n        start: seqlen - sub.end,\n        end: seqlen - sub.start,\n    }))\n        .sort((a, b) => a.start - b.start);\n}\nfunction calculateUTRs(cds, exons) {\n    // checking length ensures the .at below are valid\n    if (!cds.length) {\n        return [];\n    }\n    const firstCds = cds.at(0);\n    const lastCds = cds.at(-1);\n    const firstCdsIdx = exons.findIndex(exon => exon.end >= firstCds.start && exon.start <= firstCds.start);\n    const lastCdsIdx = exons.findIndex(exon => exon.end >= lastCds.end && exon.start <= lastCds.end);\n    const lastCdsExon = exons[lastCdsIdx];\n    const firstCdsExon = exons[firstCdsIdx];\n    const fiveUTRs = [\n        ...exons.slice(0, firstCdsIdx),\n        { start: firstCdsExon.start, end: firstCds.start },\n    ].map(elt => ({ ...elt, type: 'five_prime_UTR' }));\n    const threeUTRs = [\n        { start: lastCds.end, end: lastCdsExon.end },\n        ...exons.slice(lastCdsIdx + 1),\n    ].map(elt => ({ ...elt, type: 'three_prime_UTR' }));\n    return [...fiveUTRs, ...threeUTRs];\n}\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nfunction calculateUTRs2(cds, parentFeat) {\n    if (!cds.length) {\n        return [];\n    }\n    const firstCds = cds.at(0);\n    const lastCds = cds.at(-1);\n    const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(elt => ({ ...elt, type: 'five_prime_UTR' }));\n    const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n        ...elt,\n        type: 'three_prime_UTR',\n    }));\n    return [...fiveUTRs, ...threeUTRs];\n}\nfunction ellipses(slug) {\n    return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.genomeColor = exports.updownstreamColor = exports.cdsColor = exports.proteinColor = exports.utrColor = exports.intronColor = void 0;\nexports.splitString = splitString;\n// note that these are currently put into the style section instead of being\n// defined in classes to aid copy and paste to an external document e.g. word\nexports.intronColor = undefined;\nexports.utrColor = 'rgb(200,240,240)';\nexports.proteinColor = 'rgb(220,160,220)';\nexports.cdsColor = 'rgb(220,220,180)';\nexports.updownstreamColor = 'rgba(250,200,200)';\nexports.genomeColor = 'rgb(200,280,200)';\nfunction splitString({ str, charactersPerRow, showCoordinates, currRemainder = 0, splitSize = 10, }) {\n    var _a;\n    const numChunks = Math.ceil(str.length / charactersPerRow);\n    const chunks = new Array(numChunks);\n    let splitStart = currRemainder % 10;\n    let iter = 0;\n    let offset = 0;\n    for (; iter < numChunks + 1; ++iter) {\n        const inc = iter === 0 ? charactersPerRow - currRemainder : charactersPerRow;\n        const r = str.slice(offset, offset + inc);\n        if (!r) {\n            break;\n        }\n        if (showCoordinates) {\n            let res = '';\n            for (let i = 0, j = splitStart; i < r.length; i++, j++) {\n                // note: this adds a space at the start but it causes trouble to try to\n                // say e.g. j%splitSize==0 && j to try to only add non-zero spaces\n                if (j % splitSize === 0) {\n                    res += ' ';\n                    j = 0;\n                }\n                res += r[i];\n            }\n            if (res) {\n                chunks[iter] = res;\n            }\n        }\n        else {\n            chunks[iter] = r;\n        }\n        splitStart = 0; // after newline, reset\n        offset += inc;\n    }\n    return {\n        segments: chunks,\n        remainder: ((((_a = chunks.at(-1)) === null || _a === void 0 ? void 0 : _a.replaceAll(' ', '').length) || 0) +\n            (iter < 2 ? currRemainder : 0)) %\n            charactersPerRow,\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\nconst SequenceDisplay = (0, mobx_react_1.observer)(function ({ chunks, start, color, strand = 1, coordStart = start, model, }) {\n    const { charactersPerRow, showCoordinates } = model;\n    return chunks.map((chunk, idx) => {\n        var _a;\n        const f = coordStart - (start % charactersPerRow);\n        const prefix = (idx === 0 && start % charactersPerRow === 0) || idx > 0\n            ? `${`${f + idx * strand * charactersPerRow}`.padStart(4)}   `\n            : '';\n        const postfix = idx === chunks.length - 1 &&\n            (((_a = chunks.at(-1)) === null || _a === void 0 ? void 0 : _a.replaceAll(' ', '').length) || 0) +\n                (idx === 0 ? start % charactersPerRow : 0) !==\n                charactersPerRow\n            ? null\n            : showCoordinates\n                ? ' \\n'\n                : '';\n        return (\n        /* biome-ignore lint/suspicious/noArrayIndexKey: */\n        react_1.default.createElement(react_1.default.Fragment, { key: `${chunk}-${idx}` },\n            showCoordinates ? prefix : null,\n            react_1.default.createElement(\"span\", { style: { background: color } }, chunk),\n            postfix));\n    });\n});\nexports.default = SequenceDisplay;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\nconst util_1 = require(\"../util\");\nconst SequenceDisplay_1 = __importDefault(require(\"./SequenceDisplay\"));\nconst CDNASequence = (0, mobx_react_1.observer)(function ({ utr, cds, exons, sequence, upstream, downstream, feature, includeIntrons, collapseIntron, model, }) {\n    var _a;\n    const { upperCaseCDS, intronBp, charactersPerRow, showCoordinates, showCoordinatesSetting, } = model;\n    const hasCds = cds.length > 0;\n    const chunks = (cds.length ? [...cds, ...utr].sort((a, b) => a.start - b.start) : exons).filter(f => f.start !== f.end);\n    const toLower = (s) => (upperCaseCDS ? s.toLowerCase() : s);\n    const toUpper = (s) => (upperCaseCDS ? s.toUpperCase() : s);\n    const strand = feature.strand === -1 ? -1 : 1;\n    const fullGenomicCoordinates = showCoordinatesSetting === 'genomic' && includeIntrons && !collapseIntron;\n    const mult = fullGenomicCoordinates ? strand : 1;\n    let coordStart = fullGenomicCoordinates\n        ? strand > 0\n            ? feature.start + 1 - ((upstream === null || upstream === void 0 ? void 0 : upstream.length) || 0)\n            : feature.end + ((upstream === null || upstream === void 0 ? void 0 : upstream.length) || 0)\n        : 0;\n    let currStart = 0;\n    let currRemainder = 0;\n    let upstreamChunk = null;\n    if (upstream) {\n        const { segments, remainder } = (0, util_1.splitString)({\n            str: toLower(upstream),\n            charactersPerRow,\n            showCoordinates,\n        });\n        upstreamChunk = (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_1.updownstreamColor, strand: mult, start: currStart, coordStart: coordStart, chunks: segments }));\n        currRemainder = remainder;\n        currStart = currStart + upstream.length * mult;\n        coordStart = coordStart + upstream.length * mult;\n    }\n    const middleChunks = [];\n    for (let idx = 0; idx < chunks.length; idx++) {\n        const chunk = chunks[idx];\n        const intron = sequence.slice(chunk.end, (_a = chunks[idx + 1]) === null || _a === void 0 ? void 0 : _a.start);\n        const s = sequence.slice(chunk.start, chunk.end);\n        const { segments, remainder } = (0, util_1.splitString)({\n            str: hasCds\n                ? chunk.type === 'CDS'\n                    ? toUpper(s)\n                    : toLower(s)\n                : toUpper(s),\n            charactersPerRow,\n            currRemainder,\n            showCoordinates,\n        });\n        middleChunks.push(react_1.default.createElement(SequenceDisplay_1.default, { key: `${JSON.stringify(chunk)}-mid`, model: model, color: chunk.type === 'CDS' ? util_1.cdsColor : util_1.utrColor, strand: mult, start: currStart, coordStart: coordStart, chunks: segments }));\n        currRemainder = remainder;\n        currStart = currStart + s.length * mult;\n        coordStart = coordStart + s.length * mult;\n        if (intron && includeIntrons && idx < chunks.length - 1) {\n            const str = toLower(collapseIntron && intron.length > intronBp * 2\n                ? `${intron.slice(0, intronBp)}...${intron.slice(-intronBp)}`\n                : intron);\n            const { segments, remainder } = (0, util_1.splitString)({\n                str,\n                charactersPerRow,\n                currRemainder,\n                showCoordinates,\n            });\n            if (segments.length) {\n                middleChunks.push(react_1.default.createElement(SequenceDisplay_1.default, { key: `${JSON.stringify(chunk)}-intron`, model: model, strand: mult, coordStart: coordStart, start: currStart, chunks: segments }));\n                currRemainder = remainder;\n                currStart = currStart + str.length * mult;\n                coordStart = coordStart + str.length * mult;\n            }\n        }\n    }\n    let downstreamChunk = null;\n    if (downstream) {\n        const { segments } = (0, util_1.splitString)({\n            str: toLower(downstream),\n            charactersPerRow,\n            currRemainder,\n            showCoordinates,\n        });\n        downstreamChunk = (react_1.default.createElement(SequenceDisplay_1.default, { start: currStart, model: model, strand: mult, chunks: segments, coordStart: coordStart, color: util_1.updownstreamColor }));\n    }\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        upstreamChunk,\n        middleChunks,\n        downstreamChunk));\n});\nexports.default = CDNASequence;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst util_1 = require(\"../../util\");\nconst util_2 = require(\"../util\");\nconst SequenceDisplay_1 = __importDefault(require(\"./SequenceDisplay\"));\nconst ProteinSequence = (0, mobx_react_1.observer)(function ({ cds, sequence, codonTable, model, }) {\n    const { charactersPerRow, showCoordinates } = model;\n    const str = (0, util_1.stitch)(cds, sequence);\n    let protein = '';\n    for (let i = 0; i < str.length; i += 3) {\n        // use & symbol for undefined codon, or partial slice\n        protein += codonTable[str.slice(i, i + 3)] || '&';\n    }\n    const { segments } = (0, util_2.splitString)({\n        str: protein,\n        charactersPerRow,\n        showCoordinates,\n    });\n    return (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_2.proteinColor, chunks: segments, start: 0 }));\n});\nexports.default = ProteinSequence;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst util_1 = require(\"../util\");\nconst SequenceDisplay_1 = __importDefault(require(\"./SequenceDisplay\"));\nconst GenomicSequence = (0, mobx_react_1.observer)(function ({ sequence, upstream, feature, downstream, model, }) {\n    const { charactersPerRow, showCoordinatesSetting, showCoordinates } = model;\n    let currStart = 0;\n    let upstreamChunk = null;\n    let currRemainder = 0;\n    const strand = feature.strand === -1 ? -1 : 1;\n    const fullGenomicCoordinates = showCoordinatesSetting === 'genomic';\n    const mult = fullGenomicCoordinates ? strand : 1;\n    let coordStart = fullGenomicCoordinates\n        ? strand > 0\n            ? feature.start + 1 - ((upstream === null || upstream === void 0 ? void 0 : upstream.length) || 0)\n            : feature.end + ((upstream === null || upstream === void 0 ? void 0 : upstream.length) || 0)\n        : 0;\n    if (upstream) {\n        const { segments, remainder } = (0, util_1.splitString)({\n            str: upstream,\n            charactersPerRow,\n            showCoordinates,\n        });\n        upstreamChunk = (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_1.updownstreamColor, start: currStart, coordStart: coordStart, chunks: segments }));\n        currRemainder = remainder;\n        currStart = currStart + upstream.length * mult;\n        coordStart = coordStart + upstream.length * mult;\n    }\n    const { segments, remainder } = (0, util_1.splitString)({\n        str: sequence,\n        charactersPerRow,\n        showCoordinates,\n        currRemainder,\n    });\n    const middleChunk = (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_1.genomeColor, start: currStart, coordStart: coordStart, chunks: segments }));\n    currRemainder = remainder;\n    currStart += sequence.length * mult;\n    coordStart = coordStart + sequence.length * mult;\n    let downstreamChunk = null;\n    if (downstream) {\n        const { segments } = (0, util_1.splitString)({\n            str: downstream,\n            charactersPerRow,\n            currRemainder,\n            showCoordinates,\n        });\n        downstreamChunk = (react_1.default.createElement(SequenceDisplay_1.default, { start: currStart, model: model, chunks: segments, coordStart: coordStart, color: util_1.updownstreamColor }));\n    }\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        upstreamChunk,\n        middleChunk,\n        downstreamChunk));\n});\nexports.default = GenomicSequence;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst util_1 = require(\"../util\");\nconst util_2 = require(\"../../util\");\nconst SequenceDisplay_1 = __importDefault(require(\"./SequenceDisplay\"));\nconst CDSSequence = (0, mobx_react_1.observer)(function ({ cds, sequence, model, }) {\n    const { charactersPerRow, showCoordinates } = model;\n    const { segments } = (0, util_1.splitString)({\n        str: (0, util_2.stitch)(cds, sequence),\n        charactersPerRow,\n        showCoordinates,\n    });\n    return (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_1.cdsColor, chunks: segments, start: 0 }));\n});\nexports.default = CDSSequence;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst util_1 = require(\"../../util\");\nconst util_2 = require(\"../util\");\n// panel types\nconst CDNASequence_1 = __importDefault(require(\"./seqtypes/CDNASequence\"));\nconst ProteinSequence_1 = __importDefault(require(\"./seqtypes/ProteinSequence\"));\nconst GenomicSequence_1 = __importDefault(require(\"./seqtypes/GenomicSequence\"));\nconst CDSSequence_1 = __importDefault(require(\"./seqtypes/CDSSequence\"));\nfunction getStrand(strand) {\n    if (strand === -1) {\n        return '(-)';\n    }\n    else if (strand === 1) {\n        return '(+)';\n    }\n    else {\n        return '';\n    }\n}\nfunction WordWrap({ children }) {\n    return (react_1.default.createElement(\"pre\", { style: {\n            /* raw styles instead of className so that html copy works */\n            fontFamily: 'monospace',\n            color: 'black',\n            fontSize: 11,\n        } }, children));\n}\nfunction NoWordWrap({ children }) {\n    return (react_1.default.createElement(\"div\", { style: {\n            /* raw styles instead of className so that html copy works */\n            fontFamily: 'monospace',\n            color: 'black',\n            fontSize: 11,\n            maxWidth: 600,\n            whiteSpace: 'wrap',\n            wordBreak: 'break-all',\n        } }, children));\n}\nconst SequencePanel = (0, mobx_react_1.observer)(react_1.default.forwardRef(function S(props, ref) {\n    const { model, feature } = props;\n    const { showCoordinates, mode } = model;\n    let { sequence: { seq, upstream = '', downstream = '' }, } = props;\n    const { subfeatures = [] } = feature;\n    const children = subfeatures\n        .sort((a, b) => a.start - b.start)\n        .map(sub => ({\n        ...sub,\n        start: sub.start - feature.start,\n        end: sub.end - feature.start,\n    }));\n    // we filter duplicate entries in cds and exon lists duplicate entries\n    // may be rare but was seen in Gencode v36 track NCList, likely a bug\n    // on GFF3 or probably worth ignoring here (produces broken protein\n    // translations if included)\n    //\n    // position 1:224,800,006..225,203,064 gene ENSG00000185842.15 first\n    // transcript ENST00000445597.6\n    //\n    // http://localhost:3000/?config=test_data%2Fconfig.json&session=share-FUl7G1isvF&password=HXh5Y\n    let cds = (0, util_2.dedupe)(children.filter(sub => sub.type === 'CDS'));\n    let utr = (0, util_2.dedupe)(children.filter(sub => { var _a; return (_a = sub.type) === null || _a === void 0 ? void 0 : _a.match(/utr/i); }));\n    let exons = (0, util_2.dedupe)(children.filter(sub => sub.type === 'exon'));\n    if (!utr.length && cds.length && exons.length) {\n        utr = (0, util_2.calculateUTRs)(cds, exons);\n    }\n    if (!utr.length && cds.length && !exons.length) {\n        utr = (0, util_2.calculateUTRs2)(cds, {\n            start: 0,\n            end: feature.end - feature.start,\n            type: 'gene',\n        });\n    }\n    if (feature.strand === -1) {\n        // doing this in a single assignment is needed because downstream and\n        // upstream are swapped so this avoids a temp variable\n        ;\n        [seq, upstream, downstream] = [\n            (0, util_1.revcom)(seq),\n            (0, util_1.revcom)(downstream),\n            (0, util_1.revcom)(upstream),\n        ];\n        cds = (0, util_2.revlist)(cds, seq.length);\n        exons = (0, util_2.revlist)(exons, seq.length);\n        utr = (0, util_2.revlist)(utr, seq.length);\n    }\n    const codonTable = (0, util_1.generateCodonTable)(util_1.defaultCodonTable);\n    const Container = showCoordinates ? WordWrap : NoWordWrap;\n    return (react_1.default.createElement(\"div\", { \"data-testid\": \"sequence_panel\", ref: ref, style: { maxHeight: 300, overflow: 'auto' } },\n        react_1.default.createElement(Container, null,\n            react_1.default.createElement(\"div\", { style: { background: 'white' } }, `>${[\n                `${feature.name || feature.id}-${mode}`,\n                `${feature.refName}:${(0, util_1.toLocale)(feature.start + 1)}-${(0, util_1.toLocale)(feature.end)}${getStrand(feature.strand)}`,\n                mode.endsWith('updownstream')\n                    ? `+/- ${(0, util_1.toLocale)(model.upDownBp)} up/downstream bp`\n                    : '',\n            ]\n                .filter(f => !!f)\n                .join(' ')}\\n`),\n            mode === 'genomic' ? (react_1.default.createElement(GenomicSequence_1.default, { feature: feature, model: model, sequence: seq })) : mode === 'genomic_sequence_updownstream' ? (react_1.default.createElement(GenomicSequence_1.default, { model: model, feature: feature, sequence: seq, upstream: upstream, downstream: downstream })) : mode === 'cds' ? (react_1.default.createElement(CDSSequence_1.default, { model: model, cds: cds, sequence: seq })) : mode === 'cdna' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, utr: utr, sequence: seq })) : mode === 'protein' ? (react_1.default.createElement(ProteinSequence_1.default, { model: model, cds: cds, codonTable: codonTable, sequence: seq })) : mode === 'gene' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, utr: utr, sequence: seq, includeIntrons: true })) : mode === 'gene_collapsed_intron' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, sequence: seq, utr: utr, includeIntrons: true, collapseIntron: true })) : mode === 'gene_updownstream' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, sequence: seq, utr: utr, upstream: upstream, downstream: downstream, includeIntrons: true })) : mode === 'gene_updownstream_collapsed_intron' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, sequence: seq, utr: utr, upstream: upstream, downstream: downstream, includeIntrons: true, collapseIntron: true })) : (react_1.default.createElement(\"div\", null, \"Unknown type\")))));\n}));\nexports.default = SequencePanel;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst ui_1 = require(\"@jbrowse/core/ui\");\nconst mui_1 = require(\"tss-react/mui\");\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst hooks_1 = require(\"../hooks\");\nconst SequencePanel_1 = __importDefault(require(\"../SequencePanel\"));\nconst SequenceFeatureMenu_1 = __importDefault(require(\"./SequenceFeatureMenu\"));\nconst SequenceTypeSelector_1 = __importDefault(require(\"./SequenceTypeSelector\"));\nconst useStyles = (0, mui_1.makeStyles)()({\n    dialogContent: {\n        width: '80em',\n    },\n    formControl: {\n        margin: 0,\n        marginLeft: 4,\n    },\n});\nconst SequenceDialog = (0, mobx_react_1.observer)(function ({ handleClose, model, feature, }) {\n    const { sequenceFeatureDetails } = model;\n    const { upDownBp } = sequenceFeatureDetails;\n    const { classes } = useStyles();\n    const seqPanelRef = (0, react_1.useRef)(null);\n    const [force, setForce] = (0, react_1.useState)(false);\n    const { sequence, error } = (0, hooks_1.useFeatureSequence)(model, feature, upDownBp, force);\n    return (react_1.default.createElement(ui_1.Dialog, { maxWidth: \"xl\", open: true, onClose: () => {\n            handleClose();\n        }, title: \"Sequence view\" },\n        react_1.default.createElement(material_1.DialogContent, { className: classes.dialogContent },\n            react_1.default.createElement(\"div\", null,\n                react_1.default.createElement(SequenceTypeSelector_1.default, { model: sequenceFeatureDetails }),\n                react_1.default.createElement(SequenceFeatureMenu_1.default, { ref: seqPanelRef, model: sequenceFeatureDetails })),\n            react_1.default.createElement(\"div\", null,\n                feature.type === 'gene' ? (react_1.default.createElement(material_1.Typography, null, \"Note: inspect subfeature sequences for protein/CDS computations\")) : null,\n                error ? (react_1.default.createElement(ui_1.ErrorMessage, { error: error })) : !sequence ? (react_1.default.createElement(ui_1.LoadingEllipses, null)) : 'error' in sequence ? (react_1.default.createElement(react_1.default.Fragment, null,\n                    react_1.default.createElement(material_1.Typography, { color: \"error\" }, sequence.error),\n                    react_1.default.createElement(material_1.Button, { variant: \"contained\", color: \"inherit\", onClick: () => {\n                            setForce(true);\n                        } }, \"Force load\"))) : (react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },\n                    react_1.default.createElement(SequencePanel_1.default, { ref: seqPanelRef, feature: feature, sequence: sequence, model: sequenceFeatureDetails }))))),\n        react_1.default.createElement(material_1.DialogActions, null,\n            react_1.default.createElement(material_1.Button, { onClick: () => {\n                    handleClose();\n                }, variant: \"contained\" }, \"Close\"))));\n});\nexports.default = SequenceDialog;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst hooks_1 = require(\"./hooks\");\nconst ui_1 = require(\"../../ui\");\n// icons\nconst SequenceFeatureMenu_1 = __importDefault(require(\"./dialogs/SequenceFeatureMenu\"));\nconst SequenceTypeSelector_1 = __importDefault(require(\"./dialogs/SequenceTypeSelector\"));\n// lazies\nconst SequencePanel = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./SequencePanel'))));\nconst SequenceDialog = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./dialogs/SequenceDialog'))));\n// set the key on this component to feature.id to clear state after new feature\n// is selected\nconst SequenceFeatureDetails = (0, mobx_react_1.observer)(function ({ model, feature, }) {\n    const { sequenceFeatureDetails } = model;\n    const { upDownBp } = sequenceFeatureDetails;\n    const seqPanelRef = (0, react_1.useRef)(null);\n    const [openInDialog, setOpenInDialog] = (0, react_1.useState)(false);\n    const [force, setForce] = (0, react_1.useState)(false);\n    const { sequence, error } = (0, hooks_1.useFeatureSequence)(model, feature, upDownBp, force);\n    (0, react_1.useEffect)(() => {\n        sequenceFeatureDetails.setFeature(feature);\n    }, [sequenceFeatureDetails, feature]);\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(\"div\", null,\n            react_1.default.createElement(SequenceTypeSelector_1.default, { model: sequenceFeatureDetails }),\n            react_1.default.createElement(SequenceFeatureMenu_1.default, { ref: seqPanelRef, model: sequenceFeatureDetails, extraItems: [\n                    {\n                        label: 'Open in dialog',\n                        onClick: () => {\n                            // this is given a setTimeout because it allows the menu to\n                            // close before dialog opens\n                            setTimeout(() => {\n                                setOpenInDialog(true);\n                            }, 1);\n                        },\n                    },\n                ] })),\n        openInDialog ? (react_1.default.createElement(\"div\", null,\n            \"Open in dialog...\",\n            react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },\n                react_1.default.createElement(SequenceDialog, { model: model, feature: feature, handleClose: () => {\n                        setOpenInDialog(false);\n                    } })))) : (react_1.default.createElement(\"div\", null,\n            feature.type === 'gene' ? (react_1.default.createElement(material_1.Typography, null, \"Note: inspect subfeature sequences for protein/CDS computations\")) : null,\n            error ? (react_1.default.createElement(ui_1.ErrorMessage, { error: error })) : !sequence ? (react_1.default.createElement(ui_1.LoadingEllipses, null)) : 'error' in sequence ? (react_1.default.createElement(react_1.default.Fragment, null,\n                react_1.default.createElement(material_1.Typography, { color: \"error\" }, sequence.error),\n                react_1.default.createElement(material_1.Button, { variant: \"contained\", color: \"inherit\", onClick: () => {\n                        setForce(true);\n                    } }, \"Force load\"))) : (react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },\n                react_1.default.createElement(SequencePanel, { ref: seqPanelRef, feature: feature, sequence: sequence, model: sequenceFeatureDetails })))))));\n});\nexports.default = SequenceFeatureDetails;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = HelpDialog;\nconst react_1 = __importDefault(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst ui_1 = require(\"@jbrowse/core/ui\");\n// icons\nconst Settings_1 = __importDefault(require(\"@mui/icons-material/Settings\"));\nfunction HelpDialog({ handleClose, }) {\n    return (react_1.default.createElement(ui_1.Dialog, { maxWidth: \"xl\", open: true, onClose: () => {\n            handleClose();\n        }, title: \"Feature sequence panel help\" },\n        react_1.default.createElement(material_1.DialogContent, null,\n            react_1.default.createElement(material_1.Typography, { paragraph: true }, \"The \\\"Feature sequence\\\" panel shows the underlying genomic sequence for a given feature, fetched from the reference genome.\"),\n            react_1.default.createElement(material_1.Typography, null, \"For gene features, this panel does special calculations to e.g. stitch together the coding sequence, the options are:\"),\n            react_1.default.createElement(\"ul\", null,\n                react_1.default.createElement(\"li\", null, \"CDS - shows the stitched together CDS sequences\"),\n                react_1.default.createElement(\"li\", null, \"Protein - the translated coding sequence, with the \\\"standard\\\" genetic code\"),\n                react_1.default.createElement(\"li\", null, \"cDNA - shows the 'copy DNA' of transcript, formed from exon sequences\"),\n                react_1.default.createElement(\"li\", null, \"Genomic w/ introns +/- Nbp up+down stream - the sequence underlying the entire gene including including introns, with UTR and CDS highlighted\")),\n            react_1.default.createElement(material_1.Typography, { paragraph: true }, \"For other feature types, the options are:\"),\n            react_1.default.createElement(\"ul\", null,\n                react_1.default.createElement(\"li\", null, \"Genomic +/- Nbp up+down stream - the reference genome sequence underlying the feature, with the up and downstream sequence\")),\n            react_1.default.createElement(material_1.Typography, null,\n                \"Note 1: you can use the \\\"gear icon\\\" \",\n                react_1.default.createElement(Settings_1.default, null),\n                \" to edit the number of bp displayed up/downstream and in the intron region\"),\n            react_1.default.createElement(material_1.Typography, null, \"Note 2: The 'Copy HTML' function retains the colors from the sequence panel but cannot be pasted into some programs like notepad that only expect plain text.\")),\n        react_1.default.createElement(material_1.DialogActions, null,\n            react_1.default.createElement(material_1.Button, { onClick: () => {\n                    handleClose();\n                }, autoFocus: true, variant: \"contained\" }, \"Close\"))));\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst mobx_react_1 = require(\"mobx-react\");\nconst mui_1 = require(\"tss-react/mui\");\n// locals\nconst ui_1 = require(\"../../ui\");\nconst util_1 = require(\"../../util\");\n// icons\nconst Help_1 = __importDefault(require(\"@mui/icons-material/Help\"));\n// lazies\nconst SequenceFeatureDetails = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./SequenceFeatureDetails'))));\nconst HelpDialog = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./dialogs/HelpDialog'))));\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    formControl: {\n        margin: 0,\n    },\n    container: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n    },\n}));\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nconst SequenceFeaturePanel = (0, mobx_react_1.observer)(function ({ model, feature, }) {\n    const { classes } = useStyles();\n    const [shown, setShown] = (0, react_1.useState)(false);\n    return (react_1.default.createElement(\"div\", { className: classes.container },\n        react_1.default.createElement(material_1.FormControl, { className: classes.formControl },\n            react_1.default.createElement(material_1.Button, { variant: \"contained\", onClick: () => {\n                    setShown(!shown);\n                } }, shown ? 'Hide feature sequence' : 'Show feature sequence')),\n        react_1.default.createElement(material_1.IconButton, { onClick: () => {\n                (0, util_1.getSession)(model).queueDialog(handleClose => [\n                    HelpDialog,\n                    { handleClose },\n                ]);\n            } },\n            react_1.default.createElement(Help_1.default, null)),\n        shown ? (react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },\n            react_1.default.createElement(SequenceFeatureDetails, { key: feature.uniqueId, model: model, feature: feature }))) : null));\n});\nexports.default = SequenceFeaturePanel;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar SequenceFeaturePanel_1 = require(\"./SequenceFeaturePanel\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return __importDefault(SequenceFeaturePanel_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FieldName;\nconst react_1 = __importDefault(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst mui_1 = require(\"tss-react/mui\");\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    fieldDescription: {\n        '&:hover': {\n            background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n        },\n    },\n    fieldName: {\n        wordBreak: 'break-all',\n        minWidth: 90,\n        borderBottom: '1px solid #0003',\n        fontSize: 12,\n        background: theme.palette.action.disabledBackground,\n        marginRight: theme.spacing(1),\n        padding: theme.spacing(0.5),\n    },\n}));\nfunction FieldName({ description, name, width, prefix = [], }) {\n    const { classes, cx } = useStyles();\n    const val = [...prefix, name].join('.');\n    return description ? (react_1.default.createElement(material_1.Tooltip, { title: description, placement: \"left\" },\n        react_1.default.createElement(\"div\", { className: cx(classes.fieldDescription, classes.fieldName) }, val))) : (react_1.default.createElement(\"div\", { className: classes.fieldName, style: { width: width } }, val));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicValue;\nconst react_1 = __importDefault(require(\"react\"));\nconst mui_1 = require(\"tss-react/mui\");\nconst is_object_1 = __importDefault(require(\"is-object\"));\nconst material_1 = require(\"@mui/material\");\n// locals\nconst ui_1 = require(\"../../ui\");\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    fieldValue: {\n        wordBreak: 'break-word',\n        maxHeight: 300,\n        fontSize: 12,\n        padding: theme.spacing(0.5),\n        overflow: 'auto',\n    },\n}));\nfunction BasicValue({ value }) {\n    const { classes } = useStyles();\n    const isLink = /^https?:\\/\\//.exec(`${value}`);\n    return (react_1.default.createElement(\"div\", { className: classes.fieldValue }, react_1.default.isValidElement(value) ? (value) : isLink ? (react_1.default.createElement(material_1.Link, { href: `${value}` }, `${value}`)) : (react_1.default.createElement(ui_1.SanitizedHTML, { html: (0, is_object_1.default)(value) ? JSON.stringify(value) : String(value) }))));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SimpleField;\nconst react_1 = __importDefault(require(\"react\"));\nconst mui_1 = require(\"tss-react/mui\");\nconst FieldName_1 = __importDefault(require(\"./FieldName\"));\nconst BasicValue_1 = __importDefault(require(\"./BasicValue\"));\nconst useStyles = (0, mui_1.makeStyles)()({\n    field: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n});\nfunction SimpleField({ name, value, description, prefix, width, }) {\n    const { classes } = useStyles();\n    return value !== null && value !== undefined ? (react_1.default.createElement(\"div\", { className: classes.field },\n        react_1.default.createElement(FieldName_1.default, { prefix: prefix, description: description, name: name, width: width }),\n        react_1.default.createElement(BasicValue_1.default, { value: value }))) : null;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmpty = isEmpty;\nexports.generateTitle = generateTitle;\nexports.generateMaxWidth = generateMaxWidth;\nexports.accessNested = accessNested;\nconst is_object_1 = __importDefault(require(\"is-object\"));\nconst util_1 = require(\"../../util\");\nconst util_2 = require(\"../util\");\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction generateTitle(name, id, type) {\n    return [(0, util_2.ellipses)(`${name || id || ''}`), `${type}`]\n        .filter(f => !!f)\n        .join(' - ');\n}\nfunction generateMaxWidth(array, prefix) {\n    return (Math.ceil((0, util_1.max)(array.map(key => (0, util_1.measureText)([...prefix, key[0]].join('.'), 12)))) + 10);\n}\n// pick using a path from an object, similar to _.get from lodash with special\n// logic for Descriptions from e.g. VCF headers\n//\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nfunction accessNested(arr, obj = {}) {\n    let obj2 = obj;\n    arr.forEach(elt => {\n        if ((0, is_object_1.default)(obj2)) {\n            obj2 = obj2[elt];\n        }\n    });\n    return typeof obj2 === 'string'\n        ? obj2\n        : (0, is_object_1.default)(obj2) && typeof obj2.Description === 'string'\n            ? obj2.Description\n            : undefined;\n}\n","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import * as React from 'react';\n/**\n * Hook that instantiate a [[GridApiRef]].\n */\nexport const useGridApiRef = () => React.useRef({});","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","export default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  Object.keys(slots).forEach(\n  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        const utilityClass = getUtilityClass(key);\n        if (utilityClass !== '') {\n          acc.push(utilityClass);\n        }\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@mui/internal-babel-macros/MuiError.macro` instead.\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe if we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n  /* eslint-disable prefer-template */\n  let url = 'https://mui.com/production-error/?code=' + code;\n  for (let i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`capitalize(string)\\` expects a string argument.` : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n  function debounced(...args) {\n    const later = () => {\n      // @ts-ignore\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n  return debounced;\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerDocument from '../ownerDocument';\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId'.toString()];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '../useEnhancedEffect';\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","'use client';\n\nimport * as React from 'react';\nimport setRef from '../setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","'use client';\n\nimport useLazyRef from '../useLazyRef/useLazyRef';\nimport useOnMount from '../useOnMount/useOnMount';\nexport class Timeout {\n  constructor() {\n    this.currentId = null;\n    this.clear = () => {\n      if (this.currentId !== null) {\n        clearTimeout(this.currentId);\n        this.currentId = null;\n      }\n    };\n    this.disposeEffect = () => {\n      return this.clear;\n    };\n  }\n  static create() {\n    return new Timeout();\n  }\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from '../ClassNameGenerator';\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nexport const GRID_EXPERIMENTAL_ENABLED = false;","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","export const gridDimensionsSelector = state => state.dimensions;","// src/devModeChecks/identityFunctionCheck.ts\nvar runIdentityFunctionCheck = (resultFunc, inputSelectorsResults, outputSelectorResult) => {\n  if (inputSelectorsResults.length === 1 && inputSelectorsResults[0] === outputSelectorResult) {\n    let isInputSameAsOutput = false;\n    try {\n      const emptyObject = {};\n      if (resultFunc(emptyObject) === emptyObject)\n        isInputSameAsOutput = true;\n    } catch {\n    }\n    if (isInputSameAsOutput) {\n      let stack = void 0;\n      try {\n        throw new Error();\n      } catch (e) {\n        ;\n        ({ stack } = e);\n      }\n      console.warn(\n        \"The result function returned its own inputs without modification. e.g\\n`createSelector([state => state.todos], todos => todos)`\\nThis could lead to inefficient memoization and unnecessary re-renders.\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.\",\n        { stack }\n      );\n    }\n  }\n};\n\n// src/devModeChecks/inputStabilityCheck.ts\nvar runInputStabilityCheck = (inputSelectorResultsObject, options, inputSelectorArgs) => {\n  const { memoize, memoizeOptions } = options;\n  const { inputSelectorResults, inputSelectorResultsCopy } = inputSelectorResultsObject;\n  const createAnEmptyObject = memoize(() => ({}), ...memoizeOptions);\n  const areInputSelectorResultsEqual = createAnEmptyObject.apply(null, inputSelectorResults) === createAnEmptyObject.apply(null, inputSelectorResultsCopy);\n  if (!areInputSelectorResultsEqual) {\n    let stack = void 0;\n    try {\n      throw new Error();\n    } catch (e) {\n      ;\n      ({ stack } = e);\n    }\n    console.warn(\n      \"An input selector returned a different result when passed same arguments.\\nThis means your output selector will likely run more frequently than intended.\\nAvoid returning a new reference inside your input selector, e.g.\\n`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)`\",\n      {\n        arguments: inputSelectorArgs,\n        firstInputs: inputSelectorResults,\n        secondInputs: inputSelectorResultsCopy,\n        stack\n      }\n    );\n  }\n};\n\n// src/devModeChecks/setGlobalDevModeChecks.ts\nvar globalDevModeChecks = {\n  inputStabilityCheck: \"once\",\n  identityFunctionCheck: \"once\"\n};\nvar setGlobalDevModeChecks = (devModeChecks) => {\n  Object.assign(globalDevModeChecks, devModeChecks);\n};\n\n// src/utils.ts\nvar NOT_FOUND = /* @__PURE__ */ Symbol(\"NOT_FOUND\");\nfunction assertIsFunction(func, errorMessage = `expected a function, instead received ${typeof func}`) {\n  if (typeof func !== \"function\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsObject(object, errorMessage = `expected an object, instead received ${typeof object}`) {\n  if (typeof object !== \"object\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsArrayOfFunctions(array, errorMessage = `expected all items to be functions, instead received the following types: `) {\n  if (!array.every((item) => typeof item === \"function\")) {\n    const itemTypes = array.map(\n      (item) => typeof item === \"function\" ? `function ${item.name || \"unnamed\"}()` : typeof item\n    ).join(\", \");\n    throw new TypeError(`${errorMessage}[${itemTypes}]`);\n  }\n}\nvar ensureIsArray = (item) => {\n  return Array.isArray(item) ? item : [item];\n};\nfunction getDependencies(createSelectorArgs) {\n  const dependencies = Array.isArray(createSelectorArgs[0]) ? createSelectorArgs[0] : createSelectorArgs;\n  assertIsArrayOfFunctions(\n    dependencies,\n    `createSelector expects all input-selectors to be functions, but received the following types: `\n  );\n  return dependencies;\n}\nfunction collectInputSelectorResults(dependencies, inputSelectorArgs) {\n  const inputSelectorResults = [];\n  const { length } = dependencies;\n  for (let i = 0; i < length; i++) {\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs));\n  }\n  return inputSelectorResults;\n}\nvar getDevModeChecksExecutionInfo = (firstRun, devModeChecks) => {\n  const { identityFunctionCheck, inputStabilityCheck } = {\n    ...globalDevModeChecks,\n    ...devModeChecks\n  };\n  return {\n    identityFunctionCheck: {\n      shouldRun: identityFunctionCheck === \"always\" || identityFunctionCheck === \"once\" && firstRun,\n      run: runIdentityFunctionCheck\n    },\n    inputStabilityCheck: {\n      shouldRun: inputStabilityCheck === \"always\" || inputStabilityCheck === \"once\" && firstRun,\n      run: runInputStabilityCheck\n    }\n  };\n};\n\n// src/autotrackMemoize/autotracking.ts\nvar $REVISION = 0;\nvar CURRENT_TRACKER = null;\nvar Cell = class {\n  revision = $REVISION;\n  _value;\n  _lastValue;\n  _isEqual = tripleEq;\n  constructor(initialValue, isEqual = tripleEq) {\n    this._value = this._lastValue = initialValue;\n    this._isEqual = isEqual;\n  }\n  // Whenever a storage value is read, it'll add itself to the current tracker if\n  // one exists, entangling its state with that cache.\n  get value() {\n    CURRENT_TRACKER?.add(this);\n    return this._value;\n  }\n  // Whenever a storage value is updated, we bump the global revision clock,\n  // assign the revision for this storage to the new value, _and_ we schedule a\n  // rerender. This is important, and it's what makes autotracking  _pull_\n  // based. We don't actively tell the caches which depend on the storage that\n  // anything has happened. Instead, we recompute the caches when needed.\n  set value(newValue) {\n    if (this.value === newValue)\n      return;\n    this._value = newValue;\n    this.revision = ++$REVISION;\n  }\n};\nfunction tripleEq(a, b) {\n  return a === b;\n}\nvar TrackingCache = class {\n  _cachedValue;\n  _cachedRevision = -1;\n  _deps = [];\n  hits = 0;\n  fn;\n  constructor(fn) {\n    this.fn = fn;\n  }\n  clear() {\n    this._cachedValue = void 0;\n    this._cachedRevision = -1;\n    this._deps = [];\n    this.hits = 0;\n  }\n  get value() {\n    if (this.revision > this._cachedRevision) {\n      const { fn } = this;\n      const currentTracker = /* @__PURE__ */ new Set();\n      const prevTracker = CURRENT_TRACKER;\n      CURRENT_TRACKER = currentTracker;\n      this._cachedValue = fn();\n      CURRENT_TRACKER = prevTracker;\n      this.hits++;\n      this._deps = Array.from(currentTracker);\n      this._cachedRevision = this.revision;\n    }\n    CURRENT_TRACKER?.add(this);\n    return this._cachedValue;\n  }\n  get revision() {\n    return Math.max(...this._deps.map((d) => d.revision), 0);\n  }\n};\nfunction getValue(cell) {\n  if (!(cell instanceof Cell)) {\n    console.warn(\"Not a valid cell! \", cell);\n  }\n  return cell.value;\n}\nfunction setValue(storage, value) {\n  if (!(storage instanceof Cell)) {\n    throw new TypeError(\n      \"setValue must be passed a tracked store created with `createStorage`.\"\n    );\n  }\n  storage.value = storage._lastValue = value;\n}\nfunction createCell(initialValue, isEqual = tripleEq) {\n  return new Cell(initialValue, isEqual);\n}\nfunction createCache(fn) {\n  assertIsFunction(\n    fn,\n    \"the first parameter to `createCache` must be a function\"\n  );\n  return new TrackingCache(fn);\n}\n\n// src/autotrackMemoize/tracking.ts\nvar neverEq = (a, b) => false;\nfunction createTag() {\n  return createCell(null, neverEq);\n}\nfunction dirtyTag(tag, value) {\n  setValue(tag, value);\n}\nvar consumeCollection = (node) => {\n  let tag = node.collectionTag;\n  if (tag === null) {\n    tag = node.collectionTag = createTag();\n  }\n  getValue(tag);\n};\nvar dirtyCollection = (node) => {\n  const tag = node.collectionTag;\n  if (tag !== null) {\n    dirtyTag(tag, null);\n  }\n};\n\n// src/autotrackMemoize/proxy.ts\nvar REDUX_PROXY_LABEL = Symbol();\nvar nextId = 0;\nvar proto = Object.getPrototypeOf({});\nvar ObjectTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    this.value = value;\n    this.tag.value = value;\n  }\n  proxy = new Proxy(this, objectProxyHandler);\n  tag = createTag();\n  tags = {};\n  children = {};\n  collectionTag = null;\n  id = nextId++;\n};\nvar objectProxyHandler = {\n  get(node, key) {\n    function calculateResult() {\n      const { value } = node;\n      const childValue = Reflect.get(value, key);\n      if (typeof key === \"symbol\") {\n        return childValue;\n      }\n      if (key in proto) {\n        return childValue;\n      }\n      if (typeof childValue === \"object\" && childValue !== null) {\n        let childNode = node.children[key];\n        if (childNode === void 0) {\n          childNode = node.children[key] = createNode(childValue);\n        }\n        if (childNode.tag) {\n          getValue(childNode.tag);\n        }\n        return childNode.proxy;\n      } else {\n        let tag = node.tags[key];\n        if (tag === void 0) {\n          tag = node.tags[key] = createTag();\n          tag.value = childValue;\n        }\n        getValue(tag);\n        return childValue;\n      }\n    }\n    const res = calculateResult();\n    return res;\n  },\n  ownKeys(node) {\n    consumeCollection(node);\n    return Reflect.ownKeys(node.value);\n  },\n  getOwnPropertyDescriptor(node, prop) {\n    return Reflect.getOwnPropertyDescriptor(node.value, prop);\n  },\n  has(node, prop) {\n    return Reflect.has(node.value, prop);\n  }\n};\nvar ArrayTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    this.value = value;\n    this.tag.value = value;\n  }\n  proxy = new Proxy([this], arrayProxyHandler);\n  tag = createTag();\n  tags = {};\n  children = {};\n  collectionTag = null;\n  id = nextId++;\n};\nvar arrayProxyHandler = {\n  get([node], key) {\n    if (key === \"length\") {\n      consumeCollection(node);\n    }\n    return objectProxyHandler.get(node, key);\n  },\n  ownKeys([node]) {\n    return objectProxyHandler.ownKeys(node);\n  },\n  getOwnPropertyDescriptor([node], prop) {\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop);\n  },\n  has([node], prop) {\n    return objectProxyHandler.has(node, prop);\n  }\n};\nfunction createNode(value) {\n  if (Array.isArray(value)) {\n    return new ArrayTreeNode(value);\n  }\n  return new ObjectTreeNode(value);\n}\nfunction updateNode(node, newValue) {\n  const { value, tags, children } = node;\n  node.value = newValue;\n  if (Array.isArray(value) && Array.isArray(newValue) && value.length !== newValue.length) {\n    dirtyCollection(node);\n  } else {\n    if (value !== newValue) {\n      let oldKeysSize = 0;\n      let newKeysSize = 0;\n      let anyKeysAdded = false;\n      for (const _key in value) {\n        oldKeysSize++;\n      }\n      for (const key in newValue) {\n        newKeysSize++;\n        if (!(key in value)) {\n          anyKeysAdded = true;\n          break;\n        }\n      }\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize;\n      if (isDifferent) {\n        dirtyCollection(node);\n      }\n    }\n  }\n  for (const key in tags) {\n    const childValue = value[key];\n    const newChildValue = newValue[key];\n    if (childValue !== newChildValue) {\n      dirtyCollection(node);\n      dirtyTag(tags[key], newChildValue);\n    }\n    if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      delete tags[key];\n    }\n  }\n  for (const key in children) {\n    const childNode = children[key];\n    const newChildValue = newValue[key];\n    const childValue = childNode.value;\n    if (childValue === newChildValue) {\n      continue;\n    } else if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      updateNode(childNode, newChildValue);\n    } else {\n      deleteNode(childNode);\n      delete children[key];\n    }\n  }\n}\nfunction deleteNode(node) {\n  if (node.tag) {\n    dirtyTag(node.tag, null);\n  }\n  dirtyCollection(node);\n  for (const key in node.tags) {\n    dirtyTag(node.tags[key], null);\n  }\n  for (const key in node.children) {\n    deleteNode(node.children[key]);\n  }\n}\n\n// src/lruMemoize.ts\nfunction createSingletonCache(equals) {\n  let entry;\n  return {\n    get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n      return NOT_FOUND;\n    },\n    put(key, value) {\n      entry = { key, value };\n    },\n    getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear() {\n      entry = void 0;\n    }\n  };\n}\nfunction createLruCache(maxSize, equals) {\n  let entries = [];\n  function get(key) {\n    const cacheIndex = entries.findIndex((entry) => equals(key, entry.key));\n    if (cacheIndex > -1) {\n      const entry = entries[cacheIndex];\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n      return entry.value;\n    }\n    return NOT_FOUND;\n  }\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      entries.unshift({ key, value });\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n  function getEntries() {\n    return entries;\n  }\n  function clear() {\n    entries = [];\n  }\n  return { get, put, getEntries, clear };\n}\nvar referenceEqualityCheck = (a, b) => a === b;\nfunction createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    }\n    const { length } = prev;\n    for (let i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\nfunction lruMemoize(func, equalityCheckOrOptions) {\n  const providedOptions = typeof equalityCheckOrOptions === \"object\" ? equalityCheckOrOptions : { equalityCheck: equalityCheckOrOptions };\n  const {\n    equalityCheck = referenceEqualityCheck,\n    maxSize = 1,\n    resultEqualityCheck\n  } = providedOptions;\n  const comparator = createCacheKeyComparator(equalityCheck);\n  let resultsCount = 0;\n  const cache = maxSize <= 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator);\n  function memoized() {\n    let value = cache.get(arguments);\n    if (value === NOT_FOUND) {\n      value = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const entries = cache.getEntries();\n        const matchingEntry = entries.find(\n          (entry) => resultEqualityCheck(entry.value, value)\n        );\n        if (matchingEntry) {\n          value = matchingEntry.value;\n          resultsCount !== 0 && resultsCount--;\n        }\n      }\n      cache.put(arguments, value);\n    }\n    return value;\n  }\n  memoized.clearCache = () => {\n    cache.clear();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/autotrackMemoize/autotrackMemoize.ts\nfunction autotrackMemoize(func) {\n  const node = createNode(\n    []\n  );\n  let lastArgs = null;\n  const shallowEqual = createCacheKeyComparator(referenceEqualityCheck);\n  const cache = createCache(() => {\n    const res = func.apply(null, node.proxy);\n    return res;\n  });\n  function memoized() {\n    if (!shallowEqual(lastArgs, arguments)) {\n      updateNode(node, arguments);\n      lastArgs = arguments;\n    }\n    return cache.value;\n  }\n  memoized.clearCache = () => {\n    return cache.clear();\n  };\n  return memoized;\n}\n\n// src/weakMapMemoize.ts\nvar StrongRef = class {\n  constructor(value) {\n    this.value = value;\n  }\n  deref() {\n    return this.value;\n  }\n};\nvar Ref = typeof WeakRef !== \"undefined\" ? WeakRef : StrongRef;\nvar UNTERMINATED = 0;\nvar TERMINATED = 1;\nfunction createCacheNode() {\n  return {\n    s: UNTERMINATED,\n    v: void 0,\n    o: null,\n    p: null\n  };\n}\nfunction weakMapMemoize(func, options = {}) {\n  let fnNode = createCacheNode();\n  const { resultEqualityCheck } = options;\n  let lastResult;\n  let resultsCount = 0;\n  function memoized() {\n    let cacheNode = fnNode;\n    const { length } = arguments;\n    for (let i = 0, l = length; i < l; i++) {\n      const arg = arguments[i];\n      if (typeof arg === \"function\" || typeof arg === \"object\" && arg !== null) {\n        let objectCache = cacheNode.o;\n        if (objectCache === null) {\n          cacheNode.o = objectCache = /* @__PURE__ */ new WeakMap();\n        }\n        const objectNode = objectCache.get(arg);\n        if (objectNode === void 0) {\n          cacheNode = createCacheNode();\n          objectCache.set(arg, cacheNode);\n        } else {\n          cacheNode = objectNode;\n        }\n      } else {\n        let primitiveCache = cacheNode.p;\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = /* @__PURE__ */ new Map();\n        }\n        const primitiveNode = primitiveCache.get(arg);\n        if (primitiveNode === void 0) {\n          cacheNode = createCacheNode();\n          primitiveCache.set(arg, cacheNode);\n        } else {\n          cacheNode = primitiveNode;\n        }\n      }\n    }\n    const terminatedNode = cacheNode;\n    let result;\n    if (cacheNode.s === TERMINATED) {\n      result = cacheNode.v;\n    } else {\n      result = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const lastResultValue = lastResult?.deref?.() ?? lastResult;\n        if (lastResultValue != null && resultEqualityCheck(lastResultValue, result)) {\n          result = lastResultValue;\n          resultsCount !== 0 && resultsCount--;\n        }\n        const needsWeakRef = typeof result === \"object\" && result !== null || typeof result === \"function\";\n        lastResult = needsWeakRef ? new Ref(result) : result;\n      }\n    }\n    terminatedNode.s = TERMINATED;\n    terminatedNode.v = result;\n    return result;\n  }\n  memoized.clearCache = () => {\n    fnNode = createCacheNode();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/createSelectorCreator.ts\nfunction createSelectorCreator(memoizeOrOptions, ...memoizeOptionsFromArgs) {\n  const createSelectorCreatorOptions = typeof memoizeOrOptions === \"function\" ? {\n    memoize: memoizeOrOptions,\n    memoizeOptions: memoizeOptionsFromArgs\n  } : memoizeOrOptions;\n  const createSelector2 = (...createSelectorArgs) => {\n    let recomputations = 0;\n    let dependencyRecomputations = 0;\n    let lastResult;\n    let directlyPassedOptions = {};\n    let resultFunc = createSelectorArgs.pop();\n    if (typeof resultFunc === \"object\") {\n      directlyPassedOptions = resultFunc;\n      resultFunc = createSelectorArgs.pop();\n    }\n    assertIsFunction(\n      resultFunc,\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\n    );\n    const combinedOptions = {\n      ...createSelectorCreatorOptions,\n      ...directlyPassedOptions\n    };\n    const {\n      memoize,\n      memoizeOptions = [],\n      argsMemoize = weakMapMemoize,\n      argsMemoizeOptions = [],\n      devModeChecks = {}\n    } = combinedOptions;\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions);\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions);\n    const dependencies = getDependencies(createSelectorArgs);\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\n      recomputations++;\n      return resultFunc.apply(\n        null,\n        arguments\n      );\n    }, ...finalMemoizeOptions);\n    let firstRun = true;\n    const selector = argsMemoize(function dependenciesChecker() {\n      dependencyRecomputations++;\n      const inputSelectorResults = collectInputSelectorResults(\n        dependencies,\n        arguments\n      );\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults);\n      if (process.env.NODE_ENV !== \"production\") {\n        const { identityFunctionCheck, inputStabilityCheck } = getDevModeChecksExecutionInfo(firstRun, devModeChecks);\n        if (identityFunctionCheck.shouldRun) {\n          identityFunctionCheck.run(\n            resultFunc,\n            inputSelectorResults,\n            lastResult\n          );\n        }\n        if (inputStabilityCheck.shouldRun) {\n          const inputSelectorResultsCopy = collectInputSelectorResults(\n            dependencies,\n            arguments\n          );\n          inputStabilityCheck.run(\n            { inputSelectorResults, inputSelectorResultsCopy },\n            { memoize, memoizeOptions: finalMemoizeOptions },\n            arguments\n          );\n        }\n        if (firstRun)\n          firstRun = false;\n      }\n      return lastResult;\n    }, ...finalArgsMemoizeOptions);\n    return Object.assign(selector, {\n      resultFunc,\n      memoizedResultFunc,\n      dependencies,\n      dependencyRecomputations: () => dependencyRecomputations,\n      resetDependencyRecomputations: () => {\n        dependencyRecomputations = 0;\n      },\n      lastResult: () => lastResult,\n      recomputations: () => recomputations,\n      resetRecomputations: () => {\n        recomputations = 0;\n      },\n      memoize,\n      argsMemoize\n    });\n  };\n  Object.assign(createSelector2, {\n    withTypes: () => createSelector2\n  });\n  return createSelector2;\n}\nvar createSelector = /* @__PURE__ */ createSelectorCreator(weakMapMemoize);\n\n// src/createStructuredSelector.ts\nvar createStructuredSelector = Object.assign(\n  (inputSelectorsObject, selectorCreator = createSelector) => {\n    assertIsObject(\n      inputSelectorsObject,\n      `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof inputSelectorsObject}`\n    );\n    const inputSelectorKeys = Object.keys(inputSelectorsObject);\n    const dependencies = inputSelectorKeys.map(\n      (key) => inputSelectorsObject[key]\n    );\n    const structuredSelector = selectorCreator(\n      dependencies,\n      (...inputSelectorResults) => {\n        return inputSelectorResults.reduce((composition, value, index) => {\n          composition[inputSelectorKeys[index]] = value;\n          return composition;\n        }, {});\n      }\n    );\n    return structuredSelector;\n  },\n  { withTypes: () => createStructuredSelector }\n);\nexport {\n  createSelector,\n  createSelectorCreator,\n  createStructuredSelector,\n  lruMemoize,\n  referenceEqualityCheck,\n  setGlobalDevModeChecks,\n  autotrackMemoize as unstable_autotrackMemoize,\n  weakMapMemoize\n};\n//# sourceMappingURL=reselect.mjs.map","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height: contentHeight\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the data grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridColumnResizeSelector = state => state.columnResize;\nexport const gridResizingColumnFieldSelector = createSelector(gridColumnResizeSelector, columnResize => columnResize.resizingColumnField);","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({}, style, {\n        minWidth: 'var(--width)',\n        maxWidth: 'var(--width)'\n      })\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\", \"icon\", \"showInMenu\", \"onClick\"],\n  _excluded2 = [\"label\", \"icon\", \"showInMenu\", \"onClick\", \"closeMenuOnClick\", \"closeMenu\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridActionsCellItem = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  if (!props.showInMenu) {\n    const {\n        label,\n        icon,\n        onClick\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const handleClick = event => {\n      onClick?.(event);\n    };\n    return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: ref,\n      size: \"small\",\n      role: \"menuitem\",\n      \"aria-label\": label\n    }, other, {\n      onClick: handleClick\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: 'small'\n      })\n    }));\n  }\n  const {\n      label,\n      icon,\n      onClick,\n      closeMenuOnClick = true,\n      closeMenu\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const handleClick = event => {\n    onClick?.(event);\n    if (closeMenuOnClick) {\n      closeMenu?.();\n    }\n  };\n  return /*#__PURE__*/_jsxs(MenuItem, _extends({\n    ref: ref\n  }, other, {\n    onClick: handleClick,\n    children: [icon && /*#__PURE__*/_jsx(ListItemIcon, {\n      children: icon\n    }), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCellItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * from https://mui.com/material-ui/api/button-base/#ButtonBase-prop-component\n   */\n  component: PropTypes.elementType,\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  showInMenu: PropTypes.bool\n} : void 0;\nexport { GridActionsCellItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} +\n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarContainer',\n  overridesResolver: (_, styles) => styles.toolbarContainer\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  gap: theme.spacing(1),\n  padding: theme.spacing(0.5, 0.5, 0)\n}));\nconst GridToolbarContainer = /*#__PURE__*/React.forwardRef(function GridToolbarContainer(props, ref) {\n  const {\n      className,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  if (!children) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarContainerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbarContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridToolbarColumnsButton = /*#__PURE__*/React.forwardRef(function GridToolbarColumnsButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const columnButtonId = useId();\n  const columnPanelId = useId();\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const showColumns = event => {\n    if (preferencePanel.open && preferencePanel.openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns, columnPanelId, columnButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === columnPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    enterDelay: 1000\n  }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: ref,\n      id: columnButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": isOpen ? columnPanelId : undefined,\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.columnSelectorIcon, {})\n    }, buttonProps, {\n      onClick: showColumns\n    }, rootProps.slotProps?.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarColumns')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarColumnsButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarColumnsButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { isHideMenuKey } from \"../../utils/keyboardUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarDensitySelector = /*#__PURE__*/React.forwardRef(function GridToolbarDensitySelector(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: 'compact'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: 'standard'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: 'comfortable'\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (density) {\n      case 'compact':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {});\n      case 'comfortable':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {});\n      default:\n        return /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {});\n    }\n  }, [density, rootProps]);\n  const handleDensitySelectorOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleDensitySelectorClose = () => {\n    setOpen(false);\n  };\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      setOpen(false);\n    }\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === density,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarDensityLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: startIcon,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? densityMenuId : undefined,\n        id: densityButtonId\n      }, buttonProps, {\n        onClick: handleDensitySelectorOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarDensity')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleDensitySelectorClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarDensitySelector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarDensitySelector };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { gridColumnLookupSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridFilterActiveItemsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (_props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = /*#__PURE__*/React.forwardRef(function GridToolbarFilterButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const classes = useUtilityClasses(rootProps);\n  const filterButtonId = useId();\n  const filterPanelId = useId();\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n    const getOperatorLabel = item => lookup[item.field].filterOperators.find(operator => operator.value === item.operator).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operator)}`).toString();\n    const getFilterItemValue = item => {\n      const {\n        getValueAsString\n      } = lookup[item.field].filterOperators.find(operator => operator.value === item.operator);\n      return getValueAsString ? getValueAsString(item.value) : item.value;\n    };\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: activeFilters.map((item, index) => _extends({}, lookup[item.field] && /*#__PURE__*/_jsx(\"li\", {\n          children: `${lookup[item.field].headerName || item.field}\n                  ${getOperatorLabel(item)}\n                  ${\n          // implicit check for null and undefined\n          item.value != null ? getFilterItemValue(item) : ''}`\n        }, index)))\n      })]\n    });\n  }, [apiRef, rootProps, preferencePanel.open, activeFilters, lookup, classes]);\n  const toggleFilter = event => {\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.filters, filterPanelId, filterButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === filterPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: ref,\n      id: filterButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      \"aria-controls\": isOpen ? filterPanelId : undefined,\n      \"aria-expanded\": isOpen,\n      \"aria-haspopup\": true,\n      startIcon: /*#__PURE__*/_jsx(Badge, {\n        badgeContent: activeFilters.length,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(rootProps.slots.openFilterButtonIcon, {})\n      })\n    }, buttonProps, {\n      onClick: toggleFilter\n    }, rootProps.slotProps?.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey } from \"../../utils/keyboardUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"quickFilterParser\", \"quickFilterFormatter\", \"debounceMs\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridQuickFilterValuesSelector } from \"../../hooks/features/filter/index.js\";\nimport { isDeepEqual } from \"../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarQuickFilter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarQuickFilterRoot = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarQuickFilter',\n  overridesResolver: (props, styles) => styles.toolbarQuickFilter\n})(({\n  theme\n}) => ({\n  width: 'auto',\n  paddingBottom: theme.spacing(0.5),\n  '& input': {\n    marginLeft: theme.spacing(0.5)\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n  },\n  [`& input[type=\"search\"]::-webkit-search-decoration,\n  & input[type=\"search\"]::-webkit-search-cancel-button,\n  & input[type=\"search\"]::-webkit-search-results-button,\n  & input[type=\"search\"]::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\nconst defaultSearchValueParser = searchText => searchText.split(' ').filter(word => word !== '');\nconst defaultSearchValueFormatter = values => values.join(' ');\nfunction GridToolbarQuickFilter(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const quickFilterValues = useGridSelector(apiRef, gridQuickFilterValuesSelector);\n  const {\n      quickFilterParser = defaultSearchValueParser,\n      quickFilterFormatter = defaultSearchValueFormatter,\n      debounceMs = rootProps.filterDebounceMs,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [searchValue, setSearchValue] = React.useState(() => quickFilterFormatter(quickFilterValues ?? []));\n  const prevQuickFilterValuesRef = React.useRef(quickFilterValues);\n  React.useEffect(() => {\n    if (!isDeepEqual(prevQuickFilterValuesRef.current, quickFilterValues)) {\n      // The model of quick filter value has been updated\n      prevQuickFilterValuesRef.current = quickFilterValues;\n\n      // Update the input value if needed to match the new model\n      setSearchValue(prevSearchValue => isDeepEqual(quickFilterParser(prevSearchValue), quickFilterValues) ? prevSearchValue : quickFilterFormatter(quickFilterValues ?? []));\n    }\n  }, [quickFilterValues, quickFilterFormatter, quickFilterParser]);\n  const updateSearchValue = React.useCallback(newSearchValue => {\n    const newQuickFilterValues = quickFilterParser(newSearchValue);\n    prevQuickFilterValuesRef.current = newQuickFilterValues;\n    apiRef.current.setQuickFilterValues(newQuickFilterValues);\n  }, [apiRef, quickFilterParser]);\n  const debouncedUpdateSearchValue = React.useMemo(() => debounce(updateSearchValue, debounceMs), [updateSearchValue, debounceMs]);\n  const handleSearchValueChange = React.useCallback(event => {\n    const newSearchValue = event.target.value;\n    setSearchValue(newSearchValue);\n    debouncedUpdateSearchValue(newSearchValue);\n  }, [debouncedUpdateSearchValue]);\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    updateSearchValue('');\n  }, [updateSearchValue]);\n  return /*#__PURE__*/_jsx(GridToolbarQuickFilterRoot, _extends({\n    as: rootProps.slots.baseTextField,\n    ownerState: rootProps,\n    variant: \"standard\",\n    value: searchValue,\n    onChange: handleSearchValueChange,\n    className: clsx(className, classes.root),\n    placeholder: apiRef.current.getLocaleText('toolbarQuickFilterPlaceholder'),\n    \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterLabel'),\n    type: \"search\"\n  }, other, {\n    InputProps: _extends({\n      startAdornment: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {\n        fontSize: \"small\"\n      }),\n      endAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterDeleteIconLabel'),\n        size: \"small\",\n        sx: [searchValue ? {\n          visibility: 'visible'\n        } : {\n          visibility: 'hidden'\n        }],\n        onClick: handleSearchReset\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterClearIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }, other.InputProps)\n  }, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarQuickFilter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The debounce time in milliseconds.\n   * @default 150\n   */\n  debounceMs: PropTypes.number,\n  /**\n   * Function responsible for formatting values of quick filter in a string when the model is modified\n   * @param {any[]} values The new values passed to the quick filter model\n   * @returns {string} The string to display in the text field\n   * @default (values: string[]) => values.join(' ')\n   */\n  quickFilterFormatter: PropTypes.func,\n  /**\n   * Function responsible for parsing text input in an array of independent values for quick filtering.\n   * @param {string} input The value entered by the user\n   * @returns {any[]} The array of value on which quick filter is applied\n   * @default (searchText: string) => searchText\n   *   .split(' ')\n   *   .filter((word) => word !== '')\n   */\n  quickFilterParser: PropTypes.func\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n * - [Filtering - quick filter](https://mui.com/x/react-data-grid/filtering/quick-filter/)\n *\n * API:\n * - [GridToolbarQuickFilter API](https://mui.com/x/api/data-grid/grid-toolbar-quick-filter/)\n */\nexport { GridToolbarQuickFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"csvOptions\", \"printOptions\", \"excelOptions\", \"showQuickFilter\", \"quickFilterProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { GridToolbarContainer } from \"../containers/GridToolbarContainer.js\";\nimport { GridToolbarColumnsButton } from \"./GridToolbarColumnsButton.js\";\nimport { GridToolbarDensitySelector } from \"./GridToolbarDensitySelector.js\";\nimport { GridToolbarFilterButton } from \"./GridToolbarFilterButton.js\";\nimport { GridToolbarExport } from \"./GridToolbarExport.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridToolbarQuickFilter } from \"./GridToolbarQuickFilter.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbar = /*#__PURE__*/React.forwardRef(function GridToolbar(props, ref) {\n  // TODO v7: think about where export option should be passed.\n  // from slotProps={{ toolbarExport: { ...exportOption } }} seems to be more appropriate\n  const {\n      csvOptions,\n      printOptions,\n      excelOptions,\n      showQuickFilter = false,\n      quickFilterProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  if (rootProps.disableColumnFilter && rootProps.disableColumnSelector && rootProps.disableDensitySelector && !showQuickFilter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridToolbarContainer, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridToolbarColumnsButton, {}), /*#__PURE__*/_jsx(GridToolbarFilterButton, {}), /*#__PURE__*/_jsx(GridToolbarDensitySelector, {}), /*#__PURE__*/_jsx(GridToolbarExport, {\n      csvOptions: csvOptions,\n      printOptions: printOptions\n      // TODO: remove the reference to excelOptions in community package\n      ,\n      excelOptions: excelOptions\n    }), /*#__PURE__*/_jsx(Box, {\n      sx: {\n        flex: 1\n      }\n    }), showQuickFilter && /*#__PURE__*/_jsx(GridToolbarQuickFilter, _extends({}, quickFilterProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Props passed to the quick filter component.\n   */\n  quickFilterProps: PropTypes.object,\n  /**\n   * Show the quick filter component.\n   * @default false\n   */\n  showQuickFilter: PropTypes.bool,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../constants/gridDetailPanelToggleField.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    columnHeadersContainerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { GridEditModes } from \"../models/index.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../DataGrid/useDataGridProps.js\";\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set(['__check__', '__reorder__', '__detail_panel_toggle__']);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: renderContext.lastRowIndex - 1\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","/**\n * @mui/x-data-grid v7.18.0\n *\n * @license MIT\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport { useGridApiContext } from \"./hooks/utils/useGridApiContext.js\";\nexport { useGridApiRef } from \"./hooks/utils/useGridApiRef.js\";\nexport { useGridRootProps } from \"./hooks/utils/useGridRootProps.js\";\nexport * from \"./DataGrid/index.js\";\nexport * from \"./components/index.js\";\nexport * from \"./constants/index.js\";\nexport * from \"./hooks/index.js\";\nexport * from \"./models/index.js\";\nexport * from \"./context/index.js\";\nexport * from \"./colDef/index.js\";\nexport * from \"./utils/index.js\";\nexport { GridColumnHeaders } from \"./components/GridColumnHeaders.js\";\n/**\n * Reexportable components.\n */\nexport { GridColumnMenu, GRID_COLUMN_MENU_SLOTS, GRID_COLUMN_MENU_SLOT_PROPS } from \"./components/reexportable.js\";\n\n/**\n * The full grid API.\n * @demos\n *   - [API object](/x/react-data-grid/api-object/)\n */\n\n/**\n * The state of `DataGrid`.\n */\n\n/**\n * The initial state of `DataGrid`.\n */","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DataGridDetails;\nconst react_1 = __importStar(require(\"react\"));\nconst mui_1 = require(\"tss-react/mui\");\nconst x_data_grid_1 = require(\"@mui/x-data-grid\");\nconst material_1 = require(\"@mui/material\");\n// locals\nconst util_1 = require(\"../../util\");\nconst FieldName_1 = __importDefault(require(\"./FieldName\"));\nconst ui_1 = require(\"../../ui\");\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    margin: {\n        marginBottom: theme.spacing(4),\n    },\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\nfunction DataGridDetails({ value, prefix, name, }) {\n    const { classes } = useStyles();\n    const [checked, setChecked] = (0, react_1.useState)(false);\n    const keys = Object.keys(value[0]).sort();\n    const unionKeys = new Set(keys);\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n        const { id, ...rest } = val;\n        return {\n            id: k, // used by material UI\n            identifier: id, // renamed from id to identifier\n            ...rest,\n        };\n    });\n    for (const val of value) {\n        for (const k of Object.keys(val)) {\n            unionKeys.add(k);\n        }\n    }\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames;\n    if (unionKeys.has('id')) {\n        unionKeys.delete('id');\n        colNames = ['identifier', ...unionKeys];\n    }\n    else {\n        colNames = [...unionKeys];\n    }\n    const widths = colNames.map(e => (0, util_1.measureGridWidth)(rows.map(r => r[e])));\n    if (unionKeys.size < keys.length + 5) {\n        return (react_1.default.createElement(\"div\", { className: classes.margin },\n            react_1.default.createElement(FieldName_1.default, { prefix: prefix, name: name }),\n            react_1.default.createElement(material_1.FormControlLabel, { control: react_1.default.createElement(material_1.Checkbox, { checked: checked, onChange: event => {\n                        setChecked(event.target.checked);\n                    } }), label: react_1.default.createElement(material_1.Typography, { variant: \"body2\" }, \"Show options\") }),\n            react_1.default.createElement(x_data_grid_1.DataGrid, { autoHeight: true, disableRowSelectionOnClick: true, rows: rows, rowHeight: 20, columnHeaderHeight: 35, hideFooter: rows.length < 25, slots: {\n                    toolbar: checked ? x_data_grid_1.GridToolbar : null,\n                }, slotProps: {\n                    toolbar: {\n                        printOptions: {\n                            disableToolbarButton: true,\n                        },\n                    },\n                }, columns: colNames.map((val, index) => ({\n                    field: val,\n                    renderCell: params => {\n                        const value = params.value;\n                        return (react_1.default.createElement(\"div\", { className: classes.cell },\n                            react_1.default.createElement(ui_1.SanitizedHTML, { html: (0, util_1.getStr)(value || '') })));\n                    },\n                    width: widths[index],\n                })) })));\n    }\n    return null;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ArrayValue;\nconst react_1 = __importDefault(require(\"react\"));\nconst is_object_1 = __importDefault(require(\"is-object\"));\nconst mui_1 = require(\"tss-react/mui\");\n// locals\nconst Attributes_1 = __importDefault(require(\"./Attributes\"));\nconst FieldName_1 = __importDefault(require(\"./FieldName\"));\nconst BasicValue_1 = __importDefault(require(\"./BasicValue\"));\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    field: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    fieldSubvalue: {\n        wordBreak: 'break-word',\n        maxHeight: 300,\n        padding: theme.spacing(0.5),\n        border: `1px solid ${theme.palette.action.selected}`,\n        boxSizing: 'border-box',\n        overflow: 'auto',\n    },\n}));\nfunction ArrayValue({ name, value, description, prefix = [], }) {\n    const { classes } = useStyles();\n    if (value.length === 1) {\n        return (0, is_object_1.default)(value[0]) ? (react_1.default.createElement(Attributes_1.default, { attributes: value[0], prefix: [...prefix, name] })) : (react_1.default.createElement(\"div\", { className: classes.field },\n            react_1.default.createElement(FieldName_1.default, { prefix: prefix, description: description, name: name }),\n            react_1.default.createElement(BasicValue_1.default, { value: value[0] })));\n    }\n    else if (value.every(val => (0, is_object_1.default)(val))) {\n        return (react_1.default.createElement(react_1.default.Fragment, null, value.map((val, i) => (react_1.default.createElement(Attributes_1.default, { key: `${JSON.stringify(val)}-${i}`, attributes: val, prefix: [...prefix, `${name}-${i}`] })))));\n    }\n    else {\n        return (react_1.default.createElement(\"div\", { className: classes.field },\n            react_1.default.createElement(FieldName_1.default, { prefix: prefix, description: description, name: name }),\n            value.map((val, i) => (react_1.default.createElement(\"div\", { key: `${JSON.stringify(val)}-${i}`, className: classes.fieldSubvalue },\n                react_1.default.createElement(BasicValue_1.default, { value: val }))))));\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = UriField;\nconst react_1 = __importDefault(require(\"react\"));\nconst FieldName_1 = __importDefault(require(\"./FieldName\"));\nconst mui_1 = require(\"tss-react/mui\");\nconst BasicValue_1 = __importDefault(require(\"./BasicValue\"));\nconst useStyles = (0, mui_1.makeStyles)()({\n    field: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n});\nfunction UriField({ value, prefix, name, }) {\n    const { classes } = useStyles();\n    const { uri, baseUri = '' } = value;\n    let href;\n    try {\n        href = new URL(uri, baseUri).href;\n    }\n    catch (e) {\n        href = uri;\n    }\n    return (react_1.default.createElement(\"div\", { className: classes.field },\n        react_1.default.createElement(FieldName_1.default, { prefix: prefix, name: name }),\n        react_1.default.createElement(BasicValue_1.default, { value: href })));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Attributes;\nconst react_1 = __importDefault(require(\"react\"));\nconst is_object_1 = __importDefault(require(\"is-object\"));\n// locals\nconst util_1 = require(\"./util\");\nconst util_2 = require(\"../../util\");\nconst DataGridDetails_1 = __importDefault(require(\"./DataGridDetails\"));\nconst ArrayValue_1 = __importDefault(require(\"./ArrayValue\"));\nconst UriField_1 = __importDefault(require(\"./UriField\"));\nconst SimpleField_1 = __importDefault(require(\"./SimpleField\"));\nconst MAX_FIELD_NAME_WIDTH = 170;\n// these are always omitted as too detailed\nconst globalOmit = [\n    '__jbrowsefmt',\n    'length',\n    'position',\n    'subfeatures',\n    'uniqueId',\n    'exonFrames',\n    'parentId',\n    'thickStart',\n    'thickEnd',\n];\nfunction Attributes(props) {\n    const { attributes, omit = [], omitSingleLevel = [], descriptions, formatter = val => val, hideUris, prefix = [], } = props;\n    const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel]);\n    const { __jbrowsefmt, ...rest } = attributes;\n    const formattedAttributes = { ...rest, ...__jbrowsefmt };\n    const maxLabelWidth = (0, util_1.generateMaxWidth)(Object.entries(formattedAttributes).filter(([k, v]) => v !== undefined && !omits.has(k)), prefix);\n    return (react_1.default.createElement(react_1.default.Fragment, null, Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n        const description = (0, util_1.accessNested)([...prefix, key], descriptions);\n        if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => (0, is_object_1.default)(val)) ? (react_1.default.createElement(DataGridDetails_1.default, { key: key, name: key, prefix: prefix, value: value })) : (react_1.default.createElement(ArrayValue_1.default, { key: key, name: key, value: value, description: description, prefix: prefix }));\n        }\n        else if ((0, is_object_1.default)(value)) {\n            const { omitSingleLevel, ...rest } = props;\n            return (0, util_2.isUriLocation)(value) ? (hideUris ? null : (react_1.default.createElement(UriField_1.default, { key: key, name: key, prefix: prefix, value: value }))) : (react_1.default.createElement(Attributes, { key: key, ...rest, attributes: value, descriptions: descriptions, prefix: [...prefix, key] }));\n        }\n        else {\n            return (react_1.default.createElement(SimpleField_1.default, { key: key, name: key, value: formatter(value, key), description: description, prefix: prefix, width: Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH) }));\n        }\n    })));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attributes = exports.BaseAttributes = exports.BaseCoreDetails = void 0;\nexports.BaseCard = BaseCard;\nexports.FeatureDetails = FeatureDetails;\nconst react_1 = __importDefault(require(\"react\"));\nconst react_error_boundary_1 = require(\"react-error-boundary\");\nconst material_1 = require(\"@mui/material\");\nconst mui_1 = require(\"tss-react/mui\");\nconst mobx_react_1 = require(\"mobx-react\");\n// icons\nconst ExpandMore_1 = __importDefault(require(\"@mui/icons-material/ExpandMore\"));\n// locals\nconst util_1 = require(\"../../util\");\nconst ui_1 = require(\"../../ui\");\nconst SequenceFeatureDetails_1 = __importDefault(require(\"../SequenceFeatureDetails\"));\nconst SimpleField_1 = __importDefault(require(\"./SimpleField\"));\nconst Attributes_1 = __importDefault(require(\"./Attributes\"));\nconst util_2 = require(\"./util\");\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n    'name',\n    'start',\n    'end',\n    'strand',\n    'refName',\n    'description',\n    'type',\n];\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    expansionPanelDetails: {\n        display: 'block',\n        padding: theme.spacing(1),\n    },\n    icon: {\n        color: theme.palette.tertiary.contrastText || '#fff',\n    },\n}));\nfunction BaseCard({ children, title, defaultExpanded = true, }) {\n    const { classes } = useStyles();\n    return (react_1.default.createElement(material_1.Accordion, { defaultExpanded: defaultExpanded },\n        react_1.default.createElement(material_1.AccordionSummary, { expandIcon: react_1.default.createElement(ExpandMore_1.default, { className: classes.icon }) },\n            react_1.default.createElement(material_1.Typography, { variant: \"button\" }, title)),\n        react_1.default.createElement(material_1.AccordionDetails, { className: classes.expansionPanelDetails }, children)));\n}\nfunction Position(props) {\n    const { feature } = props;\n    const strand = feature.strand;\n    const strandMap = {\n        '-1': '-',\n        '0': '',\n        '1': '+',\n    };\n    const str = strandMap[strand] ? `(${strandMap[strand]})` : '';\n    const loc = (0, util_1.assembleLocString)(feature);\n    return react_1.default.createElement(react_1.default.Fragment, null, `${loc} ${str}`);\n}\nfunction CoreDetails(props) {\n    const { feature } = props;\n    const obj = feature;\n    const formattedFeat = { ...obj, ...obj.__jbrowsefmt };\n    const { start, end } = formattedFeat;\n    const displayedDetails = {\n        ...formattedFeat,\n        length: (0, util_1.toLocale)(end - start),\n    };\n    const coreRenderedDetails = {\n        description: 'Description',\n        name: 'Name',\n        length: 'Length',\n        type: 'Type',\n    };\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(SimpleField_1.default, { name: \"Position\", value: react_1.default.createElement(Position, { ...props, feature: formattedFeat }) }),\n        Object.entries(coreRenderedDetails)\n            .map(([key, name]) => [name, displayedDetails[key]])\n            .filter(([, value]) => value != null)\n            .map(([name, value]) => (react_1.default.createElement(SimpleField_1.default, { key: name, name: name, value: value })))));\n}\nconst BaseCoreDetails = (props) => {\n    const { title = 'Primary data' } = props;\n    return (react_1.default.createElement(BaseCard, { ...props, title: title },\n        react_1.default.createElement(CoreDetails, { ...props })));\n};\nexports.BaseCoreDetails = BaseCoreDetails;\nconst BaseAttributes = (props) => {\n    const { feature } = props;\n    return (react_1.default.createElement(BaseCard, { ...props, title: \"Attributes\" },\n        react_1.default.createElement(Attributes_1.default, { ...props, attributes: feature })));\n};\nexports.BaseAttributes = BaseAttributes;\nfunction FeatureDetails(props) {\n    const { omit = [], model, feature, depth = 0 } = props;\n    const { maxDepth } = model;\n    const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature;\n    const pm = (0, util_1.getEnv)(model).pluginManager;\n    const session = (0, util_1.getSession)(model);\n    const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n        session,\n        feature,\n        model,\n    });\n    const m = mate;\n    return (react_1.default.createElement(BaseCard, { title: (0, util_2.generateTitle)(name, id, type) },\n        react_1.default.createElement(material_1.Typography, null, \"Core details\"),\n        react_1.default.createElement(CoreDetails, { ...props }),\n        m ? (react_1.default.createElement(react_1.default.Fragment, null,\n            react_1.default.createElement(material_1.Divider, null),\n            react_1.default.createElement(material_1.Typography, null, \"Mate details\"),\n            react_1.default.createElement(CoreDetails, { ...props, feature: {\n                    ...m,\n                    start: m.start,\n                    end: m.end,\n                    refName: m.refName,\n                    uniqueId: `${uniqueId}-mate`,\n                } }))) : null,\n        react_1.default.createElement(material_1.Divider, null),\n        react_1.default.createElement(material_1.Typography, null, \"Attributes\"),\n        react_1.default.createElement(Attributes_1.default, { attributes: feature, ...props, omit: omit, omitSingleLevel: coreDetails }),\n        react_1.default.createElement(react_error_boundary_1.ErrorBoundary, { FallbackComponent: e => react_1.default.createElement(ui_1.ErrorMessage, { error: e.error }) },\n            react_1.default.createElement(SequenceFeatureDetails_1.default, { ...props })),\n        ExtraPanel ? (react_1.default.createElement(react_1.default.Fragment, null,\n            react_1.default.createElement(material_1.Divider, null),\n            react_1.default.createElement(BaseCard, { title: ExtraPanel.name },\n                react_1.default.createElement(ExtraPanel.Component, { ...props })))) : null,\n        depth < maxDepth && (subfeatures === null || subfeatures === void 0 ? void 0 : subfeatures.length) ? (react_1.default.createElement(BaseCard, { title: \"Subfeatures\", defaultExpanded: depth < 1 }, subfeatures.map((sub, idx) => (react_1.default.createElement(FeatureDetails, { key: JSON.stringify(sub), feature: {\n                ...sub,\n                uniqueId: `${uniqueId}_${idx}`,\n            }, model: model, depth: depth + 1 }))))) : null));\n}\nconst BaseFeatureDetail = (0, mobx_react_1.observer)(function ({ model }) {\n    const { error, featureData } = model;\n    if (error) {\n        return react_1.default.createElement(ui_1.ErrorMessage, { error: error });\n    }\n    if (!featureData) {\n        return null;\n    }\n    // replacing undefined with null helps with allowing fields to be hidden,\n    // setting null is not allowed by jexl so we set it to undefined to hide. see\n    // config guide. this replacement happens both here and when snapshotting the\n    // featureData\n    const g = JSON.parse(JSON.stringify(featureData, (_, v) => (v === undefined ? null : v)));\n    return (0, util_2.isEmpty)(g) ? null : react_1.default.createElement(FeatureDetails, { model: model, feature: g });\n});\nexports.default = BaseFeatureDetail;\nvar Attributes_2 = require(\"./Attributes\");\nObject.defineProperty(exports, \"Attributes\", { enumerable: true, get: function () { return __importDefault(Attributes_2).default; } });\n","import React, { useState } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport copy from 'copy-to-clipboard';\n// locals\nimport Checkbox2 from './Checkbox2';\nconst useStyles = makeStyles()({\n    textAreaFont: {\n        fontFamily: 'Courier New',\n        wordWrap: 'break-word',\n    },\n    dialogContent: {\n        background: 'lightgrey',\n        margin: 4,\n        minWidth: '80em',\n    },\n});\nexport default function SequenceTextArea({ str }) {\n    const { classes } = useStyles();\n    const [copied, setCopied] = useState(false);\n    const [showGaps, setShowGaps] = useState(false);\n    const [showEmpty, setShowEmpty] = useState(false);\n    const disp = str\n        .map(([s1, s2]) => [s1, showGaps ? s2 : s2.replaceAll('-', '')])\n        .filter(f => (showEmpty ? true : !!f[1]))\n        .map(([s1, s2]) => `>${s1}\\n${showGaps ? s2 : s2.replaceAll('-', '')}`)\n        .join('\\n');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { color: \"primary\", variant: \"contained\", onClick: () => {\n                copy(disp);\n                setCopied(true);\n                setTimeout(() => {\n                    setCopied(false);\n                }, 500);\n            } }, copied ? 'Copied!' : 'Copy to clipboard'),\n        React.createElement(Checkbox2, { label: \"Show gaps\", checked: showGaps, onChange: () => {\n                setShowGaps(!showGaps);\n            } }),\n        React.createElement(Checkbox2, { label: \"Show empty\", checked: showEmpty, onChange: () => {\n                setShowEmpty(!showEmpty);\n            } }),\n        React.createElement(TextField, { variant: \"outlined\", multiline: true, className: classes.dialogContent, minRows: 5, maxRows: 10, fullWidth: true, value: disp, InputProps: {\n                readOnly: true,\n                classes: {\n                    input: classes.textAreaFont,\n                },\n            } })));\n}\n//# sourceMappingURL=SequenceTextArea.js.map"],"names":["ReactPropTypesSecret","ReactPropTypesSecret_1","require$$0","emptyFunction","emptyFunctionWithReset","factoryWithThrowingShims","shim","props","propName","componentName","location","propFullName","secret","err","getShim","ReactPropTypes","propTypesModule","_interopRequireDefault","ExpandMore","_createSvgIcon","require$$1","_jsxRuntime","require$$2","hooks","useFeatureSequence","react_1","util_1","configuration_1","BPLIMIT","model","feature","upDownBp","forceLoad","sequence","setSequence","error","setError","_a","_b","assemblyManager","rpcManager","assemblyName","fetchSeq","start","end","refName","assembly","sessionId","feats","feat","b","e","seq","up","down","__createBinding","this","o","k","k2","desc","__setModuleDefault","v","__importStar","mod","result","SettingsDialog","material_1","ui_1","mui_1","require$$3","mobx_react_1","require$$4","useStyles","theme","TextField2","FormControl2","children","SequenceFeatureSettingsDialog","handleClose","classes","upperCaseCDS","intronBp","setIntronBp","setUpDownBp","intronBpValid","upDownBpValid","event","m","__importDefault","SequenceFeatureMenu_1","copy_to_clipboard_1","file_saver_1","CascadingMenuButton_1","MoreVert_1","require$$5","Settings_1","require$$6","require$$7","SequenceFeatureMenu","extraItems","ref","showSettings","setShowSettings","showCoordinatesSetting","showGenomicCoordsOption","r","SequenceTypeSelector_1","SequenceTypeSelector","mode","hasCDS","hasExonOrCDS","key","val","util","stitch","dedupe","revlist","calculateUTRs","calculateUTRs2","ellipses","subfeats","sub","getItemId","list","item","pos","ary","seqlen","a","cds","exons","firstCds","lastCds","firstCdsIdx","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","elt","threeUTRs","parentFeat","slug","splitString","str","charactersPerRow","showCoordinates","currRemainder","splitSize","numChunks","chunks","splitStart","iter","offset","inc","res","i","j","SequenceDisplay_1","SequenceDisplay","color","strand","coordStart","chunk","idx","f","prefix","postfix","CDNASequence_1","CDNASequence","utr","upstream","downstream","includeIntrons","collapseIntron","hasCds","toLower","s","toUpper","fullGenomicCoordinates","mult","currStart","upstreamChunk","segments","remainder","middleChunks","intron","downstreamChunk","ProteinSequence_1","util_2","ProteinSequence","codonTable","protein","GenomicSequence_1","GenomicSequence","middleChunk","CDSSequence_1","CDSSequence","SequencePanel_1","getStrand","WordWrap","NoWordWrap","SequencePanel","subfeatures","Container","SequenceDialog_1","hooks_1","require$$8","SequenceDialog","sequenceFeatureDetails","seqPanelRef","force","setForce","SequenceFeatureDetails_1","SequenceFeatureDetails","openInDialog","setOpenInDialog","HelpDialog_1","HelpDialog","SequenceFeaturePanel_1","Help_1","SequenceFeaturePanel","shown","setShown","exports","FieldName_1","FieldName","description","name","width","cx","BasicValue_1","BasicValue","is_object_1","value","isLink","SimpleField_1","SimpleField","isEmpty","generateTitle","generateMaxWidth","accessNested","obj","id","type","array","arr","obj2","GridApiContext","React.createContext","useGridApiContext","apiRef","React.useContext","useGridApiRef","React.useRef","GridRootPropsContext","useGridRootProps","contextValue","composeClasses","slots","getUtilityClass","output","slot","acc","utilityClass","formatMuiErrorMessage","code","url","capitalize","string","_formatMuiErrorMessage","debounce","func","wait","timeout","debounced","args","later","ownerDocument","node","ownerWindow","setRef","useEnhancedEffect","React.useLayoutEffect","React.useEffect","globalId","useGlobalId","idOverride","defaultId","setDefaultId","React.useState","maybeReactUseId","React","useId","useEventCallback","fn","useForkRef","refs","React.useMemo","instance","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","useOnMount","Timeout","delay","useTimeout","defaultGenerator","createClassNameGenerator","generate","generator","ClassNameGenerator","globalStateClasses","generateUtilityClass","globalStatePrefix","globalStateClass","generateUtilityClasses","is","fastObjectShallowCompare","aLength","bLength","_","fastMemo","component","React.memo","GRID_EXPERIMENTAL_ENABLED","GRID_DEFAULT_LOCALE_TEXT","count","visibleCount","totalCount","getDataGridUtilityClass","gridClasses","CLEANUP_TIMER_LOOP_MILLIS","TimerBasedCleanupTracking","object","unsubscribe","unregisterToken","FinalizationRegistryBasedCleanupTracking","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","details","unstable_resetCleanupTracking","useGridApiEventHandler","optionsSubscriberOptions","useGridApiOptionHandler","isOutputSelector","selector","applySelector","defaultCompare","objectShallowCompare","createRefs","useGridSelector","equals","didInit","state","setState","newState","gridDimensionsSelector","NOT_FOUND","assertIsFunction","errorMessage","assertIsObject","assertIsArrayOfFunctions","itemTypes","ensureIsArray","getDependencies","createSelectorArgs","dependencies","collectInputSelectorResults","inputSelectorArgs","inputSelectorResults","length","createSingletonCache","entry","createLruCache","maxSize","entries","get","cacheIndex","put","getEntries","clear","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","resultEqualityCheck","comparator","resultsCount","cache","memoized","matchingEntry","StrongRef","Ref","UNTERMINATED","TERMINATED","createCacheNode","weakMapMemoize","fnNode","lastResult","cacheNode","l","arg","objectCache","objectNode","primitiveCache","primitiveNode","terminatedNode","lastResultValue","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","createSelectorCreatorOptions","createSelector2","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","memoize","memoizeOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","inputSelectorKeys","composition","index","reselectCreateSelector","checkIsAPIRef","DEFAULT_INSTANCE_ID","c","d","other","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","gridDensitySelector","gridDensityFactorSelector","density","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridIsRtlSelector","gridColumnsStateSelector","gridColumnFieldsSelector","columnsState","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","lookup","field","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","columns","columnVisibilityModel","column","gridVisibleColumnFieldsSelector","visibleColumns","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visibleColumnFields","isRtl","visiblePinnedFields","filterVisibleColumns","pinnedColumns","invert","filter","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","gridColumnPositionsSelector","positions","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","gridFilterableColumnLookupSelector","gridHasColSpanSelector","_excluded","useUtilityClasses","ownerState","GridEditInputCellRoot","styled","InputBase","styles","_extends","GridEditInputCell","React.forwardRef","rootProps","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","_objectWithoutPropertiesLoose","inputRef","valueState","setValueState","handleChange","React.useCallback","newValue","parsedValue","meta","_jsx","renderEditInputCell","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","isDesc","direction","parseSortItem","sortItem","compareRows","parsedSortItems","row1","row2","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","comparatorList","rowList","el","row","getNextGridSortDirection","sortingOrder","current","currentIdx","gridNillComparator","v1","v2","collator","gridStringOrNumberComparator","value1","value2","nillResult","gridNumberComparator","gridDateComparator","GridFilterInputValue","applyValue","focusElementRef","tabIndex","disabled","clearButton","InputProps","variant","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","newItem","isNumber","isFunction","isObject","localStorageAvailable","escapeRegExp","clamp","min","max","range","from","to","isDeepEqual","entriesA","entryA","keys","mulberry32","createRandomNumberGenerator","seed","random","deepClone","_excluded2","GridFilterInputMultipleValue","helperText","size","TextFieldProps","itemValue","Autocomplete","inputValue","getTagProps","option","_getTagProps","tagProps","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","isLeaf","getDefaultGridFilterModel","getPublicApiRef","hasEval","getHasEval","cleanFilterItem","cleanItem","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","items","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","getFilterCallbackFromItem","filterItem","parser","x","ignoreDiacritics","newFilterItem","filterOperators","filterOperator","operator","publicApiRef","applyFilterOnRow","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","shouldApplyFilter","resultPerItemId","applier","filterItemCore","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","buildAggregatedQuickFilterApplier","quickFilterValues","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","isNotNull","filterModelItems","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","getGridStringQuickFilterFn","filterRegex","columnValue","createContainsFilterFn","disableTrim","negate","trimmedValue","matches","createEqualityFilterFn","isEqual","createEmptyFilterFn","getGridStringOperators","filterItemValue","GRID_STRING_COL_DEF","GridMenuRoot","Popper","transformOrigin","GridMenu","open","target","onClose","position","className","onExited","savedFocusRef","handleExited","popperOnExited","handleClickAway","clsx","TransitionProps","placement","ClickAwayListener","Grow","Paper","hasActions","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useRtl","menuId","buttonId","iconButtons","menuButtons","numberOfButtons","React.useImperativeHandle","focusableButtonIndex","showMenu","hideMenu","handleTouchRippleRef","handleButtonClick","onClick","handleRootKeyDown","getNewIndex","indexMod","newIndex","handleListKeyDown","_jsxs","button","React.cloneElement","MenuList","renderActionsCell","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","gridRowsStateSelector","gridRowCountSelector","rows","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupsToFetchSelector","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","depth","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","gridPinnedRowsSelector","additionalRowGroups","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","pinnedRows","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","rowModel","getRowId","createRowsInternalCache","loading","rowCount","updates","dataRowIdToModelLookup","dataRowIdToIdLookup","getTopLevelRowCount","tree","rowCountProp","rootGroupNode","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingName","groupsToFetch","groupingParamsWithHydrateRows","isAutogeneratedRow","isAutogeneratedRowNode","rowNode","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","validDescendants","child","childDescendants","updateCacheWithNewRows","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","getMinimalContentHeight","computeRowsUpdates","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","GridBooleanCellRaw","Icon","GridBooleanCell","renderBooleanCell","GridEditBooleanCell","idProp","renderEditBooleanCell","BooleanOperatorContainer","GridFilterInputBoolean","labelProp","labelId","selectId","baseSelectProps","isSelectNative","baseSelectOptionProps","label","_c","getGridBooleanOperators","valueAsBoolean","gridBooleanFormatter","stringToBoolean","GRID_BOOLEAN_COL_DEF","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","handleRef","element","input","handleKeyDown","isSelectable","GridCellCheckboxRenderer","isMultipleRowSelectionEnabled","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","rowId","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","sorting","gridSortColumnLookupSelector","gridFilterStateSelector","gridFilterModelSelector","filterState","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","visibleRowsLookup","sortedRows","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","filteredRowsLookup","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","visibleSortedRowIds","depthPositionCounter","lastDepth","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilteredDescendantRowCountSelector","totalRowCount","topLevelRowCount","gridFilterActiveItemsSelector","columnLookup","gridFilterActiveItemsLookupSelector","activeFilters","useGridApiMethod","privateApiRef","apiMethods","visibility","isFirstRender","useGridLogger","logger","newLogger","useGridNativeEventListener","added","setAdded","targetElement","wrapHandler","useFirstRender","noop","useRunOnce","condition","effect","didRun","MAX_PAGE_SIZE","defaultPageSize","autoPageSize","getPageCount","pageSize","page","getDefaultGridPaginationModel","getValidPage","pageCount","throwIfPageSizeExceedsTheLimit","signatureProp","gridPaginationSelector","gridPaginationModelSelector","pagination","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","paginationModel","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","firstRowIndex","lastRowIndex","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","GridHeaderCheckbox","forceUpdate","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","checked","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","selectionLookup","convertFilterItemValueToInputValue","inputType","dateCopy","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","parseValueToDate","year","month","day","hours","minutes","newFormattedDate","newParsedDate","renderEditDateCell","throwIfNotDateObject","columnType","gridDateFormatter","gridDateTimeFormatter","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","getGridNumericOperators","GRID_NUMERIC_COL_DEF","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","valueOptions","getOptionValue","optionValue","isKeyboardEvent","GridEditSingleSelectCell","initialOpen","_ref","MenuProps","otherBaseSelectProps","getOptionLabel","formattedTargetValue","reason","handleOpen","valueOption","_createElement","renderEditSingleSelectCell","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","placeholder","resolvedColumn","currentValueOptions","_d","_e","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","getGridSingleSelectOperators","filterItemValues","isArrayOfObjects","defaultGetOptionValue","defaultGetOptionLabel","GRID_SINGLE_SELECT_COL_DEF","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","gridHeaderFilteringStateSelector","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","columnGrouping","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","computeFlexColumnsWidth","initialFreeSpace","totalFlexUnits","flexColumns","uniqueFlexColumns","flexColumnsLookup","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computedWidth","hydrateColumnsWidth","rawState","dimensions","columnsLookup","widthAllocatedBeforeFlex","columnField","isFlex","availableWidth","computedColumnWidths","applyInitialState","initialState","orderedFields","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getDefaultColTypeDef","createColumnsState","columnsToUpsert","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","newColumn","existingState","hasBeenResized","columnsStateWithPreProcessing","columnsStateWithPortableColumns","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","getTotalHeaderHeight","densityFactor","maxDepth","isHeaderFilteringEnabled","columnHeadersHeight","filterHeadersHeight","CLIFF","SLOP","scrollDirection","GridScrollAreaRawRoot","GridScrollAreaRaw","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","style","handleScrolling","newScrollPosition","handleDragOver","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","GridScrollArea","useResizeObserver","enabled","fnRef","observer","GridPrivateApiContext","useGridPrivateApiContext","getVisibleRows","useGridVisibleRows","response","userAgent","isFirefox","gridRowsMetaSelector","gridVirtualizationSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridVirtualizationRowEnabledSelector","gridRenderContextSelector","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","autoHeight","useGridVirtualization","setVirtualization","gridRowSpanningStateSelector","gridRowSpanningHiddenCellsSelector","rowSpanning","gridRowSpanningSpannedCellsSelector","gridRowSpanningHiddenCellsOriginMapSelector","MINIMUM_COLUMN_WIDTH","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","bufferForDirection","isJSDOM","useGridVirtualScroller","enabledForRows","enabledForColumns","outerSize","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","rowsMeta","selectedRowsLookup","currentPage","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","previousContextScrollPosition","previousRowContext","renderContext","scrollTimeout","frozenContext","scrollCache","focusedCell","updateRenderContext","nextRenderContext","areRenderContextsEqual","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","inputs","inputsSelector","computeRenderContext","ReactDOM.flushSync","forceUpdateRenderContext","handleScroll","scrollTop","scrollLeft","handleWheel","handleTouchMove","getRows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","rowIndex","minFirstColumn","maxLastColumn","baseRowHeight","isSelected","isFirstVisible","isLastVisible","isLastVisibleInSection","lastIndex","isNotVisible","tabbableCell","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","panel","needsHorizontalScrollbar","scrollerStyle","contentSize","initialRenderContext","platform.isFirefox","hiddenCellsOriginMap","lastRowId","lastColumn","top","left","realLeft","getNearestIndexToRender","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","binarySearch","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","exponentialSearch","initialFirstColumnToRender","lastColumnToRender","sliceStart","sliceEnd","pivot","isBefore","interval","firstIndex","bufferBefore","bufferAfter","minFirstIndex","maxLastIndex","lastSize","firstPosition","lastPosition","firstIndexPadded","lastIndexPadded","context1","context2","pinnedLeftLength","useGridOverlays","visibleRowCount","noRows","showNoRowsOverlay","showNoResultsOverlay","overlayType","loadingOverlayVariant","GridOverlayWrapperRoot","prop","GridOverlayWrapperInner","GridOverlayWrapper","height","GridOverlays","Overlay","overlayProps","gridColumnMenuSelector","GridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","MemoizedGridHeaders","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","GridMainContainer","ariaAttributes","GridTopContainer","GridBottomContainer","overflowedContent","VirtualScrollerContentRoot","GridVirtualScrollerContent","Filler","Pinned","PinnedLeft","PinnedRight","Main","GridVirtualScrollerFiller","rowsLength","viewportOuterSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","leftPinnedWidth","rightPinnedWidth","scrollbarHeight","expandedHeight","Memoized","VirtualScrollerRenderZoneRoot","GridVirtualScrollerRenderZone","offsetTop","gridColumnResizeSelector","gridResizingColumnFieldSelector","columnResize","DEFAULT_GRID_AUTOSIZE_OPTIONS","gridEditRowsStateSelector","gridPreferencePanelStateSelector","GridPreferencePanelsValue","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","Content","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","Scroller","GridVirtualScroller","overlaysProps","virtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","TopContainer","Overlays","RenderZone","SpaceFiller","BottomContainer","GridFooterPlaceholder","cachedSupportsPreventScroll","doesSupportPreventScroll","isOverflown","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","root","getGridRowElementSelector","getGridRowElement","getGridCellElement","rowSelector","cellSelector","isEventTargetInPortal","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","getFieldsFromGroupHeaderElem","findGroupHeaderElementsFromField","findGridCellElementsFromCol","api","ariaColIndex","colIndex","cells","queryRows","rowElement","columnIndex","cell","findGridElement","klass","findPinnedCells","filterFn","currentColIndex","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","container","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getRowParams","getCellParams","rawValue","getCellValue","getRowValue","getRowFormattedValue","getColumnHeaderElement","getRowElement","getCellElement","shouldCellShowRightBorder","pinnedPosition","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","align","showLeftBorder","showRightBorder","isEditable","isSelectionMode","GridCell","editCellState","styleProp","colSpan","disableDragEvents","pinnedOffset","sectionIndex","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyDown","onKeyUp","onDragEnter","onDragOver","cellParams","hiddenCells","spannedCells","cellMode","canManageOwnFocus","action","rootClasses","getCellClassName","classNames","valueToRender","cellRef","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","rowSpan","cellStyle","isLeftPinned","isRightPinned","side","doc","focusableElement","elementToFocus","handleFocus","title","updatedRow","editCellStateRest","formattedValue","valueString","React.isValidElement","draggableEventHandlers","MemoizedGridCell","GridActionsCellItem","icon","handleClick","closeMenuOnClick","closeMenu","MenuItem","ListItemIcon","CIRCULAR_CONTENT_SIZE","CONTENT_HEIGHT","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","empty","randomNumberGenerator","GridSkeletonCell","skeletonProps","Skeleton","getBorderColor","lighten","alpha","darken","columnHeaderStyles","columnSeparatorTargetSize","columnSeparatorOffset","focusOutlineWidth","separatorIconDragStyles","ignoreSsrWarning","GridRootStyles","t","borderColor","radius","containerBackground","pinnedBackground","overlayBackground","hoverOpacity","hoverColor","selectedOpacity","selectedBackground","selectedHoverBackground","pinnedHoverBackground","blend","pinnedSelectedBackground","pinnedSelectedHoverBackground","selectedStyles","background","overlay","opacity","gamma","backgroundColor","decomposeColor","overlayColor","rgb","recomposeColor","showCellVerticalBorder","GridRoot","rootElementRef","mountedState","setMountedState","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","GridOverlay","GridToolbarContainerRoot","GridToolbarContainer","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderTitleRoot","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","GridColumnHeaderSeparatorSides","resizable","resizing","GridColumnHeaderSeparatorRaw","stopClick","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","sortDirection","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnMenu","columnTitleIconButtons","headerClassName","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","ariaSort","isDragging","filterItemsCounter","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","GridColumnHeaderItem","columnMenuOpen","isLast","sortIndex","disableReorder","showColumnMenuIcon","setShowColumnMenuIcon","mouseEventsHandlers","showSortIcon","React.Fragment","GridIconButtonContainerRoot","GridIconButtonContainer","getIcon","icons","iconProps","GridColumnHeaderSortIconRaw","iconElement","iconButton","Badge","GridColumnHeaderSortIcon","GridColumnHeaderFilterIconButton","counter","preferencePanel","panelId","toggleFilter","openedPanelValue","GridArrowUpwardIcon","createSvgIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isPrintableKey","isNavigationKey","isHideMenuKey","isPasteShortcut","StyledMenuList","GridColumnMenuContainer","labelledby","useGridColumnMenuSlots","defaultSlots","defaultSlotProps","slotProps","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","leftDisplayOrder","rightDisplayOrder","itemProps","processedComponentProps","customProps","Divider","GridColumnMenuHideItem","toggleColumn","ListItemText","GridColumnMenuManageItem","showColumns","GridColumnMenuColumnsItem","GridColumnMenuFilterItem","showFilter","GridColumnMenuSortItem","onSortMenuItemClick","getLabel","GRID_COLUMN_MENU_SLOTS","GRID_COLUMN_MENU_SLOT_PROPS","GridGenericColumnMenu","orderedSlots","Component","otherProps","GridColumnMenu","GridPanelWrapperRoot","isEnabled","GridPanelWrapper","FocusTrap","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","sort","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","currentColumns","togglableColumns","togglableSortedColumns","toggleAllColumns","isVisible","currentModel","newModel","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","GridColumnsManagementBody","FormControlLabel","GridColumnsManagementEmptyText","GridColumnsManagementFooter","GridColumnsPanel","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","anchorEl","setAnchorEl","panelAnchor","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","GridPanelFooter","GridPanelHeaderRoot","GridPanelHeader","GridFilterFormRoot","FilterFormDeleteIcon","FilterFormLogicOperatorInput","FilterFormColumnInput","FilterFormOperatorInput","FilterFormValueInput","getLogicOperatorLocaleKey","logicOperator","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","InputComponentProps","valueInputPropsOther","filteredColumns","selectedField","itemField","selectedNonFilterableColumn","filteredFields","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","handleDeleteFilter","_f","_g","_h","_i","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","currentFilters","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","GridToolbarColumnsButton","buttonProps","tooltipProps","columnButtonId","columnPanelId","isOpen","GridToolbarDensitySelector","densityButtonId","densityMenuId","densityOptions","startIcon","handleDensitySelectorOpen","prevOpen","handleDensitySelectorClose","handleDensityUpdate","newDensity","densityElements","GridToolbarFilterListRoot","_props","GridToolbarFilterButton","filterButtonId","filterPanelId","tooltipContentNode","getOperatorLabel","getFilterItemValue","getValueAsString","GridToolbarExportContainer","exportButtonId","exportMenuId","handleMenuOpen","handleMenuClose","React.Children","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","csvOptions","printOptions","excelOptions","preProcessedButtons","GridToolbarQuickFilterRoot","TextField","defaultSearchValueParser","searchText","word","defaultSearchValueFormatter","values","GridToolbarQuickFilter","quickFilterParser","quickFilterFormatter","prevQuickFilterValuesRef","prevSearchValue","updateSearchValue","newSearchValue","newQuickFilterValues","debouncedUpdateSearchValue","handleSearchReset","GridToolbar","showQuickFilter","quickFilterProps","Box","GridSelectedRowCountRoot","GridSelectedRowCount","selectedRowCount","rowSelectedText","GridFooter","totalTopLevelRowCount","selectedRowCountElement","rowCountElement","paginationElement","GridPreferencesPanel","preferencePanelState","panelContent","GridHeader","getPinnedCellOffset","scrollbarWidth","GridScrollbarFillerCell","header","borderTop","borderBottom","pinnedRight","SkeletonOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","viewportHeight","skeletonRowsCount","totalWidth","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","pinnedStyle","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","hasScrollbarFiller","resizedColIndex","currentWidth","delta","pinnedCells","LOADING_VARIANTS","CircularProgress","LinearProgress","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","noRowsLabel","GridPaginationRoot","TablePagination","tablePaginationClasses","wrapLabelDisplayedRows","labelDisplayedRows","estimated","defaultLabelDisplayedRows","GridPagination","paginationMode","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","pageSizeOptions","locales","wrappedLabelDisplayedRows","GridRowCountRoot","GridRowCount","text","composeGridClasses","GRID_DETAIL_PANEL_TOGGLE_FIELD","EmptyCell","GridRow","refProp","selected","rowHeight","focusedColumnIndex","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","editRowsState","editing","editable","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","getRowAriaAttributes","rootElement","resizeObserver","publishClick","disableColumnReorder","rowReordering","sizes","minHeight","rowStyle","property","propertyValue","rowClassNames","indexRelativeToCurrentPage","rowParams","getCell","indexRelativeToAllColumns","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","useGridAriaAttributes","accessibleRowCount","pinnedRowsCount","useGridRowAriaAttributes","selectedIdsLookup","ariaRowIndex","GridContextProvider","useGridRefs","mainElementRef","virtualScrollerRef","columnHeadersContainerRef","useGridIsRtl","isFirstEffect","forceDebug","noopLogger","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","loggerObj","method","message","useGridLoggerFactory","getLogger","EventManager","listener","collection","highPriorityListeners","regularListeners","that","oneTimeListener","Store","_value","SYMBOL_API_PRIVATE","isSyntheticEvent","createPrivateAPI","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","publicApi","currentPublicMethod","createPublicAPI","useGridApiInitialization","inputApiRef","publishEvent","subscribeEvent","useGridLocaleText","getLocaleText","_typeof","toPrimitive","toPropertyKey","useGridPipeProcessing","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","applyPipeProcessors","context","processors","preProcessingPrivateApi","preProcessingPublicApi","useGridRegisterPipeProcessor","cleanup","registerPreProcessor","useGridRegisterPipeApplier","useGridRegisterStrategyProcessor","strategyName","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","useGridStrategyProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","processorName","otherProcessors","groupPreProcessors","previousProcessor","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","availableStrategyEntry","strategy","setStrategyAvailability","isAvailable","useGridStateInitialization","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","ignoreSetState","updatedControlStateIds","stateId","controlState","oldSubState","newSubState","hasPropChanged","updateControlState","previousState","publicStateApi","privateStateApi","useGridInitialization","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","valueStr","escapedValue","delimiter","serializeCellValue","ignoreValueFormatter","CSVRow","serializeRow","buildCSV","rowIds","CSVBody","headerRows","columnGroupLookup","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","writeToClipboardPolyfill","data","span","copyToClipboard","hasNativeSelection","useGridClipboard","ignoreValueFormatterProp","clipboardCopyCellDelimiter","handleCopy","textToCopy","columnMenuStateInitializer","useGridColumnMenu","showColumnMenu","hideColumnMenu","fieldToFocus","visibleOrderedFields","fieldIndex","toggleColumnMenu","columnsStateInitializer","useGridColumns","previousColumnsProp","setGridColumnsState","mergeColumnsState","getColumn","getAllColumns","getVisibleColumns","getColumnIndex","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","updateColumns","setColumnVisibility","isCurrentlyVisible","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","allColumns","oldIndexPosition","updatedColumns","fieldRemoved","setColumnWidth","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","stateRestorePreProcessing","columnVisibilityModelToImport","preferencePanelPreProcessing","initialValue","ColumnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","viewportInnerSize","hydrateColumns","densityStateInitializer","useGridDensity","densityApi","exportedDensity","restoredDensity","exportAs","blob","extension","filename","fullName","getColumnsToExport","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","useGridCsvExport","getDataAsCsv","exportedColumns","exportedRowIds","exportDataAsCsv","csv","addExportMenuButtons","getDerivedPaginationModel","paginationState","signature","paginationModelProp","validPage","useGridPaginationModel","setPage","setPageSize","setPaginationModel","handlePaginationModelChange","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","raf","resolve","buildPrintWindow","iframeEl","useGridPrintExport","hasRootReference","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","fields","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","getRowsToExport","newRows","handlePrintWindowLoad","printWindow","normalizeOptions","printDoc","gridRootElement","gridClone","gridMain","gridToolbarElementHeight","gridFooterElementHeight","computedTotalHeight","gridFooterElement","defaultPageStyle","styleElement","stylesheetLoadPromises","rootCandidate","headStyleElements","newHeadStyleElements","sheet","styleCSS","attr","handlePrintWindowAfterPrint","printExportApi","mql","filterStateInitializer","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","useGridFilter","updateFilteredRows","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","setFilterModel","getFilterState","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","FilterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","footerId","handleColumnsChange","handleStrategyProcessorChange","updateVisibleRowsLookupState","focusStateInitializer","useGridFocus","lastClickedCell","publishCellFocusOut","setCellFocus","setColumnHeaderFocus","setColumnHeaderFilterFocus","setColumnGroupHeaderFocus","getColumnGroupHeaderFocus","moveFocusToRelativeCell","columnIndexToFocus","currentPageRows","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleCellDoubleClick","handleCellKeyDown","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","focusedColumnGroup","handleBlur","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useEventcallback","currentFocusedCell","focusApi","focusPrivateApi","enrichPageRowsWithPinnedRows","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","findNonRowSpannedCell","rowSpanScanDirection","rowSpanHiddenCells","nextRowIndex","nextRowId","useGridKeyboardNavigation","initialCurrentPageRows","headerFilteringEnabled","goToCell","closestColumnToUse","nextCellColSpanInfo","nonRowSpannedRowId","rowIndexRelativeToAllRows","goToHeader","goToHeaderFilter","goToGroupHeader","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","colIndexBefore","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","rowIndexBefore","checkIfCanStartEditing","useGridRowCount","rowCountState","paginationMeta","previousPageSize","paginationRowCountApi","exportedRowCount","restoredRowCount","isLastPage","useGridPaginationMeta","paginationMetaApi","newPaginationMeta","exportedPaginationMeta","restoredPaginationMeta","paginationStateInitializer","useGridPagination","preferencePanelStateInitializer","useGridPreferencesPanel","hideTimeout","immediateTimeout","hidePreferences","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","getDefaultCellValue","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","newParams","handleCellFocusOut","handleCellEditStart","startCellEditModeParams","handleCellEditStop","cellToFocusAfter","ignoreModifications","runIfNoFieldErrors","getCellMode","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","startCellEditMode","updateStateToStartCellEditMode","deleteValue","stopCellEditMode","updateStateToStopCellEditMode","finishCellEditMode","rowUpdate","handleError","errorThrown","finalRowUpdate","setCellEditingEditCellValue","skipValueParser","hasChanged","getRowWithUpdatedValuesFromCellEditing","editingApi","editingPrivateApi","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","hasFieldsWithErrors","fieldProps","handleCellFocusIn","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","handleRowEditStop","getRowMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","startRowEditMode","updateStateToStartRowEditMode","stopRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","getRowWithUpdatedValuesFromRowEditing","copyOfPrevRowModesModel","ids","editingStateInitializer","useGridEditing","debounceMap","isCellEditableProp","isCellEditable","maybeDebounce","runImmediately","debounces","runPendingEditCellValueMutation","debouncedField","runCallback","setEditCellValue","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","editingSharedApi","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","useGridRows","lastUpdateMs","lastRowCount","getRow","getRowIdProp","throttledRowsChange","throttle","run","throttleRemainingTimeMs","setRows","prevCache","updateRows","updateServerRows","setLoading","getRowModels","dataRows","getRowsCount","getAllRowIds","getRowIndexRelativeToVisibleRows","setRowChildrenExpansion","isExpanded","currentNode","newNode","getRowNode","getRowGroupChildren","groupId","applySorting","applyFiltering","groupNode","sortedRowIds","startIndex","childId","setRowIndex","targetIndex","allRows","oldIndex","updatedRows","replaceRows","rootGroup","rootGroupChildren","seenIds","removedRowId","rowTreeNodeConfig","dataRowIds","rowApi","rowProApi","rowProPrivateApi","groupRows","handleStrategyActivityChange","applyHydrateRowsProcessor","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","createFlatRowTree","updateFlatRowTree","actions","idsToRemoveFromRootGroup","idToDelete","idToInsert","flatRowTreeCreationMethod","useGridRowsPreProcessors","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","useGridRowSelection","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","checkboxSelection","disableRowSelectionOnClick","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","endId","startId","endIndex","setRowSelectionModel","isRowSelected","isRowSelectable","getSelectedRows","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectRowRange","allPagesRowIds","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","isStateControlled","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","useGridSorting","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortRowList","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","scrollIntoView","clientHeight","offsetHeight","elementBottom","useGridScroll","colRef","scrollToIndexes","scrollCoordinates","cellWidth","elementIndex","targetOffsetHeight","scroll","getScrollPosition","useGridEvents","lastArgs","throttled","EMPTY_SIZE","EMPTY_DIMENSIONS","dimensionsStateInitializer","useGridDimensions","errorShown","rootDimensionsRef","dimensionsState","groupHeaderHeight","headerFilterHeight","roundToDecimalPlaces","headersTotalHeight","w","savedSize","setSavedSize","debouncedSetSavedSize","previousSize","getRootDimensions","setDimensions","resize","computedStyle","newSize","areElementSizesEqual","getViewportPageSize","updateDimensions","pinnedRowsHeight","measureScrollbarSize","topContainerHeight","bottomContainerHeight","content","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","rowWidth","newDimensions","prevDimensions","apiPublic","apiPrivate","set","isFirstSizing","handleResize","scrollDiv","decimals","headerAlign","GridColumnGroupHeader","columnGroupsLookup","headerName","render","renderParams","elementId","GridColumnHeaderRow","useGridColumnHeaders","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","renderedColumns","isFirstColumn","siblingWithBorderingSeparator","getColumnHeadersRow","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","GridColumnHeadersRoot","GridBaseColumnHeaders","GridColumnHeaders","getInnerProps","getColumnGroupHeadersRows","MemoizedGridColumnHeaders","GridDetailPanels","GridPinnedRows","GridNoResultsOverlay","noResultsOverlayLabel","GridColumnUnsortedIcon","nextSortDirection","MUISelectOption","native","MUIMenuItem","iconSlots","materialSlots","MUICheckbox","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","computeSlots","overrides","groupForwardedProps","forwardedProps","useProps","allProps","DATA_GRID_FORCED_PROPS","DATA_GRID_PROPS_DEFAULT_VALUES","useDataGridProps","inProps","themedProps","useThemeProps","localeText","injectDefaultProps","rowsMetaStateInitializer","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","isResized","needsFirstMeasurement","existingBaseRowHeight","rowHeightFromUser","initialHeights","spacing","processedSizes","currentPageTotalHeight","otherSizes","getRowHeight","getRowInternalSizes","setRowHeight","debouncedHydrateRowsMeta","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","rowsMetaPrivateApi","useGridStatePersistence","exportState","restoreState","stateToRestore","useGridColumnSpanning","getCellColSpanInfo","resetColSpan","calculateColSpan","cellProps","calculateCellColSpan","columnSpanningPublicApi","columnSpanningPrivateApi","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","nextColumnIndex","nextColumn","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","haveSameParents","field1","field2","haveDifferentContainers","depthStructure","structure","newField","lastGroup","prevField","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","useGridColumnGrouping","getColumnGroupPath","getAllGroupDetails","handleColumnIndexChange","updateColumnGroupingState","createControllablePromise","reject","_resolve","_reject","trackFinger","currentTouchId","touch","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","computeOffsetToSeparator","flipResizeDirection","getResizeDirection","separator","preventClick","useColumnVirtualizationDisabled","excludeOutliers","inputValues","factor","q1","q3","iqr","deviation","extractColumnWidths","widthByField","widths","filteredWidths","iconContainer","menuContainer","paddingWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","createResizeRefs","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","headerFilterElement","div","finalWidth","updateProperty","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","prevClientX","prevClientY","storeReferences","xStart","handleResizeMouseUp","handleResizeMouseMove","handleTouchEnd","finger","handleTouchStart","cellSeparator","columnHeaderElement","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","columnVirtualizationDisabled","isAutosizingRef","autosizeColumns","userOptions","newColumns","total","remainingWidth","widthPerColumn","getUnprocessedRange","testRange","processedRange","isRowContextInitialized","isRowRangeUpdated","range1","range2","cellValue","valueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","DEFAULT_ROWS_TO_PROCESS","computeRowSpanningState","colDefs","rangeToProcess","resetState","hiddenCellOriginMap","spannedRowId","spannedRowIndex","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","isFilteringPending","useGridRowSpanning","lastRange","updateRowSpanningState","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","useDataGridComponent","DataGridRaw","GridBody","DataGrid","PropTypes","DataGridDetails_1","DataGridDetails","x_data_grid_1","setChecked","unionKeys","rest","colNames","ArrayValue_1","ArrayValue","Attributes_1","UriField_1","UriField","uri","baseUri","href","Attributes","MAX_FIELD_NAME_WIDTH","globalOmit","attributes","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","__jbrowsefmt","formattedAttributes","maxLabelWidth","BaseCard","FeatureDetails","react_error_boundary_1","ExpandMore_1","require$$9","require$$10","require$$11","coreDetails","defaultExpanded","Position","strandMap","loc","CoreDetails","formattedFeat","displayedDetails","coreRenderedDetails","BaseCoreDetails","BaseAttributes","mate","uniqueId","pm","session","ExtraPanel","BaseFeatureDetail","featureData","g","Attributes_2","makeStyles","SequenceTextArea","copied","setCopied","useState","showGaps","setShowGaps","showEmpty","setShowEmpty","disp","s1","s2","Button","copy","Checkbox2"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294]}