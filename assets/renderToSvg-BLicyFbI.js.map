{"version":3,"mappings":"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","names":["MinimapSVG","observer","model","scrollX","W","H","colWidth","numColumns","BAR_HEIGHT","H2","unit","left","right","s","e","fill","React","renderToSvg","opts","when","width","height","scrollY","exportType","theme","includeMinimap","render","offsetX","offsetY","Context","__vitePreload","n","Wrapper","MinimapWrapper","NullWrapper","renderToStaticMarkup","SvgWrapper","CoreRendering","clipId1","clipId2","treeAreaWidth","colorScheme","contrastScheme","colorContrast","ctx1","ctx2","renderBoxFeatureCanvasBlock","msaAreaWidth","renderTreeCanvas","renderMSABlock","children","minimapHeight"],"ignoreList":[],"sources":["../../../lib/dist/components/minimap/MinimapSVG.js","../../../lib/dist/renderToSvg.js"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nconst MinimapSVG = observer(({ model }) => {\n    const { scrollX, msaAreaWidth: W, minimapHeight: H, colWidth, numColumns, } = model;\n    const BAR_HEIGHT = 12;\n    const H2 = H - 12;\n    const unit = W / numColumns / colWidth;\n    const left = -scrollX;\n    const right = left + W;\n    const s = left * unit;\n    const e = right * unit;\n    const fill = 'rgba(66, 119, 127, 0.3)';\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"rect\", { x: 0, y: 0, width: W, height: BAR_HEIGHT, stroke: \"#555\", fill: \"none\" }),\n        React.createElement(\"rect\", { x: Math.max(0, s), y: 0, width: e - s, height: BAR_HEIGHT, fill: fill, stroke: \"#555\" }),\n        React.createElement(\"g\", { transform: `translate(0 ${BAR_HEIGHT})` },\n            React.createElement(\"polygon\", { fill: fill, points: [\n                    [e, 0],\n                    [s, 0],\n                    [0, H2],\n                    [W, H2],\n                ].toString() }))));\n});\nexport default MinimapSVG;\n//# sourceMappingURL=MinimapSVG.js.map","/* eslint-disable react-refresh/only-export-components */\nimport React from 'react';\nimport { renderToStaticMarkup } from '@jbrowse/core/util';\nimport { when } from 'mobx';\nimport MinimapSVG from './components/minimap/MinimapSVG';\nimport { renderBoxFeatureCanvasBlock } from './components/msa/renderBoxFeatureCanvasBlock';\nimport { renderMSABlock } from './components/msa/renderMSABlock';\nimport { renderTreeCanvas } from './components/tree/renderTreeCanvas';\nimport { colorContrast } from './util';\nexport async function renderToSvg(model, opts) {\n    await when(() => !!model.dataInitialized);\n    const { width, height, scrollX, scrollY } = model;\n    const { exportType, theme, includeMinimap } = opts;\n    if (exportType === 'entire') {\n        return render({\n            width: model.totalWidth + model.treeAreaWidth,\n            height: model.totalHeight,\n            theme,\n            model,\n            offsetY: 0,\n            offsetX: 0,\n            includeMinimap,\n        });\n    }\n    if (exportType === 'viewport') {\n        return render({\n            width,\n            height,\n            theme,\n            model,\n            offsetY: scrollY,\n            offsetX: -scrollX,\n            includeMinimap,\n        });\n    }\n    throw new Error('unknown export type');\n}\nasync function render({ width, height, offsetX, offsetY, theme, model, includeMinimap, }) {\n    const { Context } = await import('svgcanvas');\n    const Wrapper = includeMinimap ? MinimapWrapper : NullWrapper;\n    return renderToStaticMarkup(React.createElement(SvgWrapper, { width: width, height: height },\n        React.createElement(Wrapper, { model: model },\n            React.createElement(CoreRendering, { Context: Context, model: model, theme: theme, offsetX: offsetX, offsetY: offsetY, width: width, height: height }))));\n}\nfunction CoreRendering({ model, theme, width, height, offsetX, offsetY, Context, }) {\n    const clipId1 = 'tree';\n    const clipId2 = 'msa';\n    const { treeAreaWidth, colorScheme } = model;\n    const contrastScheme = colorContrast(colorScheme, theme);\n    const ctx1 = Context(width, height);\n    const ctx2 = Context(width, height);\n    renderBoxFeatureCanvasBlock({\n        ctx: ctx2,\n        offsetX,\n        offsetY,\n        model,\n        blockSizeYOverride: height,\n        highResScaleFactorOverride: 1,\n    });\n    const msaAreaWidth = width - treeAreaWidth;\n    renderTreeCanvas({\n        model,\n        offsetY,\n        ctx: ctx1,\n        theme,\n        blockSizeYOverride: height,\n        highResScaleFactorOverride: 1,\n    });\n    renderMSABlock({\n        model,\n        theme,\n        offsetY,\n        offsetX,\n        contrastScheme,\n        ctx: ctx2,\n        blockSizeXOverride: msaAreaWidth,\n        blockSizeYOverride: height,\n        highResScaleFactorOverride: 1,\n    });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"defs\", null,\n            React.createElement(\"clipPath\", { id: clipId1 },\n                React.createElement(\"rect\", { x: 0, y: 0, width: treeAreaWidth, height: height }))),\n        React.createElement(\"defs\", null,\n            React.createElement(\"clipPath\", { id: clipId2 },\n                React.createElement(\"rect\", { x: 0, y: 0, width: msaAreaWidth, height: height }))),\n        React.createElement(\"g\", { clipPath: `url(#${clipId1})`, dangerouslySetInnerHTML: { __html: ctx1.getSvg().innerHTML } }),\n        React.createElement(\"g\", { clipPath: `url(#${clipId2})`, transform: `translate(${treeAreaWidth} 0)`, dangerouslySetInnerHTML: { __html: ctx2.getSvg().innerHTML } })));\n}\nfunction MinimapWrapper({ model, children, }) {\n    const { minimapHeight, treeAreaWidth } = model;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"g\", { transform: `translate(${treeAreaWidth} 0)` },\n            React.createElement(MinimapSVG, { model: model })),\n        React.createElement(\"g\", { transform: `translate(0 ${minimapHeight})` }, children)));\n}\nfunction SvgWrapper({ width, height, children, }) {\n    return (React.createElement(\"svg\", { width: width, height: height, xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", viewBox: [0, 0, width, height].toString() }, children));\n}\nfunction NullWrapper({ children }) {\n    return children;\n}\n//# sourceMappingURL=renderToSvg.js.map"],"file":"assets/renderToSvg-BLicyFbI.js"}