{"version":3,"file":"SequenceTextArea-B7Z4SGHq.js","sources":["../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/prop-types/index.js","../../../node_modules/@mui/icons-material/ExpandMore.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/hooks.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SettingsDialog.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SequenceFeatureMenu.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SequenceTypeSelector.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/util.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/util.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/SequenceDisplay.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/CDNASequence.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/ProteinSequence.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/GenomicSequence.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/seqtypes/CDSSequence.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/SequencePanel.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SequenceDialog.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeatureDetails.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/HelpDialog.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeaturePanel.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/SequenceFeatureDetails/index.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/util.js","../../../node_modules/@mui/x-data-grid/components/GridApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiRef.js","../../../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../../../node_modules/@mui/x-data-grid/constants/envConstants.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/reselect/es/defaultMemoize.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/utils/fastMemo.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/utils/platform.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/columnResizeSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCellItem.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridToolbarContainer.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarColumnsButton.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarDensitySelector.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarQuickFilter.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbar.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridTheme.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-internals/EventManager/EventManager.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/utils/throttle.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/index.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/DataGridDetails.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/ArrayValue.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/UriField.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes.js","../../../node_modules/@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/index.js","../../../lib/dist/components/SequenceTextArea.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useFeatureSequence = useFeatureSequence;\nconst react_1 = require(\"react\");\nconst util_1 = require(\"../../util\");\nconst configuration_1 = require(\"../../configuration\");\nconst BPLIMIT = 500000;\nfunction useFeatureSequence(model, feature, upDownBp, forceLoad) {\n    const [sequence, setSequence] = (0, react_1.useState)();\n    const [error, setError] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        var _a;\n        if (!model) {\n            return;\n        }\n        const { assemblyManager, rpcManager } = (0, util_1.getSession)(model);\n        const [assemblyName] = ((_a = model.view) === null || _a === void 0 ? void 0 : _a.assemblyNames) || [];\n        async function fetchSeq(start, end, refName) {\n            const assembly = await assemblyManager.waitForAssembly(assemblyName);\n            if (!assembly) {\n                throw new Error('assembly not found');\n            }\n            const sessionId = 'getSequence';\n            const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n                adapterConfig: (0, configuration_1.getConf)(assembly, ['sequence', 'adapter']),\n                sessionId,\n                regions: [\n                    {\n                        start,\n                        end,\n                        refName: assembly.getCanonicalRefName(refName),\n                        assemblyName,\n                    },\n                ],\n            });\n            const [feat] = feats;\n            return (feat === null || feat === void 0 ? void 0 : feat.get('seq')) || '';\n        }\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;\n        (async () => {\n            try {\n                setError(undefined);\n                const { start, end, refName } = feature;\n                if (!forceLoad && end - start > BPLIMIT) {\n                    setSequence({\n                        error: `Genomic sequence larger than ${BPLIMIT}bp, use \"force load\" button to display`,\n                    });\n                }\n                else {\n                    const b = start - upDownBp;\n                    const e = end + upDownBp;\n                    const seq = await fetchSeq(start, end, refName);\n                    const up = await fetchSeq(Math.max(0, b), start, refName);\n                    const down = await fetchSeq(end, e, refName);\n                    setSequence({ seq, upstream: up, downstream: down });\n                }\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n    }, [feature, model, upDownBp, forceLoad]);\n    return { sequence, error };\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst ui_1 = require(\"@jbrowse/core/ui\");\nconst mui_1 = require(\"tss-react/mui\");\nconst mobx_react_1 = require(\"mobx-react\");\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    formElt: {\n        margin: theme.spacing(3),\n        width: 400,\n    },\n    dialogContent: {\n        width: '80em',\n    },\n    root: {\n        padding: 4,\n    },\n}));\nfunction TextField2(props) {\n    return (react_1.default.createElement(\"div\", null,\n        react_1.default.createElement(material_1.TextField, { ...props })));\n}\nfunction FormControl2({ children }) {\n    return (react_1.default.createElement(\"div\", null,\n        react_1.default.createElement(material_1.FormControl, null, children)));\n}\nconst SequenceFeatureSettingsDialog = (0, mobx_react_1.observer)(function ({ handleClose, model, }) {\n    const { classes } = useStyles();\n    const { upperCaseCDS } = model;\n    const [intronBp, setIntronBp] = (0, react_1.useState)(`${model.intronBp}`);\n    const [upDownBp, setUpDownBp] = (0, react_1.useState)(`${model.upDownBp}`);\n    const intronBpValid = !Number.isNaN(+intronBp);\n    const upDownBpValid = !Number.isNaN(+upDownBp);\n    return (react_1.default.createElement(ui_1.Dialog, { maxWidth: \"xl\", open: true, onClose: () => handleClose(), title: \"Feature sequence settings\" },\n        react_1.default.createElement(material_1.DialogContent, { className: classes.dialogContent },\n            react_1.default.createElement(TextField2, { label: \"Number of intronic bases around splice site to display\", className: classes.formElt, value: intronBp, helperText: !intronBpValid ? 'Not a number' : '', error: !intronBpValid, onChange: event => setIntronBp(event.target.value) }),\n            react_1.default.createElement(TextField2, { label: \"Number of bases up/down stream of feature to display\", className: classes.formElt, value: upDownBp, helperText: !upDownBpValid ? 'Not a number' : '', error: !upDownBpValid, onChange: event => setUpDownBp(event.target.value) }),\n            react_1.default.createElement(FormControl2, null,\n                react_1.default.createElement(material_1.FormLabel, null, \"Sequence capitalization\"),\n                react_1.default.createElement(material_1.RadioGroup, { value: upperCaseCDS ? 'cds' : 'unchanged', onChange: e => model.setUpperCaseCDS(e.target.value === 'cds') },\n                    react_1.default.createElement(material_1.FormControlLabel, { value: \"cds\", control: react_1.default.createElement(material_1.Radio, { className: classes.root, size: \"small\" }), label: \"Capitalize CDS and lower case everything else\" }),\n                    react_1.default.createElement(material_1.FormControlLabel, { value: \"unchanged\", control: react_1.default.createElement(material_1.Radio, { className: classes.root, size: \"small\" }), label: \"Capitalization from reference genome sequence\" })))),\n        react_1.default.createElement(material_1.DialogActions, null,\n            react_1.default.createElement(material_1.Button, { onClick: () => {\n                    model.setIntronBp(+intronBp);\n                    model.setUpDownBp(+upDownBp);\n                    handleClose();\n                }, disabled: !intronBpValid || !upDownBpValid, color: \"primary\", variant: \"contained\" }, \"Submit\"),\n            react_1.default.createElement(material_1.Button, { onClick: () => handleClose(), color: \"secondary\", autoFocus: true, variant: \"contained\" }, \"Cancel\"))));\n});\nexports.default = SequenceFeatureSettingsDialog;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\nconst copy_to_clipboard_1 = __importDefault(require(\"copy-to-clipboard\"));\nconst file_saver_1 = require(\"file-saver\");\n// locals\nconst CascadingMenuButton_1 = __importDefault(require(\"../../../ui/CascadingMenuButton\"));\n// icons\nconst MoreVert_1 = __importDefault(require(\"@mui/icons-material/MoreVert\"));\nconst Settings_1 = __importDefault(require(\"@mui/icons-material/Settings\"));\n// lazies\nconst SequenceFeatureSettingsDialog = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./SettingsDialog'))));\nconst SequenceFeatureMenu = (0, mobx_react_1.observer)(react_1.default.forwardRef(function SequenceFeatureMenu2({ model, extraItems = [] }, ref) {\n    if (typeof ref === 'function') {\n        throw new Error('needs a non function ref');\n    }\n    const [showSettings, setShowSettings] = (0, react_1.useState)(false);\n    const { showCoordinatesSetting, showGenomicCoordsOption } = model;\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(CascadingMenuButton_1.default, { menuItems: [\n                {\n                    label: 'Copy plaintext',\n                    onClick: () => {\n                        const r = ref === null || ref === void 0 ? void 0 : ref.current;\n                        if (r) {\n                            (0, copy_to_clipboard_1.default)(r.textContent || '', { format: 'text/plain' });\n                        }\n                    },\n                },\n                {\n                    label: 'Copy HTML',\n                    onClick: () => {\n                        const r = ref === null || ref === void 0 ? void 0 : ref.current;\n                        if (r) {\n                            (0, copy_to_clipboard_1.default)(r.outerHTML, { format: 'text/html' });\n                        }\n                    },\n                },\n                {\n                    label: 'Download plaintext',\n                    onClick: () => {\n                        const r = ref === null || ref === void 0 ? void 0 : ref.current;\n                        if (r) {\n                            (0, file_saver_1.saveAs)(new Blob([r.textContent || ''], {\n                                type: 'text/plain;charset=utf-8',\n                            }), 'sequence.txt');\n                        }\n                    },\n                },\n                {\n                    label: 'Download HTML',\n                    onClick: () => {\n                        const r = ref === null || ref === void 0 ? void 0 : ref.current;\n                        if (r) {\n                            (0, file_saver_1.saveAs)(new Blob([r.outerHTML || ''], {\n                                type: 'text/html;charset=utf-8',\n                            }), 'sequence.html');\n                        }\n                    },\n                },\n                ...extraItems,\n                {\n                    label: 'Show coordinates?',\n                    type: 'subMenu',\n                    subMenu: [\n                        {\n                            label: 'No coordinates',\n                            type: 'radio',\n                            checked: showCoordinatesSetting === 'none',\n                            onClick: () => model.setShowCoordinates('none'),\n                        },\n                        {\n                            label: 'Coordinates relative to feature start',\n                            type: 'radio',\n                            checked: showCoordinatesSetting === 'relative',\n                            onClick: () => model.setShowCoordinates('relative'),\n                        },\n                        ...(showGenomicCoordsOption\n                            ? [\n                                {\n                                    label: 'Coordinates relative to genome (only available for continuous genome based sequence types)',\n                                    type: 'radio',\n                                    checked: showCoordinatesSetting === 'genomic',\n                                    onClick: () => model.setShowCoordinates('genomic'),\n                                },\n                            ]\n                            : []),\n                    ],\n                },\n                {\n                    label: 'Settings',\n                    icon: Settings_1.default,\n                    onClick: () => setShowSettings(true),\n                },\n            ] },\n            react_1.default.createElement(MoreVert_1.default, null)),\n        showSettings ? (react_1.default.createElement(SequenceFeatureSettingsDialog, { model: model, handleClose: () => setShowSettings(false) })) : null));\n}));\nexports.default = SequenceFeatureMenu;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst mobx_react_1 = require(\"mobx-react\");\nconst mui_1 = require(\"tss-react/mui\");\nconst useStyles = (0, mui_1.makeStyles)()({\n    formControl: {\n        margin: 0,\n        marginLeft: 4,\n    },\n});\nconst SequenceTypeSelector = (0, mobx_react_1.observer)(function ({ model, }) {\n    const { classes } = useStyles();\n    const { intronBp, upDownBp, mode, hasCDS, hasExonOrCDS } = model;\n    return (react_1.default.createElement(material_1.FormControl, { className: classes.formControl },\n        react_1.default.createElement(material_1.Select, { size: \"small\", value: mode, onChange: event => model.setMode(event.target.value) }, Object.entries({\n            ...(hasCDS\n                ? {\n                    cds: 'CDS',\n                }\n                : {}),\n            ...(hasCDS\n                ? {\n                    protein: 'Protein',\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    cdna: 'cDNA',\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    gene: `Genomic w/ full introns`,\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    gene_updownstream: `Genomic w/ full introns +/- ${upDownBp}bp up+down stream`,\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    gene_collapsed_intron: `Genomic w/ ${intronBp}bp intron`,\n                }\n                : {}),\n            ...(hasExonOrCDS\n                ? {\n                    gene_updownstream_collapsed_intron: `Genomic w/ ${intronBp}bp intron +/- ${upDownBp}bp up+down stream `,\n                }\n                : {}),\n            ...(!hasExonOrCDS\n                ? {\n                    genomic: 'Genomic',\n                }\n                : {}),\n            ...(!hasExonOrCDS\n                ? {\n                    genomic_sequence_updownstream: `Genomic +/- ${upDownBp}bp up+down stream`,\n                }\n                : {}),\n        }).map(([key, val]) => (react_1.default.createElement(material_1.MenuItem, { key: key, value: key }, val))))));\n});\nexports.default = SequenceTypeSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stitch = stitch;\nexports.dedupe = dedupe;\nexports.revlist = revlist;\nexports.calculateUTRs = calculateUTRs;\nexports.calculateUTRs2 = calculateUTRs2;\nexports.ellipses = ellipses;\nfunction stitch(subfeats, sequence) {\n    return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('');\n}\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat) {\n    return `${feat.start}-${feat.end}`;\n}\n// filters if successive elements share same start/end\nfunction dedupe(list) {\n    return list.filter((item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]));\n}\nfunction revlist(list, seqlen) {\n    return list\n        .map(sub => ({\n        ...sub,\n        start: seqlen - sub.end,\n        end: seqlen - sub.start,\n    }))\n        .sort((a, b) => a.start - b.start);\n}\nfunction calculateUTRs(cds, exons) {\n    // checking length ensures the .at below are valid\n    if (!cds.length) {\n        return [];\n    }\n    const firstCds = cds.at(0);\n    const lastCds = cds.at(-1);\n    const firstCdsIdx = exons.findIndex(exon => exon.end >= firstCds.start && exon.start <= firstCds.start);\n    const lastCdsIdx = exons.findIndex(exon => exon.end >= lastCds.end && exon.start <= lastCds.end);\n    const lastCdsExon = exons[lastCdsIdx];\n    const firstCdsExon = exons[firstCdsIdx];\n    const fiveUTRs = [\n        ...exons.slice(0, firstCdsIdx),\n        { start: firstCdsExon.start, end: firstCds.start },\n    ].map(elt => ({ ...elt, type: 'five_prime_UTR' }));\n    const threeUTRs = [\n        { start: lastCds.end, end: lastCdsExon.end },\n        ...exons.slice(lastCdsIdx + 1),\n    ].map(elt => ({ ...elt, type: 'three_prime_UTR' }));\n    return [...fiveUTRs, ...threeUTRs];\n}\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nfunction calculateUTRs2(cds, parentFeat) {\n    if (!cds.length) {\n        return [];\n    }\n    const firstCds = cds.at(0);\n    const lastCds = cds.at(-1);\n    const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(elt => ({ ...elt, type: 'five_prime_UTR' }));\n    const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n        ...elt,\n        type: 'three_prime_UTR',\n    }));\n    return [...fiveUTRs, ...threeUTRs];\n}\nfunction ellipses(slug) {\n    return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.genomeColor = exports.updownstreamColor = exports.cdsColor = exports.proteinColor = exports.utrColor = exports.intronColor = void 0;\nexports.splitString = splitString;\n// note that these are currently put into the style section instead of being\n// defined in classes to aid copy and paste to an external document e.g. word\nexports.intronColor = undefined;\nexports.utrColor = 'rgb(200,240,240)';\nexports.proteinColor = 'rgb(220,160,220)';\nexports.cdsColor = 'rgb(220,220,180)';\nexports.updownstreamColor = 'rgba(250,200,200)';\nexports.genomeColor = 'rgb(200,280,200)';\nfunction splitString({ str, charactersPerRow, showCoordinates, currRemainder = 0, splitSize = 10, }) {\n    var _a;\n    const numChunks = Math.ceil(str.length / charactersPerRow);\n    const chunks = new Array(numChunks);\n    let splitStart = currRemainder % 10;\n    let iter = 0;\n    let offset = 0;\n    for (; iter < numChunks + 1; ++iter) {\n        const inc = iter === 0 ? charactersPerRow - currRemainder : charactersPerRow;\n        const r = str.slice(offset, offset + inc);\n        if (!r) {\n            break;\n        }\n        if (showCoordinates) {\n            let res = '';\n            for (let i = 0, j = splitStart; i < r.length; i++, j++) {\n                // note: this adds a space at the start but it causes trouble to try to\n                // say e.g. j%splitSize==0 && j to try to only add non-zero spaces\n                if (j % splitSize === 0) {\n                    res += ' ';\n                    j = 0;\n                }\n                res += r[i];\n            }\n            if (res) {\n                chunks[iter] = res;\n            }\n        }\n        else {\n            chunks[iter] = r;\n        }\n        splitStart = 0; // after newline, reset\n        offset += inc;\n    }\n    return {\n        segments: chunks,\n        remainder: ((((_a = chunks.at(-1)) === null || _a === void 0 ? void 0 : _a.replaceAll(' ', '').length) || 0) +\n            (iter < 2 ? currRemainder : 0)) %\n            charactersPerRow,\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\nconst SequenceDisplay = (0, mobx_react_1.observer)(function ({ chunks, start, color, strand = 1, coordStart = start, model, }) {\n    const { charactersPerRow, showCoordinates } = model;\n    return chunks.map((chunk, idx) => {\n        var _a;\n        const f = coordStart - (start % charactersPerRow);\n        const prefix = (idx == 0 && start % charactersPerRow == 0) || idx > 0\n            ? `${f + idx * strand * charactersPerRow}`.padStart(4) + '   '\n            : '';\n        const postfix = idx === chunks.length - 1 &&\n            (((_a = chunks.at(-1)) === null || _a === void 0 ? void 0 : _a.replaceAll(' ', '').length) || 0) +\n                (idx === 0 ? start % charactersPerRow : 0) !==\n                charactersPerRow\n            ? null\n            : showCoordinates\n                ? ' \\n'\n                : '';\n        return (react_1.default.createElement(react_1.default.Fragment, { key: `${chunk}-${idx}` },\n            showCoordinates ? prefix : null,\n            react_1.default.createElement(\"span\", { style: { background: color } }, chunk),\n            postfix));\n    });\n});\nexports.default = SequenceDisplay;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\nconst util_1 = require(\"../util\");\nconst SequenceDisplay_1 = __importDefault(require(\"./SequenceDisplay\"));\nconst CDNASequence = (0, mobx_react_1.observer)(function ({ utr, cds, exons, sequence, upstream, downstream, feature, includeIntrons, collapseIntron, model, }) {\n    var _a;\n    const { upperCaseCDS, intronBp, charactersPerRow, showCoordinates, showCoordinatesSetting, } = model;\n    const hasCds = cds.length > 0;\n    const chunks = (cds.length ? [...cds, ...utr].sort((a, b) => a.start - b.start) : exons).filter(f => f.start !== f.end);\n    const toLower = (s) => (upperCaseCDS ? s.toLowerCase() : s);\n    const toUpper = (s) => (upperCaseCDS ? s.toUpperCase() : s);\n    const strand = feature.strand === -1 ? -1 : 1;\n    const fullGenomicCoordinates = showCoordinatesSetting === 'genomic' && includeIntrons && !collapseIntron;\n    const mult = fullGenomicCoordinates ? strand : 1;\n    let coordStart = fullGenomicCoordinates\n        ? strand > 0\n            ? feature.start + 1 - ((upstream === null || upstream === void 0 ? void 0 : upstream.length) || 0)\n            : feature.end + ((upstream === null || upstream === void 0 ? void 0 : upstream.length) || 0)\n        : 0;\n    let currStart = 0;\n    let currRemainder = 0;\n    let upstreamChunk = null;\n    if (upstream) {\n        const { segments, remainder } = (0, util_1.splitString)({\n            str: toLower(upstream),\n            charactersPerRow,\n            showCoordinates,\n        });\n        upstreamChunk = (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_1.updownstreamColor, strand: mult, start: currStart, coordStart: coordStart, chunks: segments }));\n        currRemainder = remainder;\n        currStart = currStart + upstream.length * mult;\n        coordStart = coordStart + upstream.length * mult;\n    }\n    const middleChunks = [];\n    for (let idx = 0; idx < chunks.length; idx++) {\n        const chunk = chunks[idx];\n        const intron = sequence.slice(chunk.end, (_a = chunks[idx + 1]) === null || _a === void 0 ? void 0 : _a.start);\n        const s = sequence.slice(chunk.start, chunk.end);\n        const { segments, remainder } = (0, util_1.splitString)({\n            str: hasCds\n                ? chunk.type === 'CDS'\n                    ? toUpper(s)\n                    : toLower(s)\n                : toUpper(s),\n            charactersPerRow,\n            currRemainder,\n            showCoordinates,\n        });\n        middleChunks.push(react_1.default.createElement(SequenceDisplay_1.default, { key: JSON.stringify(chunk) + '-mid', model: model, color: chunk.type === 'CDS' ? util_1.cdsColor : util_1.utrColor, strand: mult, start: currStart, coordStart: coordStart, chunks: segments }));\n        currRemainder = remainder;\n        currStart = currStart + s.length * mult;\n        coordStart = coordStart + s.length * mult;\n        if (intron && includeIntrons && idx < chunks.length - 1) {\n            const str = toLower(collapseIntron && intron.length > intronBp * 2\n                ? `${intron.slice(0, intronBp)}...${intron.slice(-intronBp)}`\n                : intron);\n            const { segments, remainder } = (0, util_1.splitString)({\n                str,\n                charactersPerRow,\n                currRemainder,\n                showCoordinates,\n            });\n            if (segments.length) {\n                middleChunks.push(react_1.default.createElement(SequenceDisplay_1.default, { key: JSON.stringify(chunk) + '-intron', model: model, strand: mult, coordStart: coordStart, start: currStart, chunks: segments }));\n                currRemainder = remainder;\n                currStart = currStart + str.length * mult;\n                coordStart = coordStart + str.length * mult;\n            }\n        }\n    }\n    let downstreamChunk = null;\n    if (downstream) {\n        const { segments } = (0, util_1.splitString)({\n            str: toLower(downstream),\n            charactersPerRow,\n            currRemainder,\n            showCoordinates,\n        });\n        downstreamChunk = (react_1.default.createElement(SequenceDisplay_1.default, { start: currStart, model: model, strand: mult, chunks: segments, coordStart: coordStart, color: util_1.updownstreamColor }));\n    }\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        upstreamChunk,\n        middleChunks,\n        downstreamChunk));\n});\nexports.default = CDNASequence;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst util_1 = require(\"../../util\");\nconst util_2 = require(\"../util\");\nconst SequenceDisplay_1 = __importDefault(require(\"./SequenceDisplay\"));\nconst ProteinSequence = (0, mobx_react_1.observer)(function ({ cds, sequence, codonTable, model, }) {\n    const { charactersPerRow, showCoordinates } = model;\n    const str = (0, util_1.stitch)(cds, sequence);\n    let protein = '';\n    for (let i = 0; i < str.length; i += 3) {\n        // use & symbol for undefined codon, or partial slice\n        protein += codonTable[str.slice(i, i + 3)] || '&';\n    }\n    const { segments } = (0, util_2.splitString)({\n        str: protein,\n        charactersPerRow,\n        showCoordinates,\n    });\n    return (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_2.proteinColor, chunks: segments, start: 0 }));\n});\nexports.default = ProteinSequence;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst util_1 = require(\"../util\");\nconst SequenceDisplay_1 = __importDefault(require(\"./SequenceDisplay\"));\nconst GenomicSequence = (0, mobx_react_1.observer)(function ({ sequence, upstream, feature, downstream, model, }) {\n    const { charactersPerRow, showCoordinatesSetting, showCoordinates } = model;\n    let currStart = 0;\n    let upstreamChunk = null;\n    let currRemainder = 0;\n    const strand = feature.strand === -1 ? -1 : 1;\n    const fullGenomicCoordinates = showCoordinatesSetting === 'genomic';\n    const mult = fullGenomicCoordinates ? strand : 1;\n    let coordStart = fullGenomicCoordinates\n        ? strand > 0\n            ? feature.start + 1 - ((upstream === null || upstream === void 0 ? void 0 : upstream.length) || 0)\n            : feature.end + ((upstream === null || upstream === void 0 ? void 0 : upstream.length) || 0)\n        : 0;\n    if (upstream) {\n        const { segments, remainder } = (0, util_1.splitString)({\n            str: upstream,\n            charactersPerRow,\n            showCoordinates,\n        });\n        upstreamChunk = (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_1.updownstreamColor, start: currStart, coordStart: coordStart, chunks: segments }));\n        currRemainder = remainder;\n        currStart = currStart + upstream.length * mult;\n        coordStart = coordStart + upstream.length * mult;\n    }\n    const { segments, remainder } = (0, util_1.splitString)({\n        str: sequence,\n        charactersPerRow,\n        showCoordinates,\n        currRemainder,\n    });\n    const middleChunk = (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_1.genomeColor, start: currStart, coordStart: coordStart, chunks: segments }));\n    currRemainder = remainder;\n    currStart += sequence.length * mult;\n    coordStart = coordStart + sequence.length * mult;\n    let downstreamChunk = null;\n    if (downstream) {\n        const { segments } = (0, util_1.splitString)({\n            str: downstream,\n            charactersPerRow,\n            currRemainder,\n            showCoordinates,\n        });\n        downstreamChunk = (react_1.default.createElement(SequenceDisplay_1.default, { start: currStart, model: model, chunks: segments, coordStart: coordStart, color: util_1.updownstreamColor }));\n    }\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        upstreamChunk,\n        middleChunk,\n        downstreamChunk));\n});\nexports.default = GenomicSequence;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst util_1 = require(\"../util\");\nconst util_2 = require(\"../../util\");\nconst SequenceDisplay_1 = __importDefault(require(\"./SequenceDisplay\"));\nconst CDSSequence = (0, mobx_react_1.observer)(function ({ cds, sequence, model, }) {\n    const { charactersPerRow, showCoordinates } = model;\n    const { segments } = (0, util_1.splitString)({\n        str: (0, util_2.stitch)(cds, sequence),\n        charactersPerRow,\n        showCoordinates,\n    });\n    return (react_1.default.createElement(SequenceDisplay_1.default, { model: model, color: util_1.cdsColor, chunks: segments, start: 0 }));\n});\nexports.default = CDSSequence;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst util_1 = require(\"../../util\");\nconst util_2 = require(\"../util\");\n// panel types\nconst CDNASequence_1 = __importDefault(require(\"./seqtypes/CDNASequence\"));\nconst ProteinSequence_1 = __importDefault(require(\"./seqtypes/ProteinSequence\"));\nconst GenomicSequence_1 = __importDefault(require(\"./seqtypes/GenomicSequence\"));\nconst CDSSequence_1 = __importDefault(require(\"./seqtypes/CDSSequence\"));\nfunction getStrand(strand) {\n    if (strand === -1) {\n        return '(-)';\n    }\n    else if (strand === 1) {\n        return '(+)';\n    }\n    else {\n        return '';\n    }\n}\nfunction WordWrap({ children }) {\n    return (react_1.default.createElement(\"pre\", { style: {\n            /* raw styles instead of className so that html copy works */\n            fontFamily: 'monospace',\n            color: 'black',\n            fontSize: 11,\n        } }, children));\n}\nfunction NoWordWrap({ children }) {\n    return (react_1.default.createElement(\"div\", { style: {\n            /* raw styles instead of className so that html copy works */\n            fontFamily: 'monospace',\n            color: 'black',\n            fontSize: 11,\n            maxWidth: 600,\n            whiteSpace: 'wrap',\n            wordBreak: 'break-all',\n        } }, children));\n}\nconst SequencePanel = (0, mobx_react_1.observer)(react_1.default.forwardRef(function S(props, ref) {\n    const { model, feature } = props;\n    const { showCoordinates, mode } = model;\n    let { sequence: { seq, upstream = '', downstream = '' }, } = props;\n    const { subfeatures = [] } = feature;\n    const children = subfeatures\n        .sort((a, b) => a.start - b.start)\n        .map(sub => ({\n        ...sub,\n        start: sub.start - feature.start,\n        end: sub.end - feature.start,\n    }));\n    // we filter duplicate entries in cds and exon lists duplicate entries\n    // may be rare but was seen in Gencode v36 track NCList, likely a bug\n    // on GFF3 or probably worth ignoring here (produces broken protein\n    // translations if included)\n    //\n    // position 1:224,800,006..225,203,064 gene ENSG00000185842.15 first\n    // transcript ENST00000445597.6\n    //\n    // http://localhost:3000/?config=test_data%2Fconfig.json&session=share-FUl7G1isvF&password=HXh5Y\n    let cds = (0, util_2.dedupe)(children.filter(sub => sub.type === 'CDS'));\n    let utr = (0, util_2.dedupe)(children.filter(sub => { var _a; return (_a = sub.type) === null || _a === void 0 ? void 0 : _a.match(/utr/i); }));\n    let exons = (0, util_2.dedupe)(children.filter(sub => sub.type === 'exon'));\n    if (!utr.length && cds.length && exons.length) {\n        utr = (0, util_2.calculateUTRs)(cds, exons);\n    }\n    if (!utr.length && cds.length && !exons.length) {\n        utr = (0, util_2.calculateUTRs2)(cds, {\n            start: 0,\n            end: feature.end - feature.start,\n            type: 'gene',\n        });\n    }\n    if (feature.strand === -1) {\n        // doing this in a single assignment is needed because downstream and\n        // upstream are swapped so this avoids a temp variable\n        ;\n        [seq, upstream, downstream] = [\n            (0, util_1.revcom)(seq),\n            (0, util_1.revcom)(downstream),\n            (0, util_1.revcom)(upstream),\n        ];\n        cds = (0, util_2.revlist)(cds, seq.length);\n        exons = (0, util_2.revlist)(exons, seq.length);\n        utr = (0, util_2.revlist)(utr, seq.length);\n    }\n    const codonTable = (0, util_1.generateCodonTable)(util_1.defaultCodonTable);\n    const Container = showCoordinates ? WordWrap : NoWordWrap;\n    return (react_1.default.createElement(\"div\", { \"data-testid\": \"sequence_panel\", ref: ref, style: { maxHeight: 300, overflow: 'auto' } },\n        react_1.default.createElement(Container, null,\n            react_1.default.createElement(\"div\", { style: { background: 'white' } }, `>${[\n                (feature.name || feature.id) + '-' + mode,\n                `${feature.refName}:${(0, util_1.toLocale)(feature.start + 1)}-${(0, util_1.toLocale)(feature.end)}${getStrand(feature.strand)}`,\n                mode.endsWith('updownstream')\n                    ? `+/- ${(0, util_1.toLocale)(model.upDownBp)} up/downstream bp`\n                    : '',\n            ]\n                .filter(f => !!f)\n                .join(' ')}\\n`),\n            mode === 'genomic' ? (react_1.default.createElement(GenomicSequence_1.default, { feature: feature, model: model, sequence: seq })) : mode === 'genomic_sequence_updownstream' ? (react_1.default.createElement(GenomicSequence_1.default, { model: model, feature: feature, sequence: seq, upstream: upstream, downstream: downstream })) : mode === 'cds' ? (react_1.default.createElement(CDSSequence_1.default, { model: model, cds: cds, sequence: seq })) : mode === 'cdna' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, utr: utr, sequence: seq })) : mode === 'protein' ? (react_1.default.createElement(ProteinSequence_1.default, { model: model, cds: cds, codonTable: codonTable, sequence: seq })) : mode === 'gene' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, utr: utr, sequence: seq, includeIntrons: true })) : mode === 'gene_collapsed_intron' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, sequence: seq, utr: utr, includeIntrons: true, collapseIntron: true })) : mode === 'gene_updownstream' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, sequence: seq, utr: utr, upstream: upstream, downstream: downstream, includeIntrons: true })) : mode === 'gene_updownstream_collapsed_intron' ? (react_1.default.createElement(CDNASequence_1.default, { model: model, exons: exons, feature: feature, cds: cds, sequence: seq, utr: utr, upstream: upstream, downstream: downstream, includeIntrons: true, collapseIntron: true })) : (react_1.default.createElement(\"div\", null, \"Unknown type\")))));\n}));\nexports.default = SequencePanel;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst ui_1 = require(\"@jbrowse/core/ui\");\nconst mui_1 = require(\"tss-react/mui\");\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst hooks_1 = require(\"../hooks\");\nconst SequencePanel_1 = __importDefault(require(\"../SequencePanel\"));\nconst SequenceFeatureMenu_1 = __importDefault(require(\"./SequenceFeatureMenu\"));\nconst SequenceTypeSelector_1 = __importDefault(require(\"./SequenceTypeSelector\"));\nconst useStyles = (0, mui_1.makeStyles)()({\n    dialogContent: {\n        width: '80em',\n    },\n    formControl: {\n        margin: 0,\n        marginLeft: 4,\n    },\n});\nconst SequenceDialog = (0, mobx_react_1.observer)(function ({ handleClose, model, feature, }) {\n    const { sequenceFeatureDetails } = model;\n    const { upDownBp } = sequenceFeatureDetails;\n    const { classes } = useStyles();\n    const seqPanelRef = (0, react_1.useRef)(null);\n    const [force, setForce] = (0, react_1.useState)(false);\n    const { sequence, error } = (0, hooks_1.useFeatureSequence)(model, feature, upDownBp, force);\n    return (react_1.default.createElement(ui_1.Dialog, { maxWidth: \"xl\", open: true, onClose: () => handleClose(), title: \"Sequence view\" },\n        react_1.default.createElement(material_1.DialogContent, { className: classes.dialogContent },\n            react_1.default.createElement(\"div\", null,\n                react_1.default.createElement(SequenceTypeSelector_1.default, { model: sequenceFeatureDetails }),\n                react_1.default.createElement(SequenceFeatureMenu_1.default, { ref: seqPanelRef, model: sequenceFeatureDetails })),\n            react_1.default.createElement(\"div\", null,\n                feature.type === 'gene' ? (react_1.default.createElement(material_1.Typography, null, \"Note: inspect subfeature sequences for protein/CDS computations\")) : null,\n                error ? (react_1.default.createElement(ui_1.ErrorMessage, { error: error })) : !sequence ? (react_1.default.createElement(ui_1.LoadingEllipses, null)) : sequence ? ('error' in sequence ? (react_1.default.createElement(react_1.default.Fragment, null,\n                    react_1.default.createElement(material_1.Typography, { color: \"error\" }, sequence.error),\n                    react_1.default.createElement(material_1.Button, { variant: \"contained\", color: \"inherit\", onClick: () => setForce(true) }, \"Force load\"))) : (react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },\n                    react_1.default.createElement(SequencePanel_1.default, { ref: seqPanelRef, feature: feature, sequence: sequence, model: sequenceFeatureDetails })))) : (react_1.default.createElement(material_1.Typography, null, \"No sequence found\")))),\n        react_1.default.createElement(material_1.DialogActions, null,\n            react_1.default.createElement(material_1.Button, { onClick: () => handleClose(), variant: \"contained\" }, \"Close\"))));\n});\nexports.default = SequenceDialog;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst mobx_react_1 = require(\"mobx-react\");\n// locals\nconst hooks_1 = require(\"./hooks\");\nconst ui_1 = require(\"../../ui\");\n// icons\nconst SequenceFeatureMenu_1 = __importDefault(require(\"./dialogs/SequenceFeatureMenu\"));\nconst SequenceTypeSelector_1 = __importDefault(require(\"./dialogs/SequenceTypeSelector\"));\n// lazies\nconst SequencePanel = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./SequencePanel'))));\nconst SequenceDialog = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./dialogs/SequenceDialog'))));\n// set the key on this component to feature.id to clear state after new feature\n// is selected\nconst SequenceFeatureDetails = (0, mobx_react_1.observer)(function ({ model, feature, }) {\n    const { sequenceFeatureDetails } = model;\n    const { upDownBp } = sequenceFeatureDetails;\n    const seqPanelRef = (0, react_1.useRef)(null);\n    const [openInDialog, setOpenInDialog] = (0, react_1.useState)(false);\n    const [force, setForce] = (0, react_1.useState)(false);\n    const { sequence, error } = (0, hooks_1.useFeatureSequence)(model, feature, upDownBp, force);\n    (0, react_1.useEffect)(() => {\n        sequenceFeatureDetails.setFeature(feature);\n    }, [sequenceFeatureDetails, feature]);\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(\"div\", null,\n            react_1.default.createElement(SequenceTypeSelector_1.default, { model: sequenceFeatureDetails }),\n            react_1.default.createElement(SequenceFeatureMenu_1.default, { ref: seqPanelRef, model: sequenceFeatureDetails, extraItems: [\n                    {\n                        label: 'Open in dialog',\n                        onClick: () => {\n                            // this is given a setTimeout because it allows the menu to\n                            // close before dialog opens\n                            setTimeout(() => setOpenInDialog(true), 1);\n                        },\n                    },\n                ] })),\n        openInDialog ? (react_1.default.createElement(\"div\", null,\n            \"Open in dialog...\",\n            react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },\n                react_1.default.createElement(SequenceDialog, { model: model, feature: feature, handleClose: () => setOpenInDialog(false) })))) : (react_1.default.createElement(\"div\", null,\n            feature.type === 'gene' ? (react_1.default.createElement(material_1.Typography, null, \"Note: inspect subfeature sequences for protein/CDS computations\")) : null,\n            error ? (react_1.default.createElement(ui_1.ErrorMessage, { error: error })) : !sequence ? (react_1.default.createElement(ui_1.LoadingEllipses, null)) : sequence ? ('error' in sequence ? (react_1.default.createElement(react_1.default.Fragment, null,\n                react_1.default.createElement(material_1.Typography, { color: \"error\" }, sequence.error),\n                react_1.default.createElement(material_1.Button, { variant: \"contained\", color: \"inherit\", onClick: () => setForce(true) }, \"Force load\"))) : (react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },\n                react_1.default.createElement(SequencePanel, { ref: seqPanelRef, feature: feature, sequence: sequence, model: sequenceFeatureDetails })))) : (react_1.default.createElement(material_1.Typography, null, \"No sequence found\"))))));\n});\nexports.default = SequenceFeatureDetails;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = HelpDialog;\nconst react_1 = __importDefault(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst ui_1 = require(\"@jbrowse/core/ui\");\n// icons\nconst Settings_1 = __importDefault(require(\"@mui/icons-material/Settings\"));\nfunction HelpDialog({ handleClose, }) {\n    return (react_1.default.createElement(ui_1.Dialog, { maxWidth: \"xl\", open: true, onClose: () => handleClose(), title: \"Feature sequence panel help\" },\n        react_1.default.createElement(material_1.DialogContent, null,\n            react_1.default.createElement(material_1.Typography, { paragraph: true }, \"The \\\"Feature sequence\\\" panel shows the underlying genomic sequence for a given feature, fetched from the reference genome.\"),\n            react_1.default.createElement(material_1.Typography, null, \"For gene features, this panel does special calculations to e.g. stitch together the coding sequence, the options are:\"),\n            react_1.default.createElement(\"ul\", null,\n                react_1.default.createElement(\"li\", null, \"CDS - shows the stitched together CDS sequences\"),\n                react_1.default.createElement(\"li\", null, \"Protein - the translated coding sequence, with the \\\"standard\\\" genetic code\"),\n                react_1.default.createElement(\"li\", null, \"cDNA - shows the 'copy DNA' of transcript, formed from exon sequences\"),\n                react_1.default.createElement(\"li\", null, \"Genomic w/ introns +/- Nbp up+down stream - the sequence underlying the entire gene including including introns, with UTR and CDS highlighted\")),\n            react_1.default.createElement(material_1.Typography, { paragraph: true }, \"For other feature types, the options are:\"),\n            react_1.default.createElement(\"ul\", null,\n                react_1.default.createElement(\"li\", null, \"Genomic +/- Nbp up+down stream - the reference genome sequence underlying the feature, with the up and downstream sequence\")),\n            react_1.default.createElement(material_1.Typography, null,\n                \"Note 1: you can use the \\\"gear icon\\\" \",\n                react_1.default.createElement(Settings_1.default, null),\n                \" to edit the number of bp displayed up/downstream and in the intron region\"),\n            react_1.default.createElement(material_1.Typography, null, \"Note 2: The 'Copy HTML' function retains the colors from the sequence panel but cannot be pasted into some programs like notepad that only expect plain text.\")),\n        react_1.default.createElement(material_1.DialogActions, null,\n            react_1.default.createElement(material_1.Button, { onClick: () => handleClose(), autoFocus: true, variant: \"contained\" }, \"Close\"))));\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst mobx_react_1 = require(\"mobx-react\");\nconst mui_1 = require(\"tss-react/mui\");\n// locals\nconst ui_1 = require(\"../../ui\");\nconst util_1 = require(\"../../util\");\n// icons\nconst Help_1 = __importDefault(require(\"@mui/icons-material/Help\"));\n// lazies\nconst SequenceFeatureDetails = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./SequenceFeatureDetails'))));\nconst HelpDialog = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./dialogs/HelpDialog'))));\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    formControl: {\n        margin: 0,\n    },\n    container: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n    },\n}));\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nconst SequenceFeaturePanel = (0, mobx_react_1.observer)(function ({ model, feature, }) {\n    const { classes } = useStyles();\n    const [shown, setShown] = (0, react_1.useState)(false);\n    return model ? (react_1.default.createElement(\"div\", { className: classes.container },\n        react_1.default.createElement(material_1.FormControl, { className: classes.formControl },\n            react_1.default.createElement(material_1.Button, { variant: \"contained\", onClick: () => setShown(!shown) }, shown ? 'Hide feature sequence' : 'Show feature sequence')),\n        react_1.default.createElement(material_1.IconButton, { onClick: () => (0, util_1.getSession)(model).queueDialog(handleClose => [\n                HelpDialog,\n                { handleClose },\n            ]) },\n            react_1.default.createElement(Help_1.default, null)),\n        shown ? (react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },\n            react_1.default.createElement(SequenceFeatureDetails, { key: feature.uniqueId, model: model, feature: feature }))) : null)) : null;\n});\nexports.default = SequenceFeaturePanel;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar SequenceFeaturePanel_1 = require(\"./SequenceFeaturePanel\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return __importDefault(SequenceFeaturePanel_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FieldName;\nconst react_1 = __importDefault(require(\"react\"));\nconst material_1 = require(\"@mui/material\");\nconst mui_1 = require(\"tss-react/mui\");\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    fieldDescription: {\n        '&:hover': {\n            background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n        },\n    },\n    fieldName: {\n        wordBreak: 'break-all',\n        minWidth: 90,\n        borderBottom: '1px solid #0003',\n        fontSize: 12,\n        background: theme.palette.action.disabledBackground,\n        marginRight: theme.spacing(1),\n        padding: theme.spacing(0.5),\n    },\n}));\nfunction FieldName({ description, name, width, prefix = [], }) {\n    const { classes, cx } = useStyles();\n    const val = [...prefix, name].join('.');\n    return description ? (react_1.default.createElement(material_1.Tooltip, { title: description, placement: \"left\" },\n        react_1.default.createElement(\"div\", { className: cx(classes.fieldDescription, classes.fieldName) }, val))) : (react_1.default.createElement(\"div\", { className: classes.fieldName, style: { width: width } }, val));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicValue;\nconst react_1 = __importDefault(require(\"react\"));\nconst mui_1 = require(\"tss-react/mui\");\nconst is_object_1 = __importDefault(require(\"is-object\"));\nconst material_1 = require(\"@mui/material\");\n// locals\nconst ui_1 = require(\"../../ui\");\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    fieldValue: {\n        wordBreak: 'break-word',\n        maxHeight: 300,\n        fontSize: 12,\n        padding: theme.spacing(0.5),\n        overflow: 'auto',\n    },\n}));\nfunction BasicValue({ value }) {\n    const { classes } = useStyles();\n    const isLink = `${value}`.match(/^https?:\\/\\//);\n    return (react_1.default.createElement(\"div\", { className: classes.fieldValue }, react_1.default.isValidElement(value) ? (value) : isLink ? (react_1.default.createElement(material_1.Link, { href: `${value}` }, `${value}`)) : (react_1.default.createElement(ui_1.SanitizedHTML, { html: (0, is_object_1.default)(value) ? JSON.stringify(value) : String(value) }))));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SimpleField;\nconst react_1 = __importDefault(require(\"react\"));\nconst mui_1 = require(\"tss-react/mui\");\nconst FieldName_1 = __importDefault(require(\"./FieldName\"));\nconst BasicValue_1 = __importDefault(require(\"./BasicValue\"));\nconst useStyles = (0, mui_1.makeStyles)()({\n    field: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n});\nfunction SimpleField({ name, value, description, prefix, width, }) {\n    const { classes } = useStyles();\n    return value !== null && value !== undefined ? (react_1.default.createElement(\"div\", { className: classes.field },\n        react_1.default.createElement(FieldName_1.default, { prefix: prefix, description: description, name: name, width: width }),\n        react_1.default.createElement(BasicValue_1.default, { value: value }))) : null;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmpty = isEmpty;\nexports.generateTitle = generateTitle;\nexports.generateMaxWidth = generateMaxWidth;\nexports.accessNested = accessNested;\nconst is_object_1 = __importDefault(require(\"is-object\"));\nconst util_1 = require(\"../../util\");\nconst util_2 = require(\"../util\");\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction generateTitle(name, id, type) {\n    return [(0, util_2.ellipses)(`${name}` || `${id}`), `${type}`]\n        .filter(f => !!f)\n        .join(' - ');\n}\nfunction generateMaxWidth(array, prefix) {\n    return (Math.ceil((0, util_1.max)(array.map(key => (0, util_1.measureText)([...prefix, key[0]].join('.'), 12)))) + 10);\n}\n// pick using a path from an object, similar to _.get from lodash with special\n// logic for Descriptions from e.g. VCF headers\n//\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nfunction accessNested(arr, obj = {}) {\n    let obj2 = obj;\n    arr.forEach(elt => {\n        if ((0, is_object_1.default)(obj2)) {\n            obj2 = obj2[elt];\n        }\n    });\n    return typeof obj2 === 'string'\n        ? obj2\n        : (0, is_object_1.default)(obj2) && typeof (obj2 === null || obj2 === void 0 ? void 0 : obj2.Description) === 'string'\n            ? obj2.Description\n            : undefined;\n}\n","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import * as React from 'react';\n/**\n * Hook that instantiate a [[GridApiRef]].\n */\nexport const useGridApiRef = () => React.useRef({});","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nexport const GRID_EXPERIMENTAL_ENABLED = false;","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderTop', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { warnOnce } from '../../internals/utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","export const gridDimensionsSelector = state => state.dimensions;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { warnOnce } from '../internals/utils/warning';\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridThemeSelector = state => state.theme;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { gridThemeSelector } from '../../core/gridCoreSelector';\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridThemeSelector, (columnsState, model, visibleColumnFields, theme) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, theme.direction === 'rtl');\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '../../../internals/utils/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { warnOnce } from '../../../internals/utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutogeneratedRowNode } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import { GridSignature } from '../../utils/useGridApiEventHandler';\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowTreeSelector, gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from '../rows/gridRowsUtils';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from '../../hooks/features/rowSelection/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isEscapeKey = key => key === 'Escape';\n\n/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isTabKey = key => key === 'Tab';\n\n// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { getValueOptions, isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridHeaderFilteringEnabledSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass, gridClasses } from '../constants';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../hooks/features/dimensions/gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useTimeout } from '../hooks/utils/useTimeout';\nimport { getTotalHeaderHeight } from '../hooks/features/columns/gridColumnsUtils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { useRunOnce } from '../../utils/useRunOnce';\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from '../columns/gridColumnsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows, getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils';\nimport * as platform from '../../../utils/platform';\nimport { clamp, range } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridRenderContextSelector, gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\nimport { EMPTY_RENDER_CONTEXT } from './useGridVirtualization';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (mode, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(mode, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const theme = useTheme();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(theme.direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(theme.direction, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, theme.direction, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (isLastVisible) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height: contentHeight\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      scrollerRef.current.scrollLeft = 0;\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabled, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabled, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabled,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  let renderContext;\n  if (!inputs.enabled) {\n    renderContext = {\n      firstRowIndex: 0,\n      lastRowIndex: inputs.rows.length,\n      firstColumnIndex: 0,\n      lastColumnIndex: inputs.visibleColumns.length\n    };\n  } else {\n    const {\n      top,\n      left\n    } = scrollPosition;\n    const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    if (inputs.enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: inputs.rows.length,\n        bufferBefore: scrollCache.buffer.rowBefore,\n        bufferAfter: scrollCache.buffer.rowAfter,\n        positions: inputs.rowsMeta.positions,\n        lastSize: inputs.lastRowHeight\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n          atStart: true,\n          lastPosition: inputs.columnsTotalWidth\n        });\n        lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n      }\n    }\n    renderContext = {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, direction, pinnedLeftLength) {\n  const factor = direction === 'ltr' ? 1 : -1;\n  const left = factor * (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(mode, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (mode === 'rtl') {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from '../../utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { gridExpandedRowCountSelector } from '../filter';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../rows';\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from '../hooks/features/focus/gridFocusStateSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerRef: columnsContainerRef\n  });\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nimport { isMultipleRowSelectionEnabled } from '../features/rowSelection/utils';\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if (rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const ariaAttributes = useGridAriaAttributes();\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridRowsMetaSelector } from '../../hooks/features/rows';\nimport { gridRenderContextSelector } from '../../hooks/features/virtualization';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import { createSelector } from '../../../utils/createSelector';\nexport const gridColumnResizeSelector = state => state.columnResize;\nexport const gridResizingColumnFieldSelector = createSelector(gridColumnResizeSelector, columnResize => columnResize.resizingColumnField);","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from '../GridScrollArea';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridVirtualScroller } from '../../hooks/features/virtualization/useGridVirtualScroller';\nimport { useGridOverlays } from '../../hooks/features/overlays/useGridOverlays';\nimport { GridOverlays as Overlays } from '../base/GridOverlays';\nimport { GridHeaders } from '../GridHeaders';\nimport { GridMainContainer as Container } from './GridMainContainer';\nimport { GridTopContainer as TopContainer } from './GridTopContainer';\nimport { GridBottomContainer as BottomContainer } from './GridBottomContainer';\nimport { GridVirtualScrollerContent as Content } from './GridVirtualScrollerContent';\nimport { GridVirtualScrollerFiller as SpaceFiller } from './GridVirtualScrollerFiller';\nimport { GridVirtualScrollerRenderZone as RenderZone } from './GridVirtualScrollerRenderZone';\nimport { GridVirtualScrollbar as Scrollbar } from './GridVirtualScrollbar';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'left',\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'right',\n    filterFn: index => index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'left',\n    colIndex,\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'right',\n    colIndex,\n    filterFn: index => index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { GridPinnedColumnPosition } from '../hooks/features/columns/gridColumnsInterfaces';\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = cellParamsWithAPI.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParamsWithAPI.formattedValue;\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\", \"icon\", \"showInMenu\", \"onClick\"],\n  _excluded2 = [\"label\", \"icon\", \"showInMenu\", \"onClick\", \"closeMenuOnClick\", \"closeMenu\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridActionsCellItem = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  if (!props.showInMenu) {\n    const {\n        label,\n        icon,\n        onClick\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const handleClick = event => {\n      onClick?.(event);\n    };\n    return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: ref,\n      size: \"small\",\n      role: \"menuitem\",\n      \"aria-label\": label\n    }, other, {\n      onClick: handleClick\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: 'small'\n      })\n    }));\n  }\n  const {\n      label,\n      icon,\n      onClick,\n      closeMenuOnClick = true,\n      closeMenu\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const handleClick = event => {\n    onClick?.(event);\n    if (closeMenuOnClick) {\n      closeMenu?.();\n    }\n  };\n  return /*#__PURE__*/_jsxs(MenuItem, _extends({\n    ref: ref\n  }, other, {\n    onClick: handleClick,\n    children: [icon && /*#__PURE__*/_jsx(ListItemIcon, {\n      children: icon\n    }), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCellItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * from https://mui.com/material-ui/api/button-base/#ButtonBase-prop-component\n   */\n  component: PropTypes.elementType,\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  showInMenu: PropTypes.bool\n} : void 0;\nexport { GridActionsCellItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport clsx from 'clsx';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { createRandomNumberGenerator } from '../../utils/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from '../../constants/gridClasses';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions/gridDimensionsSelectors';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${c.columnSeparator}, .${c['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} +\n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} 1px`\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: !dimensions.hasScrollY || dimensions.scrollbarSize === 0 ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeaders}`]: columnHeadersStyles,\n      [`& .${c.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (t.vars || t).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      minWidth: 'var(--width)',\n      maxWidth: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(t.vars || t).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderTop']}`]: {\n      borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}, & .${c['scrollbar--vertical']}, & .${c.pinnedRows}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarContainer',\n  overridesResolver: (_, styles) => styles.toolbarContainer\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  gap: theme.spacing(1),\n  padding: theme.spacing(0.5, 0.5, 0)\n}));\nconst GridToolbarContainer = /*#__PURE__*/React.forwardRef(function GridToolbarContainer(props, ref) {\n  const {\n      className,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  if (!children) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarContainerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbarContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useLazyRef } from '../../hooks/utils/useLazyRef';\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from './utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GridColumnsManagement } from '../columnsManagement';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { getValueFromValueOptions, getValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridToolbarColumnsButton = /*#__PURE__*/React.forwardRef(function GridToolbarColumnsButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const columnButtonId = useId();\n  const columnPanelId = useId();\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const showColumns = event => {\n    if (preferencePanel.open && preferencePanel.openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns, columnPanelId, columnButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === columnPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    enterDelay: 1000\n  }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: ref,\n      id: columnButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": isOpen ? columnPanelId : undefined,\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.columnSelectorIcon, {})\n    }, buttonProps, {\n      onClick: showColumns\n    }, rootProps.slotProps?.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarColumns')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarColumnsButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarColumnsButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarDensitySelector = /*#__PURE__*/React.forwardRef(function GridToolbarDensitySelector(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: 'compact'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: 'standard'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: 'comfortable'\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (density) {\n      case 'compact':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {});\n      case 'comfortable':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {});\n      default:\n        return /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {});\n    }\n  }, [density, rootProps]);\n  const handleDensitySelectorOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleDensitySelectorClose = () => {\n    setOpen(false);\n  };\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      setOpen(false);\n    }\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === density,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarDensityLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: startIcon,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? densityMenuId : undefined,\n        id: densityButtonId\n      }, buttonProps, {\n        onClick: handleDensitySelectorOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarDensity')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleDensitySelectorClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarDensitySelector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarDensitySelector };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { gridColumnLookupSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridFilterActiveItemsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (_props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = /*#__PURE__*/React.forwardRef(function GridToolbarFilterButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const classes = useUtilityClasses(rootProps);\n  const filterButtonId = useId();\n  const filterPanelId = useId();\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n    const getOperatorLabel = item => lookup[item.field].filterOperators.find(operator => operator.value === item.operator).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operator)}`).toString();\n    const getFilterItemValue = item => {\n      const {\n        getValueAsString\n      } = lookup[item.field].filterOperators.find(operator => operator.value === item.operator);\n      return getValueAsString ? getValueAsString(item.value) : item.value;\n    };\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: activeFilters.map((item, index) => _extends({}, lookup[item.field] && /*#__PURE__*/_jsx(\"li\", {\n          children: `${lookup[item.field].headerName || item.field}\n                  ${getOperatorLabel(item)}\n                  ${\n          // implicit check for null and undefined\n          item.value != null ? getFilterItemValue(item) : ''}`\n        }, index)))\n      })]\n    });\n  }, [apiRef, rootProps, preferencePanel.open, activeFilters, lookup, classes]);\n  const toggleFilter = event => {\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.filters, filterPanelId, filterButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === filterPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: ref,\n      id: filterButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      \"aria-controls\": isOpen ? filterPanelId : undefined,\n      \"aria-expanded\": isOpen,\n      \"aria-haspopup\": true,\n      startIcon: /*#__PURE__*/_jsx(Badge, {\n        badgeContent: activeFilters.length,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(rootProps.slots.openFilterButtonIcon, {})\n      })\n    }, buttonProps, {\n      onClick: toggleFilter\n    }, rootProps.slotProps?.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"quickFilterParser\", \"quickFilterFormatter\", \"debounceMs\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridQuickFilterValuesSelector } from '../../hooks/features/filter';\nimport { isDeepEqual } from '../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarQuickFilter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarQuickFilterRoot = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarQuickFilter',\n  overridesResolver: (props, styles) => styles.toolbarQuickFilter\n})(({\n  theme\n}) => ({\n  width: 'auto',\n  paddingBottom: theme.spacing(0.5),\n  '& input': {\n    marginLeft: theme.spacing(0.5)\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n  },\n  [`& input[type=\"search\"]::-webkit-search-decoration,\n  & input[type=\"search\"]::-webkit-search-cancel-button,\n  & input[type=\"search\"]::-webkit-search-results-button,\n  & input[type=\"search\"]::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\nconst defaultSearchValueParser = searchText => searchText.split(' ').filter(word => word !== '');\nconst defaultSearchValueFormatter = values => values.join(' ');\nfunction GridToolbarQuickFilter(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const quickFilterValues = useGridSelector(apiRef, gridQuickFilterValuesSelector);\n  const {\n      quickFilterParser = defaultSearchValueParser,\n      quickFilterFormatter = defaultSearchValueFormatter,\n      debounceMs = rootProps.filterDebounceMs,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [searchValue, setSearchValue] = React.useState(() => quickFilterFormatter(quickFilterValues ?? []));\n  const prevQuickFilterValuesRef = React.useRef(quickFilterValues);\n  React.useEffect(() => {\n    if (!isDeepEqual(prevQuickFilterValuesRef.current, quickFilterValues)) {\n      // The model of quick filter value has been updated\n      prevQuickFilterValuesRef.current = quickFilterValues;\n\n      // Update the input value if needed to match the new model\n      setSearchValue(prevSearchValue => isDeepEqual(quickFilterParser(prevSearchValue), quickFilterValues) ? prevSearchValue : quickFilterFormatter(quickFilterValues ?? []));\n    }\n  }, [quickFilterValues, quickFilterFormatter, quickFilterParser]);\n  const updateSearchValue = React.useCallback(newSearchValue => {\n    const newQuickFilterValues = quickFilterParser(newSearchValue);\n    prevQuickFilterValuesRef.current = newQuickFilterValues;\n    apiRef.current.setQuickFilterValues(newQuickFilterValues);\n  }, [apiRef, quickFilterParser]);\n  const debouncedUpdateSearchValue = React.useMemo(() => debounce(updateSearchValue, debounceMs), [updateSearchValue, debounceMs]);\n  const handleSearchValueChange = React.useCallback(event => {\n    const newSearchValue = event.target.value;\n    setSearchValue(newSearchValue);\n    debouncedUpdateSearchValue(newSearchValue);\n  }, [debouncedUpdateSearchValue]);\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    updateSearchValue('');\n  }, [updateSearchValue]);\n  return /*#__PURE__*/_jsx(GridToolbarQuickFilterRoot, _extends({\n    as: rootProps.slots.baseTextField,\n    ownerState: rootProps,\n    variant: \"standard\",\n    value: searchValue,\n    onChange: handleSearchValueChange,\n    className: clsx(className, classes.root),\n    placeholder: apiRef.current.getLocaleText('toolbarQuickFilterPlaceholder'),\n    \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterLabel'),\n    type: \"search\"\n  }, other, {\n    InputProps: _extends({\n      startAdornment: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {\n        fontSize: \"small\"\n      }),\n      endAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterDeleteIconLabel'),\n        size: \"small\",\n        sx: {\n          visibility: searchValue ? 'visible' : 'hidden'\n        },\n        onClick: handleSearchReset\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterClearIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }, other.InputProps)\n  }, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarQuickFilter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The debounce time in milliseconds.\n   * @default 150\n   */\n  debounceMs: PropTypes.number,\n  /**\n   * Function responsible for formatting values of quick filter in a string when the model is modified\n   * @param {any[]} values The new values passed to the quick filter model\n   * @returns {string} The string to display in the text field\n   * @default (values: string[]) => values.join(' ')\n   */\n  quickFilterFormatter: PropTypes.func,\n  /**\n   * Function responsible for parsing text input in an array of independent values for quick filtering.\n   * @param {string} input The value entered by the user\n   * @returns {any[]} The array of value on which quick filter is applied\n   * @default (searchText: string) => searchText\n   *   .split(' ')\n   *   .filter((word) => word !== '')\n   */\n  quickFilterParser: PropTypes.func\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n * - [Filtering - quick filter](https://mui.com/x/react-data-grid/filtering/quick-filter/)\n *\n * API:\n * - [GridToolbarQuickFilter API](https://mui.com/x/api/data-grid/grid-toolbar-quick-filter/)\n */\nexport { GridToolbarQuickFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"csvOptions\", \"printOptions\", \"excelOptions\", \"showQuickFilter\", \"quickFilterProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { GridToolbarContainer } from '../containers/GridToolbarContainer';\nimport { GridToolbarColumnsButton } from './GridToolbarColumnsButton';\nimport { GridToolbarDensitySelector } from './GridToolbarDensitySelector';\nimport { GridToolbarFilterButton } from './GridToolbarFilterButton';\nimport { GridToolbarExport } from './GridToolbarExport';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridToolbarQuickFilter } from './GridToolbarQuickFilter';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbar = /*#__PURE__*/React.forwardRef(function GridToolbar(props, ref) {\n  // TODO v7: think about where export option should be passed.\n  // from slotProps={{ toolbarExport: { ...exportOption } }} seems to be more appropriate\n  const {\n      csvOptions,\n      printOptions,\n      excelOptions,\n      showQuickFilter = false,\n      quickFilterProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  if (rootProps.disableColumnFilter && rootProps.disableColumnSelector && rootProps.disableDensitySelector && !showQuickFilter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridToolbarContainer, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridToolbarColumnsButton, {}), /*#__PURE__*/_jsx(GridToolbarFilterButton, {}), /*#__PURE__*/_jsx(GridToolbarDensitySelector, {}), /*#__PURE__*/_jsx(GridToolbarExport, {\n      csvOptions: csvOptions,\n      printOptions: printOptions\n      // TODO: remove the reference to excelOptions in community package\n      ,\n      excelOptions: excelOptions\n    }), /*#__PURE__*/_jsx(Box, {\n      sx: {\n        flex: 1\n      }\n    }), showQuickFilter && /*#__PURE__*/_jsx(GridToolbarQuickFilter, _extends({}, quickFilterProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Props passed to the quick filter component.\n   */\n  quickFilterProps: PropTypes.object,\n  /**\n   * Show the quick filter component.\n   * @default false\n   */\n  showQuickFilter: PropTypes.bool,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPreferencesPanel } from './panel/GridPreferencesPanel';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import { GridPinnedColumnPosition } from '../../hooks/features/columns';\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from '../hooks';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../utils/cellBorderUtils';\nimport { escapeOperandAttributeSelector } from '../utils/domUtils';\nimport { GridScrollbarFillerCell } from './GridScrollbarFillerCell';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push( /*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push( /*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }));\n        }\n      }\n      array.push( /*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { GridSkeletonLoadingOverlay } from './GridSkeletonLoadingOverlay';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowCountSelector, useGridSelector } from '../hooks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridClasses } from '../constants/gridClasses';\nimport { composeGridClasses } from '../utils/composeGridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from './cell/GridCell';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from './GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nexport const useGridTheme = apiRef => {\n  const theme = useTheme();\n  if (!apiRef.current.state.theme) {\n    apiRef.current.state.theme = theme;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        theme\n      }));\n    }\n  }, [apiRef, theme]);\n};","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import { useGridRefs } from './useGridRefs';\nimport { useGridTheme } from './useGridTheme';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridTheme(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { warnOnce } from '../../../../internals/utils/warning';\nfunction sanitizeCellValue(value, csvOptions) {\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { GRID_ID_AUTOGENERATED } from '../rows/gridRowsUtils';\nimport { defaultGetRowsToExport, getColumnsToExport } from './utils';\nimport { getDerivedPaginationModel } from '../pagination/useGridPaginationModel';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationMetaSelector } from './gridPaginationSelector';\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { warnOnce } from '../../../internals/utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      const fieldType = apiRef.current.getColumn(field).type;\n      switch (fieldType) {\n        case 'boolean':\n          newValue = false;\n          break;\n        case 'date':\n        case 'dateTime':\n        case 'number':\n          newValue = undefined;\n          break;\n        case 'singleSelect':\n          newValue = null;\n          break;\n        case 'string':\n        default:\n          newValue = '';\n          break;\n      }\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { warnOnce } from '../../../internals/utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutogeneratedRowNode } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nimport { isMultipleRowSelectionEnabled } from './utils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridDimensionsSelector } from '../dimensions';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { throttle } from '../../../utils/throttle';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridColumnGroupsUnwrappedModelSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const theme = useTheme();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, theme.direction, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderTop = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: pinnedRows.top.length === 0 ? gridClasses['row--borderBottom'] : undefined,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from '../components';\nimport { GridCell } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridDetailPanels } from '../components/GridDetailPanels';\nimport { GridPinnedRows } from '../components/GridPinnedRows';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useTheme } from '@mui/material/styles';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from '../../../utils/domUtils';\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from './gridColumnResizeApi';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from '../../utils';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { createControllablePromise } from '../../../utils/createControllablePromise';\nimport { clamp } from '../../../utils/utils';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridPinnedColumnPosition } from '../columns/gridColumnsInterfaces';\nimport { gridColumnsStateSelector } from '../columns';\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, direction) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (direction === 'rtl') {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    refs.columnHeaderElement.style.minWidth = `${newWidth}px`;\n    refs.columnHeaderElement.style.maxWidth = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n      headerFilterElement.style.minWidth = `${newWidth}px`;\n      headerFilterElement.style.maxWidth = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n      div.style.minWidth = finalWidth;\n      div.style.maxWidth = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n        div.style.minWidth = finalWidth;\n        div.style.maxWidth = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement);\n    resizeDirection.current = getResizeDirection(separator, theme.direction);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { dimensionsStateInitializer, useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nimport { columnResizeStateInitializer, useGridColumnResize } from '../hooks/features/columnResize/useGridColumnResize';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps } from './useDataGridProps';\nimport { propValidatorsDataGrid, validateProps } from '../internals/utils/propValidation';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","/**\n * @mui/x-data-grid v7.12.0\n *\n * @license MIT\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport { useGridApiContext } from './hooks/utils/useGridApiContext';\nexport { useGridApiRef } from './hooks/utils/useGridApiRef';\nexport { useGridRootProps } from './hooks/utils/useGridRootProps';\nexport * from './DataGrid';\nexport * from './components';\nexport * from './constants';\nexport * from './hooks';\nexport * from './models';\nexport * from './context';\nexport * from './colDef';\nexport * from './utils';\nexport { GridColumnHeaders } from './components/GridColumnHeaders';\n/**\n * Reexportable components.\n */\nexport { GridColumnMenu, GRID_COLUMN_MENU_SLOTS, GRID_COLUMN_MENU_SLOT_PROPS } from './components/reexportable';\n\n/**\n * The full grid API.\n * @demos\n *   - [API object](/x/react-data-grid/api-object/)\n */\n\n/**\n * The state of `DataGrid`.\n */\n\n/**\n * The initial state of `DataGrid`.\n */","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DataGridDetails;\nconst react_1 = __importStar(require(\"react\"));\nconst mui_1 = require(\"tss-react/mui\");\nconst x_data_grid_1 = require(\"@mui/x-data-grid\");\nconst material_1 = require(\"@mui/material\");\n// locals\nconst util_1 = require(\"../../util\");\nconst FieldName_1 = __importDefault(require(\"./FieldName\"));\nconst ui_1 = require(\"../../ui\");\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    margin: {\n        marginBottom: theme.spacing(4),\n    },\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\nfunction DataGridDetails({ value, prefix, name, }) {\n    const { classes } = useStyles();\n    const [checked, setChecked] = (0, react_1.useState)(false);\n    const keys = Object.keys(value[0]).sort();\n    const unionKeys = new Set(keys);\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n        const { id, ...rest } = val;\n        return {\n            id: k, // used by material UI\n            identifier: id, // renamed from id to identifier\n            ...rest,\n        };\n    });\n    for (const val of value) {\n        for (const k of Object.keys(val)) {\n            unionKeys.add(k);\n        }\n    }\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames;\n    if (unionKeys.has('id')) {\n        unionKeys.delete('id');\n        colNames = ['identifier', ...unionKeys];\n    }\n    else {\n        colNames = [...unionKeys];\n    }\n    const widths = colNames.map(e => (0, util_1.measureGridWidth)(rows.map(r => r[e])));\n    if (unionKeys.size < keys.length + 5) {\n        return (react_1.default.createElement(\"div\", { className: classes.margin },\n            react_1.default.createElement(FieldName_1.default, { prefix: prefix, name: name }),\n            react_1.default.createElement(material_1.FormControlLabel, { control: react_1.default.createElement(material_1.Checkbox, { checked: checked, onChange: event => setChecked(event.target.checked) }), label: react_1.default.createElement(material_1.Typography, { variant: \"body2\" }, \"Show options\") }),\n            react_1.default.createElement(x_data_grid_1.DataGrid, { autoHeight: true, disableRowSelectionOnClick: true, rows: rows, rowHeight: 20, columnHeaderHeight: 35, hideFooter: rows.length < 25, slots: {\n                    toolbar: checked ? x_data_grid_1.GridToolbar : null,\n                }, slotProps: {\n                    toolbar: {\n                        printOptions: {\n                            disableToolbarButton: true,\n                        },\n                    },\n                }, columns: colNames.map((val, index) => ({\n                    field: val,\n                    renderCell: params => {\n                        const value = params.value;\n                        return (react_1.default.createElement(\"div\", { className: classes.cell },\n                            react_1.default.createElement(ui_1.SanitizedHTML, { html: (0, util_1.getStr)(value || '') })));\n                    },\n                    width: widths[index],\n                })) })));\n    }\n    return null;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ArrayValue;\nconst react_1 = __importDefault(require(\"react\"));\nconst is_object_1 = __importDefault(require(\"is-object\"));\nconst mui_1 = require(\"tss-react/mui\");\n// locals\nconst Attributes_1 = __importDefault(require(\"./Attributes\"));\nconst FieldName_1 = __importDefault(require(\"./FieldName\"));\nconst BasicValue_1 = __importDefault(require(\"./BasicValue\"));\nconst useStyles = (0, mui_1.makeStyles)()(theme => ({\n    field: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    fieldSubvalue: {\n        wordBreak: 'break-word',\n        maxHeight: 300,\n        padding: theme.spacing(0.5),\n        border: `1px solid ${theme.palette.action.selected}`,\n        boxSizing: 'border-box',\n        overflow: 'auto',\n    },\n}));\nfunction ArrayValue({ name, value, description, prefix = [], }) {\n    const { classes } = useStyles();\n    if (value.length === 1) {\n        return (0, is_object_1.default)(value[0]) ? (react_1.default.createElement(Attributes_1.default, { attributes: value[0], prefix: [...prefix, name] })) : (react_1.default.createElement(\"div\", { className: classes.field },\n            react_1.default.createElement(FieldName_1.default, { prefix: prefix, description: description, name: name }),\n            react_1.default.createElement(BasicValue_1.default, { value: value[0] })));\n    }\n    else if (value.every(val => (0, is_object_1.default)(val))) {\n        return (react_1.default.createElement(react_1.default.Fragment, null, value.map((val, i) => (react_1.default.createElement(Attributes_1.default, { key: JSON.stringify(val) + '-' + i, attributes: val, prefix: [...prefix, name + '-' + i] })))));\n    }\n    else {\n        return (react_1.default.createElement(\"div\", { className: classes.field },\n            react_1.default.createElement(FieldName_1.default, { prefix: prefix, description: description, name: name }),\n            value.map((val, i) => (react_1.default.createElement(\"div\", { key: JSON.stringify(val) + '-' + i, className: classes.fieldSubvalue },\n                react_1.default.createElement(BasicValue_1.default, { value: val }))))));\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = UriField;\nconst react_1 = __importDefault(require(\"react\"));\nconst FieldName_1 = __importDefault(require(\"./FieldName\"));\nconst mui_1 = require(\"tss-react/mui\");\nconst BasicValue_1 = __importDefault(require(\"./BasicValue\"));\nconst useStyles = (0, mui_1.makeStyles)()({\n    field: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n});\nfunction UriField({ value, prefix, name, }) {\n    const { classes } = useStyles();\n    const { uri, baseUri = '' } = value;\n    let href;\n    try {\n        href = new URL(uri, baseUri).href;\n    }\n    catch (e) {\n        href = uri;\n    }\n    return (react_1.default.createElement(\"div\", { className: classes.field },\n        react_1.default.createElement(FieldName_1.default, { prefix: prefix, name: name }),\n        react_1.default.createElement(BasicValue_1.default, { value: href })));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Attributes;\nconst react_1 = __importDefault(require(\"react\"));\nconst is_object_1 = __importDefault(require(\"is-object\"));\n// locals\nconst util_1 = require(\"./util\");\nconst util_2 = require(\"../../util\");\nconst DataGridDetails_1 = __importDefault(require(\"./DataGridDetails\"));\nconst ArrayValue_1 = __importDefault(require(\"./ArrayValue\"));\nconst UriField_1 = __importDefault(require(\"./UriField\"));\nconst SimpleField_1 = __importDefault(require(\"./SimpleField\"));\nconst MAX_FIELD_NAME_WIDTH = 170;\n// these are always omitted as too detailed\nconst globalOmit = [\n    '__jbrowsefmt',\n    'length',\n    'position',\n    'subfeatures',\n    'uniqueId',\n    'exonFrames',\n    'parentId',\n    'thickStart',\n    'thickEnd',\n];\nfunction Attributes(props) {\n    const { attributes, omit = [], omitSingleLevel = [], descriptions, formatter = val => val, hideUris, prefix = [], } = props;\n    const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel]);\n    const { __jbrowsefmt, ...rest } = attributes;\n    const formattedAttributes = { ...rest, ...__jbrowsefmt };\n    const maxLabelWidth = (0, util_1.generateMaxWidth)(Object.entries(formattedAttributes).filter(([k, v]) => v !== undefined && !omits.has(k)), prefix);\n    return (react_1.default.createElement(react_1.default.Fragment, null, Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n        const description = (0, util_1.accessNested)([...prefix, key], descriptions);\n        if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => (0, is_object_1.default)(val)) ? (react_1.default.createElement(DataGridDetails_1.default, { key: key, name: key, prefix: prefix, value: value })) : (react_1.default.createElement(ArrayValue_1.default, { key: key, name: key, value: value, description: description, prefix: prefix }));\n        }\n        else if ((0, is_object_1.default)(value)) {\n            const { omitSingleLevel, ...rest } = props;\n            return (0, util_2.isUriLocation)(value) ? (hideUris ? null : (react_1.default.createElement(UriField_1.default, { key: key, name: key, prefix: prefix, value: value }))) : (react_1.default.createElement(Attributes, { key: key, ...rest, attributes: value, descriptions: descriptions, prefix: [...prefix, key] }));\n        }\n        else {\n            return (react_1.default.createElement(SimpleField_1.default, { key: key, name: key, value: formatter(value, key), description: description, prefix: prefix, width: Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH) }));\n        }\n    })));\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attributes = exports.BaseAttributes = exports.BaseCoreDetails = void 0;\nexports.BaseCard = BaseCard;\nexports.FeatureDetails = FeatureDetails;\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst react_1 = __importStar(require(\"react\"));\nconst react_error_boundary_1 = require(\"react-error-boundary\");\nconst material_1 = require(\"@mui/material\");\nconst mui_1 = require(\"tss-react/mui\");\nconst mobx_react_1 = require(\"mobx-react\");\n// icons\nconst ExpandMore_1 = __importDefault(require(\"@mui/icons-material/ExpandMore\"));\n// locals\nconst util_1 = require(\"../../util\");\nconst ui_1 = require(\"../../ui\");\nconst SequenceFeatureDetails_1 = __importDefault(require(\"../SequenceFeatureDetails\"));\nconst SimpleField_1 = __importDefault(require(\"./SimpleField\"));\nconst Attributes_1 = __importDefault(require(\"./Attributes\"));\nconst util_2 = require(\"./util\");\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n    'name',\n    'start',\n    'end',\n    'strand',\n    'refName',\n    'description',\n    'type',\n];\nconst useStyles = (0, mui_1.makeStyles)()(theme => {\n    var _a;\n    return ({\n        expansionPanelDetails: {\n            display: 'block',\n            padding: theme.spacing(1),\n        },\n        expandIcon: {\n            color: ((_a = theme.palette.tertiary) === null || _a === void 0 ? void 0 : _a.contrastText) || '#fff',\n        },\n    });\n});\nfunction BaseCard({ children, title, defaultExpanded = true, }) {\n    const { classes } = useStyles();\n    const [expanded, setExpanded] = (0, react_1.useState)(defaultExpanded);\n    return (react_1.default.createElement(material_1.Accordion, { expanded: expanded, onChange: () => setExpanded(s => !s), TransitionProps: { unmountOnExit: true, timeout: 150 } },\n        react_1.default.createElement(material_1.AccordionSummary, { expandIcon: react_1.default.createElement(ExpandMore_1.default, { className: classes.expandIcon }) },\n            react_1.default.createElement(material_1.Typography, { variant: \"button\" }, title)),\n        react_1.default.createElement(material_1.AccordionDetails, { className: classes.expansionPanelDetails }, children)));\n}\nfunction Position(props) {\n    const { feature } = props;\n    const strand = feature.strand;\n    const strandMap = {\n        '-1': '-',\n        '0': '',\n        '1': '+',\n    };\n    const str = strandMap[strand] ? `(${strandMap[strand]})` : '';\n    const loc = (0, util_1.assembleLocString)(feature);\n    return react_1.default.createElement(react_1.default.Fragment, null, `${loc} ${str}`);\n}\nfunction CoreDetails(props) {\n    const { feature } = props;\n    const obj = feature;\n    // eslint-disable-next-line no-underscore-dangle\n    const formattedFeat = { ...obj, ...obj.__jbrowsefmt };\n    const { start, end } = formattedFeat;\n    const displayedDetails = {\n        ...formattedFeat,\n        length: (0, util_1.toLocale)(end - start),\n    };\n    const coreRenderedDetails = {\n        description: 'Description',\n        name: 'Name',\n        length: 'Length',\n        type: 'Type',\n    };\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(SimpleField_1.default, { name: \"Position\", value: react_1.default.createElement(Position, { ...props, feature: formattedFeat }) }),\n        Object.entries(coreRenderedDetails)\n            .map(([key, name]) => [name, displayedDetails[key]])\n            .filter(([, value]) => value != null)\n            .map(([name, value]) => (react_1.default.createElement(SimpleField_1.default, { key: name, name: name, value: value })))));\n}\nconst BaseCoreDetails = (props) => {\n    const { title = 'Primary data' } = props;\n    return (react_1.default.createElement(BaseCard, { ...props, title: title },\n        react_1.default.createElement(CoreDetails, { ...props })));\n};\nexports.BaseCoreDetails = BaseCoreDetails;\nconst BaseAttributes = (props) => {\n    const { feature } = props;\n    return (react_1.default.createElement(BaseCard, { ...props, title: \"Attributes\" },\n        react_1.default.createElement(Attributes_1.default, { ...props, attributes: feature })));\n};\nexports.BaseAttributes = BaseAttributes;\nfunction FeatureDetails(props) {\n    const { omit = [], model, feature, depth = 0 } = props;\n    const { maxDepth } = model;\n    const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature;\n    const pm = (0, util_1.getEnv)(model).pluginManager;\n    const session = (0, util_1.getSession)(model);\n    const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n        session,\n        feature,\n        model,\n    });\n    return (react_1.default.createElement(BaseCard, { title: (0, util_2.generateTitle)(name, id, type) },\n        react_1.default.createElement(material_1.Typography, null, \"Core details\"),\n        react_1.default.createElement(CoreDetails, { ...props }),\n        mate ? (react_1.default.createElement(react_1.default.Fragment, null,\n            react_1.default.createElement(material_1.Divider, null),\n            react_1.default.createElement(material_1.Typography, null, \"Mate details\"),\n            react_1.default.createElement(CoreDetails, { ...props, feature: {\n                    ...mate,\n                    // @ts-expect-error\n                    start: mate.start,\n                    // @ts-expect-error\n                    end: mate.end,\n                    // @ts-expect-error\n                    refName: mate.refName,\n                    uniqueId: uniqueId + '-mate',\n                } }))) : null,\n        react_1.default.createElement(material_1.Divider, null),\n        react_1.default.createElement(material_1.Typography, null, \"Attributes\"),\n        react_1.default.createElement(Attributes_1.default, { attributes: feature, ...props, omit: omit, omitSingleLevel: coreDetails }),\n        react_1.default.createElement(react_error_boundary_1.ErrorBoundary, { FallbackComponent: e => react_1.default.createElement(ui_1.ErrorMessage, { error: e.error }) },\n            react_1.default.createElement(SequenceFeatureDetails_1.default, { ...props })),\n        ExtraPanel ? (react_1.default.createElement(react_1.default.Fragment, null,\n            react_1.default.createElement(material_1.Divider, null),\n            react_1.default.createElement(BaseCard, { title: ExtraPanel.name },\n                react_1.default.createElement(ExtraPanel.Component, { ...props })))) : null,\n        depth < maxDepth && (subfeatures === null || subfeatures === void 0 ? void 0 : subfeatures.length) ? (react_1.default.createElement(BaseCard, { title: \"Subfeatures\", defaultExpanded: depth < 1 }, subfeatures.map((sub, idx) => (react_1.default.createElement(FeatureDetails, { key: JSON.stringify(sub), feature: { ...sub, uniqueId: `${uniqueId}_${idx}` }, model: model, depth: depth + 1 }))))) : null));\n}\nconst BaseFeatureDetail = (0, mobx_react_1.observer)(function ({ model }) {\n    const { error, featureData } = model;\n    if (error) {\n        return react_1.default.createElement(ui_1.ErrorMessage, { error: error });\n    }\n    if (!featureData) {\n        return null;\n    }\n    // replacing undefined with null helps with allowing fields to be hidden,\n    // setting null is not allowed by jexl so we set it to undefined to hide. see\n    // config guide. this replacement happens both here and when snapshotting the\n    // featureData\n    const g = JSON.parse(JSON.stringify(featureData, (_, v) => (v === undefined ? null : v)));\n    return (0, util_2.isEmpty)(g) ? null : react_1.default.createElement(FeatureDetails, { model: model, feature: g });\n});\nexports.default = BaseFeatureDetail;\nvar Attributes_2 = require(\"./Attributes\");\nObject.defineProperty(exports, \"Attributes\", { enumerable: true, get: function () { return __importDefault(Attributes_2).default; } });\n","import React, { useState } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport copy from 'copy-to-clipboard';\n// locals\nimport Checkbox2 from './Checkbox2';\nconst useStyles = makeStyles()({\n    textAreaFont: {\n        fontFamily: 'Courier New',\n        wordWrap: 'break-word',\n    },\n    dialogContent: {\n        background: 'lightgrey',\n        margin: 4,\n        minWidth: '80em',\n    },\n});\nexport default function SequenceTextArea({ str }) {\n    const { classes } = useStyles();\n    const [copied, setCopied] = useState(false);\n    const [showGaps, setShowGaps] = useState(false);\n    const [showEmpty, setShowEmpty] = useState(false);\n    const disp = str\n        .map(([s1, s2]) => [s1, showGaps ? s2 : s2.replaceAll('-', '')])\n        .filter(f => (showEmpty ? true : !!f[1]))\n        .map(([s1, s2]) => `>${s1}\\n${showGaps ? s2 : s2.replaceAll('-', '')}`)\n        .join('\\n');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { color: \"primary\", variant: \"contained\", onClick: () => {\n                copy(disp);\n                setCopied(true);\n                setTimeout(() => setCopied(false), 500);\n            } }, copied ? 'Copied!' : 'Copy to clipboard'),\n        React.createElement(Checkbox2, { label: \"Show gaps\", checked: showGaps, onChange: () => setShowGaps(!showGaps) }),\n        React.createElement(Checkbox2, { label: \"Show empty\", checked: showEmpty, onChange: () => setShowEmpty(!showEmpty) }),\n        React.createElement(TextField, { variant: \"outlined\", multiline: true, className: classes.dialogContent, minRows: 5, maxRows: 10, fullWidth: true, value: disp, InputProps: {\n                readOnly: true,\n                classes: {\n                    input: classes.textAreaFont,\n                },\n            } })));\n}\n//# sourceMappingURL=SequenceTextArea.js.map"],"names":["ReactPropTypesSecret","ReactPropTypesSecret_1","require$$0","emptyFunction","emptyFunctionWithReset","factoryWithThrowingShims","shim","props","propName","componentName","location","propFullName","secret","err","getShim","ReactPropTypes","propTypesModule","_interopRequireDefault","ExpandMore","_createSvgIcon","require$$1","_jsxRuntime","require$$2","hooks","useFeatureSequence","react_1","util_1","configuration_1","BPLIMIT","model","feature","upDownBp","forceLoad","sequence","setSequence","error","setError","_a","assemblyManager","rpcManager","assemblyName","fetchSeq","start","end","refName","assembly","sessionId","feats","feat","b","e","seq","up","down","__createBinding","this","o","k","k2","desc","__setModuleDefault","v","__importStar","mod","result","SettingsDialog","material_1","ui_1","mui_1","require$$3","mobx_react_1","require$$4","useStyles","theme","TextField2","FormControl2","children","SequenceFeatureSettingsDialog","handleClose","classes","upperCaseCDS","intronBp","setIntronBp","setUpDownBp","intronBpValid","upDownBpValid","event","m","__importDefault","SequenceFeatureMenu_1","copy_to_clipboard_1","file_saver_1","CascadingMenuButton_1","MoreVert_1","require$$5","Settings_1","require$$6","require$$7","SequenceFeatureMenu","extraItems","ref","showSettings","setShowSettings","showCoordinatesSetting","showGenomicCoordsOption","r","SequenceTypeSelector_1","SequenceTypeSelector","mode","hasCDS","hasExonOrCDS","key","val","util","stitch","dedupe","revlist","calculateUTRs","calculateUTRs2","ellipses","subfeats","sub","getItemId","list","item","pos","ary","seqlen","a","cds","exons","firstCds","lastCds","firstCdsIdx","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","elt","threeUTRs","parentFeat","slug","splitString","str","charactersPerRow","showCoordinates","currRemainder","splitSize","numChunks","chunks","splitStart","iter","offset","inc","res","i","j","SequenceDisplay_1","SequenceDisplay","color","strand","coordStart","chunk","idx","f","prefix","postfix","CDNASequence_1","CDNASequence","utr","upstream","downstream","includeIntrons","collapseIntron","hasCds","toLower","s","toUpper","fullGenomicCoordinates","mult","currStart","upstreamChunk","segments","remainder","middleChunks","intron","downstreamChunk","ProteinSequence_1","util_2","ProteinSequence","codonTable","protein","GenomicSequence_1","GenomicSequence","middleChunk","CDSSequence_1","CDSSequence","SequencePanel_1","getStrand","WordWrap","NoWordWrap","SequencePanel","subfeatures","Container","SequenceDialog_1","hooks_1","require$$8","SequenceDialog","sequenceFeatureDetails","seqPanelRef","force","setForce","SequenceFeatureDetails_1","SequenceFeatureDetails","openInDialog","setOpenInDialog","HelpDialog_1","HelpDialog","SequenceFeaturePanel_1","Help_1","SequenceFeaturePanel","shown","setShown","exports","FieldName_1","FieldName","description","name","width","cx","BasicValue_1","BasicValue","is_object_1","value","isLink","SimpleField_1","SimpleField","isEmpty","generateTitle","generateMaxWidth","accessNested","obj","id","type","array","arr","obj2","GridApiContext","React.createContext","useGridApiContext","apiRef","React.useContext","useGridApiRef","React.useRef","GridRootPropsContext","useGridRootProps","contextValue","GRID_EXPERIMENTAL_ENABLED","GRID_DEFAULT_LOCALE_TEXT","count","visibleCount","totalCount","getDataGridUtilityClass","slot","generateUtilityClass","gridClasses","generateUtilityClasses","CLEANUP_TIMER_LOOP_MILLIS","TimerBasedCleanupTracking","timeout","object","unsubscribe","unregisterToken","FinalizationRegistryBasedCleanupTracking","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","React.useState","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","details","React.useEffect","unstable_resetCleanupTracking","useGridApiEventHandler","optionsSubscriberOptions","useGridApiOptionHandler","is","fastObjectShallowCompare","aLength","bLength","_","isOutputSelector","selector","applySelector","defaultCompare","objectShallowCompare","createRefs","useGridSelector","equals","refs","useLazyRef","didInit","state","setState","useOnMount","newState","gridDimensionsSelector","NOT_FOUND","createSingletonCache","entry","createLruCache","maxSize","entries","get","cacheIndex","put","getEntries","clear","defaultEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","length","defaultMemoize","func","equalityCheckOrOptions","providedOptions","_providedOptions$equa","_providedOptions$maxS","resultEqualityCheck","comparator","cache","memoized","matchingEntry","getDependencies","funcs","dependencies","dep","dependencyTypes","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_recomputations","_lastResult","directlyPassedOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","memoizeOptions","finalMemoizeOptions","memoizedResultFunc","checkIsAPIRef","DEFAULT_INSTANCE_ID","c","d","other","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","args","cacheKey","cacheArgsInit","cacheArgs","cacheFn","fn","reselectCreateSelector","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","gridDensitySelector","gridDensityFactorSelector","density","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridThemeSelector","gridColumnsStateSelector","gridColumnFieldsSelector","columnsState","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","lookup","field","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","columns","columnVisibilityModel","column","gridVisibleColumnFieldsSelector","visibleColumns","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visibleColumnFields","visiblePinnedFields","filterVisibleColumns","pinnedColumns","invert","_b","filter","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","gridColumnPositionsSelector","positions","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","gridFilterableColumnLookupSelector","acc","gridHasColSpanSelector","_excluded","useUtilityClasses","ownerState","composeClasses","GridEditInputCellRoot","styled","InputBase","styles","_extends","GridEditInputCell","React.forwardRef","rootProps","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","_objectWithoutPropertiesLoose","inputRef","valueState","setValueState","handleChange","React.useCallback","newValue","parsedValue","meta","useEnhancedEffect","_jsx","renderEditInputCell","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","isDesc","direction","parseSortItem","sortItem","compareRows","parsedSortItems","row1","row2","index","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","comparatorList","rowList","node","el","row","getNextGridSortDirection","sortingOrder","current","currentIdx","gridNillComparator","v1","v2","collator","gridStringOrNumberComparator","value1","value2","nillResult","gridNumberComparator","gridDateComparator","GridFilterInputValue","applyValue","focusElementRef","tabIndex","disabled","clearButton","InputProps","variant","others","filterTimeout","useTimeout","filterValueState","setFilterValueState","applying","setIsApplying","useId","onFilterChange","newItem","isNumber","isFunction","isObject","localStorageAvailable","escapeRegExp","clamp","min","max","range","from","to","isDeepEqual","entriesA","entryA","keys","mulberry32","createRandomNumberGenerator","seed","random","deepClone","GridFilterInputMultipleValue","helperText","size","TextFieldProps","itemValue","Autocomplete","inputValue","getTagProps","option","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","isLeaf","getDefaultGridFilterModel","getPublicApiRef","hasEval","getHasEval","cleanFilterItem","cleanItem","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","items","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","getFilterCallbackFromItem","filterItem","parser","x","ignoreDiacritics","newFilterItem","filterOperators","filterOperator","operator","publicApiRef","applyFilterOnRow","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","shouldApplyFilter","resultPerItemId","applier","filterItemCore","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","buildAggregatedQuickFilterApplier","quickFilterValues","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","isNotNull","filterModelItems","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","getGridStringQuickFilterFn","filterRegex","columnValue","getGridStringOperators","disableTrim","filterItemValue","GRID_STRING_COL_DEF","GridMenuRoot","Popper","transformOrigin","GridMenu","open","target","onClose","position","className","onExited","savedFocusRef","handleExited","popperOnExited","handleClickAway","clsx","TransitionProps","placement","ClickAwayListener","Grow","Paper","hasActions","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useTheme","menuId","buttonId","iconButtons","menuButtons","numberOfButtons","React.useLayoutEffect","React.useImperativeHandle","focusableButtonIndex","showMenu","hideMenu","handleTouchRippleRef","instance","handleButtonClick","onClick","handleRootKeyDown","getNewIndex","rtlMod","indexMod","newIndex","handleListKeyDown","_jsxs","button","React.cloneElement","MenuList","renderActionsCell","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","gridRowsStateSelector","gridRowCountSelector","rows","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupsToFetchSelector","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","depth","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","gridPinnedRowsSelector","additionalRowGroups","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","pinnedRows","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","rowModel","getRowId","createRowsInternalCache","loading","rowCount","updates","dataRowIdToModelLookup","dataRowIdToIdLookup","getTopLevelRowCount","tree","rowCountProp","rootGroupNode","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingName","groupsToFetch","groupingParamsWithHydrateRows","isAutogeneratedRow","isAutogeneratedRowNode","rowNode","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","validDescendants","child","childDescendants","updateCacheWithNewRows","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","getMinimalContentHeight","computeRowsUpdates","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","GridBooleanCellRaw","Icon","React.useMemo","GridBooleanCell","React.memo","renderBooleanCell","GridEditBooleanCell","idProp","renderEditBooleanCell","BooleanOperatorContainer","GridFilterInputBoolean","labelProp","labelId","selectId","baseSelectProps","isSelectNative","baseSelectOptionProps","label","_c","getGridBooleanOperators","valueAsBoolean","gridBooleanFormatter","stringToBoolean","GRID_BOOLEAN_COL_DEF","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","handleRef","useForkRef","element","input","handleKeyDown","isSelectable","GridCellCheckboxRenderer","isMultipleRowSelectionEnabled","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","rowId","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","sorting","gridSortColumnLookupSelector","gridFilterStateSelector","gridFilterModelSelector","filterState","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","visibleRowsLookup","sortedRows","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","filteredRowsLookup","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilteredDescendantRowCountSelector","totalRowCount","topLevelRowCount","gridFilterActiveItemsSelector","columnLookup","gridFilterActiveItemsLookupSelector","activeFilters","useGridApiMethod","privateApiRef","apiMethods","visibility","isFirstRender","useGridLogger","logger","newLogger","useGridNativeEventListener","added","setAdded","targetElement","wrapHandler","useFirstRender","noop","useRunOnce","condition","effect","didRun","MAX_PAGE_SIZE","defaultPageSize","autoPageSize","getPageCount","pageSize","page","getDefaultGridPaginationModel","getValidPage","pageCount","throwIfPageSizeExceedsTheLimit","signatureProp","gridPaginationSelector","gridPaginationModelSelector","pagination","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","paginationModel","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","firstRowIndex","lastRowIndex","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","GridHeaderCheckbox","forceUpdate","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","selectionLookup","convertFilterItemValueToInputValue","inputType","dateCopy","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","parseValueToDate","year","month","day","hours","minutes","newFormattedDate","newParsedDate","renderEditDateCell","throwIfNotDateObject","columnType","gridDateFormatter","gridDateTimeFormatter","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","getGridNumericOperators","GRID_NUMERIC_COL_DEF","isEscapeKey","isTabKey","isPrintableKey","isNavigationKey","isKeyboardEvent","isHideMenuKey","isPasteShortcut","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","valueOptions","getOptionValue","optionValue","_excluded2","GridEditSingleSelectCell","initialOpen","_ref","MenuProps","otherBaseSelectProps","getOptionLabel","formattedTargetValue","reason","handleOpen","valueOption","_createElement","renderEditSingleSelectCell","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","placeholder","resolvedColumn","currentValueOptions","_d","_e","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","_getTagProps","tagProps","parseObjectValue","getGridSingleSelectOperators","filterItemValues","isArrayOfObjects","defaultGetOptionValue","defaultGetOptionLabel","GRID_SINGLE_SELECT_COL_DEF","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","gridHeaderFilteringStateSelector","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","columnGrouping","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","computeFlexColumnsWidth","initialFreeSpace","totalFlexUnits","flexColumns","uniqueFlexColumns","flexColumnsLookup","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computedWidth","hydrateColumnsWidth","rawState","dimensions","columnsLookup","widthAllocatedBeforeFlex","columnField","isFlex","availableWidth","computedColumnWidths","applyInitialState","initialState","orderedFields","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getDefaultColTypeDef","createColumnsState","columnsToUpsert","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","newColumn","existingState","hasBeenResized","columnsStateWithPreProcessing","columnsStateWithPortableColumns","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","getTotalHeaderHeight","densityFactor","maxDepth","isHeaderFilteringEnabled","columnHeadersHeight","filterHeadersHeight","fastMemo","component","CLIFF","SLOP","scrollDirection","slots","GridScrollAreaRawRoot","GridScrollAreaRaw","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","style","handleScrolling","newScrollPosition","handleDragOver","useEventCallback","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","GridScrollArea","useResizeObserver","enabled","fnRef","observer","GridPrivateApiContext","useGridPrivateApiContext","getVisibleRows","useGridVisibleRows","response","userAgent","isFirefox","gridRowsMetaSelector","gridVirtualizationSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridRenderContextSelector","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","virtualization","useGridVirtualization","setVirtualization","MINIMUM_COLUMN_WIDTH","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","bufferForDirection","isJSDOM","useGridVirtualScroller","enabledForColumns","outerSize","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","rowsMeta","selectedRowsLookup","currentPage","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","previousContextScrollPosition","previousRowContext","renderContext","scrollTimeout","frozenContext","scrollCache","focusedCell","updateRenderContext","nextRenderContext","areRenderContextsEqual","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","inputs","inputsSelector","computeRenderContext","ReactDOM.flushSync","forceUpdateRenderContext","handleScroll","scrollTop","scrollLeft","handleWheel","handleTouchMove","getRows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","rowIndex","minFirstColumn","maxLastColumn","baseRowHeight","isSelected","isFirstVisible","isLastVisible","isLastVisibleInSection","lastIndex","isNotVisible","tabbableCell","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","panel","needsHorizontalScrollbar","scrollerStyle","contentSize","initialRenderContext","platform.isFirefox","lastRowId","lastColumn","top","left","realLeft","getNearestIndexToRender","hasRowWithAutoHeight","getIndexesToRender","binarySearch","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","exponentialSearch","initialFirstColumnToRender","lastColumnToRender","sliceStart","sliceEnd","pivot","isBefore","interval","firstIndex","bufferBefore","bufferAfter","minFirstIndex","maxLastIndex","lastSize","firstPosition","lastPosition","firstIndexPadded","lastIndexPadded","context1","context2","pinnedLeftLength","useGridOverlays","visibleRowCount","noRows","showNoRowsOverlay","showNoResultsOverlay","overlayType","loadingOverlayVariant","GridOverlayWrapperRoot","prop","GridOverlayWrapperInner","GridOverlayWrapper","height","GridOverlays","Overlay","overlayProps","gridColumnMenuSelector","GridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","MemoizedGridHeaders","useGridAriaAttributes","pinnedRowsCount","role","GridPanelAnchor","Element","GridMainContainer","ariaAttributes","GridTopContainer","GridBottomContainer","overflowedContent","VirtualScrollerContentRoot","GridVirtualScrollerContent","Filler","Pinned","PinnedLeft","PinnedRight","Main","GridVirtualScrollerFiller","rowsLength","viewportOuterSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","leftPinnedWidth","rightPinnedWidth","scrollbarHeight","expandedHeight","Memoized","VirtualScrollerRenderZoneRoot","GridVirtualScrollerRenderZone","offsetTop","gridColumnResizeSelector","gridResizingColumnFieldSelector","columnResize","DEFAULT_GRID_AUTOSIZE_OPTIONS","gridEditRowsStateSelector","gridPreferencePanelStateSelector","GridPreferencePanelsValue","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","Content","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","Scroller","GridVirtualScroller","overlaysProps","virtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","TopContainer","Overlays","RenderZone","SpaceFiller","BottomContainer","GridFooterPlaceholder","cachedSupportsPreventScroll","doesSupportPreventScroll","isOverflown","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","root","getGridRowElementSelector","getGridRowElement","getGridCellElement","rowSelector","cellSelector","isEventTargetInPortal","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","getFieldsFromGroupHeaderElem","findGroupHeaderElementsFromField","findGridCellElementsFromCol","api","ariaColIndex","colIndex","cells","queryRows","rowElement","columnIndex","cell","findGridElement","klass","findPinnedCells","filterFn","currentColIndex","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","container","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getRowParams","getCellParams","rawValue","getCellValue","getRowValue","getRowFormattedValue","getColumnHeaderElement","getRowElement","getCellElement","shouldCellShowRightBorder","pinnedPosition","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","align","showLeftBorder","showRightBorder","isEditable","isSelectionMode","capitalize","GridCell","editCellState","styleProp","colSpan","disableDragEvents","pinnedOffset","sectionIndex","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyDown","onKeyUp","onDragEnter","onDragOver","cellParamsWithAPI","cellMode","canManageOwnFocus","action","rootClasses","getCellClassName","classNames","valueToRender","cellRef","publishMouseUp","publishMouseDown","publish","propHandler","cellStyle","doc","ownerDocument","focusableElement","elementToFocus","handleFocus","title","updatedRow","editCellStateRest","formattedValue","valueString","React.isValidElement","draggableEventHandlers","MemoizedGridCell","GridActionsCellItem","icon","handleClick","closeMenuOnClick","closeMenu","MenuItem","ListItemIcon","CIRCULAR_CONTENT_SIZE","CONTENT_HEIGHT","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","empty","randomNumberGenerator","GridSkeletonCell","skeletonProps","Skeleton","getBorderColor","lighten","alpha","darken","columnHeadersStyles","columnHeaderStyles","ignoreSsrWarning","GridRootStyles","t","borderColor","radius","containerBackground","pinnedBackground","overlayBackground","hoverOpacity","hoverColor","selectedOpacity","selectedBackground","selectedHoverBackground","pinnedHoverBackground","blend","pinnedSelectedBackground","pinnedSelectedHoverBackground","selectedStyles","background","overlay","opacity","gamma","backgroundColor","decomposeColor","overlayColor","rgb","recomposeColor","autoHeight","showCellVerticalBorder","GridRoot","rootElementRef","mountedState","setMountedState","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","GridOverlay","GridToolbarContainerRoot","GridToolbarContainer","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderTitleRoot","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","GridColumnHeaderSeparatorSides","resizable","resizing","side","GridColumnHeaderSeparatorRaw","stopClick","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","sortDirection","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnMenu","columnTitleIconButtons","headerClassName","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","ariaSort","isDragging","filterItemsCounter","isColumnSorted","isColumnFiltered","isColumnNumeric","GridColumnHeaderItem","columnMenuOpen","isLast","sortIndex","disableReorder","showColumnMenuIcon","setShowColumnMenuIcon","mouseEventsHandlers","showSortIcon","React.Fragment","GridIconButtonContainerRoot","GridIconButtonContainer","getIcon","icons","iconProps","GridColumnHeaderSortIconRaw","iconElement","iconButton","Badge","GridColumnHeaderSortIcon","GridColumnHeaderFilterIconButton","counter","preferencePanel","panelId","toggleFilter","openedPanelValue","GridArrowUpwardIcon","createSvgIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","StyledMenuList","GridColumnMenuContainer","labelledby","useGridColumnMenuSlots","defaultSlots","defaultSlotProps","slotProps","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","leftDisplayOrder","rightDisplayOrder","itemProps","processedComponentProps","customProps","Divider","GridColumnMenuHideItem","toggleColumn","ListItemText","GridColumnMenuManageItem","showColumns","GridColumnMenuColumnsItem","GridColumnMenuFilterItem","showFilter","GridColumnMenuSortItem","onSortMenuItemClick","getLabel","GRID_COLUMN_MENU_SLOTS","GRID_COLUMN_MENU_SLOT_PROPS","GridGenericColumnMenu","orderedSlots","Component","otherProps","GridColumnMenu","GridPanelWrapperRoot","isEnabled","GridPanelWrapper","FocusTrap","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","sort","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","currentColumns","togglableColumns","togglableSortedColumns","toggleAllColumns","isVisible","currentModel","newModel","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","GridColumnsManagementBody","FormControlLabel","GridColumnsManagementEmptyText","GridColumnsManagementFooter","GridColumnsPanel","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","anchorEl","setAnchorEl","panelAnchor","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","GridPanelFooter","GridPanelHeaderRoot","GridPanelHeader","GridFilterFormRoot","FilterFormDeleteIcon","FilterFormLogicOperatorInput","FilterFormColumnInput","FilterFormOperatorInput","FilterFormValueInput","getLogicOperatorLocaleKey","logicOperator","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","InputComponentProps","valueInputPropsOther","filteredColumns","selectedField","itemField","selectedNonFilterableColumn","filteredFields","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","handleDeleteFilter","_f","_g","_h","_i","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","currentFilters","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","GridToolbarColumnsButton","buttonProps","tooltipProps","columnButtonId","columnPanelId","isOpen","GridToolbarDensitySelector","densityButtonId","densityMenuId","densityOptions","startIcon","handleDensitySelectorOpen","prevOpen","handleDensitySelectorClose","handleDensityUpdate","newDensity","densityElements","GridToolbarFilterListRoot","_props","GridToolbarFilterButton","filterButtonId","filterPanelId","tooltipContentNode","getOperatorLabel","getFilterItemValue","getValueAsString","GridToolbarExportContainer","exportButtonId","exportMenuId","handleMenuOpen","handleMenuClose","React.Children","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","csvOptions","printOptions","excelOptions","preProcessedButtons","GridToolbarQuickFilterRoot","TextField","defaultSearchValueParser","searchText","word","defaultSearchValueFormatter","values","GridToolbarQuickFilter","quickFilterParser","quickFilterFormatter","prevQuickFilterValuesRef","prevSearchValue","updateSearchValue","newSearchValue","newQuickFilterValues","debouncedUpdateSearchValue","debounce","handleSearchReset","GridToolbar","showQuickFilter","quickFilterProps","Box","GridSelectedRowCountRoot","GridSelectedRowCount","selectedRowCount","rowSelectedText","GridFooter","totalTopLevelRowCount","selectedRowCountElement","rowCountElement","paginationElement","GridPreferencesPanel","preferencePanelState","panelContent","GridHeader","getPinnedCellOffset","scrollbarWidth","GridScrollbarFillerCell","header","borderTop","pinnedRight","SkeletonOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","viewportHeight","skeletonRowsCount","totalWidth","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","pinnedStyle","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","hasScrollbarFiller","resizedColIndex","currentWidth","delta","pinnedCells","LOADING_VARIANTS","CircularProgress","LinearProgress","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","noRowsLabel","GridPaginationRoot","TablePagination","tablePaginationClasses","wrapLabelDisplayedRows","labelDisplayedRows","estimated","defaultLabelDisplayedRows","GridPagination","paginationMode","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","pageSizeOptions","locales","wrappedLabelDisplayedRows","GridRowCountRoot","GridRowCount","text","composeGridClasses","GRID_DETAIL_PANEL_TOGGLE_FIELD","EmptyCell","GridRow","refProp","selected","rowHeight","focusedColumnIndex","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","editRowsState","editing","editable","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","ariaRowIndex","rootElement","resizeObserver","publishClick","disableColumnReorder","rowReordering","sizes","minHeight","rowStyle","property","propertyValue","rowClassNames","indexRelativeToCurrentPage","rowParams","getCell","indexRelativeToAllColumns","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","GridContextProvider","useGridRefs","mainElementRef","virtualScrollerRef","useGridTheme","isFirstEffect","forceDebug","noopLogger","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","loggerObj","method","message","useGridLoggerFactory","getLogger","EventManager","listener","collection","highPriorityListeners","regularListeners","that","oneTimeListener","Store","_value","l","SYMBOL_API_PRIVATE","isSyntheticEvent","globalId","createPrivateAPI","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","publicApi","currentPublicMethod","createPublicAPI","useGridApiInitialization","inputApiRef","publishEvent","subscribeEvent","useGridLocaleText","getLocaleText","useGridPipeProcessing","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","applyPipeProcessors","context","processors","preProcessingPrivateApi","preProcessingPublicApi","useGridRegisterPipeProcessor","cleanup","registerPreProcessor","useGridRegisterPipeApplier","useGridRegisterStrategyProcessor","strategyName","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","useGridStrategyProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","processorName","otherProcessors","groupPreProcessors","previousProcessor","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","availableStrategyEntry","strategy","setStrategyAvailability","isAvailable","useGridStateInitialization","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","ignoreSetState","updatedControlStateIds","stateId","controlState","oldSubState","newSubState","hasPropChanged","updateControlState","previousState","publicStateApi","privateStateApi","useGridInitialization","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","valueStr","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","CSVRow","serializeRow","buildCSV","rowIds","CSVBody","headerRows","columnGroupLookup","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","writeToClipboardPolyfill","data","span","copyToClipboard","hasNativeSelection","useGridClipboard","ignoreValueFormatterProp","clipboardCopyCellDelimiter","handleCopy","textToCopy","columnMenuStateInitializer","useGridColumnMenu","showColumnMenu","hideColumnMenu","fieldToFocus","visibleOrderedFields","fieldIndex","toggleColumnMenu","columnsStateInitializer","useGridColumns","previousColumnsProp","setGridColumnsState","mergeColumnsState","getColumn","getAllColumns","getVisibleColumns","getColumnIndex","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","updateColumns","setColumnVisibility","isCurrentlyVisible","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","allColumns","oldIndexPosition","updatedColumns","fieldRemoved","setColumnWidth","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","stateRestorePreProcessing","columnVisibilityModelToImport","preferencePanelPreProcessing","initialValue","ColumnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","viewportInnerSize","hydrateColumns","densityStateInitializer","useGridDensity","densityApi","exportedDensity","restoredDensity","exportAs","blob","extension","filename","fullName","url","getColumnsToExport","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","useGridCsvExport","getDataAsCsv","exportedColumns","exportedRowIds","exportDataAsCsv","csv","addExportMenuButtons","getDerivedPaginationModel","paginationState","signature","paginationModelProp","validPage","useGridPaginationModel","setPage","setPageSize","setPaginationModel","handlePaginationModelChange","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","raf","resolve","buildPrintWindow","iframeEl","useGridPrintExport","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","fields","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","getRowsToExport","newRows","handlePrintWindowLoad","printWindow","normalizeOptions","printDoc","gridRootElement","gridClone","gridMain","gridToolbarElementHeight","gridFooterElementHeight","computedTotalHeight","gridFooterElement","defaultPageStyle","styleElement","stylesheetLoadPromises","rootCandidate","headStyleElements","newHeadStyleElements","sheet","styleCSS","attr","handlePrintWindowAfterPrint","printExportApi","mql","filterStateInitializer","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","useGridFilter","updateFilteredRows","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","setFilterModel","getFilterState","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","FilterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","footerId","handleColumnsChange","handleStrategyProcessorChange","updateVisibleRowsLookupState","focusStateInitializer","useGridFocus","lastClickedCell","publishCellFocusOut","setCellFocus","setColumnHeaderFocus","setColumnHeaderFilterFocus","setColumnGroupHeaderFocus","getColumnGroupHeaderFocus","moveFocusToRelativeCell","columnIndexToFocus","currentPageRows","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleCellDoubleClick","handleCellKeyDown","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","focusedColumnGroup","handleBlur","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useEventcallback","currentFocusedCell","focusApi","focusPrivateApi","enrichPageRowsWithPinnedRows","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","headerFilteringEnabled","goToCell","closestColumnToUse","nextCellColSpanInfo","rowIndexRelativeToAllRows","goToHeader","goToHeaderFilter","goToGroupHeader","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","colIndexBefore","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","rowIndexBefore","nextRowIndex","checkIfCanStartEditing","useGridRowCount","rowCountState","paginationMeta","previousPageSize","paginationRowCountApi","exportedRowCount","restoredRowCount","isLastPage","useGridPaginationMeta","paginationMetaApi","newPaginationMeta","exportedPaginationMeta","restoredPaginationMeta","paginationStateInitializer","useGridPagination","preferencePanelStateInitializer","useGridPreferencesPanel","hideTimeout","immediateTimeout","hidePreferences","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","newParams","handleCellFocusOut","handleCellEditStart","startCellEditModeParams","handleCellEditStop","cellToFocusAfter","ignoreModifications","runIfNoFieldErrors","getCellMode","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","startCellEditMode","updateStateToStartCellEditMode","deleteValue","stopCellEditMode","updateStateToStopCellEditMode","finishCellEditMode","rowUpdate","handleError","errorThrown","finalRowUpdate","setCellEditingEditCellValue","skipValueParser","hasChanged","getRowWithUpdatedValuesFromCellEditing","editingApi","editingPrivateApi","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","hasFieldsWithErrors","fieldProps","handleCellFocusIn","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","handleRowEditStop","getRowMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","startRowEditMode","updateStateToStartRowEditMode","stopRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","getRowWithUpdatedValuesFromRowEditing","copyOfPrevRowModesModel","ids","editingStateInitializer","useGridEditing","debounceMap","isCellEditableProp","isCellEditable","maybeDebounce","runImmediately","debounces","runPendingEditCellValueMutation","debouncedField","runCallback","setEditCellValue","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","editingSharedApi","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","useGridRows","lastUpdateMs","lastRowCount","getRow","getRowIdProp","throttledRowsChange","throttle","run","throttleRemainingTimeMs","setRows","prevCache","updateRows","updateServerRows","setLoading","getRowModels","dataRows","getRowsCount","getAllRowIds","getRowIndexRelativeToVisibleRows","setRowChildrenExpansion","isExpanded","currentNode","newNode","getRowNode","getRowGroupChildren","groupId","applySorting","applyFiltering","groupNode","sortedRowIds","startIndex","childId","setRowIndex","targetIndex","allRows","oldIndex","updatedRows","replaceRows","rootGroup","rootGroupChildren","seenIds","removedRowId","rowTreeNodeConfig","dataRowIds","rowApi","rowProApi","rowProPrivateApi","groupRows","handleStrategyActivityChange","applyHydrateRowsProcessor","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","createFlatRowTree","updateFlatRowTree","actions","idsToRemoveFromRootGroup","idToDelete","idToInsert","flatRowTreeCreationMethod","useGridRowsPreProcessors","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","useGridRowSelection","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","checkboxSelection","disableRowSelectionOnClick","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","endId","startId","endIndex","setRowSelectionModel","isRowSelected","isRowSelectable","getSelectedRows","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectRowRange","allPagesRowIds","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","isStateControlled","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","useGridSorting","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortRowList","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","scrollIntoView","clientHeight","offsetHeight","elementBottom","useGridScroll","colRef","scrollToIndexes","scrollCoordinates","cellWidth","elementIndex","targetOffsetHeight","scroll","getScrollPosition","useGridEvents","wait","lastArgs","later","throttled","EMPTY_SIZE","EMPTY_DIMENSIONS","dimensionsStateInitializer","useGridDimensions","errorShown","rootDimensionsRef","dimensionsState","headerFilterHeight","roundToDecimalPlaces","headersTotalHeight","w","savedSize","setSavedSize","debouncedSetSavedSize","previousSize","getRootDimensions","setDimensions","resize","computedStyle","ownerWindow","newSize","areElementSizesEqual","getViewportPageSize","updateDimensions","pinnedRowsHeight","measureScrollbarSize","topContainerHeight","bottomContainerHeight","content","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","rowWidth","newDimensions","prevDimensions","apiPublic","apiPrivate","set","isFirstSizing","handleResize","scrollDiv","decimals","headerAlign","GridColumnGroupHeader","columnGroupsLookup","headerName","render","renderParams","elementId","GridColumnHeaderRow","useGridColumnHeaders","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","renderedColumns","isFirstColumn","getColumnHeadersRow","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","GridColumnHeadersRoot","GridBaseColumnHeaders","GridColumnHeaders","getInnerProps","getColumnGroupHeadersRows","MemoizedGridColumnHeaders","GridDetailPanels","GridPinnedRows","GridNoResultsOverlay","noResultsOverlayLabel","GridColumnUnsortedIcon","nextSortDirection","MUISelectOption","native","MUIMenuItem","iconSlots","materialSlots","MUICheckbox","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","computeSlots","overrides","groupForwardedProps","forwardedProps","useProps","allProps","DATA_GRID_FORCED_PROPS","DATA_GRID_PROPS_DEFAULT_VALUES","useDataGridProps","inProps","themedProps","useThemeProps","localeText","injectDefaultProps","rowsMetaStateInitializer","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","isResized","needsFirstMeasurement","existingBaseRowHeight","rowHeightFromUser","initialHeights","spacing","processedSizes","currentPageTotalHeight","otherSizes","getRowHeight","getRowInternalSizes","setRowHeight","debouncedHydrateRowsMeta","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","rowsMetaPrivateApi","useGridStatePersistence","exportState","restoreState","stateToRestore","useGridColumnSpanning","getCellColSpanInfo","resetColSpan","calculateColSpan","cellProps","calculateCellColSpan","columnSpanningPublicApi","columnSpanningPrivateApi","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","nextColumnIndex","nextColumn","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","haveSameParents","field1","field2","haveDifferentContainers","depthStructure","structure","newField","lastGroup","prevField","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","useGridColumnGrouping","getColumnGroupPath","getAllGroupDetails","handleColumnIndexChange","updateColumnGroupingState","createControllablePromise","reject","_resolve","_reject","trackFinger","currentTouchId","touch","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","computeOffsetToSeparator","flipResizeDirection","getResizeDirection","separator","preventClick","useColumnVirtualizationDisabled","excludeOutliers","inputValues","factor","q1","q3","iqr","deviation","extractColumnWidths","widthByField","widths","filteredWidths","iconContainer","menuContainer","paddingWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","createResizeRefs","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","headerFilterElement","div","finalWidth","updateProperty","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","prevClientX","prevClientY","storeReferences","xStart","handleResizeMouseUp","handleResizeMouseMove","handleTouchEnd","finger","handleTouchStart","cellSeparator","columnHeaderElement","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","columnVirtualizationDisabled","isAutosizingRef","autosizeColumns","userOptions","newColumns","total","remainingWidth","widthPerColumn","useDataGridComponent","DataGridRaw","GridBody","DataGrid","PropTypes","DataGridDetails_1","DataGridDetails","x_data_grid_1","checked","setChecked","unionKeys","rest","colNames","ArrayValue_1","ArrayValue","Attributes_1","UriField_1","UriField","uri","baseUri","href","Attributes","MAX_FIELD_NAME_WIDTH","globalOmit","attributes","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","__jbrowsefmt","formattedAttributes","maxLabelWidth","BaseCard","FeatureDetails","react_error_boundary_1","ExpandMore_1","require$$9","require$$10","require$$11","coreDetails","defaultExpanded","expanded","setExpanded","Position","strandMap","loc","CoreDetails","formattedFeat","displayedDetails","coreRenderedDetails","BaseCoreDetails","BaseAttributes","mate","uniqueId","pm","session","ExtraPanel","BaseFeatureDetail","featureData","g","Attributes_2","makeStyles","SequenceTextArea","copied","setCopied","useState","showGaps","setShowGaps","showEmpty","setShowEmpty","disp","s1","s2","React","Button","copy","Checkbox2"],"mappings":"syBASIA,GAAuB,+CAE3BC,GAAiBD,GCFbA,GAAuBE,GAE3B,SAASC,IAAgB,CAAE,CAC3B,SAASC,IAAyB,CAAE,CACpCA,GAAuB,kBAAoBD,GAE3C,IAAAE,GAAiB,UAAW,CAC1B,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,EAAQ,CAC5E,GAAIA,IAAWZ,GAIf,KAAIa,EAAM,IAAI,MACZ,iLAGN,EACI,MAAAA,EAAI,KAAO,sBACLA,EACV,CACEP,EAAK,WAAaA,EAClB,SAASQ,GAAU,CACjB,OAAOR,CAEX,CAEE,IAAIS,EAAiB,CACnB,MAAOT,EACP,OAAQA,EACR,KAAMA,EACN,KAAMA,EACN,OAAQA,EACR,OAAQA,EACR,OAAQA,EACR,OAAQA,EAER,IAAKA,EACL,QAASQ,EACT,QAASR,EACT,YAAaA,EACb,WAAYQ,EACZ,KAAMR,EACN,SAAUQ,EACV,MAAOA,EACP,UAAWA,EACX,MAAOA,EACP,MAAOA,EAEP,eAAgBV,GAChB,kBAAmBD,EACvB,EAEE,OAAAY,EAAe,UAAYA,EAEpBA,CACT,EC/CSC,GAAA,QAAUd,sDCdfe,GAAyBf,GAC7B,OAAO,eAAegB,GAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACcA,GAAA,QAAG,OAClB,IAAIC,GAAiBF,GAAuBG,GAAA,CAAgC,EACxEC,GAAcC,EACYJ,GAAA,WAAOC,GAAe,YAA2BE,GAAY,KAAK,OAAQ,CACtG,EAAG,8CACL,CAAC,EAAG,YAAY,oECXhB,OAAO,eAAeE,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAClCA,GAAA,mBAAGC,EAC7B,MAAMC,EAAUvB,EACVwB,EAASN,GACTO,EAAkBL,GAClBM,EAAU,IAChB,SAASJ,EAAmBK,EAAOC,EAASC,EAAUC,EAAW,CAC7D,KAAM,CAACC,EAAUC,CAAW,KAAQT,EAAQ,UAAQ,EAC9C,CAACU,EAAOC,CAAQ,KAAQX,EAAQ,UAAQ,EAC9C,SAAIA,EAAQ,WAAW,IAAM,CACzB,IAAIY,EACJ,GAAI,CAACR,EACD,OAEJ,KAAM,CAAE,gBAAAS,EAAiB,WAAAC,CAAY,KAAOb,EAAO,YAAYG,CAAK,EAC9D,CAACW,CAAY,IAAMH,EAAKR,EAAM,QAAU,MAAQQ,IAAO,OAAS,OAASA,EAAG,gBAAkB,CAAA,EACpG,eAAeI,EAASC,EAAOC,EAAKC,EAAS,CACzC,MAAMC,EAAW,MAAMP,EAAgB,gBAAgBE,CAAY,EACnE,GAAI,CAACK,EACD,MAAM,IAAI,MAAM,oBAAoB,EAExC,MAAMC,EAAY,cACZC,EAAQ,MAAMR,EAAW,KAAKO,EAAW,kBAAmB,CAC9D,iBAAmBnB,EAAgB,SAASkB,EAAU,CAAC,WAAY,SAAS,CAAC,EAC7E,UAAAC,EACA,QAAS,CACL,CACI,MAAAJ,EACA,IAAAC,EACA,QAASE,EAAS,oBAAoBD,CAAO,EAC7C,aAAAJ,CACH,CACJ,CACjB,CAAa,EACK,CAACQ,CAAI,EAAID,EACf,OAAQC,GAAS,KAA0B,OAASA,EAAK,IAAI,KAAK,IAAM,EAC3E,EAGA,SAAY,CACT,GAAI,CACAZ,EAAS,MAAS,EAClB,KAAM,CAAE,MAAAM,EAAO,IAAAC,EAAK,QAAAC,CAAO,EAAKd,EAChC,GAAI,CAACE,GAAaW,EAAMD,EAAQd,EAC5BM,EAAY,CACR,MAAO,gCAAgCN,CAAO,wCACtE,CAAqB,MAEA,CACD,MAAMqB,EAAIP,EAAQX,EACZmB,EAAIP,EAAMZ,EACVoB,EAAM,MAAMV,EAASC,EAAOC,EAAKC,CAAO,EACxCQ,EAAK,MAAMX,EAAS,KAAK,IAAI,EAAGQ,CAAC,EAAGP,EAAOE,CAAO,EAClDS,EAAO,MAAMZ,EAASE,EAAKO,EAAGN,CAAO,EAC3CV,EAAY,CAAE,IAAAiB,EAAK,SAAUC,EAAI,WAAYC,CAAI,CAAE,CACtD,CACJ,OACMH,EAAG,CACN,QAAQ,MAAMA,CAAC,EACfd,EAASc,CAAC,CACb,CACb,IACK,EAAE,CAACpB,EAASD,EAAOE,EAAUC,CAAS,CAAC,EACjC,CAAE,SAAAC,EAAU,MAAAE,EACvB,iEChEA,IAAImB,EAAmBC,GAAQA,EAAK,kBAAqB,OAAO,OAAU,SAASC,EAAG,EAAGC,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,IAAIE,EAAO,OAAO,yBAAyB,EAAGF,CAAC,GAC3C,CAACE,IAAS,QAASA,EAAO,CAAC,EAAE,WAAaA,EAAK,UAAYA,EAAK,iBAClEA,EAAO,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAO,EAAEF,CAAC,CAAE,IAE3D,OAAO,eAAeD,EAAGE,EAAIC,CAAI,CACpC,EAAK,SAASH,EAAG,EAAGC,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BD,EAAEE,CAAE,EAAI,EAAED,CAAC,CACd,GACGG,EAAsBL,GAAQA,EAAK,qBAAwB,OAAO,OAAU,SAASC,EAAGK,EAAG,CAC3F,OAAO,eAAeL,EAAG,UAAW,CAAE,WAAY,GAAM,MAAOK,CAAC,CAAE,CACtE,EAAK,SAASL,EAAGK,EAAG,CAChBL,EAAE,QAAaK,CACnB,GACIC,EAAgBP,GAAQA,EAAK,cAAiB,SAAUQ,EAAK,CAC7D,GAAIA,GAAOA,EAAI,WAAY,OAAOA,EAClC,IAAIC,EAAS,CAAA,EACb,GAAID,GAAO,KAAM,QAASN,KAAKM,EAASN,IAAM,WAAa,OAAO,UAAU,eAAe,KAAKM,EAAKN,CAAC,GAAGH,EAAgBU,EAAQD,EAAKN,CAAC,EACvI,OAAAG,EAAmBI,EAAQD,CAAG,EACvBC,CACX,EACA,OAAO,eAAeC,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAMxC,EAAUqC,EAAa5D,CAAgB,EACvCgE,EAAa9C,GACb+C,EAAO7C,GACP8C,EAAQC,GACRC,EAAeC,GACfC,KAAgBJ,EAAM,YAAU,EAAIK,IAAU,CAChD,QAAS,CACL,OAAQA,EAAM,QAAQ,CAAC,EACvB,MAAO,GACV,EACD,cAAe,CACX,MAAO,MACV,EACD,KAAM,CACF,QAAS,CACZ,CACJ,EAAC,EACF,SAASC,EAAWnE,EAAO,CACvB,OAAQkB,EAAQ,QAAQ,cAAc,MAAO,KACzCA,EAAQ,QAAQ,cAAcyC,EAAW,UAAW,CAAE,GAAG3D,CAAO,CAAA,CAAC,CACxE,CACD,SAASoE,EAAa,CAAE,SAAAC,GAAY,CAChC,OAAQnD,EAAQ,QAAQ,cAAc,MAAO,KACzCA,EAAQ,QAAQ,cAAcyC,EAAW,YAAa,KAAMU,CAAQ,CAAC,CAC5E,CACD,MAAMC,KAAoCP,EAAa,UAAU,SAAU,CAAE,YAAAQ,EAAa,MAAAjD,GAAU,CAChG,KAAM,CAAE,QAAAkD,GAAYP,IACd,CAAE,aAAAQ,CAAc,EAAGnD,EACnB,CAACoD,EAAUC,CAAW,KAAQzD,EAAQ,UAAU,GAAGI,EAAM,QAAQ,EAAE,EACnE,CAACE,EAAUoD,CAAW,KAAQ1D,EAAQ,UAAU,GAAGI,EAAM,QAAQ,EAAE,EACnEuD,EAAgB,CAAC,OAAO,MAAM,CAACH,CAAQ,EACvCI,EAAgB,CAAC,OAAO,MAAM,CAACtD,CAAQ,EAC7C,OAAQN,EAAQ,QAAQ,cAAc0C,EAAK,OAAQ,CAAE,SAAU,KAAM,KAAM,GAAM,QAAS,IAAMW,EAAa,EAAE,MAAO,2BAA6B,EAC/IrD,EAAQ,QAAQ,cAAcyC,EAAW,cAAe,CAAE,UAAWa,EAAQ,aAAe,EACxFtD,EAAQ,QAAQ,cAAciD,EAAY,CAAE,MAAO,yDAA0D,UAAWK,EAAQ,QAAS,MAAOE,EAAU,WAAaG,EAAiC,GAAjB,eAAqB,MAAO,CAACA,EAAe,SAAUE,GAASJ,EAAYI,EAAM,OAAO,KAAK,CAAC,CAAE,EACvR7D,EAAQ,QAAQ,cAAciD,EAAY,CAAE,MAAO,uDAAwD,UAAWK,EAAQ,QAAS,MAAOhD,EAAU,WAAasD,EAAiC,GAAjB,eAAqB,MAAO,CAACA,EAAe,SAAUC,GAASH,EAAYG,EAAM,OAAO,KAAK,CAAC,CAAE,EACrR7D,EAAQ,QAAQ,cAAckD,EAAc,KACxClD,EAAQ,QAAQ,cAAcyC,EAAW,UAAW,KAAM,yBAAyB,EACnFzC,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,CAAE,MAAOc,EAAe,MAAQ,YAAa,SAAU9B,GAAKrB,EAAM,gBAAgBqB,EAAE,OAAO,QAAU,KAAK,CAAG,EAC9JzB,EAAQ,QAAQ,cAAcyC,EAAW,iBAAkB,CAAE,MAAO,MAAO,QAASzC,EAAQ,QAAQ,cAAcyC,EAAW,MAAO,CAAE,UAAWa,EAAQ,KAAM,KAAM,QAAS,EAAG,MAAO,gDAAiD,EACzOtD,EAAQ,QAAQ,cAAcyC,EAAW,iBAAkB,CAAE,MAAO,YAAa,QAASzC,EAAQ,QAAQ,cAAcyC,EAAW,MAAO,CAAE,UAAWa,EAAQ,KAAM,KAAM,OAAS,CAAA,EAAG,MAAO,+CAAiD,CAAA,CAAC,CAAC,CAAC,EAC9PtD,EAAQ,QAAQ,cAAcyC,EAAW,cAAe,KACpDzC,EAAQ,QAAQ,cAAcyC,EAAW,OAAQ,CAAE,QAAS,IAAM,CAC1DrC,EAAM,YAAY,CAACoD,CAAQ,EAC3BpD,EAAM,YAAY,CAACE,CAAQ,EAC3B+C,GACpB,EAAmB,SAAU,CAACM,GAAiB,CAACC,EAAe,MAAO,UAAW,QAAS,WAAa,EAAE,QAAQ,EACrG5D,EAAQ,QAAQ,cAAcyC,EAAW,OAAQ,CAAE,QAAS,IAAMY,EAAa,EAAE,MAAO,YAAa,UAAW,GAAM,QAAS,aAAe,QAAQ,CAAC,CAAC,CACpK,CAAC,EACD,OAAAb,GAAA,QAAkBY,+CCzElB,IAAIvB,EAAmBC,GAAQA,EAAK,kBAAqB,OAAO,OAAU,SAASC,EAAG+B,EAAG9B,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,IAAIE,EAAO,OAAO,yBAAyB4B,EAAG9B,CAAC,GAC3C,CAACE,IAAS,QAASA,EAAO,CAAC4B,EAAE,WAAa5B,EAAK,UAAYA,EAAK,iBAClEA,EAAO,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAO4B,EAAE9B,CAAC,CAAE,IAE3D,OAAO,eAAeD,EAAGE,EAAIC,CAAI,CACpC,EAAK,SAASH,EAAG+B,EAAG9B,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BD,EAAEE,CAAE,EAAI6B,EAAE9B,CAAC,CACd,GACGG,EAAsBL,GAAQA,EAAK,qBAAwB,OAAO,OAAU,SAASC,EAAGK,EAAG,CAC3F,OAAO,eAAeL,EAAG,UAAW,CAAE,WAAY,GAAM,MAAOK,CAAC,CAAE,CACtE,EAAK,SAASL,EAAGK,EAAG,CAChBL,EAAE,QAAaK,CACnB,GACIC,EAAgBP,GAAQA,EAAK,cAAiB,SAAUQ,EAAK,CAC7D,GAAIA,GAAOA,EAAI,WAAY,OAAOA,EAClC,IAAIC,EAAS,CAAA,EACb,GAAID,GAAO,KAAM,QAASN,KAAKM,EAASN,IAAM,WAAa,OAAO,UAAU,eAAe,KAAKM,EAAKN,CAAC,GAAGH,EAAgBU,EAAQD,EAAKN,CAAC,EACvI,OAAAG,EAAmBI,EAAQD,CAAG,EACvBC,CACX,EACIwB,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe0B,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAMhE,EAAUqC,EAAa5D,CAAgB,EACvCoE,EAAelD,GACfsE,EAAsBF,EAAgBlE,GAAA,CAA4B,EAClEqE,EAAetB,GAEfuB,EAAwBJ,EAAgBjB,EAA0C,EAElFsB,EAAaL,EAAgBM,EAAuC,EACpEC,EAAaP,EAAgBQ,EAAuC,EAEpEnB,KAAoCpD,EAAQ,MAAM,IAAM,QAAQ,UAAU,KAAK,IAAMqC,EAAamC,GAA2B,CAAA,CAAC,CAAC,EAC/HC,KAA0B5B,EAAa,UAAU7C,EAAQ,QAAQ,WAAW,SAA8B,CAAE,MAAAI,EAAO,WAAAsE,EAAa,CAAE,CAAA,EAAIC,EAAK,CAC7I,GAAI,OAAOA,GAAQ,WACf,MAAM,IAAI,MAAM,0BAA0B,EAE9C,KAAM,CAACC,EAAcC,CAAe,KAAQ7E,EAAQ,UAAU,EAAK,EAC7D,CAAE,uBAAA8E,EAAwB,wBAAAC,CAAyB,EAAG3E,EAC5D,OAAQJ,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAC5DA,EAAQ,QAAQ,cAAcmE,EAAsB,QAAS,CAAE,UAAW,CAClE,CACI,MAAO,iBACP,QAAS,IAAM,CACX,MAAMa,EAAIL,GAAQ,KAAyB,OAASA,EAAI,QACpDK,MACIf,EAAoB,SAASe,EAAE,aAAe,GAAI,CAAE,OAAQ,YAAY,CAAE,CAErF,CACJ,EACD,CACI,MAAO,YACP,QAAS,IAAM,CACX,MAAMA,EAAIL,GAAQ,KAAyB,OAASA,EAAI,QACpDK,MACIf,EAAoB,SAASe,EAAE,UAAW,CAAE,OAAQ,WAAW,CAAE,CAE5E,CACJ,EACD,CACI,MAAO,qBACP,QAAS,IAAM,CACX,MAAMA,EAAIL,GAAQ,KAAyB,OAASA,EAAI,QACpDK,MACId,EAAa,QAAQ,IAAI,KAAK,CAACc,EAAE,aAAe,EAAE,EAAG,CACrD,KAAM,0BACtC,CAA6B,EAAG,cAAc,CAEzB,CACJ,EACD,CACI,MAAO,gBACP,QAAS,IAAM,CACX,MAAMA,EAAIL,GAAQ,KAAyB,OAASA,EAAI,QACpDK,MACId,EAAa,QAAQ,IAAI,KAAK,CAACc,EAAE,WAAa,EAAE,EAAG,CACnD,KAAM,yBACtC,CAA6B,EAAG,eAAe,CAE1B,CACJ,EACD,GAAGN,EACH,CACI,MAAO,oBACP,KAAM,UACN,QAAS,CACL,CACI,MAAO,iBACP,KAAM,QACN,QAASI,IAA2B,OACpC,QAAS,IAAM1E,EAAM,mBAAmB,MAAM,CACjD,EACD,CACI,MAAO,wCACP,KAAM,QACN,QAAS0E,IAA2B,WACpC,QAAS,IAAM1E,EAAM,mBAAmB,UAAU,CACrD,EACD,GAAI2E,EACE,CACE,CACI,MAAO,6FACP,KAAM,QACN,QAASD,IAA2B,UACpC,QAAS,IAAM1E,EAAM,mBAAmB,SAAS,CACpD,CACJ,EACC,EACT,CACJ,EACD,CACI,MAAO,WACP,KAAMkE,EAAW,QACjB,QAAS,IAAMO,EAAgB,EAAI,CACtC,CACjB,CAAe,EACH7E,EAAQ,QAAQ,cAAcoE,EAAW,QAAS,IAAI,CAAC,EAC3DQ,EAAgB5E,EAAQ,QAAQ,cAAcoD,EAA+B,CAAE,MAAOhD,EAAO,YAAa,IAAMyE,EAAgB,EAAK,CAAC,CAAE,EAAK,IAAI,CACxJ,CAAA,CAAC,EACFb,OAAAA,GAAA,QAAkBS,qDC5HlB,IAAIV,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe2C,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAMjF,EAAU+D,EAAgBtF,CAAgB,EAC1CgE,EAAa9C,GACbkD,EAAehD,GAEfkD,KADQH,GACc,cAAc,CACtC,YAAa,CACT,OAAQ,EACR,WAAY,CACf,CACL,CAAC,EACKsC,KAA2BrC,EAAa,UAAU,SAAU,CAAE,MAAAzC,CAAK,EAAK,CAC1E,KAAM,CAAE,QAAAkD,GAAYP,IACd,CAAE,SAAAS,EAAU,SAAAlD,EAAU,KAAA6E,EAAM,OAAAC,EAAQ,aAAAC,CAAc,EAAGjF,EAC3D,OAAQJ,EAAQ,QAAQ,cAAcyC,EAAW,YAAa,CAAE,UAAWa,EAAQ,WAAa,EAC5FtD,EAAQ,QAAQ,cAAcyC,EAAW,OAAQ,CAAE,KAAM,QAAS,MAAO0C,EAAM,SAAUtB,GAASzD,EAAM,QAAQyD,EAAM,OAAO,KAAK,CAAC,EAAI,OAAO,QAAQ,CAClJ,GAAIuB,EACE,CACE,IAAK,KACR,EACC,GACN,GAAIA,EACE,CACE,QAAS,SACZ,EACC,GACN,GAAIC,EACE,CACE,KAAM,MACT,EACC,GACN,GAAIA,EACE,CACE,KAAM,yBACT,EACC,GACN,GAAIA,EACE,CACE,kBAAmB,+BAA+B/E,CAAQ,mBAC7D,EACC,GACN,GAAI+E,EACE,CACE,sBAAuB,cAAc7B,CAAQ,WAChD,EACC,GACN,GAAI6B,EACE,CACE,mCAAoC,cAAc7B,CAAQ,iBAAiBlD,CAAQ,oBACtF,EACC,GACN,GAAK+E,EAIC,GAHA,CACE,QAAS,SACZ,EAEL,GAAKA,EAIC,GAHA,CACE,8BAA+B,eAAe/E,CAAQ,mBACzD,CAEjB,CAAS,EAAE,IAAI,CAAC,CAACgF,EAAKC,CAAG,IAAOvF,EAAQ,QAAQ,cAAcyC,EAAW,SAAU,CAAE,IAAK6C,EAAK,MAAOA,CAAG,EAAIC,CAAG,CAAE,CAAC,CAAC,CACpH,CAAC,EACDN,OAAAA,GAAA,QAAkBC,qBClElB,OAAO,eAAeM,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC9CA,GAAA,OAAGC,GACHD,GAAA,OAAGE,GACFF,GAAA,QAAGG,GACGH,GAAA,cAAGI,GACFJ,GAAA,eAAGK,GACTL,GAAA,SAAGM,GACnB,SAASL,GAAOM,EAAUvF,EAAU,CAChC,OAAOuF,EAAS,IAAIC,GAAOxF,EAAS,MAAMwF,EAAI,MAAOA,EAAI,GAAG,CAAC,EAAE,KAAK,EAAE,CAC1E,CAEA,SAASC,GAAU1E,EAAM,CACrB,MAAO,GAAGA,EAAK,KAAK,IAAIA,EAAK,GAAG,EACpC,CAEA,SAASmE,GAAOQ,EAAM,CAClB,OAAOA,EAAK,OAAO,CAACC,EAAMC,EAAKC,IAAQ,CAACD,GAAOH,GAAUE,CAAI,IAAMF,GAAUI,EAAID,EAAM,CAAC,CAAC,CAAC,CAC9F,CACA,SAAST,GAAQO,EAAMI,EAAQ,CAC3B,OAAOJ,EACF,IAAIF,IAAQ,CACb,GAAGA,EACH,MAAOM,EAASN,EAAI,IACpB,IAAKM,EAASN,EAAI,KAC1B,EAAM,EACG,KAAK,CAACO,EAAG/E,IAAM+E,EAAE,MAAQ/E,EAAE,KAAK,CACzC,CACA,SAASoE,GAAcY,EAAKC,EAAO,CAE/B,GAAI,CAACD,EAAI,OACL,MAAO,GAEX,MAAME,EAAWF,EAAI,GAAG,CAAC,EACnBG,EAAUH,EAAI,GAAG,EAAE,EACnBI,EAAcH,EAAM,UAAUI,GAAQA,EAAK,KAAOH,EAAS,OAASG,EAAK,OAASH,EAAS,KAAK,EAChGI,EAAaL,EAAM,UAAUI,GAAQA,EAAK,KAAOF,EAAQ,KAAOE,EAAK,OAASF,EAAQ,GAAG,EACzFI,EAAcN,EAAMK,CAAU,EAC9BE,EAAeP,EAAMG,CAAW,EAChCK,EAAW,CACb,GAAGR,EAAM,MAAM,EAAGG,CAAW,EAC7B,CAAE,MAAOI,EAAa,MAAO,IAAKN,EAAS,KAAO,CAC1D,EAAM,IAAIQ,IAAQ,CAAE,GAAGA,EAAK,KAAM,gBAAkB,EAAC,EAC3CC,EAAY,CACd,CAAE,MAAOR,EAAQ,IAAK,IAAKI,EAAY,GAAK,EAC5C,GAAGN,EAAM,MAAMK,EAAa,CAAC,CACrC,EAAM,IAAII,IAAQ,CAAE,GAAGA,EAAK,KAAM,iBAAmB,EAAC,EAClD,MAAO,CAAC,GAAGD,EAAU,GAAGE,CAAS,CACrC,CAEA,SAAStB,GAAeW,EAAKY,EAAY,CACrC,GAAI,CAACZ,EAAI,OACL,MAAO,GAEX,MAAME,EAAWF,EAAI,GAAG,CAAC,EACnBG,EAAUH,EAAI,GAAG,EAAE,EACnBS,EAAW,CAAC,CAAE,MAAOG,EAAW,MAAO,IAAKV,EAAS,KAAO,CAAA,EAAE,IAAIQ,IAAQ,CAAE,GAAGA,EAAK,KAAM,gBAAkB,EAAC,EAC7GC,EAAY,CAAC,CAAE,MAAOR,EAAQ,IAAK,IAAKS,EAAW,GAAG,CAAE,EAAE,IAAIF,IAAQ,CACxE,GAAGA,EACH,KAAM,iBACT,EAAC,EACF,MAAO,CAAC,GAAGD,EAAU,GAAGE,CAAS,CACrC,CACA,SAASrB,GAASuB,EAAM,CACpB,OAAOA,EAAK,OAAS,GAAK,GAAGA,EAAK,MAAM,EAAG,EAAE,CAAC,MAAQA,CAC1D,uDChEA,OAAO,eAAe7B,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5DA,GAAA,YAAsBA,GAAA,kBAA4BA,GAAA,SAAmBA,GAAA,aAAuBA,GAAA,SAAmBA,GAAA,YAAsB,OAClHA,GAAA,YAAG8B,EAGH9B,GAAA,YAAG,OACNA,GAAA,SAAG,mBACCA,GAAA,aAAG,mBACPA,GAAA,SAAG,mBACMA,GAAA,kBAAG,oBACTA,GAAA,YAAG,mBACtB,SAAS8B,EAAY,CAAE,IAAAC,EAAK,iBAAAC,EAAkB,gBAAAC,EAAiB,cAAAC,EAAgB,EAAG,UAAAC,EAAY,IAAO,CACjG,IAAI/G,EACJ,MAAMgH,EAAY,KAAK,KAAKL,EAAI,OAASC,CAAgB,EACnDK,EAAS,IAAI,MAAMD,CAAS,EAClC,IAAIE,EAAaJ,EAAgB,GAC7BK,EAAO,EACPC,EAAS,EACb,KAAOD,EAAOH,EAAY,EAAG,EAAEG,EAAM,CACjC,MAAME,EAAMF,IAAS,EAAIP,EAAmBE,EAAgBF,EACtDxC,EAAIuC,EAAI,MAAMS,EAAQA,EAASC,CAAG,EACxC,GAAI,CAACjD,EACD,MAEJ,GAAIyC,EAAiB,CACjB,IAAIS,EAAM,GACV,QAASC,EAAI,EAAGC,EAAIN,EAAYK,EAAInD,EAAE,OAAQmD,IAAKC,IAG3CA,EAAIT,IAAc,IAClBO,GAAO,IACPE,EAAI,GAERF,GAAOlD,EAAEmD,CAAC,EAEVD,IACAL,EAAOE,CAAI,EAAIG,EAEtB,MAEGL,EAAOE,CAAI,EAAI/C,EAEnB8C,EAAa,EACbE,GAAUC,CACb,CACD,MAAO,CACH,SAAUJ,EACV,cAAejH,EAAKiH,EAAO,GAAG,EAAE,KAAO,MAAQjH,IAAO,OAAS,OAASA,EAAG,WAAW,IAAK,EAAE,EAAE,SAAW,IACrGmH,EAAO,EAAIL,EAAgB,IAC5BF,CACZ,CACA,2DCnDA,IAAIzD,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe+F,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAMrI,EAAU+D,EAAgBtF,CAAgB,EAE1C6J,KADe3I,GACoB,UAAU,SAAU,CAAE,OAAAkI,EAAQ,MAAA5G,EAAO,MAAAsH,EAAO,OAAAC,EAAS,EAAG,WAAAC,EAAaxH,EAAO,MAAAb,CAAK,EAAK,CAC3H,KAAM,CAAE,iBAAAoH,EAAkB,gBAAAC,CAAiB,EAAGrH,EAC9C,OAAOyH,EAAO,IAAI,CAACa,EAAOC,IAAQ,CAC9B,IAAI/H,EACJ,MAAMgI,EAAIH,EAAcxH,EAAQuG,EAC1BqB,EAAUF,GAAO,GAAK1H,EAAQuG,GAAoB,GAAMmB,EAAM,EAC9D,GAAGC,EAAID,EAAMH,EAAShB,CAAgB,GAAG,SAAS,CAAC,EAAI,MACvD,GACAsB,EAAUH,IAAQd,EAAO,OAAS,MACjCjH,EAAKiH,EAAO,GAAG,EAAE,KAAO,MAAQjH,IAAO,OAAS,OAASA,EAAG,WAAW,IAAK,EAAE,EAAE,SAAW,IACzF+H,IAAQ,EAAI1H,EAAQuG,EAAmB,KACxCA,EACF,KACAC,EACI;AAAA,EACA,GACV,OAAQzH,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,CAAE,IAAK,GAAG0I,CAAK,IAAIC,CAAG,EAAI,EACtFlB,EAAkBoB,EAAS,KAC3B7I,EAAQ,QAAQ,cAAc,OAAQ,CAAE,MAAO,CAAE,WAAYuI,EAAS,EAAEG,CAAK,EAC7EI,CAAO,CACnB,CAAK,CACL,CAAC,EACDT,OAAAA,GAAA,QAAkBC,+CC5BlB,IAAIvE,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAeyG,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAM/I,EAAU+D,EAAgBtF,CAAgB,EAC1CoE,EAAelD,GACfM,EAASJ,KACTwI,EAAoBtE,EAAgBnB,GAAA,CAA4B,EAChEoG,KAAmBnG,EAAa,UAAU,SAAU,CAAE,IAAAoG,EAAK,IAAAzC,EAAK,MAAAC,EAAO,SAAAjG,EAAU,SAAA0I,EAAU,WAAAC,EAAY,QAAA9I,EAAS,eAAA+I,EAAgB,eAAAC,EAAgB,MAAAjJ,GAAU,CAC5J,IAAIQ,EACJ,KAAM,CAAE,aAAA2C,EAAc,SAAAC,EAAU,iBAAAgE,EAAkB,gBAAAC,EAAiB,uBAAA3C,CAAyB,EAAG1E,EACzFkJ,EAAS9C,EAAI,OAAS,EACtBqB,GAAUrB,EAAI,OAAS,CAAC,GAAGA,EAAK,GAAGyC,CAAG,EAAE,KAAK,CAAC1C,EAAG/E,IAAM+E,EAAE,MAAQ/E,EAAE,KAAK,EAAIiF,GAAO,OAAOmC,GAAKA,EAAE,QAAUA,EAAE,GAAG,EAChHW,EAAWC,GAAOjG,EAAeiG,EAAE,YAAW,EAAKA,EACnDC,EAAWD,GAAOjG,EAAeiG,EAAE,YAAW,EAAKA,EACnDhB,EAASnI,EAAQ,SAAW,GAAK,GAAK,EACtCqJ,EAAyB5E,IAA2B,WAAasE,GAAkB,CAACC,EACpFM,EAAOD,EAAyBlB,EAAS,EAC/C,IAAIC,EAAaiB,EACXlB,EAAS,EACLnI,EAAQ,MAAQ,IAAM6I,GAAa,KAA8B,OAASA,EAAS,SAAW,GAC9F7I,EAAQ,MAAQ6I,GAAa,KAA8B,OAASA,EAAS,SAAW,GAC5F,EACFU,EAAY,EACZlC,EAAgB,EAChBmC,EAAgB,KACpB,GAAIX,EAAU,CACV,KAAM,CAAE,SAAAY,EAAU,UAAAC,CAAW,KAAO9J,EAAO,aAAa,CACpD,IAAKsJ,EAAQL,CAAQ,EACrB,iBAAA1B,EACA,gBAAAC,CACZ,CAAS,EACDoC,EAAiB7J,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,MAAOjI,EAAO,MAAOH,EAAO,kBAAmB,OAAQ0J,EAAM,MAAOC,EAAW,WAAYnB,EAAY,OAAQqB,CAAU,CAAA,EACrMpC,EAAgBqC,EAChBH,EAAYA,EAAYV,EAAS,OAASS,EAC1ClB,EAAaA,EAAaS,EAAS,OAASS,CAC/C,CACD,MAAMK,EAAe,CAAA,EACrB,QAASrB,EAAM,EAAGA,EAAMd,EAAO,OAAQc,IAAO,CAC1C,MAAMD,EAAQb,EAAOc,CAAG,EAClBsB,EAASzJ,EAAS,MAAMkI,EAAM,KAAM9H,EAAKiH,EAAOc,EAAM,CAAC,KAAO,MAAQ/H,IAAO,OAAS,OAASA,EAAG,KAAK,EACvG4I,EAAIhJ,EAAS,MAAMkI,EAAM,MAAOA,EAAM,GAAG,EACzC,CAAE,SAAAoB,EAAU,UAAAC,CAAW,KAAO9J,EAAO,aAAa,CACpD,IAAKqJ,EACCZ,EAAM,OAAS,MACXe,EAAQD,CAAC,EACTD,EAAQC,CAAC,EACbC,EAAQD,CAAC,EACf,iBAAAhC,EACA,cAAAE,EACA,gBAAAD,CACZ,CAAS,EAKD,GAJAuC,EAAa,KAAKhK,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,IAAK,KAAK,UAAUK,CAAK,EAAI,OAAQ,MAAOtI,EAAO,MAAOsI,EAAM,OAAS,MAAQzI,EAAO,SAAWA,EAAO,SAAU,OAAQ0J,EAAM,MAAOC,EAAW,WAAYnB,EAAY,OAAQqB,CAAU,CAAA,CAAC,EAC5QpC,EAAgBqC,EAChBH,EAAYA,EAAYJ,EAAE,OAASG,EACnClB,EAAaA,EAAae,EAAE,OAASG,EACjCM,GAAUb,GAAkBT,EAAMd,EAAO,OAAS,EAAG,CACrD,MAAMN,EAAMgC,EAAQF,GAAkBY,EAAO,OAASzG,EAAW,EAC3D,GAAGyG,EAAO,MAAM,EAAGzG,CAAQ,CAAC,MAAMyG,EAAO,MAAM,CAACzG,CAAQ,CAAC,GACzDyG,CAAM,EACN,CAAE,SAAAH,EAAU,UAAAC,CAAW,KAAO9J,EAAO,aAAa,CACpD,IAAAsH,EACA,iBAAAC,EACA,cAAAE,EACA,gBAAAD,CAChB,CAAa,EACGqC,EAAS,SACTE,EAAa,KAAKhK,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,IAAK,KAAK,UAAUK,CAAK,EAAI,UAAW,MAAOtI,EAAO,OAAQuJ,EAAM,WAAYlB,EAAY,MAAOmB,EAAW,OAAQE,CAAQ,CAAE,CAAC,EAC9MpC,EAAgBqC,EAChBH,EAAYA,EAAYrC,EAAI,OAASoC,EACrClB,EAAaA,EAAalB,EAAI,OAASoC,EAE9C,CACJ,CACD,IAAIO,EAAkB,KACtB,GAAIf,EAAY,CACZ,KAAM,CAAE,SAAAW,CAAQ,KAAS7J,EAAO,aAAa,CACzC,IAAKsJ,EAAQJ,CAAU,EACvB,iBAAA3B,EACA,cAAAE,EACA,gBAAAD,CACZ,CAAS,EACDyC,EAAmBlK,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,MAAOuB,EAAW,MAAOxJ,EAAO,OAAQuJ,EAAM,OAAQG,EAAU,WAAYrB,EAAY,MAAOxI,EAAO,iBAAmB,CAAA,CAC1M,CACD,OAAQD,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAC5D6J,EACAG,EACAE,CAAe,CACvB,CAAC,EACDnB,OAAAA,GAAA,QAAkBC,qDCzFlB,IAAIjF,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe6H,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAMnK,EAAU+D,EAAgBtF,CAAgB,EAC1CoE,EAAelD,GAEfM,EAASJ,GACTuK,EAASxH,KACTyF,EAAoBtE,EAAgBjB,GAAA,CAA4B,EAChEuH,KAAsBxH,EAAa,UAAU,SAAU,CAAE,IAAA2D,EAAK,SAAAhG,EAAU,WAAA8J,EAAY,MAAAlK,GAAU,CAChG,KAAM,CAAE,iBAAAoH,EAAkB,gBAAAC,CAAiB,EAAGrH,EACxCmH,KAAUtH,EAAO,QAAQuG,EAAKhG,CAAQ,EAC5C,IAAI+J,EAAU,GACd,QAASpC,EAAI,EAAGA,EAAIZ,EAAI,OAAQY,GAAK,EAEjCoC,GAAWD,EAAW/C,EAAI,MAAMY,EAAGA,EAAI,CAAC,CAAC,GAAK,IAElD,KAAM,CAAE,SAAA2B,CAAQ,KAASM,EAAO,aAAa,CACzC,IAAKG,EACL,iBAAA/C,EACA,gBAAAC,CACR,CAAK,EACD,OAAQzH,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,MAAOjI,EAAO,MAAOgK,EAAO,aAAc,OAAQN,EAAU,MAAO,CAAC,CAAE,CAC7I,CAAC,EACDK,OAAAA,GAAA,QAAkBE,qDCzBlB,IAAItG,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAekI,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAMxK,EAAU+D,EAAgBtF,CAAgB,EAC1CoE,EAAelD,GAEfM,EAASJ,KACTwI,EAAoBtE,EAAgBnB,GAAA,CAA4B,EAChE6H,KAAsB5H,EAAa,UAAU,SAAU,CAAE,SAAArC,EAAU,SAAA0I,EAAU,QAAA7I,EAAS,WAAA8I,EAAY,MAAA/I,GAAU,CAC9G,KAAM,CAAE,iBAAAoH,EAAkB,uBAAA1C,EAAwB,gBAAA2C,CAAe,EAAKrH,EACtE,IAAIwJ,EAAY,EACZC,EAAgB,KAChBnC,EAAgB,EACpB,MAAMc,EAASnI,EAAQ,SAAW,GAAK,GAAK,EACtCqJ,EAAyB5E,IAA2B,UACpD6E,EAAOD,EAAyBlB,EAAS,EAC/C,IAAIC,EAAaiB,EACXlB,EAAS,EACLnI,EAAQ,MAAQ,IAAM6I,GAAa,KAA8B,OAASA,EAAS,SAAW,GAC9F7I,EAAQ,MAAQ6I,GAAa,KAA8B,OAASA,EAAS,SAAW,GAC5F,EACN,GAAIA,EAAU,CACV,KAAM,CAAE,SAAAY,EAAU,UAAAC,CAAW,KAAO9J,EAAO,aAAa,CACpD,IAAKiJ,EACL,iBAAA1B,EACA,gBAAAC,CACZ,CAAS,EACDoC,EAAiB7J,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,MAAOjI,EAAO,MAAOH,EAAO,kBAAmB,MAAO2J,EAAW,WAAYnB,EAAY,OAAQqB,CAAU,CAAA,EACvLpC,EAAgBqC,EAChBH,EAAYA,EAAYV,EAAS,OAASS,EAC1ClB,EAAaA,EAAaS,EAAS,OAASS,CAC/C,CACD,KAAM,CAAE,SAAAG,EAAU,UAAAC,CAAW,KAAO9J,EAAO,aAAa,CACpD,IAAKO,EACL,iBAAAgH,EACA,gBAAAC,EACA,cAAAC,CACR,CAAK,EACKgD,EAAe1K,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,MAAOjI,EAAO,MAAOH,EAAO,YAAa,MAAO2J,EAAW,WAAYnB,EAAY,OAAQqB,CAAU,CAAA,EACrLpC,EAAgBqC,EAChBH,GAAapJ,EAAS,OAASmJ,EAC/BlB,EAAaA,EAAajI,EAAS,OAASmJ,EAC5C,IAAIO,EAAkB,KACtB,GAAIf,EAAY,CACZ,KAAM,CAAE,SAAAW,CAAQ,KAAS7J,EAAO,aAAa,CACzC,IAAKkJ,EACL,iBAAA3B,EACA,cAAAE,EACA,gBAAAD,CACZ,CAAS,EACDyC,EAAmBlK,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,MAAOuB,EAAW,MAAOxJ,EAAO,OAAQ0J,EAAU,WAAYrB,EAAY,MAAOxI,EAAO,iBAAmB,CAAA,CAC5L,CACD,OAAQD,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAC5D6J,EACAa,EACAR,CAAe,CACvB,CAAC,EACDM,OAAAA,GAAA,QAAkBC,qDC1DlB,IAAI1G,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAeqI,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAM3K,EAAU+D,EAAgBtF,CAAgB,EAC1CoE,EAAelD,GAEfM,EAASJ,KACTuK,EAASxH,GACTyF,EAAoBtE,EAAgBjB,GAAA,CAA4B,EAChE8H,KAAkB/H,EAAa,UAAU,SAAU,CAAE,IAAA2D,EAAK,SAAAhG,EAAU,MAAAJ,GAAU,CAChF,KAAM,CAAE,iBAAAoH,EAAkB,gBAAAC,CAAiB,EAAGrH,EACxC,CAAE,SAAA0J,CAAQ,KAAS7J,EAAO,aAAa,CACzC,OAASmK,EAAO,QAAQ5D,EAAKhG,CAAQ,EACrC,iBAAAgH,EACA,gBAAAC,CACR,CAAK,EACD,OAAQzH,EAAQ,QAAQ,cAAcqI,EAAkB,QAAS,CAAE,MAAOjI,EAAO,MAAOH,EAAO,SAAU,OAAQ6J,EAAU,MAAO,CAAC,CAAE,CACzI,CAAC,EACDa,OAAAA,GAAA,QAAkBC,+CCnBlB,IAAI7G,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAeuI,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAM7K,EAAU+D,EAAgBtF,CAAgB,EAC1CoE,EAAelD,GAEfM,EAASJ,GACTuK,EAASxH,GAETmG,EAAiBhF,EAAgBjB,GAAA,CAAkC,EACnEqH,EAAoBpG,EAAgBM,GAAA,CAAqC,EACzEmG,EAAoBzG,EAAgBQ,GAAA,CAAqC,EACzEoG,EAAgB5G,EAAgBS,GAAA,CAAiC,EACvE,SAASsG,EAAUtC,EAAQ,CACvB,OAAIA,IAAW,GACJ,MAEFA,IAAW,EACT,MAGA,EAEd,CACD,SAASuC,EAAS,CAAE,SAAA5H,GAAY,CAC5B,OAAQnD,EAAQ,QAAQ,cAAc,MAAO,CAAE,MAAO,CAE9C,WAAY,YACZ,MAAO,QACP,SAAU,EACtB,CAAW,EAAEmD,CAAQ,CACpB,CACD,SAAS6H,EAAW,CAAE,SAAA7H,GAAY,CAC9B,OAAQnD,EAAQ,QAAQ,cAAc,MAAO,CAAE,MAAO,CAE9C,WAAY,YACZ,MAAO,QACP,SAAU,GACV,SAAU,IACV,WAAY,OACZ,UAAW,WACvB,CAAW,EAAEmD,CAAQ,CACpB,CACD,MAAM8H,KAAoBpI,EAAa,UAAU7C,EAAQ,QAAQ,WAAW,SAAWlB,EAAO6F,EAAK,CAC/F,KAAM,CAAE,MAAAvE,EAAO,QAAAC,CAAS,EAAGvB,EACrB,CAAE,gBAAA2I,EAAiB,KAAAtC,CAAM,EAAG/E,EAClC,GAAI,CAAE,SAAU,CAAE,IAAAsB,EAAK,SAAAwH,EAAW,GAAI,WAAAC,EAAa,GAAO,EAAGrK,EAC7D,KAAM,CAAE,YAAAoM,EAAc,EAAI,EAAG7K,EACvB8C,EAAW+H,EACZ,KAAK,CAAC3E,EAAG/E,IAAM+E,EAAE,MAAQ/E,EAAE,KAAK,EAChC,IAAIwE,IAAQ,CACb,GAAGA,EACH,MAAOA,EAAI,MAAQ3F,EAAQ,MAC3B,IAAK2F,EAAI,IAAM3F,EAAQ,KAC1B,EAAC,EAUF,IAAImG,KAAU4D,EAAO,QAAQjH,EAAS,OAAO6C,GAAOA,EAAI,OAAS,KAAK,CAAC,EACnEiD,KAAUmB,EAAO,QAAQjH,EAAS,OAAO6C,GAAO,CAAE,IAAIpF,EAAI,OAAQA,EAAKoF,EAAI,QAAU,MAAQpF,IAAO,OAAS,OAASA,EAAG,MAAM,MAAM,CAAE,CAAE,CAAC,EAC1I6F,KAAY2D,EAAO,QAAQjH,EAAS,OAAO6C,GAAOA,EAAI,OAAS,MAAM,CAAC,EACtE,CAACiD,EAAI,QAAUzC,EAAI,QAAUC,EAAM,SACnCwC,KAAUmB,EAAO,eAAe5D,EAAKC,CAAK,GAE1C,CAACwC,EAAI,QAAUzC,EAAI,QAAU,CAACC,EAAM,SACpCwC,KAAUmB,EAAO,gBAAgB5D,EAAK,CAClC,MAAO,EACP,IAAKnG,EAAQ,IAAMA,EAAQ,MAC3B,KAAM,MAClB,CAAS,GAEDA,EAAQ,SAAW,KAInB,CAACqB,EAAKwH,EAAUC,CAAU,EAAI,IACtBlJ,EAAO,QAAQyB,CAAG,KAClBzB,EAAO,QAAQkJ,CAAU,KACzBlJ,EAAO,QAAQiJ,CAAQ,CACvC,EACQ1C,KAAU4D,EAAO,SAAS5D,EAAK9E,EAAI,MAAM,EACzC+E,KAAY2D,EAAO,SAAS3D,EAAO/E,EAAI,MAAM,EAC7CuH,KAAUmB,EAAO,SAASnB,EAAKvH,EAAI,MAAM,GAE7C,MAAM4I,KAAiBrK,EAAO,oBAAoBA,EAAO,iBAAiB,EACpEkL,EAAY1D,EAAkBsD,EAAWC,EAC/C,OAAQhL,EAAQ,QAAQ,cAAc,MAAO,CAAE,cAAe,iBAAkB,IAAK2E,EAAK,MAAO,CAAE,UAAW,IAAK,SAAU,OAAU,EACnI3E,EAAQ,QAAQ,cAAcmL,EAAW,KACrCnL,EAAQ,QAAQ,cAAc,MAAO,CAAE,MAAO,CAAE,WAAY,OAAO,GAAM,IAAI,EACxEK,EAAQ,MAAQA,EAAQ,IAAM,IAAM8E,EACrC,GAAG9E,EAAQ,OAAO,OAAQJ,EAAO,UAAUI,EAAQ,MAAQ,CAAC,CAAC,OAAQJ,EAAO,UAAUI,EAAQ,GAAG,CAAC,GAAGyK,EAAUzK,EAAQ,MAAM,CAAC,GAC9H8E,EAAK,SAAS,cAAc,EACtB,UAAWlF,EAAO,UAAUG,EAAM,QAAQ,CAAC,oBAC3C,EACT,EACI,OAAOwI,GAAK,CAAC,CAACA,CAAC,EACf,KAAK,GAAG,CAAC;AAAA,CAAI,EAClBzD,IAAS,UAAanF,EAAQ,QAAQ,cAAcwK,EAAkB,QAAS,CAAE,QAASnK,EAAS,MAAOD,EAAO,SAAUsB,CAAK,CAAA,EAAKyD,IAAS,gCAAmCnF,EAAQ,QAAQ,cAAcwK,EAAkB,QAAS,CAAE,MAAOpK,EAAO,QAASC,EAAS,SAAUqB,EAAK,SAAUwH,EAAU,WAAYC,CAAY,CAAA,EAAKhE,IAAS,MAASnF,EAAQ,QAAQ,cAAc2K,EAAc,QAAS,CAAE,MAAOvK,EAAO,IAAKoG,EAAK,SAAU9E,CAAK,CAAA,EAAKyD,IAAS,OAAUnF,EAAQ,QAAQ,cAAc+I,EAAe,QAAS,CAAE,MAAO3I,EAAO,MAAOqG,EAAO,QAASpG,EAAS,IAAKmG,EAAK,IAAKyC,EAAK,SAAUvH,CAAK,CAAA,EAAKyD,IAAS,UAAanF,EAAQ,QAAQ,cAAcmK,EAAkB,QAAS,CAAE,MAAO/J,EAAO,IAAKoG,EAAK,WAAY8D,EAAY,SAAU5I,EAAK,EAAKyD,IAAS,OAAUnF,EAAQ,QAAQ,cAAc+I,EAAe,QAAS,CAAE,MAAO3I,EAAO,MAAOqG,EAAO,QAASpG,EAAS,IAAKmG,EAAK,IAAKyC,EAAK,SAAUvH,EAAK,eAAgB,EAAI,CAAE,EAAKyD,IAAS,wBAA2BnF,EAAQ,QAAQ,cAAc+I,EAAe,QAAS,CAAE,MAAO3I,EAAO,MAAOqG,EAAO,QAASpG,EAAS,IAAKmG,EAAK,SAAU9E,EAAK,IAAKuH,EAAK,eAAgB,GAAM,eAAgB,EAAI,CAAE,EAAK9D,IAAS,oBAAuBnF,EAAQ,QAAQ,cAAc+I,EAAe,QAAS,CAAE,MAAO3I,EAAO,MAAOqG,EAAO,QAASpG,EAAS,IAAKmG,EAAK,SAAU9E,EAAK,IAAKuH,EAAK,SAAUC,EAAU,WAAYC,EAAY,eAAgB,GAAM,EAAKhE,IAAS,qCAAwCnF,EAAQ,QAAQ,cAAc+I,EAAe,QAAS,CAAE,MAAO3I,EAAO,MAAOqG,EAAO,QAASpG,EAAS,IAAKmG,EAAK,SAAU9E,EAAK,IAAKuH,EAAK,SAAUC,EAAU,WAAYC,EAAY,eAAgB,GAAM,eAAgB,EAAI,CAAE,EAAMnJ,EAAQ,QAAQ,cAAc,MAAO,KAAM,cAAc,CAAE,CAAC,CAC3tD,CAAA,CAAC,EACF6K,OAAAA,GAAA,QAAkBI,qDC1GlB,IAAIpJ,EAAmBC,GAAQA,EAAK,kBAAqB,OAAO,OAAU,SAASC,EAAG+B,EAAG9B,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,IAAIE,EAAO,OAAO,yBAAyB4B,EAAG9B,CAAC,GAC3C,CAACE,IAAS,QAASA,EAAO,CAAC4B,EAAE,WAAa5B,EAAK,UAAYA,EAAK,iBAClEA,EAAO,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAO4B,EAAE9B,CAAC,CAAE,IAE3D,OAAO,eAAeD,EAAGE,EAAIC,CAAI,CACpC,EAAK,SAASH,EAAG+B,EAAG9B,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BD,EAAEE,CAAE,EAAI6B,EAAE9B,CAAC,CACd,GACGG,EAAsBL,GAAQA,EAAK,qBAAwB,OAAO,OAAU,SAASC,EAAGK,EAAG,CAC3F,OAAO,eAAeL,EAAG,UAAW,CAAE,WAAY,GAAM,MAAOK,CAAC,CAAE,CACtE,EAAK,SAASL,EAAGK,EAAG,CAChBL,EAAE,QAAaK,CACnB,GACIC,EAAgBP,GAAQA,EAAK,cAAiB,SAAUQ,EAAK,CAC7D,GAAIA,GAAOA,EAAI,WAAY,OAAOA,EAClC,IAAIC,EAAS,CAAA,EACb,GAAID,GAAO,KAAM,QAASN,KAAKM,EAASN,IAAM,WAAa,OAAO,UAAU,eAAe,KAAKM,EAAKN,CAAC,GAAGH,EAAgBU,EAAQD,EAAKN,CAAC,EACvI,OAAAG,EAAmBI,EAAQD,CAAG,EACvBC,CACX,EACIwB,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe8I,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAMpL,EAAUqC,EAAa5D,CAAgB,EACvCgE,EAAa9C,GACb+C,EAAO7C,GACP8C,EAAQC,GACRC,EAAeC,GAEfuI,EAAUhH,KACVwG,EAAkB9G,EAAgBQ,GAAA,CAA2B,EAC7DP,EAAwBD,EAAgBS,GAAA,CAAgC,EACxES,EAAyBlB,EAAgBuH,GAAA,CAAiC,EAC1EvI,KAAgBJ,EAAM,cAAc,CACtC,cAAe,CACX,MAAO,MACV,EACD,YAAa,CACT,OAAQ,EACR,WAAY,CACf,CACL,CAAC,EACK4I,KAAqB1I,EAAa,UAAU,SAAU,CAAE,YAAAQ,EAAa,MAAAjD,EAAO,QAAAC,GAAY,CAC1F,KAAM,CAAE,uBAAAmL,CAAwB,EAAGpL,EAC7B,CAAE,SAAAE,CAAU,EAAGkL,EACf,CAAE,QAAAlI,GAAYP,IACd0I,KAAkBzL,EAAQ,QAAQ,IAAI,EACtC,CAAC0L,EAAOC,CAAQ,KAAQ3L,EAAQ,UAAU,EAAK,EAC/C,CAAE,SAAAQ,EAAU,MAAAE,CAAO,KAAO2K,EAAQ,oBAAoBjL,EAAOC,EAASC,EAAUoL,CAAK,EAC3F,OAAQ1L,EAAQ,QAAQ,cAAc0C,EAAK,OAAQ,CAAE,SAAU,KAAM,KAAM,GAAM,QAAS,IAAMW,EAAa,EAAE,MAAO,eAAiB,EACnIrD,EAAQ,QAAQ,cAAcyC,EAAW,cAAe,CAAE,UAAWa,EAAQ,aAAe,EACxFtD,EAAQ,QAAQ,cAAc,MAAO,KACjCA,EAAQ,QAAQ,cAAciF,EAAuB,QAAS,CAAE,MAAOuG,EAAwB,EAC/FxL,EAAQ,QAAQ,cAAcgE,EAAsB,QAAS,CAAE,IAAKyH,EAAa,MAAOD,CAAsB,CAAE,CAAC,EACrHxL,EAAQ,QAAQ,cAAc,MAAO,KACjCK,EAAQ,OAAS,OAAUL,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,iEAAiE,EAAK,KAC5J/B,EAASV,EAAQ,QAAQ,cAAc0C,EAAK,aAAc,CAAE,MAAOhC,CAAK,CAAE,EAAMF,EAAyEA,EAAY,UAAWA,EAAYR,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAChPA,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,CAAE,MAAO,OAAO,EAAIjC,EAAS,KAAK,EACvFR,EAAQ,QAAQ,cAAcyC,EAAW,OAAQ,CAAE,QAAS,YAAa,MAAO,UAAW,QAAS,IAAMkJ,EAAS,EAAI,CAAG,EAAE,YAAY,CAAC,EAAM3L,EAAQ,QAAQ,cAAcA,EAAQ,SAAU,CAAE,SAAUA,EAAQ,QAAQ,cAAc0C,EAAK,gBAAiB,IAAI,CAAG,EACtQ1C,EAAQ,QAAQ,cAAc6K,EAAgB,QAAS,CAAE,IAAKY,EAAa,QAASpL,EAAS,SAAUG,EAAU,MAAOgL,EAAwB,CAAC,EAAOxL,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,mBAAmB,EAH9IzC,EAAQ,QAAQ,cAAc0C,EAAK,gBAAiB,IAAI,CAGwF,CAAC,EACrP1C,EAAQ,QAAQ,cAAcyC,EAAW,cAAe,KACpDzC,EAAQ,QAAQ,cAAcyC,EAAW,OAAQ,CAAE,QAAS,IAAMY,EAAW,EAAI,QAAS,WAAa,EAAE,OAAO,CAAC,CAAC,CAC9H,CAAC,EACD+H,OAAAA,GAAA,QAAkBG,+CCnElB,IAAI1J,EAAmBC,GAAQA,EAAK,kBAAqB,OAAO,OAAU,SAASC,EAAG+B,EAAG9B,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,IAAIE,EAAO,OAAO,yBAAyB4B,EAAG9B,CAAC,GAC3C,CAACE,IAAS,QAASA,EAAO,CAAC4B,EAAE,WAAa5B,EAAK,UAAYA,EAAK,iBAClEA,EAAO,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAO4B,EAAE9B,CAAC,CAAE,IAE3D,OAAO,eAAeD,EAAGE,EAAIC,CAAI,CACpC,EAAK,SAASH,EAAG+B,EAAG9B,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BD,EAAEE,CAAE,EAAI6B,EAAE9B,CAAC,CACd,GACGG,EAAsBL,GAAQA,EAAK,qBAAwB,OAAO,OAAU,SAASC,EAAGK,EAAG,CAC3F,OAAO,eAAeL,EAAG,UAAW,CAAE,WAAY,GAAM,MAAOK,CAAC,CAAE,CACtE,EAAK,SAASL,EAAGK,EAAG,CAChBL,EAAE,QAAaK,CACnB,GACIC,EAAgBP,GAAQA,EAAK,cAAiB,SAAUQ,EAAK,CAC7D,GAAIA,GAAOA,EAAI,WAAY,OAAOA,EAClC,IAAIC,EAAS,CAAA,EACb,GAAID,GAAO,KAAM,QAASN,KAAKM,EAASN,IAAM,WAAa,OAAO,UAAU,eAAe,KAAKM,EAAKN,CAAC,GAAGH,EAAgBU,EAAQD,EAAKN,CAAC,EACvI,OAAAG,EAAmBI,EAAQD,CAAG,EACvBC,CACX,EACIwB,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAesJ,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAM5L,EAAUqC,EAAa5D,CAAgB,EACvCgE,EAAa9C,GACbkD,EAAehD,GAEfwL,EAAUzI,KACVF,EAAOI,GAEPkB,EAAwBD,EAAgBM,GAAA,CAAwC,EAChFY,EAAyBlB,EAAgBQ,GAAA,CAAyC,EAElF0G,KAAoBjL,EAAQ,MAAM,IAAM,QAAQ,UAAU,KAAK,IAAMqC,EAAamC,GAA0B,CAAA,CAAC,CAAC,EAC9G+G,KAAqBvL,EAAQ,MAAM,IAAM,QAAQ,UAAU,KAAK,IAAMqC,EAAaiJ,GAAmC,CAAA,CAAC,CAAC,EAGxHO,KAA6BhJ,EAAa,UAAU,SAAU,CAAE,MAAAzC,EAAO,QAAAC,GAAY,CACrF,KAAM,CAAE,uBAAAmL,CAAwB,EAAGpL,EAC7B,CAAE,SAAAE,CAAU,EAAGkL,EACfC,KAAkBzL,EAAQ,QAAQ,IAAI,EACtC,CAAC8L,EAAcC,CAAe,KAAQ/L,EAAQ,UAAU,EAAK,EAC7D,CAAC0L,EAAOC,CAAQ,KAAQ3L,EAAQ,UAAU,EAAK,EAC/C,CAAE,SAAAQ,EAAU,MAAAE,CAAO,KAAO2K,EAAQ,oBAAoBjL,EAAOC,EAASC,EAAUoL,CAAK,EAC3F,SAAI1L,EAAQ,WAAW,IAAM,CACzBwL,EAAuB,WAAWnL,CAAO,CACjD,EAAO,CAACmL,EAAwBnL,CAAO,CAAC,EAC5BL,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAC5DA,EAAQ,QAAQ,cAAc,MAAO,KACjCA,EAAQ,QAAQ,cAAciF,EAAuB,QAAS,CAAE,MAAOuG,EAAwB,EAC/FxL,EAAQ,QAAQ,cAAcgE,EAAsB,QAAS,CAAE,IAAKyH,EAAa,MAAOD,EAAwB,WAAY,CACpH,CACI,MAAO,iBACP,QAAS,IAAM,CAGX,WAAW,IAAMO,EAAgB,EAAI,EAAG,CAAC,CAC5C,CACJ,CACJ,CAAA,CAAE,CAAC,EACZD,EAAgB9L,EAAQ,QAAQ,cAAc,MAAO,KACjD,oBACAA,EAAQ,QAAQ,cAAcA,EAAQ,SAAU,CAAE,SAAUA,EAAQ,QAAQ,cAAc0C,EAAK,gBAAiB,IAAI,CAAG,EACnH1C,EAAQ,QAAQ,cAAcuL,EAAgB,CAAE,MAAOnL,EAAO,QAASC,EAAS,YAAa,IAAM0L,EAAgB,EAAK,CAAC,CAAE,CAAC,CAAC,EAAM/L,EAAQ,QAAQ,cAAc,MAAO,KAC5KK,EAAQ,OAAS,OAAUL,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,iEAAiE,EAAK,KAC5J/B,EAASV,EAAQ,QAAQ,cAAc0C,EAAK,aAAc,CAAE,MAAOhC,CAAK,CAAE,EAAMF,EAAyEA,EAAY,UAAWA,EAAYR,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAChPA,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,CAAE,MAAO,OAAO,EAAIjC,EAAS,KAAK,EACvFR,EAAQ,QAAQ,cAAcyC,EAAW,OAAQ,CAAE,QAAS,YAAa,MAAO,UAAW,QAAS,IAAMkJ,EAAS,EAAI,CAAG,EAAE,YAAY,CAAC,EAAM3L,EAAQ,QAAQ,cAAcA,EAAQ,SAAU,CAAE,SAAUA,EAAQ,QAAQ,cAAc0C,EAAK,gBAAiB,IAAI,CAAG,EACtQ1C,EAAQ,QAAQ,cAAciL,EAAe,CAAE,IAAKQ,EAAa,QAASpL,EAAS,SAAUG,EAAU,MAAOgL,CAAwB,CAAA,CAAC,EAAOxL,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,mBAAmB,EAHpIzC,EAAQ,QAAQ,cAAc0C,EAAK,gBAAiB,IAAI,CAG8E,CAAE,CAChP,CAAC,EACDkJ,OAAAA,GAAA,QAAkBC,qDC1ElB,IAAI9H,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe0J,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAGC,EAClB,MAAMjM,EAAU+D,EAAgBtF,CAAgB,EAC1CgE,EAAa9C,GACb+C,EAAO7C,GAEPyE,EAAaP,EAAgBnB,EAAuC,EAC1E,SAASqJ,EAAW,CAAE,YAAA5I,GAAgB,CAClC,OAAQrD,EAAQ,QAAQ,cAAc0C,EAAK,OAAQ,CAAE,SAAU,KAAM,KAAM,GAAM,QAAS,IAAMW,EAAa,EAAE,MAAO,6BAA+B,EACjJrD,EAAQ,QAAQ,cAAcyC,EAAW,cAAe,KACpDzC,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,CAAE,UAAW,EAAM,EAAE,4HAA8H,EACxMzC,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,uHAAuH,EAClLzC,EAAQ,QAAQ,cAAc,KAAM,KAChCA,EAAQ,QAAQ,cAAc,KAAM,KAAM,iDAAiD,EAC3FA,EAAQ,QAAQ,cAAc,KAAM,KAAM,4EAA8E,EACxHA,EAAQ,QAAQ,cAAc,KAAM,KAAM,uEAAuE,EACjHA,EAAQ,QAAQ,cAAc,KAAM,KAAM,+IAA+I,CAAC,EAC9LA,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,CAAE,UAAW,EAAM,EAAE,2CAA2C,EACrHzC,EAAQ,QAAQ,cAAc,KAAM,KAChCA,EAAQ,QAAQ,cAAc,KAAM,KAAM,4HAA4H,CAAC,EAC3KA,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KACjD,uCACAzC,EAAQ,QAAQ,cAAcsE,EAAW,QAAS,IAAI,EACtD,4EAA4E,EAChFtE,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,+JAA+J,CAAC,EAC/NzC,EAAQ,QAAQ,cAAcyC,EAAW,cAAe,KACpDzC,EAAQ,QAAQ,cAAcyC,EAAW,OAAQ,CAAE,QAAS,IAAMY,EAAa,EAAE,UAAW,GAAM,QAAS,WAAW,EAAI,OAAO,CAAC,CAAC,CAC/I,WC9BA,IAAIxB,GAAmBC,GAAQA,EAAK,kBAAqB,OAAO,OAAU,SAASC,EAAG+B,EAAG9B,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,IAAIE,EAAO,OAAO,yBAAyB4B,EAAG9B,CAAC,GAC3C,CAACE,IAAS,QAASA,EAAO,CAAC4B,EAAE,WAAa5B,EAAK,UAAYA,EAAK,iBAClEA,EAAO,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAO4B,EAAE9B,CAAC,CAAE,IAE3D,OAAO,eAAeD,EAAGE,EAAIC,CAAI,CACrC,EAAM,SAASH,EAAG+B,EAAG9B,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BD,EAAEE,CAAE,EAAI6B,EAAE9B,CAAC,CACf,GACIG,GAAsBL,GAAQA,EAAK,qBAAwB,OAAO,OAAU,SAASC,EAAGK,EAAG,CAC3F,OAAO,eAAeL,EAAG,UAAW,CAAE,WAAY,GAAM,MAAOK,CAAC,CAAE,CACtE,EAAK,SAASL,EAAGK,EAAG,CAChBL,EAAE,QAAaK,CACnB,GACIC,GAAgBP,GAAQA,EAAK,cAAiB,SAAUQ,EAAK,CAC7D,GAAIA,GAAOA,EAAI,WAAY,OAAOA,EAClC,IAAIC,EAAS,CAAA,EACb,GAAID,GAAO,KAAM,QAASN,KAAKM,EAASN,IAAM,WAAa,OAAO,UAAU,eAAe,KAAKM,EAAKN,CAAC,GAAGH,GAAgBU,EAAQD,EAAKN,CAAC,EACvIG,OAAAA,GAAmBI,EAAQD,CAAG,EACvBC,CACX,EACIwB,GAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe4J,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5D,MAAMlM,GAAUqC,GAAa5D,CAAgB,EACvCgE,GAAa9C,GACbkD,GAAehD,GACf8C,GAAQC,GAERF,GAAOI,GACP7C,GAASoE,GAET8H,GAASpI,GAAgBQ,EAAmC,EAE5DsH,MAA6B7L,GAAQ,MAAM,IAAM,QAAQ,UAAU,KAAK,IAAMqC,GAAamC,GAAmC,CAAA,CAAC,CAAC,EAChIyH,MAAiBjM,GAAQ,MAAM,IAAM,QAAQ,UAAU,KAAK,IAAMqC,GAAaiJ,GAA+B,CAAA,CAAC,CAAC,EAChHvI,MAAgBJ,GAAM,YAAU,EAAIK,IAAU,CAChD,YAAa,CACT,OAAQ,CACX,EACD,UAAW,CACP,UAAWA,EAAM,QAAQ,CAAC,EAC1B,aAAcA,EAAM,QAAQ,CAAC,CAChC,CACL,EAAE,EAIIoJ,MAA2BvJ,GAAa,UAAU,SAAU,CAAE,MAAAzC,EAAO,QAAAC,GAAY,CACnF,KAAM,CAAE,QAAAiD,GAAYP,KACd,CAACsJ,EAAOC,CAAQ,KAAQtM,GAAQ,UAAU,EAAK,EACrD,OAAOI,EAASJ,GAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,SAAW,EACjFtD,GAAQ,QAAQ,cAAcyC,GAAW,YAAa,CAAE,UAAWa,EAAQ,WAAa,EACpFtD,GAAQ,QAAQ,cAAcyC,GAAW,OAAQ,CAAE,QAAS,YAAa,QAAS,IAAM6J,EAAS,CAACD,CAAK,CAAC,EAAIA,EAAQ,wBAA0B,uBAAuB,CAAC,EAC1KrM,GAAQ,QAAQ,cAAcyC,GAAW,WAAY,CAAE,QAAS,OAAUxC,GAAO,YAAYG,CAAK,EAAE,YAAYiD,GAAe,CACvH4I,GACA,CAAE,YAAA5I,CAAa,CAC/B,CAAa,CAAG,EACJrD,GAAQ,QAAQ,cAAcmM,GAAO,QAAS,IAAI,CAAC,EACvDE,EAASrM,GAAQ,QAAQ,cAAcA,GAAQ,SAAU,CAAE,SAAUA,GAAQ,QAAQ,cAAc0C,GAAK,gBAAiB,IAAI,CAAG,EAC5H1C,GAAQ,QAAQ,cAAc6L,GAAwB,CAAE,IAAKxL,EAAQ,SAAU,MAAOD,EAAO,QAASC,CAAO,CAAE,CAAC,EAAK,IAAI,EAAK,IAC1I,CAAC,EACD6L,GAAA,QAAkBE,gBCjElB,IAAIrI,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAciK,EAAU,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5DA,EAAkB,QAAA,OAClB,IAAIL,EAAyBzN,GAC7B,OAAO,eAAe8N,EAAS,UAAW,CAAE,WAAY,GAAM,IAAK,UAAY,CAAE,OAAOxI,EAAgBmI,CAAsB,EAAE,OAAQ,CAAI,CAAA,wBCNxInI,GAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAekK,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAGC,GAClB,MAAMzM,GAAU+D,GAAgBtF,CAAgB,EAC1CgE,GAAa9C,GACbgD,GAAQ9C,GACRkD,MAAgBJ,GAAM,YAAU,EAAIK,IAAU,CAChD,iBAAkB,CACd,UAAW,CACP,WAAYA,EAAM,QAAQ,OAAS,OAAS,UAAY,QAC3D,CACJ,EACD,UAAW,CACP,UAAW,YACX,SAAU,GACV,aAAc,kBACd,SAAU,GACV,WAAYA,EAAM,QAAQ,OAAO,mBACjC,YAAaA,EAAM,QAAQ,CAAC,EAC5B,QAASA,EAAM,QAAQ,EAAG,CAC7B,CACL,EAAE,EACF,SAASyJ,GAAU,CAAE,YAAAC,EAAa,KAAAC,EAAM,MAAAC,EAAO,OAAA/D,EAAS,CAAA,GAAO,CAC3D,KAAM,CAAE,QAAAvF,EAAS,GAAAuJ,CAAI,EAAG9J,GAAS,EAC3BwC,EAAM,CAAC,GAAGsD,EAAQ8D,CAAI,EAAE,KAAK,GAAG,EACtC,OAAOD,EAAe1M,GAAQ,QAAQ,cAAcyC,GAAW,QAAS,CAAE,MAAOiK,EAAa,UAAW,MAAQ,EAC7G1M,GAAQ,QAAQ,cAAc,MAAO,CAAE,UAAW6M,EAAGvJ,EAAQ,iBAAkBA,EAAQ,SAAS,CAAG,EAAEiC,CAAG,CAAC,EAAMvF,GAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,UAAW,MAAO,CAAE,MAAOsJ,CAAO,CAAA,EAAIrH,CAAG,CAC1N,WC7BIxB,GAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAewK,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAGC,GAClB,MAAM/M,GAAU+D,GAAgBtF,CAAgB,EAC1CkE,GAAQhD,GACRqN,GAAcjJ,GAAgBlE,EAAoB,EAClD4C,GAAaG,GAEbF,GAAOI,GACPC,MAAgBJ,GAAM,YAAU,EAAIK,IAAU,CAChD,WAAY,CACR,UAAW,aACX,UAAW,IACX,SAAU,GACV,QAASA,EAAM,QAAQ,EAAG,EAC1B,SAAU,MACb,CACL,EAAE,EACF,SAAS+J,GAAW,CAAE,MAAAE,GAAS,CAC3B,KAAM,CAAE,QAAA3J,GAAYP,KACdmK,EAAS,GAAGD,CAAK,GAAG,MAAM,cAAc,EAC9C,OAAQjN,GAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,UAAU,EAAItD,GAAQ,QAAQ,eAAeiN,CAAK,EAAKA,EAASC,EAAUlN,GAAQ,QAAQ,cAAcyC,GAAW,KAAM,CAAE,KAAM,GAAGwK,CAAK,EAAE,EAAI,GAAGA,CAAK,EAAE,EAAMjN,GAAQ,QAAQ,cAAc0C,GAAK,cAAe,CAAE,QAAUsK,GAAY,SAASC,CAAK,EAAI,KAAK,UAAUA,CAAK,EAAI,OAAOA,CAAK,CAAG,CAAA,CAAE,CAC1W,CCxBA,IAAIlJ,GAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe6K,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAGC,GAClB,MAAMpN,GAAU+D,GAAgBtF,CAAgB,EAC1CkE,GAAQhD,GACR6M,GAAczI,GAAgBlE,EAAsB,EACpDiN,GAAe/I,GAAgBnB,EAAuB,EACtDG,MAAgBJ,GAAM,cAAc,CACtC,MAAO,CACH,QAAS,OACT,SAAU,MACb,CACL,CAAC,EACD,SAASyK,GAAY,CAAE,KAAAT,EAAM,MAAAM,EAAO,YAAAP,EAAa,OAAA7D,EAAQ,MAAA+D,GAAU,CAC/D,KAAM,CAAE,QAAAtJ,GAAYP,KACpB,OAAOkK,GAAU,KAA+BjN,GAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,KAAO,EAC7GtD,GAAQ,QAAQ,cAAcwM,GAAY,QAAS,CAAE,OAAQ3D,EAAQ,YAAa6D,EAAa,KAAMC,EAAM,MAAOC,CAAK,CAAE,EACzH5M,GAAQ,QAAQ,cAAc8M,GAAa,QAAS,CAAE,MAAOG,CAAK,CAAE,CAAC,EAAK,IAClF,iBCpBIlJ,GAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAekD,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAG6H,GACG7H,GAAA,cAAG8H,GACA9H,GAAA,iBAAG+H,GACP/H,GAAA,aAAGgI,GACvB,MAAMR,GAAcjJ,GAAgBtF,EAAoB,EAClDwB,GAASN,GACTyK,GAASvK,GACf,SAASwN,GAAQI,EAAK,CAClB,OAAO,OAAO,KAAKA,CAAG,EAAE,SAAW,CACvC,CACA,SAASH,GAAcX,EAAMe,EAAIC,EAAM,CACnC,MAAO,IAAKvD,GAAO,UAAU,GAAGuC,CAAI,IAAM,GAAGe,CAAE,EAAE,EAAG,GAAGC,CAAI,EAAE,EACxD,OAAO/E,GAAK,CAAC,CAACA,CAAC,EACf,KAAK,KAAK,CACnB,CACA,SAAS2E,GAAiBK,EAAO/E,EAAQ,CACrC,OAAQ,KAAK,QAAS5I,GAAO,KAAK2N,EAAM,IAAItI,MAAWrF,GAAO,aAAa,CAAC,GAAG4I,EAAQvD,EAAI,CAAC,CAAC,EAAE,KAAK,GAAG,EAAG,EAAE,CAAC,CAAC,CAAC,EAAI,EACvH,CAMA,SAASkI,GAAaK,EAAKJ,EAAM,GAAI,CACjC,IAAIK,EAAOL,EACX,OAAAI,EAAI,QAAQ3G,GAAO,IACP8F,GAAY,SAASc,CAAI,IAC7BA,EAAOA,EAAK5G,CAAG,EAE3B,CAAK,EACM,OAAO4G,GAAS,SACjBA,KACId,GAAY,SAASc,CAAI,GAAK,OAAQA,GAAS,KAA0B,OAASA,EAAK,cAAiB,SACxGA,EAAK,YACL,MACd,WCvCa,MAAAC,GAAoCC,EAAAA,cAAc,MAAS,ECCjE,SAASC,IAAoB,CAClC,MAAMC,EAASC,aAAiBJ,EAAc,EAC9C,GAAIG,IAAW,OACb,MAAM,IAAI,MAAM,CAAC,+CAAgD,oHAAqH,8EAA8E,EAAE,KAAK;AAAA,CAAI,CAAC,EAElR,OAAOA,CACT,CCJO,MAAME,GAAgB,IAAMC,EAAY,OAAC,EAAE,ECH5CC,GAA0CN,EAAAA,cAAc,MAAS,ECC1DO,EAAmB,IAAM,CACpC,MAAMC,EAAeL,aAAiBG,EAAoB,EAC1D,GAAI,CAACE,EACH,MAAM,IAAI,MAAM,4GAA4G,EAE9H,OAAOA,CACT,ECUaC,GAA4B,GClB5BC,GAA2B,CAEtC,YAAa,UACb,sBAAuB,oBAEvB,eAAgB,UAChB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,WACxB,0BAA2B,cAE3B,eAAgB,UAChB,oBAAqB,iBAErB,eAAgB,UAChB,oBAAqB,eACrB,0BAA2B,eAC3B,0BAA2B,eAC3B,4BAA6BC,GAASA,IAAU,EAAI,GAAGA,CAAK,kBAAoB,GAAGA,CAAK,iBAExF,8BAA+B,UAC/B,wBAAyB,SACzB,kCAAmC,QAEnC,cAAe,SACf,mBAAoB,SACpB,iBAAkB,kBAClB,mBAAoB,QACpB,mBAAoB,oBAEpB,6BAA8B,SAC9B,2BAA4B,aAC5B,iCAAkC,gBAClC,uBAAwB,QAExB,qBAAsB,aACtB,qBAAsB,aACtB,2BAA4B,SAC5B,yBAA0B,iBAC1B,oBAAqB,WACrB,uBAAwB,MACxB,sBAAuB,KACvB,mBAAoB,UACpB,sBAAuB,QACvB,4BAA6B,eAE7B,uBAAwB,WACxB,qBAAsB,SACtB,yBAA0B,cAC1B,uBAAwB,YACxB,iBAAkB,KAClB,kBAAmB,SACnB,oBAAqB,WACrB,wBAAyB,iBACzB,qBAAsB,YACtB,yBAA0B,kBAC1B,sBAAuB,WACvB,yBAA0B,eAC1B,sBAAuB,YACvB,kBAAmB,IACnB,mBAAoB,KACpB,kBAAmB,IACnB,mBAAoB,KACpB,kBAAmB,IACnB,mBAAoB,KAEpB,6BAA8B,WAC9B,2BAA4B,SAC5B,+BAAgC,cAChC,6BAA8B,YAC9B,uBAAwB,KACxB,wBAAyB,SACzB,0BAA2B,WAC3B,8BAA+B,iBAC/B,2BAA4B,YAC5B,+BAAgC,kBAChC,4BAA6B,WAC7B,+BAAgC,eAChC,4BAA6B,YAC7B,wBAAyB,SACzB,yBAA0B,aAC1B,wBAAyB,eACzB,yBAA0B,2BAC1B,wBAAyB,YACzB,yBAA0B,wBAE1B,eAAgB,MAChB,gBAAiB,OACjB,iBAAkB,QAElB,gBAAiB,OACjB,sBAAuB,eACvB,wBAAyB,iBACzB,iBAAkB,SAClB,qBAAsB,cACtB,iBAAkB,SAClB,kBAAmB,cACnB,mBAAoB,eAEpB,iCAAkCA,GAASA,IAAU,EAAI,GAAGA,CAAK,kBAAoB,GAAGA,CAAK,iBAC7F,yBAA0B,eAC1B,0BAA2B,OAE3B,kBAAmBA,GAASA,IAAU,EAAI,GAAGA,EAAM,gBAAgB,iBAAmB,GAAGA,EAAM,eAAc,CAAE,gBAE/G,gBAAiB,cAEjB,uBAAwB,CAACC,EAAcC,IAAe,GAAGD,EAAa,eAAc,CAAE,OAAOC,EAAW,eAAgB,CAAA,GAExH,4BAA6B,qBAC7B,+BAAgC,kBAChC,iCAAkC,oBAClC,2BAA4B,aAC5B,6BAA8B,eAE9B,qBAAsB,MACtB,sBAAuB,KAEvB,gBAAiB,OAEjB,UAAW,cACX,WAAY,eACZ,MAAO,QAEP,2BAA4B,QAC5B,eAAgB,eAChB,iBAAkB,gBAElB,yBAA0B,QAC1B,YAAalC,GAAQ,YAAYA,CAAI,GACrC,cAAeA,GAAQ,oBAAoBA,CAAI,GAE/C,kBAAmB,sBACnB,kBAAmB,SACnB,oBAAqB,WAErB,mBAAoB,CAAE,EAEtB,wBAAyB,iBAEzB,0BAA2B,cAC3B,4BAA6B,MAC7B,4BAA6B,MAC7B,4BAA6B,MAC7B,4BAA6B,MAC7B,6BAA8B,MAChC,ECjJO,SAASmC,GAAwBC,EAAM,CAC5C,OAAOC,GAAqB,cAAeD,CAAI,CACjD,CACO,MAAME,EAAcC,GAAuB,cAAe,CAAC,cAAe,0BAA2B,qCAAsC,uCAAwC,sCAAuC,+BAAgC,aAAc,aAAc,cAAe,iBAAkB,gBAAiB,aAAc,mBAAoB,iBAAkB,kBAAmB,iBAAkB,oBAAqB,kBAAmB,mBAAoB,mBAAoB,oBAAqB,sBAAuB,OAAQ,eAAgB,YAAa,eAAgB,iBAAkB,gBAAiB,eAAgB,4BAA6B,0BAA2B,2BAA4B,yBAA0B,uBAAwB,wBAAyB,yBAA0B,uBAAwB,yBAA0B,2BAA4B,4BAA6B,qBAAsB,uBAAwB,iCAAkC,oBAAqB,6BAA8B,oCAAqC,4BAA6B,2BAA4B,gBAAiB,6BAA8B,4BAA6B,4BAA6B,6BAA8B,kBAAmB,oBAAqB,uBAAwB,0BAA2B,0BAA2B,iBAAkB,oBAAqB,cAAe,eAAgB,wBAAyB,kCAAmC,aAAc,QAAS,cAAe,eAAgB,eAAgB,cAAe,QAAS,kBAAmB,gBAAiB,SAAU,oBAAqB,qBAAsB,sBAAuB,aAAc,uBAAwB,+BAAgC,wBAAyB,0BAA2B,uBAAwB,aAAc,kBAAmB,kBAAmB,sBAAuB,gBAAiB,OAAQ,uBAAwB,kCAAmC,OAAQ,WAAY,iBAAkB,WAAY,WAAY,UAAW,iBAAkB,sBAAuB,OAAQ,wBAAyB,2BAA4B,uBAAwB,6BAA8B,kBAAmB,MAAO,gBAAiB,eAAgB,oBAAqB,mBAAoB,gBAAiB,qBAAsB,2BAA4B,oBAAqB,4BAA6B,WAAY,0BAA2B,iBAAkB,4BAA6B,cAAe,mBAAoB,oBAAqB,aAAc,YAAa,sBAAuB,wBAAyB,kBAAmB,0BAA2B,6BAA8B,+BAAgC,mBAAoB,WAAY,mBAAoB,oBAAqB,kBAAmB,yBAA0B,qCAAsC,4BAA6B,gBAAiB,qBAAsB,kBAAmB,wBAAyB,uBAAwB,gCAAiC,+BAAgC,uBAAwB,6BAA8B,uCAAwC,uBAAwB,6BAA8B,aAAc,kBAAmB,qBAAsB,sBAAsB,CAAC,ECHn1GC,GAA4B,IAC3B,MAAMC,EAA0B,CACrC,YAAYC,EAAUF,GAA2B,CAC/C,KAAK,SAAW,IAAI,IACpB,KAAK,eAAiBA,GACtB,KAAK,eAAiBE,CACvB,CACD,SAASC,EAAQC,EAAaC,EAAiB,CACxC,KAAK,WACR,KAAK,SAAW,IAAI,KAEtB,MAAMH,EAAU,WAAW,IAAM,CAC3B,OAAOE,GAAgB,YACzBA,IAEF,KAAK,SAAS,OAAOC,EAAgB,YAAY,CACvD,EAAO,KAAK,cAAc,EACtB,KAAK,SAAS,IAAIA,EAAgB,aAAcH,CAAO,CACxD,CACD,WAAWG,EAAiB,CAC1B,MAAMH,EAAU,KAAK,SAAS,IAAIG,EAAgB,YAAY,EAC1DH,IACF,KAAK,SAAS,OAAOG,EAAgB,YAAY,EACjD,aAAaH,CAAO,EAEvB,CACD,OAAQ,CACF,KAAK,WACP,KAAK,SAAS,QAAQ,CAACpC,EAAO3H,IAAQ,CACpC,KAAK,WAAW,CACd,aAAcA,CACxB,CAAS,CACT,CAAO,EACD,KAAK,SAAW,OAEnB,CACH,CCrCO,MAAMmK,EAAyC,CACpD,aAAc,CACZ,KAAK,SAAW,IAAI,qBAAqBF,GAAe,CAClD,OAAOA,GAAgB,YACzBA,GAER,CAAK,CACF,CACD,SAASD,EAAQC,EAAaC,EAAiB,CAC7C,KAAK,SAAS,SAASF,EAAQC,EAAaC,CAAe,CAC5D,CACD,WAAWA,EAAiB,CAC1B,KAAK,SAAS,WAAWA,CAAe,CACzC,CAGD,OAAQ,CAAE,CACZ,CCVA,IAAIE,GAA6B,SAAUA,EAAe,CACxD,OAAAA,EAAc,SAAc,WAC5BA,EAAc,YAAiB,cAC/BA,EAAc,gBAAqB,kBAC5BA,CACT,EAAEA,IAAiB,CAAA,CAAE,EAErB,MAAMC,EAA0B,CAAE,CAI3B,SAASC,GAA6BC,EAAmB,CAC9D,IAAIC,EAAuB,EAC3B,OAAO,SAAgC5B,EAAQ6B,EAAWC,EAASC,EAAS,CACtEJ,EAAkB,WAAa,OACjCA,EAAkB,SAAW,OAAO,qBAAyB,IAAc,IAAIJ,GAA6C,IAAIL,IAElI,KAAM,CAACc,CAAqB,EAAIC,EAAc,SAAC,IAAIR,EAA2B,EACxES,EAAe/B,SAAa,IAAI,EAChCgC,EAAahC,EAAAA,SACnBgC,EAAW,QAAUL,EACrB,MAAMM,EAAkBjC,SAAa,IAAI,EACzC,GAAI,CAAC+B,EAAa,SAAWC,EAAW,QAAS,CAC/C,MAAME,EAAkB,CAACC,EAAQ3M,EAAO4M,IAAY,OAC7C5M,EAAM,sBACTjD,EAAAyP,EAAW,UAAX,MAAAzP,EAAA,KAAAyP,EAAqBG,EAAQ3M,EAAO4M,EAE9C,EACML,EAAa,QAAUlC,EAAO,QAAQ,eAAe6B,EAAWQ,EAAiBN,CAAO,EACxFH,GAAwB,EACxBQ,EAAgB,QAAU,CACxB,aAAcR,CACtB,EACMD,EAAkB,SAAS,SAASK,EAEpC,IAAM,QACJtP,EAAAwP,EAAa,UAAb,MAAAxP,EAAA,KAAAwP,GACAA,EAAa,QAAU,KACvBE,EAAgB,QAAU,IAClC,EAASA,EAAgB,OAAO,CAC3B,KAAU,CAACD,EAAW,SAAWD,EAAa,UAC7CA,EAAa,QAAO,EACpBA,EAAa,QAAU,KACnBE,EAAgB,UAClBT,EAAkB,SAAS,WAAWS,EAAgB,OAAO,EAC7DA,EAAgB,QAAU,OAG9BI,EAAAA,UAAgB,IAAM,CACpB,GAAI,CAACN,EAAa,SAAWC,EAAW,QAAS,CAC/C,MAAME,EAAkB,CAACC,EAAQ3M,EAAO4M,IAAY,OAC7C5M,EAAM,sBACTjD,EAAAyP,EAAW,UAAX,MAAAzP,EAAA,KAAAyP,EAAqBG,EAAQ3M,EAAO4M,EAEhD,EACQL,EAAa,QAAUlC,EAAO,QAAQ,eAAe6B,EAAWQ,EAAiBN,CAAO,CACzF,CACD,OAAIK,EAAgB,SAAWT,EAAkB,WAG/CA,EAAkB,SAAS,WAAWS,EAAgB,OAAO,EAC7DA,EAAgB,QAAU,MAErB,IAAM,QACX1P,EAAAwP,EAAa,UAAb,MAAAxP,EAAA,KAAAwP,GACAA,EAAa,QAAU,IAC/B,CACK,EAAE,CAAClC,EAAQ6B,EAAWE,CAAO,CAAC,CACnC,CACA,CACA,MAAMJ,GAAoB,CACxB,SAAU,IACZ,EAIac,GAAgC,IAAM,QACjD/P,EAAAiP,GAAkB,WAAlB,MAAAjP,EAA4B,QAC5BiP,GAAkB,SAAW,IAC/B,EACae,GAAyBhB,GAA6BC,EAAiB,EAC9EgB,GAA2B,CAC/B,QAAS,EACX,EACO,SAASC,GAAwB5C,EAAQ6B,EAAWC,EAAS,CAElEY,GAAuB1C,EAAQ6B,EAAWC,EAASa,EAAwB,CAC7E,CC9FA,MAAME,GAAK,OAAO,GACX,SAASC,GAAyBzK,EAAG/E,EAAG,CAC7C,GAAI+E,IAAM/E,EACR,MAAO,GAET,GAAI,EAAE+E,aAAa,SAAW,EAAE/E,aAAa,QAC3C,MAAO,GAET,IAAIyP,EAAU,EACVC,EAAU,EAGd,UAAW5L,KAAOiB,EAKhB,GAJA0K,GAAW,EACP,CAACF,GAAGxK,EAAEjB,CAAG,EAAG9D,EAAE8D,CAAG,CAAC,GAGlB,EAAEA,KAAO9D,GACX,MAAO,GAKX,UAAW2P,KAAK3P,EACd0P,GAAW,EAEb,OAAOD,IAAYC,CACrB,CCtBA,SAASE,GAAiBC,EAAU,CAClC,OAAOA,EAAS,aAClB,CACA,SAASC,GAAcpD,EAAQmD,EAAU,CACnC,OAAAD,GAAiBC,CAAQ,EACpBA,EAASnD,CAAM,EAEjBmD,EAASnD,EAAO,QAAQ,KAAK,CACtC,CACA,MAAMqD,GAAiB,OAAO,GACjBC,GAAuBR,GAC9BS,GAAa,KAAO,CACxB,MAAO,KACP,OAAQ,KACR,SAAU,IACZ,GACaC,EAAkB,CAACxD,EAAQmD,EAAUM,EAASJ,KAAmB,CAMtE,MAAAK,EAAOC,GAAWJ,EAAU,EAC5BK,EAAUF,EAAK,QAAQ,WAAa,KACpC,CAACG,EAAOC,CAAQ,EAAI7B,EAAM,SAEhC2B,EAAU,KAAOR,GAAcpD,EAAQmD,CAAQ,CAAA,EAC/C,OAAAO,EAAK,QAAQ,MAAQG,EACrBH,EAAK,QAAQ,OAASD,EACtBC,EAAK,QAAQ,SAAWP,EACxBY,GAAW,IACF/D,EAAO,QAAQ,MAAM,UAAU,IAAM,CAC1C,MAAMgE,EAAWZ,GAAcpD,EAAQ0D,EAAK,QAAQ,QAAQ,EACvDA,EAAK,QAAQ,OAAOA,EAAK,QAAQ,MAAOM,CAAQ,IACnDN,EAAK,QAAQ,MAAQM,EACrBF,EAASE,CAAQ,EACnB,CACD,CACF,EACMH,CACT,EC7CaI,GAAyBJ,GAASA,EAAM,WCErD,IAAIK,GAAY,YAEhB,SAASC,GAAqBV,EAAQ,CACpC,IAAIW,EACJ,MAAO,CACL,IAAK,SAAahN,EAAK,CACrB,OAAIgN,GAASX,EAAOW,EAAM,IAAKhN,CAAG,EACzBgN,EAAM,MAGRF,EACR,EACD,IAAK,SAAa9M,EAAK2H,EAAO,CAC5BqF,EAAQ,CACN,IAAKhN,EACL,MAAO2H,CACf,CACK,EACD,WAAY,UAAsB,CAChC,OAAOqF,EAAQ,CAACA,CAAK,EAAI,EAC1B,EACD,MAAO,UAAiB,CACtBA,EAAQ,MACT,CACL,CACA,CAEA,SAASC,GAAeC,EAASb,EAAQ,CACvC,IAAIc,EAAU,CAAA,EAEd,SAASC,EAAIpN,EAAK,CAChB,IAAIqN,EAAaF,EAAQ,UAAU,SAAUH,EAAO,CAClD,OAAOX,EAAOrM,EAAKgN,EAAM,GAAG,CAClC,CAAK,EAED,GAAIK,EAAa,GAAI,CACnB,IAAIL,EAAQG,EAAQE,CAAU,EAE9B,OAAIA,EAAa,IACfF,EAAQ,OAAOE,EAAY,CAAC,EAC5BF,EAAQ,QAAQH,CAAK,GAGhBA,EAAM,KACd,CAGD,OAAOF,EACR,CAED,SAASQ,EAAItN,EAAK2H,EAAO,CACnByF,EAAIpN,CAAG,IAAM8M,KAEfK,EAAQ,QAAQ,CACd,IAAKnN,EACL,MAAO2H,CACf,CAAO,EAEGwF,EAAQ,OAASD,GACnBC,EAAQ,IAAG,EAGhB,CAED,SAASI,GAAa,CACpB,OAAOJ,CACR,CAED,SAASK,GAAQ,CACfL,EAAU,CAAA,CACX,CAED,MAAO,CACL,IAAKC,EACL,IAAKE,EACL,WAAYC,EACZ,MAAOC,CACX,CACA,CAEO,IAAIC,GAAuB,SAA8BxM,EAAG/E,EAAG,CACpE,OAAO+E,IAAM/E,CACf,EACO,SAASwR,GAAyBC,EAAe,CACtD,OAAO,SAAoCC,EAAMC,EAAM,CACrD,GAAID,IAAS,MAAQC,IAAS,MAAQD,EAAK,SAAWC,EAAK,OACzD,MAAO,GAMT,QAFIC,EAASF,EAAK,OAET/K,EAAI,EAAGA,EAAIiL,EAAQjL,IAC1B,GAAI,CAAC8K,EAAcC,EAAK/K,CAAC,EAAGgL,EAAKhL,CAAC,CAAC,EACjC,MAAO,GAIX,MAAO,EACX,CACA,CAGO,SAASkL,GAAeC,EAAMC,EAAwB,CAC3D,IAAIC,EAAkB,OAAOD,GAA2B,SAAWA,EAAyB,CAC1F,cAAeA,CACnB,EACME,EAAwBD,EAAgB,cACxCP,EAAgBQ,IAA0B,OAASV,GAAuBU,EAC1EC,EAAwBF,EAAgB,QACxChB,EAAUkB,IAA0B,OAAS,EAAIA,EACjDC,EAAsBH,EAAgB,oBACtCI,EAAaZ,GAAyBC,CAAa,EACnDY,EAAQrB,IAAY,EAAIH,GAAqBuB,CAAU,EAAIrB,GAAeC,EAASoB,CAAU,EAEjG,SAASE,GAAW,CAClB,IAAI7G,EAAQ4G,EAAM,IAAI,SAAS,EAE/B,GAAI5G,IAAUmF,GAAW,CAIvB,GAFAnF,EAAQqG,EAAK,MAAM,KAAM,SAAS,EAE9BK,EAAqB,CACvB,IAAIlB,EAAUoB,EAAM,aAChBE,EAAgBtB,EAAQ,KAAK,SAAUH,EAAO,CAChD,OAAOqB,EAAoBrB,EAAM,MAAOrF,CAAK,CACvD,CAAS,EAEG8G,IACF9G,EAAQ8G,EAAc,MAEzB,CAEDF,EAAM,IAAI,UAAW5G,CAAK,CAC3B,CAED,OAAOA,CACR,CAED,OAAA6G,EAAS,WAAa,UAAY,CAChC,OAAOD,EAAM,OACjB,EAESC,CACT,CC/IA,SAASE,GAAgBC,EAAO,CAC9B,IAAIC,EAAe,MAAM,QAAQD,EAAM,CAAC,CAAC,EAAIA,EAAM,CAAC,EAAIA,EAExD,GAAI,CAACC,EAAa,MAAM,SAAUC,EAAK,CACrC,OAAO,OAAOA,GAAQ,UAC1B,CAAG,EAAG,CACF,IAAIC,EAAkBF,EAAa,IAAI,SAAUC,EAAK,CACpD,OAAO,OAAOA,GAAQ,WAAa,aAAeA,EAAI,MAAQ,WAAa,KAAO,OAAOA,CAC/F,CAAK,EAAE,KAAK,IAAI,EACZ,MAAM,IAAI,MAAM,kGAAoGC,EAAkB,GAAG,CAC1I,CAED,OAAOF,CACT,CAEO,SAASG,GAAsBC,EAAS,CAC7C,QAASC,EAAO,UAAU,OAAQC,EAAyB,IAAI,MAAMD,EAAO,EAAIA,EAAO,EAAI,CAAC,EAAGE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,CAAC,EAAI,UAAUA,CAAI,EAGnD,IAAIC,EAAiB,UAA0B,CAC7C,QAASC,EAAQ,UAAU,OAAQV,EAAQ,IAAI,MAAMU,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFX,EAAMW,CAAK,EAAI,UAAUA,CAAK,EAGhC,IAAIC,EAAkB,EAElBC,EAKAC,EAAwB,CAC1B,eAAgB,MACtB,EAEQC,EAAaf,EAAM,MAQvB,GANI,OAAOe,GAAe,WACxBD,EAAwBC,EAExBA,EAAaf,EAAM,OAGjB,OAAOe,GAAe,WACxB,MAAM,IAAI,MAAM,8EAAgF,OAAOA,EAAa,GAAG,EAKzH,IAAIC,EAAwBF,EACxBG,EAAyBD,EAAsB,eAC/CE,EAAiBD,IAA2B,OAASV,EAAyBU,EAM9EE,EAAsB,MAAM,QAAQD,CAAc,EAAIA,EAAiB,CAACA,CAAc,EACtFjB,EAAeF,GAAgBC,CAAK,EACpCoB,EAAqBf,EAAQ,MAAM,OAAQ,CAAC,UAAgC,CAC9E,OAAAO,IAEOG,EAAW,MAAM,KAAM,SAAS,CAC7C,CAAK,EAAE,OAAOI,CAAmB,CAAC,EAE1B/D,EAAWiD,EAAQ,UAA+B,CAIpD,QAHI9D,EAAS,CAAA,EACT4C,EAASc,EAAa,OAEjB/L,EAAI,EAAGA,EAAIiL,EAAQjL,IAG1BqI,EAAO,KAAK0D,EAAa/L,CAAC,EAAE,MAAM,KAAM,SAAS,CAAC,EAIpD,OAAA2M,EAAcO,EAAmB,MAAM,KAAM7E,CAAM,EAC5CsE,CACb,CAAK,EACD,cAAO,OAAOzD,EAAU,CACtB,WAAY2D,EACZ,mBAAoBK,EACpB,aAAcnB,EACd,WAAY,UAAsB,CAChC,OAAOY,CACR,EACD,eAAgB,UAA0B,CACxC,OAAOD,CACR,EACD,oBAAqB,UAA+B,CAClD,OAAOA,EAAkB,CAC1B,CACP,CAAK,EACMxD,CACX,EAGE,OAAOqD,CACT,CACO,IAAIA,GAAgCL,GAAsBhB,EAAc,ECrG/E,MAAMQ,OAAY,QAClB,SAASyB,GAAcrI,EAAO,CACrB,MAAA,YAAaA,GAAS,eAAgBA,EAAM,OACrD,CACA,MAAMsI,GAAsB,CAC1B,GAAI,SACN,EACab,GAAiB,CAACnO,EAAG/E,EAAGgU,EAAGC,EAAGhU,EAAGmH,KAAM8M,IAAU,CACxD,GAAAA,EAAM,OAAS,EACX,MAAA,IAAI,MAAM,iCAAiC,EAE/C,IAAArE,EACJ,GAAI9K,GAAK/E,GAAKgU,GAAKC,GAAKhU,GAAKmH,EAChByI,EAAA,CAACsE,EAAeC,IAAoB,CACvC,MAAAC,EAAWP,GAAcK,CAAa,EACtCG,EAAaF,IAAoBC,EAAWF,EAAc,QAAQ,WAAaJ,IAC/ExD,EAAQ8D,EAAWF,EAAc,QAAQ,MAAQA,EACjDI,EAAKxP,EAAEwL,EAAO+D,CAAU,EACxBE,EAAKxU,EAAEuQ,EAAO+D,CAAU,EACxBG,EAAKT,EAAEzD,EAAO+D,CAAU,EACxBI,EAAKT,EAAE1D,EAAO+D,CAAU,EACxBK,EAAK1U,EAAEsQ,EAAO+D,CAAU,EAC9B,OAAOlN,EAAEmN,EAAIC,EAAIC,EAAIC,EAAIC,CAAE,CAAA,UAEpB5P,GAAK/E,GAAKgU,GAAKC,GAAKhU,EAClB4P,EAAA,CAACsE,EAAeC,IAAoB,CACvC,MAAAC,EAAWP,GAAcK,CAAa,EACtCG,EAAaF,IAAoBC,EAAWF,EAAc,QAAQ,WAAaJ,IAC/ExD,EAAQ8D,EAAWF,EAAc,QAAQ,MAAQA,EACjDI,EAAKxP,EAAEwL,EAAO+D,CAAU,EACxBE,EAAKxU,EAAEuQ,EAAO+D,CAAU,EACxBG,EAAKT,EAAEzD,EAAO+D,CAAU,EACxBI,EAAKT,EAAE1D,EAAO+D,CAAU,EAC9B,OAAOrU,EAAEsU,EAAIC,EAAIC,EAAIC,CAAE,CAAA,UAEhB3P,GAAK/E,GAAKgU,GAAKC,EACbpE,EAAA,CAACsE,EAAeC,IAAoB,CACvC,MAAAC,EAAWP,GAAcK,CAAa,EACtCG,EAAaF,IAAoBC,EAAWF,EAAc,QAAQ,WAAaJ,IAC/ExD,EAAQ8D,EAAWF,EAAc,QAAQ,MAAQA,EACjDI,EAAKxP,EAAEwL,EAAO+D,CAAU,EACxBE,EAAKxU,EAAEuQ,EAAO+D,CAAU,EACxBG,EAAKT,EAAEzD,EAAO+D,CAAU,EACvB,OAAAL,EAAEM,EAAIC,EAAIC,CAAE,CAAA,UAEZ1P,GAAK/E,GAAKgU,EACRnE,EAAA,CAACsE,EAAeC,IAAoB,CACvC,MAAAC,EAAWP,GAAcK,CAAa,EACtCG,EAAaF,IAAoBC,EAAWF,EAAc,QAAQ,WAAaJ,IAC/ExD,EAAQ8D,EAAWF,EAAc,QAAQ,MAAQA,EACjDI,EAAKxP,EAAEwL,EAAO+D,CAAU,EACxBE,EAAKxU,EAAEuQ,EAAO+D,CAAU,EACvB,OAAAN,EAAEO,EAAIC,CAAE,CAAA,UAERzP,GAAK/E,EACH6P,EAAA,CAACsE,EAAeC,IAAoB,CACvC,MAAAC,EAAWP,GAAcK,CAAa,EACtCG,EAAaF,IAAoBC,EAAWF,EAAc,QAAQ,WAAaJ,IAC/ExD,EAAQ8D,EAAWF,EAAc,QAAQ,MAAQA,EACjDI,EAAKxP,EAAEwL,EAAO+D,CAAU,EAC9B,OAAOtU,EAAEuU,CAAE,CAAA,MAGP,OAAA,IAAI,MAAM,mBAAmB,EAKrC,OAAA1E,EAAS,cAAgB,GAClBA,CACT,EACa+E,GAAyB,IAAIC,IAAS,CAC3C,MAAAhF,EAAW,CAACsE,EAAeG,IAAe,CACxC,MAAAD,EAAWP,GAAcK,CAAa,EACtCW,EAAWT,EAAWF,EAAc,QAAQ,WAAaG,GAAcP,GACvExD,EAAQ8D,EAAWF,EAAc,QAAQ,MAAQA,EAMjDY,EAAgB1C,GAAM,IAAIyC,CAAQ,EAClCE,EAAYD,GAAiB,IAAI,IACjCE,EAAUD,GAAA,YAAAA,EAAW,IAAIH,GAC/B,GAAIG,GAAaC,EAGR,OAAAA,EAAQ1E,EAAOuE,CAAQ,EAE1B,MAAAI,EAAKC,GAAuB,GAAGN,CAAI,EACzC,OAAKE,GACG1C,GAAA,IAAIyC,EAAUE,CAAS,EAErBA,EAAA,IAAIH,EAAMK,CAAE,EACfA,EAAG3E,EAAOuE,CAAQ,CAAA,EAK3B,OAAAjF,EAAS,cAAgB,GAClBA,CACT,ECtGauF,GAAyB,GACzBC,GAA6B,IACpCC,GAAkB,CACtB,QAASF,GACT,YAAaC,GACb,SAAU,CACZ,EACaE,GAAsBhF,GAASA,EAAM,QACrCiF,GAA4BtC,GAAeqC,GAAqBE,GAAWH,GAAgBG,CAAO,CAAC,ECTzG,IAAIC,GAAwC,SAAUA,EAA0B,CACrF,OAAAA,EAAyB,KAAU,OACnCA,EAAyB,MAAW,QAC7BA,CACT,EAAE,CAAE,CAAA,EACG,MAAMC,GAA6B,CACxC,KAAM,CAAE,EACR,MAAO,CAAE,CACX,ECJaC,GAAoBrF,GAASA,EAAM,MCInCsF,GAA2BtF,GAASA,EAAM,QAM1CuF,GAA2B5C,GAAe2C,GAA0BE,GAAgBA,EAAa,aAAa,EAM9GC,GAA2B9C,GAAe2C,GAA0BE,GAAgBA,EAAa,MAAM,EAMvGE,GAAgCrB,GAAuBkB,GAA0BE,GAA0B,CAACE,EAAWC,IAAWD,EAAU,IAAIE,GAASD,EAAOC,CAAK,CAAC,CAAC,EAOvKC,GAAoCnD,GAAe2C,GAA0BE,GAAgBA,EAAa,qBAAqB,EAM/HO,GAAuC1B,GAAuBqB,GAA+BI,GAAmC,CAACE,EAASC,IAA0BD,EAAQ,OAAOE,GAAUD,EAAsBC,EAAO,KAAK,IAAM,EAAK,CAAC,EAM3OC,GAAkC9B,GAAuB0B,GAAsCK,GAAkBA,EAAe,IAAIF,GAAUA,EAAO,KAAK,CAAC,EAM3JG,GAA4BrG,GAASA,EAAM,cAM3CsG,GAA6CjC,GAAuBiB,GAA0Be,GAA2BF,GAAiCd,GAAmB,CAACG,EAAcnX,EAAOkY,EAAqBtV,IAAU,CAC7O,MAAMuV,EAAsBC,GAAqBpY,EAAOkY,EAAqBtV,EAAM,YAAc,KAAK,EAKtG,MAJ6B,CAC3B,KAAMuV,EAAoB,KAAK,IAAIX,GAASL,EAAa,OAAOK,CAAK,CAAC,EACtE,MAAOW,EAAoB,MAAM,IAAIX,GAASL,EAAa,OAAOK,CAAK,CAAC,CAC5E,CAEA,CAAC,EACD,SAASY,GAAqBC,EAAeV,EAASW,EAAQ,SAI5D,GAHI,CAAC,MAAM,QAAQD,EAAc,IAAI,GAAK,CAAC,MAAM,QAAQA,EAAc,KAAK,KAGxE7X,EAAA6X,EAAc,OAAd,YAAA7X,EAAoB,UAAW,KAAK+X,EAAAF,EAAc,QAAd,YAAAE,EAAqB,UAAW,EACtE,OAAOxB,GAET,MAAMyB,EAAS,CAACC,EAAkBC,IAC3B,MAAM,QAAQD,CAAgB,EAG5BA,EAAiB,OAAOjB,GAASkB,EAAiB,SAASlB,CAAK,CAAC,EAF/D,GAILmB,EAAoBH,EAAOH,EAAc,KAAMV,CAAO,EACtDiB,EAAkCjB,EAAQ,OAEhDH,GAAS,CAACmB,EAAkB,SAASnB,CAAK,CAAC,EACrCqB,EAAqBL,EAAOH,EAAc,MAAOO,CAA+B,EACtF,OAAIN,EACK,CACL,KAAMO,EACN,MAAOF,CACb,EAES,CACL,KAAMA,EACN,MAAOE,CACX,CACA,CAMO,MAAMC,GAA8B9C,GAAuB0B,GAAsCK,GAAkB,CACxH,MAAMgB,EAAY,CAAA,EAClB,IAAIC,EAAkB,EACtB,QAASjR,EAAI,EAAGA,EAAIgQ,EAAe,OAAQhQ,GAAK,EAC9CgR,EAAU,KAAKC,CAAe,EAC9BA,GAAmBjB,EAAehQ,CAAC,EAAE,cAEvC,OAAOgR,CACT,CAAC,EAMYE,GAAgC3E,GAAeoD,GAAsCoB,GAA6B,CAACf,EAAgBgB,IAAc,CAC5J,MAAMG,EAAWnB,EAAe,OAChC,OAAImB,IAAa,EACR,EAEFH,EAAUG,EAAW,CAAC,EAAInB,EAAemB,EAAW,CAAC,EAAE,aAChE,CAAC,EAMYC,GAA0CnD,GAAuBqB,GAA+BM,GAAWA,EAAQ,OAAOyB,GAAOA,EAAI,UAAU,CAAC,EAMhJC,GAAqCrD,GAAuBqB,GAA+BM,GAAWA,EAAQ,OAAO,CAAC2B,EAAKF,KAClIA,EAAI,aACNE,EAAIF,EAAI,KAAK,EAAIA,GAEZE,GACN,CAAA,CAAE,CAAC,EAOOC,GAAyBvD,GAAuBqB,GAA+BM,GAAWA,EAAQ,KAAKE,GAAUA,EAAO,UAAY,MAAS,CAAC,EC7IrJ2B,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,eAAgB,aAAc,oBAAqB,eAAe,EAU9MC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,eAAe,CAAA,EAEKjL,GAAyBxL,CAAO,CAC/D,EACM0W,GAAwBC,GAAOC,GAAW,CAC9C,KAAM,cACN,KAAM,gBACN,kBAAmB,CAACpb,EAAOqb,IAAWA,EAAO,aAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,IAAMoX,EAAS,CAAI,EAAApX,EAAM,WAAW,MAAO,CACzC,QAAS,QACT,UAAW,CACT,QAAS,SACT,OAAQ,MACV,CACF,CAAC,CAAC,EACIqX,GAAiCC,EAAiB,WAAA,CAACxb,EAAO6F,IAAQ,CACtE,MAAM4V,EAAYhM,IACZ,CACF,GAAAb,EACA,MAAAT,EACA,MAAA2K,EACA,OAAA4C,EACA,SAAAC,EACA,WAAAC,EAAa,IACb,kBAAAC,EACA,cAAAC,CACE,EAAA9b,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACT6M,EAAWzM,EAAAA,SACX,CAAC0M,EAAYC,CAAa,EAAI7K,WAAelD,CAAK,EAClD3J,EAAUuW,GAAkBU,CAAS,EACrCU,EAAeC,cAAkB,MAAMrX,GAAS,CAC9C,MAAAsX,EAAWtX,EAAM,OAAO,MAC1B+W,GACI,MAAAA,EAAc/W,EAAOsX,CAAQ,EAErC,MAAMlD,EAAS/J,EAAO,QAAQ,UAAU0J,CAAK,EAC7C,IAAIwD,EAAcD,EACdlD,EAAO,cACKmD,EAAAnD,EAAO,YAAYkD,EAAUjN,EAAO,QAAQ,OAAOR,CAAE,EAAGuK,EAAQ/J,CAAM,GAEtF8M,EAAcI,CAAW,EACzBlN,EAAO,QAAQ,iBAAiB,CAC9B,GAAAR,EACA,MAAAkK,EACA,MAAOwD,EACP,WAAAV,EACA,yBAA0B,IACzB7W,CAAK,CAAA,EACP,CAACqK,EAAQwM,EAAY9C,EAAOlK,EAAIkN,CAAa,CAAC,EAC3CS,EAAOnN,EAAO,QAAQ,yBAAyBR,EAAIkK,CAAK,EAC9DlH,OAAAA,EAAAA,UAAgB,IAAM,EAChB2K,GAAA,YAAAA,EAAM,gBAAiB,6BACzBL,EAAc/N,CAAK,CACrB,EACC,CAACoO,EAAMpO,CAAK,CAAC,EAChBqO,GAAkB,IAAM,CAClBb,GACFK,EAAS,QAAQ,OACnB,EACC,CAACL,CAAQ,CAAC,EACOc,EAAA,IAAKvB,GAAuBI,EAAS,CACvD,IAAAzV,EACA,SAAAmW,EACA,UAAWxX,EAAQ,KACnB,WAAYiX,EACZ,UAAW,GACX,KAAMC,EAAO,OAAS,SAAWA,EAAO,KAAO,OAC/C,MAAOO,GAAc,GACrB,SAAUE,EACV,aAAcN,EAAsCY,EAAAA,IAAAhB,EAAU,MAAM,SAAU,CAC5E,SAAU,QACV,MAAO,QACR,CAAA,EAAI,MAAA,EACJ7E,CAAK,CAAC,CACX,CAAC,EAoEY8F,MAAkDD,EAAA,IAAAlB,GAAmBD,EAAS,CAAA,EAAI5J,CAAM,CAAC,ECjKzFiL,GAAoB,CAACrb,EAAOsb,IACnCA,GAAiCtb,EAAM,OAAS,EAI3C,CAACA,EAAM,CAAC,CAAC,EAEXA,EAEIub,GAA0B,CAACC,EAAWF,OAA2CtB,EAAS,GAAIrI,EAAO,CAChH,QAASqI,EAAS,GAAIrI,EAAM,QAAS,CACnC,UAAW0J,GAAkBG,EAAWF,CAA6B,CAAA,CACtE,CACH,CAAC,EACKG,MAAsBC,IAAc,OAQpCC,GAAgB,CAACC,EAAU9N,IAAW,CAC1C,MAAM+J,EAAS/J,EAAO,QAAQ,UAAU8N,EAAS,KAAK,EACtD,GAAI,CAAC/D,GAAU+D,EAAS,OAAS,KACxB,OAAA,KAEL,IAAApI,EAMJ,OALIqE,EAAO,kBACIrE,EAAAqE,EAAO,kBAAkB+D,EAAS,IAAI,EAEnDpI,EAAaiI,GAAOG,EAAS,IAAI,EAAI,IAAI3F,IAAS,GAAK4B,EAAO,eAAe,GAAG5B,CAAI,EAAI4B,EAAO,eAE5FrE,EAUE,CACL,kBAR+BlG,IAAA,CAC/B,GAAAA,EACA,MAAOuK,EAAO,MACd,QAAS/J,EAAO,QAAQ,WAAWR,CAAE,EACrC,MAAOQ,EAAO,QAAQ,aAAaR,EAAIuK,EAAO,KAAK,EACnD,IAAK/J,EAAO,OAAA,GAIZ,WAAA0F,CAAA,EAXO,IAaX,EASMqI,GAAc,CAACC,EAAiBC,EAAMC,IACnCF,EAAgB,OAAO,CAAChU,EAAK/B,EAAMkW,IAAU,CAClD,GAAInU,IAAQ,EAEH,OAAAA,EAEH,MAAAoU,EAAkBH,EAAK,OAAOE,CAAK,EACnCE,EAAkBH,EAAK,OAAOC,CAAK,EACzC,OAAAnU,EAAM/B,EAAK,WAAWmW,EAAgB,MAAOC,EAAgB,MAAOD,EAAiBC,CAAe,EAC7FrU,GACN,CAAC,EASOsU,GAAgC,CAACZ,EAAW1N,IAAW,CAClE,MAAMuO,EAAiBb,EAAU,IAAIzV,GAAQ4V,GAAc5V,EAAM+H,CAAM,CAAC,EAAE,OAAqB0F,GAAA,CAAC,CAACA,CAAU,EACvG,OAAA6I,EAAe,SAAW,EACrB,KAEFC,GAAWA,EAAQ,IAAaC,IAAA,CACrC,KAAAA,EACA,OAAQF,EAAe,IAAIG,GAAMA,EAAG,kBAAkBD,EAAK,EAAE,CAAC,CAAA,EAC9D,EAAE,KAAK,CAACpW,EAAG/E,IAAMya,GAAYQ,EAAgBlW,EAAG/E,CAAC,CAAC,EAAE,IAAWqb,GAAAA,EAAI,KAAK,EAAE,CAC9E,EACaC,GAA2B,CAACC,EAAcC,IAAY,CAC3D,MAAAC,EAAaF,EAAa,QAAQC,CAAO,EAC/C,MAAI,CAACA,GAAWC,IAAe,IAAMA,EAAa,IAAMF,EAAa,OAC5DA,EAAa,CAAC,EAEhBA,EAAaE,EAAa,CAAC,CACpC,EACMC,GAAqB,CAACC,EAAIC,IAC1BD,GAAM,MAAQC,GAAM,KACf,GAELA,GAAM,MAAQD,GAAM,KACf,EAELA,GAAM,MAAQC,GAAM,KACf,EAEF,KAEHC,GAAW,IAAI,KAAK,SACbC,GAA+B,CAACC,EAAQC,IAAW,CACxD,MAAAC,EAAaP,GAAmBK,EAAQC,CAAM,EACpD,OAAIC,IAAe,KACVA,EAEL,OAAOF,GAAW,SACbF,GAAS,QAAQE,EAAO,WAAYC,EAAO,UAAU,EAEvDD,EAASC,CAClB,EACaE,GAAuB,CAACH,EAAQC,IAAW,CAChD,MAAAC,EAAaP,GAAmBK,EAAQC,CAAM,EACpD,OAAIC,IAAe,KACVA,EAEF,OAAOF,CAAM,EAAI,OAAOC,CAAM,CACvC,EACaG,GAAqB,CAACJ,EAAQC,IAAW,CAC9C,MAAAC,EAAaP,GAAmBK,EAAQC,CAAM,EACpD,OAAIC,IAAe,KACVA,EAELF,EAASC,EACJ,EAELD,EAASC,EACJ,GAEF,CACT,ECtIM5D,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,WAAY,WAAY,iBAAkB,cAAe,aAAc,SAAS,EAO9J,SAASgE,GAAqB9e,EAAO,OAC7B,KAAA,CACF,KAAAqH,EACA,WAAA0X,EACA,KAAAlQ,EACA,OAAAO,EACA,gBAAA4P,EACA,SAAAC,EACA,SAAAC,EACA,YAAAC,EACA,WAAAC,EACA,QAAAC,EAAU,UACR,EAAArf,EACJsf,EAASvD,GAA8B/b,EAAO8a,EAAS,EACnDyE,EAAgBC,KAChB,CAACC,EAAkBC,CAAmB,EAAIrO,EAAe,SAAAhK,EAAK,OAAS,EAAE,EACzE,CAACsY,EAAUC,CAAa,EAAIvO,WAAe,EAAK,EAChDzC,EAAKiR,KACLpE,EAAYhM,IACZqQ,EAAiB1D,cAA2BrX,GAAA,CAC1C,KAAA,CACJ,MAAAoJ,CAAA,EACEpJ,EAAM,OACU2a,EAAA,OAAOvR,CAAK,CAAC,EACjCyR,EAAc,EAAI,EACJL,EAAA,MAAM9D,EAAU,iBAAkB,IAAM,CACpD,MAAMsE,EAAUzE,EAAS,CAAC,EAAGjU,EAAM,CACjC,MAAA8G,EACA,UAAWS,CAAA,CACZ,EACDmQ,EAAWgB,CAAO,EAClBH,EAAc,EAAK,CAAA,CACpB,CAAA,EACA,CAAChR,EAAImQ,EAAY1X,EAAMoU,EAAU,iBAAkB8D,CAAa,CAAC,EACpE3N,OAAAA,EAAAA,UAAgB,IAAM,EACAvK,EACJ,YAAcuH,GAAMvH,EAAK,QAAU,SACjDqY,EAAoB,OAAOrY,EAAK,OAAS,EAAE,CAAC,CAC9C,EACC,CAACuH,EAAIvH,CAAI,CAAC,EACYoV,EAAA,IAAAhB,EAAU,MAAM,cAAeH,EAAS,CAC/D,GAAA1M,EACA,MAAOQ,EAAO,QAAQ,cAAc,uBAAuB,EAC3D,YAAaA,EAAO,QAAQ,cAAc,6BAA6B,EACvE,MAAOqQ,EACP,SAAUK,EACV,QAAAT,EACA,KAAMxQ,GAAQ,OACd,WAAYyM,EAAS,GAAIqE,GAAYR,EAAc,CACjD,aAAcQ,EAA6BlD,EAAAA,IAAAhB,EAAU,MAAM,SAAU,CACnE,SAAU,QACV,MAAO,QACR,CAAA,EAAI0D,CACP,EAAI,GAAI,CACN,SAAAD,GACCE,EAAY,CACb,WAAY9D,EAAS,CACnB,SAAA2D,CAAA,EACCG,GAAA,YAAAA,EAAY,UAAU,CAAA,CAC1B,EACD,gBAAiB,CACf,OAAQ,EACV,EACA,SAAUJ,CACT,EAAAM,GAAQxd,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAa,CAAC,CAChD,CC1EO,SAASke,GAAS7R,EAAO,CAC9B,OAAO,OAAOA,GAAU,UAAY,CAAC,OAAO,MAAMA,CAAK,CACzD,CACO,SAAS8R,GAAW9R,EAAO,CAChC,OAAO,OAAOA,GAAU,UAC1B,CACO,SAAS+R,GAAS/R,EAAO,CAC9B,OAAO,OAAOA,GAAU,UAAYA,IAAU,IAChD,CACO,SAASgS,IAAwB,CACtC,GAAI,CAIF,MAAM3Z,EAAM,+CACZ,cAAO,aAAa,QAAQA,EAAKA,CAAG,EACpC,OAAO,aAAa,WAAWA,CAAG,EAC3B,EACR,MAAa,CACZ,MAAO,EACR,CACH,CACO,SAAS4Z,GAAajS,EAAO,CAClC,OAAOA,EAAM,QAAQ,2BAA4B,MAAM,CACzD,CAMO,MAAMkS,GAAQ,CAAClS,EAAOmS,EAAKC,IAAQ,KAAK,IAAID,EAAK,KAAK,IAAIC,EAAKpS,CAAK,CAAC,EAKrE,SAASqS,GAAMC,EAAMC,EAAI,CAC9B,OAAO,MAAM,KAAK,CAChB,OAAQA,EAAKD,CACjB,CAAG,EAAE,IAAI,CAACpO,EAAGhJ,IAAMoX,EAAOpX,CAAC,CAC3B,CA6BO,SAASsX,GAAYlZ,EAAG/E,EAAG,CAChC,GAAI+E,IAAM/E,EACR,MAAO,GAET,GAAI+E,GAAK/E,GAAK,OAAO+E,GAAM,UAAY,OAAO/E,GAAM,SAAU,CAC5D,GAAI+E,EAAE,cAAgB/E,EAAE,YACtB,MAAO,GAET,GAAI,MAAM,QAAQ+E,CAAC,EAAG,CACpB,MAAM6M,EAAS7M,EAAE,OACjB,GAAI6M,IAAW5R,EAAE,OACf,MAAO,GAET,QAAS2G,EAAI,EAAGA,EAAIiL,EAAQjL,GAAK,EAC/B,GAAI,CAACsX,GAAYlZ,EAAE4B,CAAC,EAAG3G,EAAE2G,CAAC,CAAC,EACzB,MAAO,GAGX,MAAO,EACR,CACD,GAAI5B,aAAa,KAAO/E,aAAa,IAAK,CACxC,GAAI+E,EAAE,OAAS/E,EAAE,KACf,MAAO,GAET,MAAMke,EAAW,MAAM,KAAKnZ,EAAE,QAAS,CAAA,EACvC,QAAS4B,EAAI,EAAGA,EAAIuX,EAAS,OAAQvX,GAAK,EACxC,GAAI,CAAC3G,EAAE,IAAIke,EAASvX,CAAC,EAAE,CAAC,CAAC,EACvB,MAAO,GAGX,QAASA,EAAI,EAAGA,EAAIuX,EAAS,OAAQvX,GAAK,EAAG,CAC3C,MAAMwX,EAASD,EAASvX,CAAC,EACzB,GAAI,CAACsX,GAAYE,EAAO,CAAC,EAAGne,EAAE,IAAIme,EAAO,CAAC,CAAC,CAAC,EAC1C,MAAO,EAEV,CACD,MAAO,EACR,CACD,GAAIpZ,aAAa,KAAO/E,aAAa,IAAK,CACxC,GAAI+E,EAAE,OAAS/E,EAAE,KACf,MAAO,GAET,MAAMiR,EAAU,MAAM,KAAKlM,EAAE,QAAS,CAAA,EACtC,QAAS4B,EAAI,EAAGA,EAAIsK,EAAQ,OAAQtK,GAAK,EACvC,GAAI,CAAC3G,EAAE,IAAIiR,EAAQtK,CAAC,EAAE,CAAC,CAAC,EACtB,MAAO,GAGX,MAAO,EACR,CACD,GAAI,YAAY,OAAO5B,CAAC,GAAK,YAAY,OAAO/E,CAAC,EAAG,CAClD,MAAM4R,EAAS7M,EAAE,OACjB,GAAI6M,IAAW5R,EAAE,OACf,MAAO,GAET,QAAS2G,EAAI,EAAGA,EAAIiL,EAAQjL,GAAK,EAC/B,GAAI5B,EAAE4B,CAAC,IAAM3G,EAAE2G,CAAC,EACd,MAAO,GAGX,MAAO,EACR,CACD,GAAI5B,EAAE,cAAgB,OACpB,OAAOA,EAAE,SAAW/E,EAAE,QAAU+E,EAAE,QAAU/E,EAAE,MAEhD,GAAI+E,EAAE,UAAY,OAAO,UAAU,QACjC,OAAOA,EAAE,QAAO,IAAO/E,EAAE,QAAO,EAElC,GAAI+E,EAAE,WAAa,OAAO,UAAU,SAClC,OAAOA,EAAE,SAAQ,IAAO/E,EAAE,SAAQ,EAEpC,MAAMoe,EAAO,OAAO,KAAKrZ,CAAC,EACpB6M,EAASwM,EAAK,OACpB,GAAIxM,IAAW,OAAO,KAAK5R,CAAC,EAAE,OAC5B,MAAO,GAET,QAAS2G,EAAI,EAAGA,EAAIiL,EAAQjL,GAAK,EAC/B,GAAI,CAAC,OAAO,UAAU,eAAe,KAAK3G,EAAGoe,EAAKzX,CAAC,CAAC,EAClD,MAAO,GAGX,QAASA,EAAI,EAAGA,EAAIiL,EAAQjL,GAAK,EAAG,CAClC,MAAM7C,EAAMsa,EAAKzX,CAAC,EAClB,GAAI,CAACsX,GAAYlZ,EAAEjB,CAAG,EAAG9D,EAAE8D,CAAG,CAAC,EAC7B,MAAO,EAEV,CACD,MAAO,EACR,CAID,OAAOiB,IAAMA,GAAK/E,IAAMA,CAC1B,CAGA,SAASqe,GAAWtZ,EAAG,CACrB,MAAO,IAAM,CAEX,IAAI,EAAIA,GAAK,WACb,SAAI,KAAK,KAAK,EAAI,IAAM,GAAI,EAAI,CAAC,EACjC,GAAK,EAAI,KAAK,KAAK,EAAI,IAAM,EAAG,EAAI,EAAE,IAC7B,EAAI,IAAM,MAAQ,GAAK,UAEpC,CACA,CASO,SAASuZ,GAA4BC,EAAM,CAChD,MAAMC,EAASH,GAAWE,CAAI,EAC9B,MAAO,CAACX,EAAKC,IAAQD,GAAOC,EAAMD,GAAOY,GAC3C,CACO,SAASC,GAAUxS,EAAK,CAC7B,OAAI,OAAO,iBAAoB,WACtB,gBAAgBA,CAAG,EAErB,KAAK,MAAM,KAAK,UAAUA,CAAG,CAAC,CACvC,CC7LA,MAAMmM,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,QAAS,QAAS,aAAc,OAAQ,SAAS,EAO/H,SAASsG,GAA6BphB,EAAO,CACrC,KAAA,CACF,KAAAqH,EACA,WAAA0X,EACA,KAAAlQ,EACA,OAAAO,EACA,gBAAA4P,EACA,MAAAvV,EACA,MAAA7H,EACA,WAAAyf,EACA,KAAAC,EACA,QAAAjC,EAAU,UACR,EAAArf,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDyG,EAAiB,CACrB,MAAA9X,EACA,MAAA7H,EACA,WAAAyf,EACA,KAAAC,EACA,QAAAjC,CAAA,EAEI,CAACI,EAAkBC,CAAmB,EAAIrO,EAAe,SAAAhK,EAAK,OAAS,CAAA,CAAE,EACzEuH,EAAKiR,KACLpE,EAAYhM,IAClBmC,EAAAA,UAAgB,IAAM,CACd,MAAA4P,EAAYna,EAAK,OAAS,GACZqY,EAAA8B,EAAU,IAAI,MAAM,CAAC,CAAA,EACxC,CAACna,EAAK,KAAK,CAAC,EACf,MAAM8U,EAAeC,EAAAA,YAAkB,CAACrX,EAAOoJ,IAAU,CACnCuR,EAAAvR,EAAM,IAAI,MAAM,CAAC,EAC1B4Q,EAAAzD,EAAS,CAAC,EAAGjU,EAAM,CAC5B,MAAO,CAAC,GAAG8G,CAAK,CACjB,CAAA,CAAC,CAAA,EACD,CAAC4Q,EAAY1X,CAAI,CAAC,EACD,OAAAoV,EAAA,IAAKgF,GAAcnG,EAAS,CAC9C,SAAU,GACV,SAAU,GACV,QAAS,CAAC,EACV,cAAe,CAACnK,EAASO,IAAW,CAC5B,KAAA,CACJ,WAAAgQ,CACE,EAAAhQ,EACJ,OAAOgQ,GAAc,MAAQA,IAAe,GAAK,CAAC,EAAI,CAACA,CAAU,CACnE,EACA,GAAA9S,EACA,MAAO6Q,EACP,SAAUtD,EACV,WAAY,CAAChO,EAAOwT,IAAgBxT,EAAM,IAAI,CAACyT,EAAQrE,IAAuBd,EAAAA,IAAKhB,EAAU,MAAM,SAAUH,EAAS,CACpH,QAAS,WACT,KAAM,QACN,MAAOsG,GACND,EAAY,CACb,MAAApE,CACD,CAAA,CAAC,CAAC,CAAC,EACJ,eAAyCd,OAAAA,OAAAA,EAAAA,IAAAhB,EAAU,MAAM,cAAeH,EAAS,CAAC,EAAG5J,EAAQ,CAC3F,MAAOtC,EAAO,QAAQ,cAAc,uBAAuB,EAC3D,YAAaA,EAAO,QAAQ,cAAc,6BAA6B,EACvE,gBAAiBkM,EAAS,GAAI5J,EAAO,gBAAiB,CACpD,OAAQ,EAAA,CACT,EACD,SAAUsN,EACV,KAAMnQ,GAAQ,MACb,EAAA0S,GAAgBzf,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAa,CAAC,EAAA,EACrD8U,CAAK,CAAC,CACX,CCzEA,IAAIiL,GAA6B,SAAUA,EAAe,CACxD,OAAAA,EAAc,KAAU,OACxBA,EAAc,IAAS,MAChBA,CACT,EAAEA,IAAiB,CAAA,CAAE,EACjBC,GAA6B,SAAUA,EAAe,CACxD,OAAAA,EAAc,KAAU,OACxBA,EAAc,KAAU,OACjBA,CACT,EAAEA,IAAiB,CAAA,CAAE,EACjBC,GAA4B,SAAUA,EAAc,CACtD,OAAAA,EAAa,KAAU,OACvBA,EAAa,KAAU,OAChBA,CACT,EAAEA,IAAgB,CAAA,CAAE,ECThBC,GAAiC,SAAUA,EAAmB,CAChE,OAAAA,EAAkB,IAAS,MAC3BA,EAAkB,GAAQ,KACnBA,CACT,EAAEA,IAAqB,CAAA,CAAE,ECNrBC,GAAwC,SAAUA,EAA0B,CAC9E,OAAAA,EAAyB,aAAkB,eAC3CA,EAAyB,gBAAqB,kBAC9CA,EAAyB,iBAAsB,mBAC/CA,EAAyB,cAAmB,gBAC5CA,EAAyB,aAAkB,eACpCA,CACT,EAAEA,IAA4B,CAAA,CAAE,EAI5BC,GAAuC,SAAUA,EAAyB,CAC5E,OAAAA,EAAwB,aAAkB,eAC1CA,EAAwB,cAAmB,gBAC3CA,EAAwB,aAAkB,eAC1CA,EAAwB,WAAgB,aACxCA,EAAwB,gBAAqB,kBACtCA,CACT,EAAEA,IAA2B,CAAA,CAAE,ECL3BC,GAAuC,SAAUA,EAAyB,CAC5E,OAAAA,EAAwB,aAAkB,eAC1CA,EAAwB,gBAAqB,kBAC7CA,EAAwB,iBAAsB,mBAC9CA,EAAwB,cAAmB,gBACpCA,CACT,EAAEA,IAA2B,CAAA,CAAE,EAI3BC,GAAsC,SAAUA,EAAwB,CAC1E,OAAAA,EAAuB,YAAiB,cACxCA,EAAuB,cAAmB,gBAC1CA,EAAuB,aAAkB,eACzCA,EAAuB,WAAgB,aACvCA,EAAuB,gBAAqB,kBACrCA,CACT,EAAEA,IAA0B,CAAA,CAAE,ECjCvB,SAASC,GAAOxE,EAAM,CAC3B,OAAOA,EAAK,QAAU,MACxB,CCDO,MAAMyE,GAA4B,KAAO,CAC9C,MAAO,CAAE,EACT,cAAeN,GAAkB,IACjC,kBAAmB,CAAE,EACrB,yBAA0BA,GAAkB,GAC9C,GCNO,SAASO,GAAgBnT,EAAQ,CACtC,MAAO,CACL,QAASA,EAAO,QAAQ,aAAc,CAC1C,CACA,CCEA,IAAIoT,GACJ,SAASC,IAAa,CACpB,GAAID,KAAY,OACP,OAAAA,GAEL,GAAA,CACQA,GAAA,IAAI,SAAS,aAAa,SAC1B,CACAA,GAAA,EACZ,CACO,OAAAA,EACT,CAQa,MAAAE,GAAkB,CAACrb,EAAM+H,IAAW,CAC/C,MAAMuT,EAAYrH,EAAS,CAAC,EAAGjU,CAAI,EAI/B,GAHAsb,EAAU,IAAM,OAClBA,EAAU,GAAK,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,GAE3CA,EAAU,UAAY,KAAM,CAG9B,MAAMxJ,EAAST,GAAyBtJ,CAAM,EAAEuT,EAAU,KAAK,EAC/DA,EAAU,SAAWxJ,GAAUA,EAAO,gBAAgB,CAAC,EAAE,KAC3D,CACO,OAAAwJ,CACT,EACaC,GAAsB,CAACthB,EAAOuhB,EAAiCzT,IAAW,CAC/E,MAAA0T,EAAkBxhB,EAAM,MAAM,OAAS,EACzC,IAAAyhB,EACAD,GAAmBD,EAIrBE,EAAQ,CAACzhB,EAAM,MAAM,CAAC,CAAC,EAEvByhB,EAAQzhB,EAAM,MAEhB,MAAM0hB,EAAqBF,GAAmBC,EAAM,KAAa1b,GAAAA,EAAK,IAAM,IAAI,EAYhF,OAX+B0b,EAAM,KAAa1b,GAAAA,EAAK,UAAY,IAAI,GAWzC2b,EACrB1H,EAAS,CAAC,EAAGha,EAAO,CACzB,MAAOyhB,EAAM,OAAYL,GAAgBrb,EAAM+H,CAAM,CAAC,CAAA,CACvD,EAEC9N,EAAM,QAAUyhB,EACXzH,EAAS,CAAC,EAAGha,EAAO,CACzB,MAAAyhB,CAAA,CACD,EAEIzhB,CACT,EACa2hB,GAA4B,CAACC,EAAaL,EAAiCzT,IAA6B+T,GAAA7H,EAAS,CAAC,EAAG6H,EAAgB,CAChJ,YAAaP,GAAoBM,EAAaL,EAAiCzT,CAAM,CACvF,CAAC,EACYgU,GAA4BjV,GACnC,OAAOA,GAAU,SACZA,EAAM,UAAU,KAAK,EAAE,QAAQ,mBAAoB,EAAE,EAEvDA,EAEHkV,GAA4B,CAACC,EAAYlU,IAAW,OACxD,GAAI,CAACkU,EAAW,OAAS,CAACA,EAAW,SAC5B,OAAA,KAET,MAAMnK,EAAS/J,EAAO,QAAQ,UAAUkU,EAAW,KAAK,EACxD,GAAI,CAACnK,EACI,OAAA,KAEL,IAAAmD,EACJ,GAAInD,EAAO,YAAa,CACtB,MAAMoK,EAASpK,EAAO,YACRmD,EAAA,MAAM,QAAQgH,EAAW,KAAK,GAAIxhB,EAAAwhB,EAAW,QAAX,YAAAxhB,EAAkB,IAAS0hB,GAAAD,EAAOC,EAAG,OAAWrK,EAAQ/J,CAAM,GAAKmU,EAAOD,EAAW,MAAO,OAAWnK,EAAQ/J,CAAM,CAAA,MAErKkN,EAAcgH,EAAW,MAErB,KAAA,CACJ,iBAAAG,CAAA,EACErU,EAAO,QAAQ,UACfqU,IACFnH,EAAc8G,GAAiB9G,CAAW,GAE5C,MAAMoH,EAAgBpI,EAAS,CAAC,EAAGgI,EAAY,CAC7C,MAAOhH,CAAA,CACR,EACKqH,EAAkBxK,EAAO,gBAC3B,GAAA,EAACwK,GAAA,MAAAA,EAAiB,QACpB,MAAM,IAAI,MAAM,gDAAgDxK,EAAO,KAAK,IAAI,EAElF,MAAMyK,EAAiBD,EAAgB,QAAiBE,EAAS,QAAUH,EAAc,QAAQ,EACjG,GAAI,CAACE,EACG,MAAA,IAAI,MAAM,+CAA+CzK,EAAO,KAAK,yBAAyBuK,EAAc,QAAQ,IAAI,EAE1H,MAAAI,EAAevB,GAAgBnT,CAAM,EACrC2U,EAAmBH,EAAe,iBAAiBF,EAAevK,CAAM,EAC1E,OAAA,OAAO4K,GAAqB,WACvB,KAEF,CACL,KAAML,EACN,GAAW3F,GAAA,CACT,IAAI5P,EAAQiB,EAAO,QAAQ,YAAY2O,EAAK5E,CAAM,EAClD,OAAIsK,IACFtV,EAAQiV,GAAiBjV,CAAK,GAEzB4V,EAAiB5V,EAAO4P,EAAK5E,EAAQ2K,CAAY,CAC1D,CAAA,CAEJ,EACA,IAAIE,GAAuB,EAQ3B,MAAMC,GAAoC,CAACf,EAAa9T,EAAQ8U,IAAgB,CACxE,KAAA,CACJ,MAAAnB,CACE,EAAAG,EACEiB,EAAWpB,EAAM,IAAI1b,GAAQgc,GAA0Bhc,EAAM+H,CAAM,CAAC,EAAE,OAAmBgV,GAAA,CAAC,CAACA,CAAQ,EACrG,GAAAD,EAAS,SAAW,EACf,OAAA,KAEL,GAAAD,GAAe,CAACzB,KAEX,MAAA,CAAC1E,EAAKsG,IAAsB,CACjC,MAAMC,EAAkB,CAAA,EACxB,QAASjb,EAAI,EAAGA,EAAI8a,EAAS,OAAQ9a,GAAK,EAAG,CACrC,MAAAkb,EAAUJ,EAAS9a,CAAC,GACtB,CAACgb,GAAqBA,EAAkBE,EAAQ,KAAK,KAAK,KAC5DD,EAAgBC,EAAQ,KAAK,EAAE,EAAIA,EAAQ,GAAGxG,CAAG,EAErD,CACO,OAAAuG,CAAA,EAMX,MAAME,EAAiB,IAAI,SAAS,WAAY,MAAO,oBAAqB;AAAA,EAC5EL,EAAS,IAAI,CAACI,EAASlb,IAAM,oBAAoBA,CAAC,8CAA8C,KAAK,UAAUkb,EAAQ,KAAK,KAAK,CAAC,IAAI,EAAE,KAAK;AAAA,CAAI,CAAC;AAAA;AAAA;AAAA,EAGlJJ,EAAS,IAAI,CAACI,EAASlb,IAAM,KAAK,KAAK,UAAU,OAAOkb,EAAQ,KAAK,EAAE,CAAC,CAAC,iBAAiBlb,CAAC,uBAAuBA,CAAC,YAAY,EAAE,KAAK;AAAA,CAAI,CAAC;AAAA;AAAA;AAAA,kBAG3H,WAAW,KAAM,OAAO2a,EAAoB,CAAC,CAAC,EACtC,OAAAA,IAAA,EAGL,CAACjG,EAAK0G,IAAoBD,EAAeL,EAAUpG,EAAK0G,CAAe,CAE5F,EACaC,GAAuDxB,GAC3DA,EAAY,iCAAmC,GASlDyB,GAAoC,CAACzB,EAAa9T,IAAW,OACjE,MAAMwV,IAAoB9iB,EAAAohB,EAAY,oBAAZ,YAAAphB,EAA+B,OAAO,WAAY,GACxE,GAAA8iB,EAAkB,SAAW,EACxB,OAAA,KAEH,MAAAC,EAAeH,GAAsCxB,CAAW,EAAI9J,GAAgChK,CAAM,EAAIoJ,GAAyBpJ,CAAM,EAC7I0V,EAAmB,CAAA,EACnB,CACJ,iBAAArB,CAAA,EACErU,EAAO,QAAQ,UACb0U,EAAevB,GAAgBnT,CAAM,EAC3C,OAAAyV,EAAa,QAAiB/L,GAAA,CAC5B,MAAMK,EAAS/J,EAAO,QAAQ,UAAU0J,CAAK,EACvCiM,EAAwB5L,GAAA,YAAAA,EAAQ,sBAClC4L,GACFD,EAAiB,KAAK,CACpB,OAAA3L,EACA,SAAUyL,EAAkB,IAAwBI,GAAA,CAClD,MAAM7W,EAAQsV,EAAmBL,GAAiB4B,CAAgB,EAAIA,EAC/D,MAAA,CACL,GAAID,EAAsB5W,EAAOgL,EAAQ2K,CAAY,CAAA,CACvD,CACD,CAAA,CACF,CACH,CACD,EACM,SAAkC/F,EAAKsG,EAAmB,CAC/D,MAAM5gB,EAAS,CAAA,EAGfwhB,UAAgB3hB,EAAI,EAAGA,EAAIshB,EAAkB,OAAQthB,GAAK,EAAG,CACrD,MAAA4hB,EAAcN,EAAkBthB,CAAC,EACvC,QAAS+F,EAAI,EAAGA,EAAIyb,EAAiB,OAAQzb,GAAK,EAAG,CAC7C,KAAA,CACJ,OAAA8P,EACA,SAAAgL,CAAA,EACEW,EAAiBzb,CAAC,EAChB,CACJ,MAAAyP,CACE,EAAAK,EACJ,GAAIkL,GAAqB,CAACA,EAAkBvL,CAAK,EAC/C,SAEI,MAAAyL,EAAUJ,EAAS7gB,CAAC,EAC1B,IAAI6K,EAAQiB,EAAO,QAAQ,YAAY2O,EAAK5E,CAAM,EAC9C,GAAAoL,EAAQ,KAAO,KACjB,SAMF,GAJId,IACFtV,EAAQiV,GAAiBjV,CAAK,GAEboW,EAAQ,GAAGpW,EAAO4P,EAAK5E,EAAQ2K,CAAY,EAC9C,CACdrgB,EAAOyhB,CAAW,EAAI,GACb,SAAAD,CACX,CACF,CACAxhB,EAAOyhB,CAAW,EAAI,EACxB,CACO,OAAAzhB,CAAA,CAEX,EACa0hB,GAA+B,CAACjC,EAAa9T,EAAQ8U,IAAgB,CAChF,MAAMkB,EAA2BnB,GAAkCf,EAAa9T,EAAQ8U,CAAW,EAC7FmB,EAA2BV,GAAkCzB,EAAa9T,CAAM,EACtF,OAAO,SAA8B2O,EAAKsG,EAAmB5gB,EAAQ,CACnEA,EAAO,oBAAqB2hB,GAAA,YAAAA,EAA2BrH,EAAKsG,KAAsB,KAClF5gB,EAAO,0BAA2B4hB,GAAA,YAAAA,EAA2BtH,EAAKsG,KAAsB,IAAA,CAE5F,EACMiB,MAAsB7hB,GAAU,KAChC8hB,GAAmB,CAACxQ,EAAO3F,EAAQ2T,KAClChO,EAAM,qBACHA,EAAA,mBAAqBgO,EAAM,OAAO1b,GAAQgc,GAA0Bhc,EAAM+H,CAAM,IAAM,IAAI,GAE3F2F,EAAM,oBAEFyQ,GAAkB,CAACC,EAAsBC,EAAuBxC,EAAa9T,EAAQ2F,IAAU,CAC1G,MAAM4Q,EAAqBJ,GAAiBxQ,EAAO3F,EAAQ8T,EAAY,KAAK,EACtE0C,EAA2BH,EAAqB,OAAOH,EAAS,EAChEO,EAA4BH,EAAsB,OAAOJ,EAAS,EAGpE,GAAAM,EAAyB,OAAS,EAAG,CAEvC,MAAME,EAA8Bze,GAC3Bue,EAAyB,KAAKG,GAAoBA,EAAiB1e,EAAK,EAAE,CAAC,EAGhF,IADkB6b,EAAY,eAAiBZ,GAAA,EAA4B,iBACzDN,GAAkB,KAEtC,GAAI,CADqB2D,EAAmB,MAAMG,CAAmB,EAE5D,MAAA,WAIL,CADsBH,EAAmB,KAAKG,CAAmB,EAE5D,MAAA,EAGb,CAGA,GAAID,EAA0B,OAAS,GAAK3C,EAAY,mBAAqB,KAAM,CAEjF,MAAM8C,EAAqC7X,GAClC0X,EAA0B,KAA+BI,GAAAA,EAAuB9X,CAAK,CAAC,EAG3F,IAD6B+U,EAAY,0BAA4BZ,GAAA,EAA4B,4BACpEN,GAAkB,KAEjD,GAAI,CAD+BkB,EAAY,kBAAkB,MAAM8C,CAAyB,EAEvF,MAAA,WAIL,CADgC9C,EAAY,kBAAkB,KAAK8C,CAAyB,EAEvF,MAAA,EAGb,CACO,MAAA,EACT,EChTaE,GAA6B/X,GAAS,CACjD,GAAI,CAACA,EACH,OAAO,KAET,MAAMgY,EAAc,IAAI,OAAO/F,GAAajS,CAAK,EAAG,GAAG,EACvD,MAAO,CAACkE,EAAG0L,EAAK5E,EAAQ/J,IAAW,CACjC,IAAIgX,EAAchX,EAAO,QAAQ,qBAAqB2O,EAAK5E,CAAM,EACjE,OAAI/J,EAAO,QAAQ,mBACjBgX,EAAchD,GAAiBgD,CAAW,GAErCA,GAAe,KAAOD,EAAY,KAAKC,EAAY,SAAQ,CAAE,EAAI,EAC5E,CACA,EACaC,GAAyB,CAACC,EAAc,KAAU,CAAC,CAC9D,MAAO,WACP,iBAAkBhD,GAAc,CAC9B,GAAI,CAACA,EAAW,MACd,OAAO,KAET,MAAMiD,EAAkBD,EAAchD,EAAW,MAAQA,EAAW,MAAM,OACpE6C,EAAc,IAAI,OAAO/F,GAAamG,CAAe,EAAG,GAAG,EACjE,OAAOpY,GACEA,GAAS,KAAOgY,EAAY,KAAK,OAAOhY,CAAK,CAAC,EAAI,EAE5D,EACD,eAAgB2Q,EAClB,EAAG,CACD,MAAO,SACP,iBAAkBwE,GAAc,CAC9B,GAAI,CAACA,EAAW,MACd,OAAO,KAET,MAAMiD,EAAkBD,EAAchD,EAAW,MAAQA,EAAW,MAAM,OACpE/E,EAAW,IAAI,KAAK,SAAS,OAAW,CAC5C,YAAa,OACb,MAAO,QACb,CAAK,EACD,OAAOpQ,GACEA,GAAS,KAAOoQ,EAAS,QAAQgI,EAAiBpY,EAAM,SAAU,CAAA,IAAM,EAAI,EAEtF,EACD,eAAgB2Q,EAClB,EAAG,CACD,MAAO,aACP,iBAAkBwE,GAAc,CAC9B,GAAI,CAACA,EAAW,MACd,OAAO,KAET,MAAMiD,EAAkBD,EAAchD,EAAW,MAAQA,EAAW,MAAM,OACpE6C,EAAc,IAAI,OAAO,IAAI/F,GAAamG,CAAe,CAAC,MAAO,GAAG,EAC1E,OAAOpY,GACEA,GAAS,KAAOgY,EAAY,KAAKhY,EAAM,SAAQ,CAAE,EAAI,EAE/D,EACD,eAAgB2Q,EAClB,EAAG,CACD,MAAO,WACP,iBAAkBwE,GAAc,CAC9B,GAAI,CAACA,EAAW,MACd,OAAO,KAET,MAAMiD,EAAkBD,EAAchD,EAAW,MAAQA,EAAW,MAAM,OACpE6C,EAAc,IAAI,OAAO,KAAK/F,GAAamG,CAAe,CAAC,IAAK,GAAG,EACzE,OAAOpY,GACEA,GAAS,KAAOgY,EAAY,KAAKhY,EAAM,SAAQ,CAAE,EAAI,EAE/D,EACD,eAAgB2Q,EAClB,EAAG,CACD,MAAO,UACP,iBAAkB,IACT3Q,GACEA,IAAU,IAAMA,GAAS,KAGpC,oBAAqB,EACvB,EAAG,CACD,MAAO,aACP,iBAAkB,IACTA,GACEA,IAAU,IAAMA,GAAS,KAGpC,oBAAqB,EACvB,EAAG,CACD,MAAO,UACP,iBAAkBmV,GAAc,CAC9B,GAAI,CAAC,MAAM,QAAQA,EAAW,KAAK,GAAKA,EAAW,MAAM,SAAW,EAClE,OAAO,KAET,MAAMiD,EAAkBD,EAAchD,EAAW,MAAQA,EAAW,MAAM,IAAI7c,GAAOA,EAAI,KAAM,CAAA,EACzF8X,EAAW,IAAI,KAAK,SAAS,OAAW,CAC5C,YAAa,OACb,MAAO,QACb,CAAK,EACD,OAAOpQ,GAASA,GAAS,KAAOoY,EAAgB,KAAKrB,GAC5C3G,EAAS,QAAQ2G,EAAa/W,EAAM,YAAc,EAAE,IAAM,CAClE,EAAI,EACN,EACD,eAAgBiT,EAClB,CAAC,ECjGYoF,GAAsB,CACjC,MAAO,IACP,SAAU,GACV,SAAU,IACV,SAAU,GACV,SAAU,GACV,UAAW,GACX,WAAY,GACZ,UAAW,GACX,SAAU,GAEV,WAAY,GACZ,SAAU,GACV,eAAgBhI,GAChB,KAAM,SACN,MAAO,OACP,gBAAiB6H,GAAwB,EACzC,eAAgB3J,GAChB,sBAAuBwJ,EACzB,ECxBMpL,GAAY,CAAC,OAAQ,SAAU,UAAW,WAAY,WAAY,YAAa,UAAU,EAczFC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,MAAM,CAAA,EAEcjL,GAAyBxL,CAAO,CAC/D,EACMiiB,GAAetL,GAAOuL,GAAQ,CAClC,KAAM,cACN,KAAM,OACN,kBAAmB,CAACrU,EAAGgJ,IAAWA,EAAO,IAC3C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,OAAQA,EAAM,OAAO,MACrB,CAAC,MAAMiM,EAAY,QAAQ,EAAE,EAAG,CAC9B,QAAS,CACX,CACF,EAAE,EACIwW,GAAkB,CACtB,eAAgB,WAChB,aAAc,WAChB,EACA,SAASC,GAAS5mB,EAAO,OACjB,KAAA,CACF,KAAA6mB,EACA,OAAAC,EACA,QAAAC,EACA,SAAA1iB,EACA,SAAA2iB,EACA,UAAAC,EACA,SAAAC,CACE,EAAAlnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTsM,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACrC0L,EAAgB5X,SAAa,IAAI,EACvCiN,GAAkB,IAAM,SAClBqK,EACFM,EAAc,QAAU,SAAS,yBAAyB,YAAc,SAAS,cAAgB,OAEjGtN,GAAA/X,EAAAqlB,EAAc,UAAd,YAAArlB,EAAuB,QAAvB,MAAA+X,EAAA,KAAA/X,GACAqlB,EAAc,QAAU,KAC1B,EACC,CAACN,CAAI,CAAC,EACTjV,EAAAA,UAAgB,IAAM,CAEd,MAAAX,EAAY4V,EAAO,WAAa,YAC/BzX,EAAA,QAAQ,aAAa6B,EAAW,CACrC,OAAA6V,CAAA,CACD,CACA,EAAA,CAAC1X,EAAQyX,EAAMC,CAAM,CAAC,EACnB,MAAAM,KAAyCvJ,GAAA,CACzCwJ,GACaA,IAEbH,GACFA,EAASrJ,CAAI,CACf,EAEIyJ,EAA2BviB,GAAA,CAC3BA,EAAM,SAAW+hB,IAAW/hB,EAAM,QAAU+hB,GAAA,MAAAA,EAAQ,SAAS/hB,EAAM,UAGvEgiB,EAAQhiB,CAAK,CAAA,EAEK,OAAA0X,EAAA,IAAKgK,GAAcnL,EAAS,CAC9C,GAAIG,EAAU,MAAM,WACpB,UAAW8L,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,WAAYiX,EACZ,KAAAoL,EACA,SAAUC,EACV,WAAY,GACZ,UAAWE,CACV,EAAApQ,GAAO9U,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,WAAY,CACzC,SAAU,CAAC,CACT,gBAAA0lB,EACA,UAAAC,CAAA,UACsBC,GAAmB,CACzC,YAAaJ,EACb,WAAY,cACZ,SAA4B7K,EAAAA,IAAAkL,GAAMrM,EAAS,CAAA,EAAIkM,EAAiB,CAC9D,MAAO,CACL,gBAAiBb,GAAgBc,CAAS,CAC5C,EACA,SAAUL,EAAaI,GAAA,YAAAA,EAAiB,QAAQ,EAChD,eAA4BI,GAAO,CACjC,SAAAvjB,CAAA,CACD,CAAA,CACF,CAAC,CAAA,CACH,CACF,CAAA,CAAC,CACJ,CC7GA,MAAMyW,GAAY,CAAC,MAAO,SAAU,KAAM,WAAY,aAAc,QAAS,QAAS,iBAAkB,MAAO,UAAW,WAAY,WAAY,WAAY,iBAAiB,EAWzK+M,GAAanM,GAAU,OAAOA,EAAO,YAAe,WAC1D,SAASoM,GAAgB9nB,EAAO,OACxB,KAAA,CACF,OAAA0b,EACA,GAAA9M,EACA,SAAA+M,EACA,SAAAsD,EACA,SAAA+H,EAAW,aACX,gBAAAhI,CACE,EAAAhf,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD,CAACiN,EAAoBC,CAAqB,EAAI3W,EAAAA,SAAe,EAAE,EAC/D,CAACwV,EAAMoB,CAAO,EAAI5W,WAAe,EAAK,EACtCjC,EAASD,KACT+Y,EAAU3Y,SAAa,IAAI,EAC3B4Y,EAAY5Y,SAAa,IAAI,EAC7B6Y,EAAoB7Y,SAAa,EAAK,EACtC8Y,EAAkB9Y,SAAa,CAAA,CAAE,EACjCrL,EAAQokB,KACRC,EAAS1I,KACT2I,EAAW3I,KACXpE,EAAYhM,IACd,GAAA,CAACoY,GAAWnM,CAAM,EACd,MAAA,IAAI,MAAM,+DAA+D,EAEjF,MAAMvK,EAAUuK,EAAO,WAAWtM,EAAO,QAAQ,aAAaR,CAAE,CAAC,EAC3D6Z,EAActX,EAAQ,UAAiB,CAACyQ,EAAO,MAAM,UAAU,EAC/D8G,EAAcvX,EAAQ,OAAiByQ,GAAAA,EAAO,MAAM,UAAU,EAC9D+G,EAAkBF,EAAY,QAAUC,EAAY,OAAS,EAAI,GACvEE,EAAAA,gBAAsB,IAAM,CACrBjN,GACI,OAAA,QAAQ0M,EAAgB,OAAO,EAAE,QAAQ,CAAC,CAAC9K,EAAO1X,CAAG,IAAM,CAC3DA,GAAA,MAAAA,EAAA,KAAK,CAAA,EAAI,IAAM,CACX,OAAAwiB,EAAgB,QAAQ9K,CAAK,CAAA,EACrC,CACF,CACH,EACC,CAAC5B,CAAQ,CAAC,EACb/J,EAAAA,UAAgB,IAAM,CAIpB,GAHImW,EAAqB,GAAK,CAACG,EAAQ,SAGnCH,GAAsBG,EAAQ,QAAQ,SAAS,OACjD,OAEYA,EAAQ,QAAQ,SAASH,CAAkB,EACnD,MAAM,CACV,cAAe,EAAA,CAChB,CAAA,EACA,CAACA,CAAkB,CAAC,EACvBnW,EAAAA,UAAgB,IAAM,CACf+J,IACHqM,EAAsB,EAAE,EACxBI,EAAkB,QAAU,GAC9B,EACC,CAACzM,CAAQ,CAAC,EACPkN,EAAA,oBAAoB7J,EAAiB,KAAO,CAChD,OAAQ,CAEF,GAAA,CAACoJ,EAAkB,QAAS,CAE9B,MAAMU,EAAuB3X,EAAQ,aAAe,CAAClO,EAAE,MAAM,QAAQ,EACrE+kB,EAAsBc,CAAoB,CAC5C,CACF,CAAA,GACE,CAAC3X,CAAO,CAAC,EACbS,EAAAA,UAAgB,IAAM,CAChBmW,GAAsBY,GACxBX,EAAsBW,EAAkB,CAAC,CAC3C,EACC,CAACZ,EAAoBY,CAAe,CAAC,EACxC,MAAMI,EAAW,IAAM,CACrBd,EAAQ,EAAI,EACZD,EAAsBW,EAAkB,CAAC,EACzCP,EAAkB,QAAU,EAAA,EAExBY,EAAW,IAAM,CACrBf,EAAQ,EAAK,CAAA,EAETgB,KAA4CC,GAAA,CAChCb,EAAA,QAAQ9K,CAAK,EAAI2L,CAAA,EAE7BC,EAAoB,CAAC5L,EAAO6L,IAAqBrkB,GAAA,CACrDijB,EAAsBzK,CAAK,EAC3B6K,EAAkB,QAAU,GACxBgB,GACFA,EAAQrkB,CAAK,CACf,EAEIskB,EAA6BtkB,GAAA,CACjC,GAAI4jB,GAAmB,EACrB,OAEI,MAAAW,EAAc,CAAC/L,EAAOP,IAAc,OACxC,GAAIO,EAAQ,GAAKA,EAAQpM,EAAQ,OACxB,OAAAoM,EAIT,MAAMgM,EAASrlB,EAAM,YAAc,MAAQ,GAAK,EAC1CslB,GAAYxM,IAAc,OAAS,GAAK,GAAKuM,EAG5C,OAAAznB,EAAAqP,EAAQoM,EAAQiM,CAAQ,IAAxB,MAAA1nB,EAA2B,MAAM,SAAWwnB,EAAY/L,EAAQiM,EAAUxM,CAAS,EAAIO,EAAQiM,CAAA,EAExG,IAAIC,EAAW1B,EACXhjB,EAAM,MAAQ,aACL0kB,EAAAH,EAAYvB,EAAoB,OAAO,EACzChjB,EAAM,MAAQ,cACZ0kB,EAAAH,EAAYvB,EAAoB,MAAM,GAE/C,EAAA0B,EAAW,GAAKA,GAAYd,IAG5Bc,IAAa1B,IACfhjB,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EACtBijB,EAAsByB,CAAQ,EAChC,EAEIC,EAA6B3kB,GAAA,CAC7BA,EAAM,MAAQ,OAChBA,EAAM,eAAe,EAEnB,CAAC,MAAO,QAAQ,EAAE,SAASA,EAAM,GAAG,GAC7BikB,GACX,EAEkB,OAAAW,EAAA,KAAM,MAAOrO,EAAS,CACxC,KAAM,OACN,IAAK4M,EACL,SAAU,GACV,UAAW/X,EAAY,YACvB,UAAWkZ,GACVzS,EAAO,CACR,SAAU,CAAC6R,EAAY,IAAI,CAACmB,EAAQrM,IAA6BsM,EAAA,aAAaD,EAAQ,CACpF,IAAKrM,EACL,eAAgB0L,EAAqB1L,CAAK,EAC1C,QAAS4L,EAAkB5L,EAAOqM,EAAO,MAAM,OAAO,EACtD,SAAU7B,IAAuBxK,EAAQ0B,EAAW,EACrD,CAAA,CAAC,EAAGyJ,EAAY,OAAS,GAAKF,GAA8B/L,EAAA,IAAAhB,EAAU,MAAM,eAAgBH,EAAS,CACpG,IAAK6M,EACL,GAAIK,EACJ,aAAcpZ,EAAO,QAAQ,cAAc,iBAAiB,EAC5D,gBAAiB,OACjB,gBAAiByX,EACjB,gBAAiBA,EAAO0B,EAAS,OACjC,KAAM,WACN,KAAM,QACN,QAASQ,EACT,eAAgBE,EAAqBT,CAAQ,EAC7C,SAAUT,IAAuBU,EAAY,OAASxJ,EAAW,EAAA,GAChEnd,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,eAAgB,CACtC,SAAuB2a,EAAA,IAAKhB,EAAU,MAAM,gBAAiB,CAC3D,SAAU,OAAA,CACX,CAAA,CACF,CAAC,EAAGiN,EAAY,OAAS,SAAuB9B,GAAU,CACzD,KAAAC,EACA,OAAQsB,EAAU,QAClB,SAAAnB,EACA,QAASgC,EACT,eAA4Bc,GAAU,CACpC,GAAIvB,EACJ,UAAWpY,EAAY,SACvB,UAAWuZ,EACX,kBAAmBlB,EACnB,QAAS,OACT,cAAe,GACf,SAAUE,EAAY,IAAI,CAACkB,EAAQrM,IAAuBsM,eAAmBD,EAAQ,CACnF,IAAKrM,EACL,UAAWyL,CAAA,CACZ,CAAC,CAAA,CACH,CAAA,CACF,CAAC,CACH,CAAA,CAAC,CACJ,CAiEa,MAAAe,MAAgDtN,EAAA,IAAAqL,GAAiBxM,EAAS,CAAA,EAAI5J,CAAM,CAAC,EC1PrFsY,GAA2B,UAC3BC,GAAuB3O,EAAS,CAAE,EAAEkL,GAAqB,CACpE,SAAU,GACV,WAAY,GAEZ,WAAY,GACZ,MAAO,IACP,QAAS,OACT,MAAO,SACP,YAAa,SACb,WAAY,GACZ,kBAAmB,GACnB,cAAe,GACf,WAAYuD,GACZ,sBAAuB,MACzB,CAAC,ECjBKG,GAAwBjX,GAASA,EAAM,KAChCkX,GAAuBvU,GAAesU,GAAuBE,GAAQA,EAAK,aAAa,EACvFC,GAA0BzU,GAAesU,GAAuBE,GAAQA,EAAK,OAAO,EACpFE,GAA+B1U,GAAesU,GAAuBE,GAAQA,EAAK,qBAAqB,EAGvGG,GAAyB3U,GAAesU,GAAuBE,GAAQA,EAAK,sBAAsB,EAClGI,GAAsC5U,GAAesU,GAAuBE,GAAQA,EAAK,mBAAmB,EAC5GK,GAAsB7U,GAAesU,GAAuBE,GAAQA,EAAK,IAAI,EAC7EM,GAA+B9U,GAAesU,GAAuBE,GAAQA,EAAK,aAAa,EAC/FO,GAA8B/U,GAAesU,GAAuBE,GAAQA,EAAK,YAAY,EAC7FQ,GAA4BhV,GAAesU,GAAuBE,GAAQA,EAAK,UAAU,EACzFS,GAAkCvT,GAAuB4S,GAAuBE,GAAQ,CACnG,MAAMzW,EAAU,OAAO,QAAQyW,EAAK,UAAU,EAC9C,OAAIzW,EAAQ,SAAW,EACd,EAEFA,EAAQ,OAAO,CAAC,CAAA,CAAGmX,CAAS,IAAMA,EAAY,CAAC,EAAE,IAAI,CAAC,CAACC,CAAK,IAAM,OAAOA,CAAK,CAAC,EAAE,KAAK,CAACtjB,EAAG/E,IAAMA,EAAI+E,CAAC,EAAE,CAAC,EAAI,CACrH,CAAC,EACYujB,GAAyBpV,GAAesU,GAAuBE,GAAQA,EAAK,UAAU,EAKtFa,GAAkCrV,GAAesU,GAAuBE,GAAQA,GAAA,YAAAA,EAAM,mBAAmB,EAKzGc,GAAyB5T,GAAuB2T,GAAiCE,GAAuB,SACnH,MAAMC,EAAgBD,GAAA,YAAAA,EAAqB,WAC3C,MAAO,CACL,SAAQrpB,EAAAspB,GAAA,YAAAA,EAAe,SAAf,YAAAtpB,EAAuB,IAAIupB,IAAa,CAC9C,GAAIA,EAAS,GACb,MAAOA,EAAS,OAAS,CAAE,CAC5B,MAAM,CAAE,EACT,MAAKxR,EAAAuR,GAAA,YAAAA,EAAe,MAAf,YAAAvR,EAAoB,IAAIwR,IAAa,CACxC,GAAIA,EAAS,GACb,MAAOA,EAAS,OAAS,CAAE,CAC5B,MAAM,CAAE,CACb,CACA,CAAC,EAKYC,GAA8B1V,GAAesV,GAAwBK,GAAc,SAC9F,SAAQzpB,EAAAypB,GAAA,YAAAA,EAAY,MAAZ,YAAAzpB,EAAiB,SAAU,MAAM+X,EAAA0R,GAAA,YAAAA,EAAY,SAAZ,YAAA1R,EAAoB,SAAU,EACzE,CAAC,EC9CY2R,GAAqB,iCACrBC,GAAwB,OAAO,sBAAsB,EACrDC,GAAiB,KAAO,CACnC,KAAM,QACN,GAAIF,GACJ,MAAO,GACP,cAAe,KACf,YAAa,KACb,gBAAiB,GACjB,SAAU,CAAE,EACZ,iBAAkB,CAAE,EACpB,iBAAkB,GAClB,OAAQ,IACV,GAQO,SAASG,GAAsB/c,EAAImP,EAAK6N,EAAqB,kDAAmD,CACrH,GAAIhd,GAAM,KACR,MAAM,IAAI,MAAM,CAAC,mFAAoF,sFAAuFgd,EAAoB,KAAK,UAAU7N,CAAG,CAAC,EAAE,KAAK;AAAA,CAAI,CAAC,CAEnP,CACO,MAAM8N,GAAuB,CAACC,EAAUC,EAAUH,IAAuB,CAC9E,MAAMhd,EAAKmd,EAAWA,EAASD,CAAQ,EAAIA,EAAS,GACpD,OAAAH,GAAsB/c,EAAIkd,EAAUF,CAAkB,EAC/Chd,CACT,EACaod,GAA0B,CAAC,CACtC,KAAA5B,EACA,SAAA2B,EACA,QAAAE,EACA,SAAAC,CACF,IAAM,CACJ,MAAMC,EAAU,CACd,KAAM,OACN,KAAM,CAAE,CACZ,EACQC,EAAyB,CAAA,EACzBC,EAAsB,CAAA,EAC5B,QAAShjB,EAAI,EAAGA,EAAI+gB,EAAK,OAAQ/gB,GAAK,EAAG,CACvC,MAAM/H,EAAQ8oB,EAAK/gB,CAAC,EACduF,EAAKid,GAAqBvqB,EAAOyqB,CAAQ,EAC/CK,EAAuBxd,CAAE,EAAItN,EAC7B+qB,EAAoBzd,CAAE,EAAIA,EAC1Bud,EAAQ,KAAK,KAAKvd,CAAE,CACrB,CACD,MAAO,CACL,yBAA0Bwb,EAC1B,gCAAiC6B,EACjC,iCAAkCC,EAClC,QAAAC,EACA,oBAAAE,EACA,uBAAAD,CACJ,CACA,EACaE,GAAsB,CAAC,CAClC,KAAAC,EACA,aAAAC,EAAe,CACjB,IAAM,CACJ,MAAMC,EAAgBF,EAAKf,EAAkB,EAC7C,OAAO,KAAK,IAAIgB,EAAcC,EAAc,SAAS,QAAUA,EAAc,UAAY,KAAO,EAAI,EAAE,CACxG,EACaC,GAAwB,CAAC,CACpC,OAAAtd,EACA,aAAAod,EAAe,EACf,YAAAG,EACA,aAAAC,EACA,mBAAAC,EACA,sBAAAC,CACF,IAAM,CACJ,MAAM/X,EAAQ3F,EAAO,QAAQ,OAAO,KAG9B,CACJ,KAAM2d,EACN,WAAYC,EACZ,WAAYC,EACZ,aAAAC,EACA,cAAAC,EAAgB,CAAE,CACnB,EAAG/d,EAAO,QAAQ,uBAAuB,kBAAmB,CAC3D,aAAAwd,EACA,mBAAAC,EACA,QAAS9X,EAAM,QACf,oBAAqBA,EAAM,oBAC3B,uBAAwBA,EAAM,uBAC9B,sBAAA+X,CACJ,CAAG,EAGKM,EAAgChe,EAAO,QAAQ,6BAA6B,cAAe,CAC/F,KAAM2d,EACN,WAAYC,EACZ,oBAAqBjY,EAAM,oBAC3B,WAAYkY,EACZ,uBAAwBlY,EAAM,sBAClC,CAAG,EAGD,OAAA3F,EAAO,QAAQ,OAAO,KAAK,QAAU,CACnC,KAAM,UACN,QAAS,CACP,OAAQ,CAAE,EACV,OAAQ,CAAE,EACV,OAAQ,CAAE,CACX,EACD,iBAAkB,CAAE,CACxB,EACSkM,EAAS,CAAE,EAAE8R,EAA+B,CACjD,cAAe,KAAK,IAAIZ,EAAcY,EAA8B,WAAW,MAAM,EACrF,sBAAuBd,GAAoB,CACzC,KAAMc,EAA8B,KACpC,aAAAZ,CACN,CAAK,EACD,aAAAU,EACA,QAASP,EACT,cAAAQ,CACJ,CAAG,CACH,EACaE,GAAqBtP,GAAO0N,MAAyB1N,EACrDuP,GAAyBC,GAAWA,EAAQ,OAAS,eAAiBA,EAAQ,OAAS,UAAYA,EAAQ,OAAS,SAAWA,EAAQ,iBAAmBA,EAAQ,OAAS,aAAeA,EAAQ,gBAClMC,GAAyB,CAACjB,EAAMkB,EAAUC,IAA0B,CAC/E,MAAM7P,EAAO0O,EAAKkB,CAAQ,EAC1B,GAAI5P,EAAK,OAAS,QAChB,MAAO,GAET,MAAM8P,EAAmB,CAAA,EACzB,QAAStkB,EAAI,EAAGA,EAAIwU,EAAK,SAAS,OAAQxU,GAAK,EAAG,CAChD,MAAMukB,EAAQ/P,EAAK,SAASxU,CAAC,GACzB,CAACqkB,GAAyB,CAACJ,GAAuBf,EAAKqB,CAAK,CAAC,IAC/DD,EAAiB,KAAKC,CAAK,EAE7B,MAAMC,EAAmBL,GAAuBjB,EAAMqB,EAAOF,CAAqB,EAClF,QAASpkB,EAAI,EAAGA,EAAIukB,EAAiB,OAAQvkB,GAAK,EAChDqkB,EAAiB,KAAKE,EAAiBvkB,CAAC,CAAC,CAE5C,CACD,MAAI,CAACokB,GAAyB7P,EAAK,UAAY,MAC7C8P,EAAiB,KAAK9P,EAAK,QAAQ,EAE9B8P,CACT,EACaG,GAAyB,CAAC,CACrC,cAAAC,EACA,SAAAhC,EACA,QAAAI,EACA,UAAA6B,CACF,IAAM,CACJ,GAAID,EAAc,QAAQ,OAAS,OACjC,MAAM,IAAI,MAAM,gFAAgF,EAKlG,MAAME,EAAgB,IAAI,IAC1B9B,EAAQ,QAAQ+B,GAAU,CACxB,MAAMtf,EAAKid,GAAqBqC,EAAQnC,EAAU,0DAA0D,EACxGkC,EAAc,IAAIrf,CAAE,EACtBqf,EAAc,IAAIrf,EAAI0M,EAAS,CAAE,EAAE2S,EAAc,IAAIrf,CAAE,EAAGsf,CAAM,CAAC,EAEjED,EAAc,IAAIrf,EAAIsf,CAAM,CAElC,CAAG,EACD,MAAMC,EAAiB,CACrB,KAAM,UACN,QAAS,CACP,OAAQ,CAAC,GAAIJ,EAAc,QAAQ,QAAQ,QAAU,CAAA,CAAG,EACxD,OAAQ,CAAC,GAAIA,EAAc,QAAQ,QAAQ,QAAU,CAAA,CAAG,EACxD,OAAQ,CAAC,GAAIA,EAAc,QAAQ,QAAQ,QAAU,CAAA,CAAG,CACzD,EACD,iBAAkBzS,EAAS,CAAA,EAAIyS,EAAc,QAAQ,gBAAgB,EACrE,UAAAC,CACJ,EACQ5B,EAAyB9Q,EAAS,CAAE,EAAEyS,EAAc,sBAAsB,EAC1E1B,EAAsB/Q,EAAS,CAAE,EAAEyS,EAAc,mBAAmB,EACpEK,EAAgC,CACpC,OAAQ,CAAE,EACV,OAAQ,CAAE,EACV,OAAQ,CAAE,CACd,EAOEH,EAAc,QAAQ,CAACI,EAAYzf,IAAO,CACxC,MAAM0f,EAA4BH,EAAe,iBAAiBvf,CAAE,EAIpE,GAAIyf,EAAW,UAAY,SAAU,CAGnC,GAAIC,IAA8B,UAAY,CAAClC,EAAuBxd,CAAE,EACtE,OAKE0f,GAA6B,OAC/BF,EAA8BE,CAAyB,EAAE1f,CAAE,EAAI,IAIjEuf,EAAe,QAAQ,OAAO,KAAKvf,CAAE,EACrC,OAAOwd,EAAuBxd,CAAE,EAChC,OAAOyd,EAAoBzd,CAAE,EAC7B,MACD,CACD,MAAM2f,EAASnC,EAAuBxd,CAAE,EAGxC,GAAI2f,EAAQ,CAGND,IAA8B,UAChCF,EAA8B,OAAOxf,CAAE,EAAI,GAC3Cuf,EAAe,QAAQ,OAAO,KAAKvf,CAAE,GAI9B0f,GAA6B,MACpCH,EAAe,QAAQ,OAAO,KAAKvf,CAAE,EAIvCwd,EAAuBxd,CAAE,EAAI0M,EAAS,CAAA,EAAIiT,EAAQF,CAAU,EAC5D,MACD,CAKGC,IAA8B,UAChCF,EAA8B,OAAOxf,CAAE,EAAI,GAC3Cuf,EAAe,QAAQ,OAAO,KAAKvf,CAAE,GAK9B0f,GAA6B,MACpCH,EAAe,QAAQ,OAAO,KAAKvf,CAAE,EAIvCwd,EAAuBxd,CAAE,EAAIyf,EAC7BhC,EAAoBzd,CAAE,EAAIA,CAC9B,CAAG,EACD,MAAM4f,EAAgC,OAAO,KAAKJ,CAA6B,EAC/E,QAAS/kB,EAAI,EAAGA,EAAImlB,EAA8B,OAAQnlB,GAAK,EAAG,CAChE,MAAMolB,EAAaD,EAA8BnlB,CAAC,EAC5CqlB,EAAcN,EAA8BK,CAAU,EACxD,OAAO,KAAKC,CAAW,EAAE,OAAS,IACpCP,EAAe,QAAQM,CAAU,EAAIN,EAAe,QAAQM,CAAU,EAAE,OAAO7f,GAAM,CAAC8f,EAAY9f,CAAE,CAAC,EAExG,CACD,MAAO,CACL,uBAAAwd,EACA,oBAAAC,EACA,QAAS8B,EACT,yBAA0BJ,EAAc,yBACxC,gCAAiCA,EAAc,gCAC/C,iCAAkCA,EAAc,gCACpD,CACA,EACO,SAASY,GAA0Bvf,EAAQ,SAChD,MAAMmc,EAAaL,GAAuB9b,CAAM,EAC1Cwf,IAAsB9sB,EAAAypB,GAAA,YAAAA,EAAY,MAAZ,YAAAzpB,EAAiB,OAAO,CAAC8Y,EAAKzM,KACxDyM,GAAOxL,EAAO,QAAQ,sBAAsBjB,EAAM,EAAE,EAC7CyM,GACN,KAAM,EACHiU,IAAyBhV,EAAA0R,GAAA,YAAAA,EAAY,SAAZ,YAAA1R,EAAoB,OAAO,CAACe,EAAKzM,KAC9DyM,GAAOxL,EAAO,QAAQ,sBAAsBjB,EAAM,EAAE,EAC7CyM,GACN,KAAM,EACT,MAAO,CACL,IAAKgU,EACL,OAAQC,CACZ,CACA,CACO,SAASC,GAAwB1f,EAAQ,CAE9C,MAAO,iCAAiC,EADrBiE,GAAuBjE,EAAO,QAAQ,KAAK,EACP,SAAS,KAClE,CACO,SAAS2f,GAAmB3f,EAAQ+c,EAASJ,EAAU,CAC5D,MAAMiD,EAAuB,CAAA,EAC7B,OAAA7C,EAAQ,QAAQ+B,GAAU,CACxB,MAAMtf,EAAKid,GAAqBqC,EAAQnC,EAAU,0DAA0D,EACtGwB,EAAUne,EAAO,QAAQ,WAAWR,CAAE,EAC5C,IAAI2e,GAAA,YAAAA,EAAS,QAAS,YAAa,CAEjC,MAAM0B,EAAkB7f,EAAO,QAAQ,OAAO,WACxC8f,EAAYD,EAAgB,SAASrgB,CAAE,EACzCsgB,IACFD,EAAgB,SAASrgB,CAAE,EAAI0M,EAAS,GAAI4T,EAAWhB,CAAM,EAErE,MACMc,EAAqB,KAAKd,CAAM,CAEtC,CAAG,EACMc,CACT,CClTA,MAAMlU,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,qBAAqB,EASjKC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,aAAa,CAAA,EAEOjL,GAAyBxL,CAAO,CAC/D,EACA,SAAS2qB,GAAmBnvB,EAAO,CAC3B,KAAA,CACF,MAAAmO,CACE,EAAAnO,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTsM,EAAYhM,IACZuL,EAAa,CACjB,QAASS,EAAU,OAAA,EAEfjX,EAAUuW,GAAkBC,CAAU,EACtCoU,EAAOC,EAAM,QAAQ,IAAMlhB,EAAQsN,EAAU,MAAM,oBAAsBA,EAAU,MAAM,qBAAsB,CAACA,EAAU,MAAM,qBAAsBA,EAAU,MAAM,oBAAqBtN,CAAK,CAAC,EACnL,OAAAsO,EAAA,IAAK2S,EAAM9T,EAAS,CACtC,SAAU,QACV,UAAW9W,EAAQ,KACnB,YAAa4K,EAAO,QAAQ,cAAcjB,EAAQ,uBAAyB,uBAAuB,EAClG,aAAc,EAAQA,CAAK,EAC1ByI,CAAK,CAAC,CACX,CAmEA,MAAM0Y,GAAqCC,EAAAA,KAAKJ,EAAkB,EAErDK,GAA8B9d,GACrCA,EAAO,QAAU,kCAAoC4b,GAAuB5b,EAAO,OAAO,EACrF,SAEgB4d,GAAiBhU,EAAS,CAAA,EAAI5J,CAAM,CAAC,EC7G1DoJ,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAAa,WAAY,eAAgB,oBAAqB,QAAS,eAAe,EAStNC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,iBAAiB,CAAA,EAEGjL,GAAyBxL,CAAO,CAC/D,EACA,SAASirB,GAAoBzvB,EAAO,OAC5B,KAAA,CACF,GAAI0vB,EACJ,MAAAvhB,EACA,MAAA2K,EACA,UAAAmO,EACA,SAAAtL,EACA,cAAAG,CACE,EAAA9b,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACT6M,EAAWzM,SAAa,IAAI,EAC5BX,EAAKiR,KACL,CAAC5D,EAAYC,CAAa,EAAI7K,WAAelD,CAAK,EAClDsN,EAAYhM,IACZuL,EAAa,CACjB,QAASS,EAAU,OAAA,EAEfjX,EAAUuW,GAAkBC,CAAU,EACtCmB,EAAeC,cAAkB,MAAMrX,GAAS,CAC9C,MAAAsX,EAAWtX,EAAM,OAAO,QAC1B+W,GACI,MAAAA,EAAc/W,EAAOsX,CAAQ,EAErCH,EAAcG,CAAQ,EAChB,MAAAjN,EAAO,QAAQ,iBAAiB,CACpC,GAAIsgB,EACJ,MAAA5W,EACA,MAAOuD,GACNtX,CAAK,GACP,CAACqK,EAAQ0J,EAAO4W,EAAQ5T,CAAa,CAAC,EACzClK,OAAAA,EAAAA,UAAgB,IAAM,CACpBsK,EAAc/N,CAAK,CAAA,EAClB,CAACA,CAAK,CAAC,EACVqO,GAAkB,IAAM,CAClBb,GACFK,EAAS,QAAQ,OACnB,EACC,CAACL,CAAQ,CAAC,EACOc,EAAA,IAAK,QAASnB,EAAS,CACzC,QAAS1M,EACT,UAAW2Y,GAAK/iB,EAAQ,KAAMyiB,CAAS,GACtCrQ,EAAO,CACR,SAAuB6F,EAAAA,IAAKhB,EAAU,MAAM,aAAcH,EAAS,CACjE,GAAA1M,EACA,SAAAoN,EACA,QAAS,EAAQC,EACjB,SAAUE,EACV,KAAM,OAAA,GACLra,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,YAAY,CAAC,CACtC,CAAA,CAAC,CACJ,CAmEa,MAAA6tB,MAAoDlT,EAAA,IAAAgT,GAAqBnU,EAAS,CAAA,EAAI5J,CAAM,CAAC,ECxIpGoJ,GAAY,CAAC,OAAQ,aAAc,SAAU,kBAAmB,iBAAkB,cAAe,WAAY,QAAS,UAAW,iBAAiB,EAOlJ8U,GAA2BzU,GAAO,KAAK,EAAE,CAC7C,QAAS,OACT,WAAY,SACZ,MAAO,OACN,WAAa,CACZ,OAAQ,kBACV,CACF,CAAC,EACD,SAAS0U,GAAuB7vB,EAAO,WAC/B,KAAA,CACF,KAAAqH,EACA,WAAA0X,EACA,OAAA3P,EACA,gBAAA4P,EACA,YAAAG,EACA,SAAAF,EACA,MAAO6Q,EACP,QAAAzQ,EAAU,UACR,EAAArf,EACJsf,EAASvD,GAA8B/b,EAAO8a,EAAS,EACnD,CAAC2E,EAAkBC,CAAmB,EAAIrO,EAAe,SAAAhK,EAAK,OAAS,EAAE,EACzEoU,EAAYhM,IACZsgB,EAAUlQ,KACVmQ,EAAWnQ,KACXoQ,IAAkBnuB,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAc,CAAA,EACrDouB,EAAiBD,EAAgB,QAAU,GAC3CE,IAAwBtW,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,mBAAoB,CAAA,EACjEiG,EAAiB1D,cAA2BrX,GAAA,CAC1C,MAAAoJ,EAAQpJ,EAAM,OAAO,MAC3B2a,EAAoBvR,CAAK,EACd4Q,EAAAzD,EAAS,CAAC,EAAGjU,EAAM,CAC5B,MAAA8G,CACD,CAAA,CAAC,CAAA,EACD,CAAC4Q,EAAY1X,CAAI,CAAC,EACrBuK,EAAAA,UAAgB,IAAM,CACA8N,EAAArY,EAAK,OAAS,EAAE,CAAA,EACnC,CAACA,EAAK,KAAK,CAAC,EACf,MAAM+oB,EAAQN,GAAa1gB,EAAO,QAAQ,cAAc,uBAAuB,EAC/E,cAA0BwgB,GAA0B,CAClD,SAAU,CAAoBjG,EAAA,KAAAlO,EAAU,MAAM,gBAAiB,CAC7D,UAAW,GACX,SAAU,CAAcgB,EAAAA,IAAKhB,EAAU,MAAM,eAAgBH,EAAS,IAAI+U,EAAA5U,EAAU,YAAV,YAAA4U,EAAqB,eAAgB,CAC7G,GAAIN,EACJ,OAAQ,GACR,QAAA1Q,EACA,SAAU+Q,CAAA,CACX,CAAC,SAAsB3U,EAAU,MAAM,WAAYH,EAAS,CAC3D,QAAAyU,EACA,GAAIC,EACJ,MAAAI,EACA,MAAO3Q,EACP,SAAUK,EACV,QAAAT,EACA,QAASA,IAAY,WAAa,GAAO,OACzC,OAAQ6Q,EACR,aAAc,GACd,WAAY,CACV,IAAKlR,EACL,SAAAC,CACF,CAAA,EACCK,EAAkC2Q,EAAiB,CACpD,SAAU,CAAmBxT,EAAA,IAAAhB,EAAU,MAAM,iBAAkBH,EAAS,CAAC,EAAG6U,EAAuB,CACjG,OAAQD,EACR,MAAO,GACP,SAAU9gB,EAAO,QAAQ,cAAc,gBAAgB,CAAA,CACxD,CAAC,EAAqBqN,EAAA,IAAAhB,EAAU,MAAM,iBAAkBH,EAAS,CAAC,EAAG6U,EAAuB,CAC3F,OAAQD,EACR,MAAO,OACP,SAAU9gB,EAAO,QAAQ,cAAc,iBAAiB,CAAA,CACzD,CAAC,EAAqBqN,EAAA,IAAAhB,EAAU,MAAM,iBAAkBH,EAAS,CAAC,EAAG6U,EAAuB,CAC3F,OAAQD,EACR,MAAO,QACP,SAAU9gB,EAAO,QAAQ,cAAc,kBAAkB,CAC1D,CAAA,CAAC,CAAC,CACJ,CAAA,CAAC,CAAC,CACJ,CAAA,EAAG+P,CAAW,CAAA,CAChB,CACH,CCrFO,MAAMmR,GAA0B,IAAM,CAAC,CAC5C,MAAO,KACP,iBAAkBhN,GAAc,CAC9B,GAAI,CAACA,EAAW,MACd,OAAO,KAET,MAAMiN,EAAiB,OAAOjN,EAAW,KAAK,IAAM,OACpD,OAAOnV,GACE,EAAQA,IAAWoiB,CAE7B,EACD,eAAgBV,EAClB,CAAC,ECPKW,GAAuB,CAACriB,EAAO4P,EAAK5E,EAAQ/J,IACzCjB,EAAQiB,EAAO,QAAQ,cAAc,sBAAsB,EAAIA,EAAO,QAAQ,cAAc,uBAAuB,EAEtHqhB,GAAkBtiB,GAAS,CAC/B,OAAQA,EAAM,YAAa,EAAC,KAAM,EAAA,CAChC,IAAK,OACL,IAAK,MACL,IAAK,IACH,MAAO,GACT,IAAK,QACL,IAAK,KACL,IAAK,IACL,IAAK,OACL,IAAK,YACH,MAAO,GACT,QACE,MACH,CACH,EACauiB,GAAuBpV,EAAS,CAAE,EAAEkL,GAAqB,CACpE,KAAM,UACN,QAAS,OACT,MAAO,SACP,YAAa,SACb,WAAYgJ,GACZ,eAAgBG,GAChB,eAAgB/Q,GAChB,eAAgB4R,GAChB,gBAAiBF,GAAyB,EAC1C,sBAAuB,OAEvB,WAAY,GAEZ,kBAAmBniB,GAASsiB,GAAgBtiB,CAAK,CACnD,CAAC,ECtCK2M,GAAY,CAAC,QAAS,KAAM,QAAS,iBAAkB,MAAO,UAAW,SAAU,aAAc,WAAY,WAAY,WAAY,KAAK,EAQ1IC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,eAAe,CAAA,EAEKjL,GAAyBxL,CAAO,CAC/D,EACMmsB,GAAgDnV,EAAAA,WAAW,SAAkCxb,EAAO6F,EAAK,OACvG,KAAA,CACF,MAAAiT,EACA,GAAAlK,EACA,MAAOgiB,EACP,QAAArD,EACA,SAAA5R,EACA,SAAAsD,CACE,EAAAjf,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTsM,EAAYhM,IACZuL,EAAa,CACjB,QAASS,EAAU,OAAA,EAEfjX,EAAUuW,GAAkBC,CAAU,EACtC6V,EAAkBthB,SAAa,IAAI,EACnCuhB,EAAYvhB,SAAa,IAAI,EAC7BwhB,EAAYC,GAAWH,EAAiBhrB,CAAG,EAC3CsW,EAAwBpX,GAAA,CAC5B,MAAM2M,EAAS,CACb,MAAO3M,EAAM,OAAO,QACpB,GAAA6J,CAAA,EAEFQ,EAAO,QAAQ,aAAa,6BAA8BsC,EAAQ3M,CAAK,CAAA,EAEzE6jB,EAAAA,gBAAsB,IAAM,CAC1B,GAAI3J,IAAa,EAAG,CAClB,MAAMgS,EAAU7hB,EAAO,QAAQ,eAAeR,EAAIkK,CAAK,EACnDmY,IACFA,EAAQ,SAAW,GAEvB,GACC,CAAC7hB,EAAQ6P,EAAUrQ,EAAIkK,CAAK,CAAC,EAChClH,EAAAA,UAAgB,IAAM,OACpB,GAAI+J,EAAU,CACZ,MAAMuV,GAAQpvB,EAAA+uB,EAAgB,UAAhB,YAAA/uB,EAAyB,cAAc,SACrDovB,GAAA,MAAAA,EAAO,MAAM,CACX,cAAe,EAAA,EAChB,MACQJ,EAAU,SAETA,EAAA,QAAQ,KAAK,CAAA,CAAE,CAC3B,EACC,CAACnV,CAAQ,CAAC,EACP,MAAAwV,EAAgB/U,cAA2BrX,GAAA,CAC3CA,EAAM,MAAQ,KAGhBA,EAAM,gBAAgB,CAE1B,EAAG,CAAE,CAAA,EACL,GAAIwoB,EAAQ,OAAS,UAAYA,EAAQ,OAAS,YACzC,OAAA,KAET,MAAM6D,EAAehiB,EAAO,QAAQ,gBAAgBR,CAAE,EAChDwhB,EAAQhhB,EAAO,QAAQ,cAAcwhB,EAAY,+BAAiC,4BAA4B,EACpH,OAAyBnU,EAAA,IAAAhB,EAAU,MAAM,aAAcH,EAAS,CAC9D,IAAKyV,EACL,SAAA9R,EACA,QAAS2R,EACT,SAAUzU,EACV,UAAW3X,EAAQ,KACnB,WAAY,CACV,aAAc4rB,CAChB,EACA,UAAWe,EACX,SAAU,CAACC,EACX,eAAgBN,CACf,GAAAhvB,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAc8U,CAAK,CAAC,CAC9C,CAAC,EAmEYya,GAA2BV,GC3JjC,SAASW,GAA8BtxB,EAAO,CACnD,OAAIA,EAAM,YAAc4Q,GAAc,SAE7B5Q,EAAM,mBAAqBA,EAAM,8BAAgC,GAEnE,CAACA,EAAM,2BAChB,CCNO,MAAMuxB,GAAyBte,GAASA,EAAM,MACxCue,GAAwB5b,GAAe2b,GAAwBE,GAAcA,EAAW,IAAI,EAC5FC,GAAgC9b,GAAe2b,GAAwBE,GAAcA,EAAW,YAAY,EAC5GE,GAAsC/b,GAAe2b,GAAwBE,GAAcA,EAAW,kBAAkB,EACxHG,GAAqChc,GAAe2b,GAAwBE,GAAcA,EAAW,iBAAiB,EACtHI,GAA4B5e,GAASA,EAAM,SAC3C6e,GAA2Blc,GAAeic,GAA2B5e,GAASA,EAAM,IAAI,EACxF8e,GAAmCnc,GAAeic,GAA2B5e,GAASA,EAAM,YAAY,EACxG+e,GAAyCpc,GAAeic,GAA2B5e,GAASA,EAAM,kBAAkB,EACpHgf,GAAwCrc,GAAeic,GAA2B5e,GAASA,EAAM,iBAAiB,ECRlHif,GAAgCjf,GAASA,EAAM,aAC/Ckf,GAAgCvc,GAAesc,GAA+BE,GAAaA,EAAU,MAAM,EAC3GC,GAA2B/a,GAAuB4a,GAA+B3H,GAAwB,CAAC+H,EAAcC,IAAe,IAAI,IAAID,EAAa,IAAI1jB,GAAM,CAACA,EAAI2jB,EAAW3jB,CAAE,CAAC,CAAC,CAAC,CAAC,EAC5L4jB,GAA4Blb,GAAuB4a,GAA+BE,GAAaA,EAAU,OAAO,CAACvZ,EAAQ4Z,KACpI5Z,EAAO4Z,CAAK,EAAIA,EACT5Z,GACN,CAAE,CAAA,CAAC,ECDA6Z,GAA2Bzf,GAASA,EAAM,QAMnC0f,GAA2B/c,GAAe8c,GAA0BE,GAAgBA,EAAa,UAAU,EAM3GC,GAA+Bvb,GAAuBqb,GAA0BpI,GAAwBE,GAAqB,CAACqI,EAAWC,EAAcC,IAAYF,EAAU,OAAO,CAAClY,EAAKhM,IAAO,CAC5M,MAAMtN,EAAQyxB,EAAankB,CAAE,EACzBtN,GACFsZ,EAAI,KAAK,CACP,GAAAhM,EACA,MAAAtN,CACN,CAAK,EAEH,MAAMisB,EAAUyF,EAAQpkB,CAAE,EAC1B,OAAI2e,GAAWD,GAAuBC,CAAO,GAC3C3S,EAAI,KAAK,CACP,GAAAhM,EACA,MAAO,CACL,CAAC6c,EAAqB,EAAG7c,CAC1B,CACP,CAAK,EAEIgM,CACT,EAAG,CAAA,CAAE,CAAC,EAMOqY,GAAwBrd,GAAe8c,GAA0BQ,GAAWA,EAAQ,SAAS,EAK7FC,GAA+B7b,GAAuB2b,GAAuBnW,GACzEA,EAAU,OAAO,CAAC1T,EAAK8T,EAAUK,KAC9CnU,EAAI8T,EAAS,KAAK,EAAI,CACpB,cAAeA,EAAS,KACxB,UAAWJ,EAAU,OAAS,EAAIS,EAAQ,EAAI,MACpD,EACWnU,GACN,CAAE,CAAA,CAEN,ECjDKgqB,GAA0BngB,GAASA,EAAM,OAMlCogB,GAA0Bzd,GAAewd,GAAyBE,GAAeA,EAAY,WAAW,EAMxGC,GAAgC3d,GAAeyd,GAAyBnQ,GAAeA,EAAY,iBAAiB,EAMpHsQ,GAAgCvgB,GAASA,EAAM,kBAM/CwgB,GAAiC7d,GAAewd,GAAyBE,GAAeA,EAAY,kBAAkB,EAMtHI,GAA4C9d,GAAewd,GAAyBE,GAAeA,EAAY,6BAA6B,EAO5IK,GAAuCrc,GAAuBkc,GAA+BX,GAA8B,CAACe,EAAmBC,IAAeA,EAAW,OAAO9V,GAAO6V,EAAkB7V,EAAI,EAAE,IAAM,EAAK,CAAC,EAO3N+V,GAAmCxc,GAAuBqc,GAAsCI,GAA2BA,EAAwB,IAAIhW,GAAOA,EAAI,EAAE,CAAC,EAOrKiW,GAAuC1c,GAAuBmc,GAAgCZ,GAA8B,CAACoB,EAAoBJ,IAAeA,EAAW,OAAO9V,GAAOkW,EAAmBlW,EAAI,EAAE,IAAM,EAAK,CAAC,EAO9NmW,GAAmC5c,GAAuB0c,GAAsCG,GAA4BA,EAAyB,IAAIpW,GAAOA,EAAI,EAAE,CAAC,EAMvKqW,GAA+C9c,GAAuBqc,GAAsClJ,GAAqBI,GAAiC,CAACwJ,EAAmBrB,EAASsB,IACtMA,EAAe,EACVD,EAEFA,EAAkB,OAAOtW,UAAO,QAAAjc,EAAAkxB,EAAQjV,EAAI,EAAE,IAAd,YAAAjc,EAAiB,SAAU,EAAC,CACpE,EAMYyyB,GAA+B3e,GAAe+d,GAAsCU,GAAqBA,EAAkB,MAAM,EAMjIG,GAAuC5e,GAAewe,GAA8CK,GAA6BA,EAA0B,MAAM,EAOjKC,GAA+B9e,GAAeoe,GAAsCG,GAA4BA,EAAyB,MAAM,EAM/IQ,GAAyC/e,GAAe8e,GAA8BF,GAAsC,CAACI,EAAeC,IAAqBD,EAAgBC,CAAgB,EAMjMC,GAAgCxd,GAAuB+b,GAAyB3a,GAA0B,CAACwK,EAAa6R,IAAY,OAAK,OAAAjzB,EAAAohB,EAAY,QAAZ,YAAAphB,EAAmB,OAAOuF,GAAQ,SACtL,GAAI,CAACA,EAAK,MACR,MAAO,GAET,MAAM8R,EAAS4b,EAAa1tB,EAAK,KAAK,EACtC,GAAI,EAAC8R,GAAA,MAAAA,EAAQ,oBAAmBrX,EAAAqX,GAAA,YAAAA,EAAQ,kBAAR,YAAArX,EAAyB,UAAW,EAClE,MAAO,GAET,MAAM8hB,EAAiBzK,EAAO,gBAAgB,KAAK0K,GAAYA,EAAS,QAAUxc,EAAK,QAAQ,EAC/F,OAAKuc,EAGE,CAACA,EAAe,gBAAkBvc,EAAK,OAAS,QAAQwS,EAAAxS,EAAK,QAAL,YAAAwS,EAAY,cAAe,GAFjF,EAGX,GAAE,EAKWmb,GAAsC1d,GAAuBwd,GAA+BG,GACxFA,EAAc,OAAO,CAAC7rB,EAAKka,KACnCla,EAAIka,EAAW,KAAK,EAGvBla,EAAIka,EAAW,KAAK,EAAE,KAAKA,CAAU,EAFrCla,EAAIka,EAAW,KAAK,EAAI,CAACA,CAAU,EAI9Bla,GACN,CAAE,CAAA,CAEN,ECvIM,SAAS8rB,GAAiBC,EAAeC,EAAYC,EAAY,CACtE,MAAMC,EAAgB/lB,SAAa,EAAI,EACvCqC,EAAAA,UAAgB,IAAM,CACpB0jB,EAAc,QAAU,GACxBH,EAAc,QAAQ,SAASE,EAAYD,CAAU,CACtD,EAAE,CAACD,EAAeE,EAAYD,CAAU,CAAC,EACtCE,EAAc,SAChBH,EAAc,QAAQ,SAASE,EAAYD,CAAU,CAEzD,CCTO,SAASG,GAAcJ,EAAetnB,EAAM,CACjD,MAAM2nB,EAASjmB,SAAa,IAAI,EAChC,GAAIimB,EAAO,QACT,OAAOA,EAAO,QAEhB,MAAMC,EAAYN,EAAc,QAAQ,UAAUtnB,CAAI,EACtD,OAAA2nB,EAAO,QAAUC,EACVA,CACT,CCNO,MAAMC,GAA6B,CAACtmB,EAAQvJ,EAAKoL,EAAWC,EAASC,IAAY,CACtF,MAAMqkB,EAASD,GAAcnmB,EAAQ,wBAAwB,EACvD,CAACumB,EAAOC,CAAQ,EAAIvkB,EAAc,SAAC,EAAK,EACxCE,EAAahC,SAAa2B,CAAO,EACjC2kB,EAAgB5V,GAAWpa,CAAG,EAAIA,EAAG,GAAKA,GAAA,YAAAA,EAAK,UAAW,KAC1DiwB,EAAc1Z,EAAiB,YAACrX,GAC7BwM,EAAW,SAAWA,EAAW,QAAQxM,CAAK,EACpD,CAAE,CAAA,EACL6M,EAAAA,UAAgB,IAAM,CACpBL,EAAW,QAAUL,CACzB,EAAK,CAACA,CAAO,CAAC,EACZU,EAAAA,UAAgB,IAAM,CACpB,GAAIikB,GAAiB5kB,GAAa,CAAC0kB,EAAO,CACxCH,EAAO,MAAM,kBAAkBvkB,CAAS,QAAQ,EAChD4kB,EAAc,iBAAiB5kB,EAAW6kB,EAAa3kB,CAAO,EAC9DykB,EAAS,EAAI,EACb,MAAMnlB,EAAc,IAAM,CACxB+kB,EAAO,MAAM,mBAAmBvkB,CAAS,QAAQ,EACjD4kB,EAAc,oBAAoB5kB,EAAW6kB,EAAa3kB,CAAO,CACzE,EACM/B,EAAO,QAAQ,eAAe,UAAWqB,CAAW,CACrD,CACL,EAAK,CAAColB,EAAeC,EAAa7kB,EAAW0kB,EAAOH,EAAQrkB,EAAS/B,CAAM,CAAC,CAC5E,ECzBa2mB,GAAiB3R,GAAY,CACxC,MAAMkR,EAAgB/lB,SAAa,EAAI,EACnC+lB,EAAc,UAChBA,EAAc,QAAU,GACxBlR,IAEJ,ECLM4R,GAAO,IAAM,CAAA,EAKNC,GAAa,CAACC,EAAWC,IAAW,CAC/C,MAAMC,EAAS7mB,SAAa,EAAK,EACjCiN,GAAkB,IACZ4Z,EAAO,SAAW,CAACF,EACdF,IAETI,EAAO,QAAU,GACVD,EAAM,GAEZ,CAACC,EAAO,SAAWF,CAAS,CAAC,CAClC,EChBMG,GAAgB,IACTC,GAAkBC,GAAgBA,EAAe,EAAI,IACrDC,GAAe,CAACtK,EAAUuK,EAAUC,IAC3CD,EAAW,GAAKvK,EAAW,EACtB,KAAK,KAAKA,EAAWuK,CAAQ,EAElCvK,IAAa,GAERwK,EAAO,EAET,EAEIC,GAAgCJ,IAAiB,CAC5D,KAAM,EACN,SAAUA,EAAe,EAAI,GAC/B,GACaK,GAAe,CAACF,EAAMG,EAAY,IACzCA,IAAc,EACTH,EAEF,KAAK,IAAI,KAAK,IAAIA,EAAMG,EAAY,CAAC,EAAG,CAAC,EAErCC,GAAiC,CAACL,EAAUM,IAAkB,CACzE,GAAIA,IAAkBnmB,GAAc,UAAY6lB,EAAWJ,GACzD,MAAM,IAAI,MAAM,CAAC,0EAA2E,yFAAyF,EAAE,KAAK;AAAA,CAAI,CAAC,CAErM,EClBaW,GAAyB/jB,GAASA,EAAM,WAMxCgkB,GAA8BrhB,GAAeohB,GAAwBE,GAAcA,EAAW,eAAe,EAM7GC,GAAiCvhB,GAAeohB,GAAwBE,GAAcA,EAAW,QAAQ,EAMzGE,GAA6BxhB,GAAeohB,GAAwBE,GAAcA,EAAW,IAAI,EAMjGG,GAAmBzhB,GAAeqhB,GAA6BK,GAAmBA,EAAgB,IAAI,EAMtGC,GAAuB3hB,GAAeqhB,GAA6BK,GAAmBA,EAAgB,QAAQ,EAM9GE,GAAwB5hB,GAAeqhB,GAA6BE,GAAgC,CAACG,EAAiBpL,IAAasK,GAAatK,EAAUoL,EAAgB,SAAUA,EAAgB,IAAI,CAAC,EAMzMG,GAAiCngB,GAAuB2f,GAA6BxM,GAAqBI,GAAiC8I,GAAsCS,GAA8C,CAACkD,EAAiBtE,EAASsB,EAAcP,EAAyB2D,IAAoC,OAChV,MAAMC,EAA0BD,EAAgC,OAC1DE,EAAwB,KAAK,IAAIN,EAAgB,SAAWA,EAAgB,KAAMK,EAA0B,CAAC,EAC7GE,EAAuB,KAAK,IAAID,EAAwBN,EAAgB,SAAW,EAAGK,EAA0B,CAAC,EAGvH,GAAIC,IAA0B,IAAMC,IAAyB,GAC3D,OAAO,KAIT,GAAIvD,EAAe,EACjB,MAAO,CACL,cAAesD,EACf,aAAcC,CACpB,EAEE,MAAMC,EAAmBJ,EAAgCE,CAAqB,EACxEG,EAAiCF,EAAuBD,EAAwB,EAChFI,EAAgBjE,EAAwB,UAAUhW,GAAOA,EAAI,KAAO+Z,EAAiB,EAAE,EAC7F,IAAIG,EAAeD,EACfE,EAAmB,EACvB,KAAOD,EAAelE,EAAwB,QAAUmE,GAAoBH,GAAgC,CAC1G,MAAMha,EAAMgW,EAAwBkE,CAAY,EAC1ClN,GAAQjpB,EAAAkxB,EAAQjV,EAAI,EAAE,IAAd,YAAAjc,EAAiB,MAC3BipB,IAAU,OACZkN,GAAgB,IAEZC,EAAmBH,GAAkChN,EAAQ,KAC/DkN,GAAgB,GAEdlN,IAAU,IACZmN,GAAoB,GAGzB,CACD,MAAO,CACL,cAAAF,EACA,aAAcC,EAAe,CACjC,CACA,CAAC,EAMYE,GAAmD7gB,GAAuBqc,GAAsC8D,GAAgC,CAAC1D,EAAyBqE,IAChLA,EAGErE,EAAwB,MAAMqE,EAAgB,cAAeA,EAAgB,aAAe,CAAC,EAF3F,EAGV,EAMYC,GAA+C/gB,GAAuBwc,GAAkC2D,GAAgC,CAACa,EAAqBF,IACpKA,EAGEE,EAAoB,MAAMF,EAAgB,cAAeA,EAAgB,aAAe,CAAC,EAFvF,EAGV,EC/GKtd,GAAY,CAAC,QAAS,QAAQ,EAc9BC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,eAAe,CAAA,EAEKjL,GAAyBxL,CAAO,CAC/D,EACM+zB,GAAwC/c,EAAAA,WAAW,SAA4Bxb,EAAO6F,EAAK,OACzF,MAAA+Q,EAAQmF,GAA8B/b,EAAO8a,EAAS,EACtD,EAAG0d,CAAW,EAAInnB,WAAe,EAAK,EACtCjC,EAASD,KACTsM,EAAYhM,IACZuL,EAAa,CACjB,QAASS,EAAU,OAAA,EAEfjX,EAAUuW,GAAkBC,CAAU,EACtCyd,EAAgB7lB,EAAgBxD,EAAQ2iB,EAAgC,EACxEK,EAAYxf,EAAgBxD,EAAQ8iB,EAA6B,EACjEwG,EAAgB9lB,EAAgBxD,EAAQ0kB,EAAgC,EACxE6E,EAAyB/lB,EAAgBxD,EAAQipB,EAA4C,EAC7FO,EAAoBvJ,EAAAA,QAAc,IAClC,OAAO5T,EAAU,iBAAoB,WAChC2W,EAEFA,EAAU,OAAaxjB,GAEvBQ,EAAO,QAAQ,OAAOR,CAAE,EAGtB6M,EAAU,gBAAgBrM,EAAO,QAAQ,aAAaR,CAAE,CAAC,EAFvD,EAGV,EACA,CAACQ,EAAQqM,EAAU,gBAAiB2W,CAAS,CAAC,EAG3CyG,EAAsBxJ,EAAAA,QAAc,KACzB,CAAC5T,EAAU,YAAc,CAACA,EAAU,6BAA+Bid,EAAgBC,GAIpF,OAAO,CAAC/d,EAAKhM,KACzBgM,EAAIhM,CAAE,EAAI,GACHgM,GACN,CAAE,CAAA,EACJ,CAACa,EAAU,WAAYA,EAAU,6BAA8Bkd,EAAwBD,CAAa,CAAC,EAGlGI,EAAuBzJ,EAAc,QAAA,IAAMuJ,EAAkB,OAAOhqB,GAAMiqB,EAAoBjqB,CAAE,CAAC,EAAE,OAAQ,CAACgqB,EAAmBC,CAAmB,CAAC,EACnJE,EAAkBD,EAAuB,GAAKA,EAAuB,OAAO,KAAKD,CAAmB,EAAE,OACtGjI,EAAYkI,EAAuB,EACnC3c,EAAwBpX,GAAA,CAC5B,MAAM2M,EAAS,CACb,MAAO3M,EAAM,OAAO,OAAA,EAEfqK,EAAA,QAAQ,aAAa,gCAAiCsC,CAAM,CAAA,EAE/DuN,EAAWwZ,IAAkB,MAAQA,EAAc,QAAUz4B,EAAM,MAAQ,EAAI,GACrF4oB,EAAAA,gBAAsB,IAAM,CAC1B,MAAMqI,EAAU7hB,EAAO,QAAQ,uBAAuBpP,EAAM,KAAK,EAC7Dif,IAAa,GAAKgS,IACpBA,EAAQ,SAAW,KAEpB,CAAChS,EAAU7P,EAAQpP,EAAM,KAAK,CAAC,EAC5B,MAAAmxB,EAAgB/U,cAA2BrX,GAAA,CAC3CA,EAAM,MAAQ,KAETqK,EAAA,QAAQ,aAAa,gCAAiC,CAC3D,MAAO,CAACwhB,CAAA,CACT,CACH,EACC,CAACxhB,EAAQwhB,CAAS,CAAC,EAChBoI,EAAwB5c,EAAAA,YAAkB,IAAM,CACxCoc,EAAAS,GAAK,CAACA,CAAC,CACrB,EAAG,CAAE,CAAA,EACLrnB,EAAAA,UAAgB,IACPxC,EAAO,QAAQ,eAAe,qBAAsB4pB,CAAqB,EAC/E,CAAC5pB,EAAQ4pB,CAAqB,CAAC,EAClC,MAAM5I,EAAQhhB,EAAO,QAAQ,cAAcwhB,EAAY,mCAAqC,gCAAgC,EAC5H,OAAyBnU,EAAA,IAAAhB,EAAU,MAAM,aAAcH,EAAS,CAC9D,IAAAzV,EACA,cAAekzB,EACf,QAASnI,EACT,SAAUzU,EACV,UAAW3X,EAAQ,KACnB,WAAY,CACV,aAAc4rB,CAChB,EACA,SAAAnR,EACA,UAAWkS,EACX,SAAU,CAACG,GAA8B7V,CAAS,CACjD,GAAA3Z,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAc8U,CAAK,CAAC,CAC9C,CAAC,ECrGYsiB,GAAgC,YAChCC,GAAkC7d,EAAS,CAAE,EAAEoV,GAAsB,CAChF,KAAM,SACN,MAAOwI,GACP,MAAO,GACP,UAAW,GACX,SAAU,GACV,WAAY,GAEZ,WAAY,GACZ,kBAAmB,GACnB,eAAgB,GAChB,cAAe,GACf,sBAAuB,OACvB,QAAS,OACT,YAAa,CAAC/qB,EAAO4P,EAAK5E,EAAQ/J,IAAW,CAC3C,MAAMgqB,EAAkB5G,GAA0BpjB,CAAM,EAClDqjB,EAAQrjB,EAAO,QAAQ,SAAS2O,CAAG,EACzC,OAAOqb,EAAgB3G,CAAK,IAAM,MACnC,EACD,aAAc/gB,GAAuB+K,MAAK8b,GAAoBjd,EAAS,CAAA,EAAI5J,CAAM,CAAC,EAClF,WAAYA,GAAuB+K,MAAK4U,GAA0B/V,EAAS,CAAA,EAAI5J,CAAM,CAAC,CACxF,CAAC,EC3BKoJ,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,aAAc,iBAAkB,cAAe,WAAY,UAAU,EAOnJ,SAASue,GAAmC7X,EAAW8X,EAAW,CAChE,GAAI9X,GAAa,KACR,MAAA,GAEH,MAAA+X,EAAW,IAAI,KAAK/X,CAAS,EACnC,OAAI,OAAO,MAAM+X,EAAS,QAAS,CAAA,EAC1B,GAELD,IAAc,OACTC,EAAS,YAAc,EAAA,UAAU,EAAG,EAAE,EAE3CD,IAAc,kBAIhBC,EAAS,WAAWA,EAAS,WAAe,EAAAA,EAAS,mBAAmB,EACjEA,EAAS,YAAc,EAAA,UAAU,EAAG,EAAE,GAExCA,EAAS,YAAc,EAAA,UAAU,EAAG,EAAE,CAC/C,CACA,SAASC,GAAoBx5B,EAAO,OAC5B,KAAA,CACF,KAAAqH,EACA,WAAA0X,EACA,KAAAlQ,EACA,OAAAO,EACA,gBAAA4P,EACA,WAAAI,EACA,YAAAD,EACA,SAAAF,EACA,SAAAC,CACE,EAAAlf,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDyE,EAAgBC,KAChB,CAACC,EAAkBC,CAAmB,EAAIrO,EAAe,SAAA,IAAMgoB,GAAmChyB,EAAK,MAAOwH,CAAI,CAAC,EACnH,CAAC8Q,EAAUC,CAAa,EAAIvO,WAAe,EAAK,EAChDzC,EAAKiR,KACLpE,EAAYhM,IACZqQ,EAAiB1D,cAA2BrX,GAAA,CAChDwa,EAAc,MAAM,EACd,MAAApR,EAAQpJ,EAAM,OAAO,MAC3B2a,EAAoBvR,CAAK,EACzByR,EAAc,EAAI,EACJL,EAAA,MAAM9D,EAAU,iBAAkB,IAAM,CAC9C,MAAAge,EAAO,IAAI,KAAKtrB,CAAK,EAChB4Q,EAAAzD,EAAS,CAAC,EAAGjU,EAAM,CAC5B,MAAO,OAAO,MAAMoyB,EAAK,SAAS,EAAI,OAAYA,CACnD,CAAA,CAAC,EACF7Z,EAAc,EAAK,CAAA,CACpB,CAAA,EACA,CAACb,EAAY1X,EAAMoU,EAAU,iBAAkB8D,CAAa,CAAC,EAChE3N,OAAAA,EAAAA,UAAgB,IAAM,CACpB,MAAMzD,EAAQkrB,GAAmChyB,EAAK,MAAOwH,CAAI,EACjE6Q,EAAoBvR,CAAK,CACxB,EAAA,CAAC9G,EAAK,MAAOwH,CAAI,CAAC,EACI4N,EAAA,IAAAhB,EAAU,MAAM,cAAeH,EAAS,CAC/D,UAAW,GACX,GAAA1M,EACA,MAAOQ,EAAO,QAAQ,cAAc,uBAAuB,EAC3D,YAAaA,EAAO,QAAQ,cAAc,6BAA6B,EACvE,MAAOqQ,EACP,SAAUK,EACV,QAAS,WACT,KAAMjR,GAAQ,OACd,gBAAiB,CACf,OAAQ,EACV,EACA,SAAUmQ,EACV,WAAY1D,EAAS,GAAIqE,GAAYR,EAAc,CACjD,aAAcQ,EAA6BlD,EAAAA,IAAAhB,EAAU,MAAM,SAAU,CACnE,SAAU,QACV,MAAO,QACR,CAAA,EAAI0D,CACP,EAAI,GAAI,CACN,SAAAD,GACCE,EAAY,CACb,WAAY9D,EAAS,CACnB,IAAKzM,IAAS,iBAAmB,mBAAqB,aACtD,SAAAoQ,CAAA,EACCG,GAAA,YAAAA,EAAY,UAAU,CAAA,CAC1B,CACA,EAAAxI,GAAO9U,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAa,CAAC,CAC/C,CC1FA,SAAS43B,GAAmBpW,EAAYqW,EAAWC,EAAUC,EAAW,CACtE,GAAI,CAACvW,EAAW,MACd,OAAO,KAET,MAAMmW,EAAO,IAAI,KAAKnW,EAAW,KAAK,EAClCsW,EACFH,EAAK,WAAW,EAAG,CAAC,GAQpBA,EAAK,WAAWA,EAAK,WAAY,EAAGA,EAAK,kBAAiB,CAAE,EAC5DA,EAAK,SAAS,EAAG,EAAG,EAAG,CAAC,GAE1B,MAAMK,EAAOL,EAAK,UAClB,OAAOtrB,GAAS,CACd,GAAI,CAACA,EACH,MAAO,GAET,GAAI0rB,EACF,OAAOF,EAAUxrB,EAAM,QAAS,EAAE2rB,CAAI,EAIxC,MAAMP,EAAW,IAAI,KAAKprB,CAAK,EAC/B,OAAIyrB,EACFL,EAAS,WAAW,EAAG,CAAC,EAExBA,EAAS,SAAS,EAAG,EAAG,EAAG,CAAC,EAEvBI,EAAUJ,EAAS,QAAS,EAAEO,CAAI,CAC7C,CACA,CACO,MAAMC,GAAuBH,GAAY,CAAC,CAC/C,MAAO,KACP,iBAAkBtW,GACToW,GAAmBpW,EAAY,CAAC7E,EAAQC,IAAWD,IAAWC,EAAQkb,CAAQ,EAEvF,eAAgBJ,GAChB,oBAAqB,CACnB,KAAMI,EAAW,iBAAmB,MACrC,CACH,EAAG,CACD,MAAO,MACP,iBAAkBtW,GACToW,GAAmBpW,EAAY,CAAC7E,EAAQC,IAAWD,IAAWC,EAAQkb,CAAQ,EAEvF,eAAgBJ,GAChB,oBAAqB,CACnB,KAAMI,EAAW,iBAAmB,MACrC,CACH,EAAG,CACD,MAAO,QACP,iBAAkBtW,GACToW,GAAmBpW,EAAY,CAAC7E,EAAQC,IAAWD,EAASC,EAAQkb,CAAQ,EAErF,eAAgBJ,GAChB,oBAAqB,CACnB,KAAMI,EAAW,iBAAmB,MACrC,CACH,EAAG,CACD,MAAO,YACP,iBAAkBtW,GACToW,GAAmBpW,EAAY,CAAC7E,EAAQC,IAAWD,GAAUC,EAAQkb,CAAQ,EAEtF,eAAgBJ,GAChB,oBAAqB,CACnB,KAAMI,EAAW,iBAAmB,MACrC,CACH,EAAG,CACD,MAAO,SACP,iBAAkBtW,GACToW,GAAmBpW,EAAY,CAAC7E,EAAQC,IAAWD,EAASC,EAAQkb,EAAU,CAACA,CAAQ,EAEhG,eAAgBJ,GAChB,oBAAqB,CACnB,KAAMI,EAAW,iBAAmB,MACrC,CACH,EAAG,CACD,MAAO,aACP,iBAAkBtW,GACToW,GAAmBpW,EAAY,CAAC7E,EAAQC,IAAWD,GAAUC,EAAQkb,CAAQ,EAEtF,eAAgBJ,GAChB,oBAAqB,CACnB,KAAMI,EAAW,iBAAmB,MACrC,CACH,EAAG,CACD,MAAO,UACP,iBAAkB,IACTzrB,GACEA,GAAS,KAGpB,oBAAqB,EACvB,EAAG,CACD,MAAO,aACP,iBAAkB,IACTA,GACEA,GAAS,KAGpB,oBAAqB,EACvB,CAAC,ECzGK2M,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,aAAc,eAAgB,oBAAqB,eAAe,EAU9Mkf,GAAkB7e,GAAOC,EAAS,EAAE,CACxC,SAAU,SACZ,CAAC,EACKL,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,eAAe,CAAA,EAEKjL,GAAyBxL,CAAO,CAC/D,EACA,SAASy1B,GAAiBj6B,EAAO,CACzB,KAAA,CACF,GAAA4O,EACA,MAAOsrB,EACP,MAAAphB,EACA,OAAA4C,EACA,SAAAC,EACA,WAAAwe,EACA,cAAAre,CACE,EAAA9b,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDsf,EAAa1e,EAAO,OAAS,WAC7BtM,EAASD,KACT6M,EAAWzM,EAAAA,SACX8qB,EAAmBhL,EAAAA,QAAc,IAAM,CACvC,IAAAiL,EACAJ,GAAa,KACFI,EAAA,KACJJ,aAAqB,KACjBI,EAAAJ,EAEbI,EAAa,IAAI,MAAMJ,GAAa,IAAI,UAAU,EAEhD,IAAAK,EACJ,OAAID,GAAc,MAAQ,OAAO,MAAMA,EAAW,QAAA,CAAS,EACzCC,EAAA,GAGhBA,EADkB,IAAI,KAAKD,EAAW,QAAA,EAAYA,EAAW,kBAAsB,EAAA,GAAK,GAAI,EAClE,cAAc,OAAO,EAAGF,EAAa,GAAK,EAAE,EAEjE,CACL,OAAQE,EACR,UAAWC,CAAA,CACb,EACC,CAACL,EAAWE,CAAU,CAAC,EACpB,CAACne,EAAYC,CAAa,EAAI7K,WAAegpB,CAAgB,EAE7Drf,EAAa,CACjB,QAFgBvL,IAEG,OAAA,EAEfjL,EAAUuW,GAAkBC,CAAU,EACtCwf,EAAmBpe,cAA2BjO,GAAA,CAClD,GAAIA,IAAU,GACL,OAAA,KAET,KAAM,CAACsrB,EAAMK,CAAI,EAAI3rB,EAAM,MAAM,GAAG,EAC9B,CAACssB,EAAMC,EAAOC,CAAG,EAAIlB,EAAK,MAAM,GAAG,EACnCa,MAAiB,KAGvB,GAFWA,EAAA,YAAY,OAAOG,CAAI,EAAG,OAAOC,CAAK,EAAI,EAAG,OAAOC,CAAG,CAAC,EACnEL,EAAW,SAAS,EAAG,EAAG,EAAG,CAAC,EAC1BR,EAAM,CACR,KAAM,CAACc,EAAOC,CAAO,EAAIf,EAAK,MAAM,GAAG,EAC5BQ,EAAA,SAAS,OAAOM,CAAK,EAAG,OAAOC,CAAO,EAAG,EAAG,CAAC,CAC1D,CACO,OAAAP,CACT,EAAG,CAAE,CAAA,EACCne,EAAeC,cAAkB,MAAMrX,GAAS,CAC9C,MAAA+1B,EAAmB/1B,EAAM,OAAO,MAChCg2B,EAAgBP,EAAiBM,CAAgB,EACnDhf,GACI,MAAAA,EAAc/W,EAAOg2B,CAAa,EAE5B7e,EAAA,CACZ,OAAQ6e,EACR,UAAWD,CAAA,CACZ,EACD1rB,EAAO,QAAQ,iBAAiB,CAC9B,GAAAR,EACA,MAAAkK,EACA,MAAOiiB,GACNh2B,CAAK,CAAA,EACP,CAACqK,EAAQ0J,EAAOlK,EAAIkN,EAAe0e,CAAgB,CAAC,EACvD5oB,OAAAA,EAAAA,UAAgB,IAAM,CACpBsK,EAAuBjJ,GAAA,SACjB,OAAAonB,EAAiB,SAAWpnB,EAAM,UAAUnR,EAAAu4B,EAAiB,SAAjB,YAAAv4B,EAAyB,eAAc+X,EAAA5G,EAAM,SAAN,YAAA4G,EAAc,WAC5FwgB,EAEFpnB,CAAA,CACR,CAAA,EACA,CAAConB,CAAgB,CAAC,EACrB7d,GAAkB,IAAM,CAClBb,GACFK,EAAS,QAAQ,OACnB,EACC,CAACL,CAAQ,CAAC,EACOc,EAAA,IAAKud,GAAiB1e,EAAS,CACjD,SAAAU,EACA,UAAW,GACX,UAAWxX,EAAQ,KACnB,KAAM41B,EAAa,iBAAmB,OACtC,WAAY9e,EAAS,CACnB,IAAK8e,EAAa,mBAAqB,cACtCD,CAAU,EACb,MAAOle,EAAW,UAClB,SAAUE,CAAA,EACTvF,CAAK,CAAC,CACX,CAmEa,MAAAokB,MAAiDve,EAAA,IAAAwd,GAAkB3e,EAAS,CAAA,EAAI5J,CAAM,CAAC,ECtLpG,SAASupB,GAAqB,CAC5B,MAAA9sB,EACA,WAAA+sB,EACA,MAAAzI,EACA,MAAA3Z,CACF,EAAG,CACD,GAAI,EAAE3K,aAAiB,MACrB,MAAM,IAAI,MAAM,CAAC,YAAY+sB,CAAU,0DAA2D,iEAAkE,WAAWzI,CAAK,aAAa3Z,CAAK,IAAI,EAAE,KAAK;AAAA,CAAI,CAAC,CAE1N,CACO,MAAMqiB,GAAoB,CAAChtB,EAAO4P,EAAK5E,EAAQ/J,IAAW,CAC/D,GAAI,CAACjB,EACH,MAAO,GAET,MAAMskB,EAAQrjB,EAAO,QAAQ,SAAS2O,CAAG,EACzC,OAAAkd,GAAqB,CACnB,MAAA9sB,EACA,WAAY,OACZ,MAAAskB,EACA,MAAOtZ,EAAO,KAClB,CAAG,EACMhL,EAAM,oBACf,EACaitB,GAAwB,CAACjtB,EAAO4P,EAAK5E,EAAQ/J,IAAW,CACnE,GAAI,CAACjB,EACH,MAAO,GAET,MAAMskB,EAAQrjB,EAAO,QAAQ,SAAS2O,CAAG,EACzC,OAAAkd,GAAqB,CACnB,MAAA9sB,EACA,WAAY,WACZ,MAAAskB,EACA,MAAOtZ,EAAO,KAClB,CAAG,EACMhL,EAAM,gBACf,EACaktB,GAAoB/f,EAAS,CAAE,EAAEkL,GAAqB,CACjE,KAAM,OACN,eAAgB3H,GAChB,eAAgBsc,GAChB,gBAAiBpB,GAAsB,EACvC,eAAgBiB,GAEhB,kBAAmB7sB,GAAS,IAAI,KAAKA,CAAK,CAC5C,CAAC,EACYmtB,GAAwBhgB,EAAS,CAAE,EAAEkL,GAAqB,CACrE,KAAM,WACN,eAAgB3H,GAChB,eAAgBuc,GAChB,gBAAiBrB,GAAqB,EAAI,EAC1C,eAAgBiB,GAEhB,kBAAmB7sB,GAAS,IAAI,KAAKA,CAAK,CAC5C,CAAC,ECxDKotB,GAAoBptB,GACpBA,GAAS,KACJ,KAEF,OAAOA,CAAK,EAERqtB,GAA8BrtB,GACrCA,GAAS,MAAQ,OAAO,MAAMA,CAAK,GAAKA,IAAU,GAC7C,KAEFiY,GACEmV,GAAkBnV,CAAW,IAAMmV,GAAkBptB,CAAK,EAGxDstB,GAA0B,IAAM,CAAC,CAC5C,MAAO,IACP,iBAAkBnY,GACZA,EAAW,OAAS,MAAQ,OAAO,MAAMA,EAAW,KAAK,EACpD,KAEFnV,GACEotB,GAAkBptB,CAAK,IAAMmV,EAAW,MAGnD,eAAgBxE,GAChB,oBAAqB,CACnB,KAAM,QACP,CACH,EAAG,CACD,MAAO,KACP,iBAAkBwE,GACZA,EAAW,OAAS,MAAQ,OAAO,MAAMA,EAAW,KAAK,EACpD,KAEFnV,GACEotB,GAAkBptB,CAAK,IAAMmV,EAAW,MAGnD,eAAgBxE,GAChB,oBAAqB,CACnB,KAAM,QACP,CACH,EAAG,CACD,MAAO,IACP,iBAAkBwE,GACZA,EAAW,OAAS,MAAQ,OAAO,MAAMA,EAAW,KAAK,EACpD,KAEFnV,GACDA,GAAS,KACJ,GAEFotB,GAAkBptB,CAAK,EAAImV,EAAW,MAGjD,eAAgBxE,GAChB,oBAAqB,CACnB,KAAM,QACP,CACH,EAAG,CACD,MAAO,KACP,iBAAkBwE,GACZA,EAAW,OAAS,MAAQ,OAAO,MAAMA,EAAW,KAAK,EACpD,KAEFnV,GACDA,GAAS,KACJ,GAEFotB,GAAkBptB,CAAK,GAAKmV,EAAW,MAGlD,eAAgBxE,GAChB,oBAAqB,CACnB,KAAM,QACP,CACH,EAAG,CACD,MAAO,IACP,iBAAkBwE,GACZA,EAAW,OAAS,MAAQ,OAAO,MAAMA,EAAW,KAAK,EACpD,KAEFnV,GACDA,GAAS,KACJ,GAEFotB,GAAkBptB,CAAK,EAAImV,EAAW,MAGjD,eAAgBxE,GAChB,oBAAqB,CACnB,KAAM,QACP,CACH,EAAG,CACD,MAAO,KACP,iBAAkBwE,GACZA,EAAW,OAAS,MAAQ,OAAO,MAAMA,EAAW,KAAK,EACpD,KAEFnV,GACDA,GAAS,KACJ,GAEFotB,GAAkBptB,CAAK,GAAKmV,EAAW,MAGlD,eAAgBxE,GAChB,oBAAqB,CACnB,KAAM,QACP,CACH,EAAG,CACD,MAAO,UACP,iBAAkB,IACT3Q,GACEA,GAAS,KAGpB,oBAAqB,EACvB,EAAG,CACD,MAAO,aACP,iBAAkB,IACTA,GACEA,GAAS,KAGpB,oBAAqB,EACvB,EAAG,CACD,MAAO,UACP,iBAAkBmV,GACZ,CAAC,MAAM,QAAQA,EAAW,KAAK,GAAKA,EAAW,MAAM,SAAW,EAC3D,KAEFnV,GACEA,GAAS,MAAQmV,EAAW,MAAM,SAAS,OAAOnV,CAAK,CAAC,EAGnE,eAAgBiT,GAChB,oBAAqB,CACnB,KAAM,QACP,CACH,CAAC,ECzIYsa,GAAuBpgB,EAAS,CAAE,EAAEkL,GAAqB,CACpE,KAAM,SACN,MAAO,QACP,YAAa,QACb,eAAgB5H,GAChB,YAAazQ,GAASA,IAAU,GAAK,KAAO,OAAOA,CAAK,EACxD,eAAgBA,GAAS6R,GAAS7R,CAAK,EAAIA,EAAM,eAAc,EAAKA,GAAS,GAC7E,gBAAiBstB,GAAyB,EAC1C,sBAAuBD,EACzB,CAAC,ECXYG,GAAcn1B,GAAOA,IAAQ,SAK7Bo1B,GAAWp1B,GAAOA,IAAQ,MAShC,SAASq1B,GAAe92B,EAAO,CACpC,OAAOA,EAAM,IAAI,SAAW,GAAK,CAACA,EAAM,SAAW,CAACA,EAAM,OAC5D,CAQO,MAAM+2B,GAAkBt1B,GAAOA,EAAI,QAAQ,OAAO,IAAM,GAAKA,EAAI,QAAQ,MAAM,IAAM,GAAKA,IAAQ,KAAOA,IAAQ,QAAUA,IAAQ,MAC7Hu1B,GAAkBh3B,GAAS,CAAC,CAACA,EAAM,IACnCi3B,GAAgBx1B,GAAOo1B,GAASp1B,CAAG,GAAKm1B,GAAYn1B,CAAG,EAI7D,SAASy1B,GAAgBl3B,EAAO,CACrC,MAAK,IAAAA,EAAM,SAAWA,EAAM,UAAYA,EAAM,IAAI,YAAW,IAAO,KAAO,CAACA,EAAM,UAAY,CAACA,EAAM,OAIvG,CCrCO,SAASm3B,GAAqBxgB,EAAQ,CAC3C,OAAOA,GAAA,YAAAA,EAAQ,QAAS,cAC1B,CACO,SAASygB,GAAgBhjB,EAAQijB,EAAkB,CACxD,GAAKjjB,EAGL,OAAO,OAAOA,EAAO,cAAiB,WAAaA,EAAO,aAAamC,EAAS,CAC9E,MAAOnC,EAAO,KACf,EAAEijB,CAAgB,CAAC,EAAIjjB,EAAO,YACjC,CACO,SAASkjB,GAAyBluB,EAAOmuB,EAAcC,EAAgB,CAC5E,GAAID,IAAiB,OACnB,OAEF,MAAM74B,EAAS64B,EAAa,KAAK1a,GAAU,CACzC,MAAM4a,EAAcD,EAAe3a,CAAM,EACzC,OAAO,OAAO4a,CAAW,IAAM,OAAOruB,CAAK,CAC/C,CAAG,EACD,OAAOouB,EAAe94B,CAAM,CAC9B,CCnBA,MAAMqX,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAAa,WAAY,eAAgB,oBAAqB,QAAS,gBAAiB,aAAa,EACzO2hB,GAAa,CAAC,WAAW,EAY3B,SAASV,GAAgBh3B,EAAO,CACvB,MAAA,CAAC,CAACA,EAAM,GACjB,CACA,SAAS23B,GAAyB18B,EAAO,SACvC,MAAMyb,EAAYhM,IACZ,CACF,GAAAb,EACA,MAAOsrB,EACP,MAAAphB,EACA,IAAAiF,EACA,OAAArC,EACA,SAAAC,EACA,MAAA/Z,EACA,cAAAka,EACA,YAAA6gB,EAAclhB,EAAU,WAAaoG,GAAc,IACjD,EAAA7hB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTtJ,EAAM0J,EAAAA,SACNyM,EAAWzM,EAAAA,SACX,CAACsX,EAAMoB,CAAO,EAAI5W,WAAesrB,CAAW,EAE5CzM,KADkBpuB,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAc,CAAA,GACpB,QAAU,GAC3C86B,IAAO/iB,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,aAAc,CAAA,EAC9C,CACE,UAAAgjB,CACE,EAAAD,EACJE,EAAuB/gB,GAA8B6gB,EAAMH,EAAU,EAMnE,GALJjgB,GAAkB,IAAM,OAClBb,KACF7Z,EAAAka,EAAS,UAAT,MAAAla,EAAkB,QACpB,EACC,CAAC6Z,CAAQ,CAAC,EACT,CAACugB,GAAqBxgB,CAAM,EACvB,OAAA,KAEH,MAAA4gB,EAAeH,GAAgBzgB,EAAQ,CAC3C,GAAA9M,EACA,IAAAmP,CAAA,CACD,EACD,GAAI,CAACue,EACI,OAAA,KAET,MAAMC,EAAiB7gB,EAAO,eACxBqhB,EAAiBrhB,EAAO,eACxBS,EAAe,MAAMpX,GAAS,CAClC,GAAI,CAACm3B,GAAqBxgB,CAAM,GAAK,CAAC4gB,EACpC,OAEFrU,EAAQ,EAAK,EACb,MAAMnB,EAAS/hB,EAAM,OAEfi4B,EAAuBX,GAAyBvV,EAAO,MAAOwV,EAAcC,CAAc,EAC5FzgB,GACI,MAAAA,EAAc/W,EAAOi4B,CAAoB,EAE3C,MAAA5tB,EAAO,QAAQ,iBAAiB,CACpC,GAAAR,EACA,MAAAkK,EACA,MAAOkkB,GACNj4B,CAAK,CAAA,EAEJR,EAAc,CAACQ,EAAOk4B,IAAW,CACjC,GAAAxhB,EAAU,WAAaoG,GAAc,IAAK,CAC5CoG,EAAQ,EAAK,EACb,MACF,CACA,GAAIgV,IAAW,iBAAmBtB,GAAY52B,EAAM,GAAG,EAAG,CACxD,MAAM2M,EAAStC,EAAO,QAAQ,cAAcR,EAAIkK,CAAK,EACrD1J,EAAO,QAAQ,aAAa,eAAgBkM,EAAS,GAAI5J,EAAQ,CAC/D,OAAQiqB,GAAY52B,EAAM,GAAG,EAAImd,GAAwB,cAAgBA,GAAwB,YAClG,CAAA,CAAC,CACJ,CAAA,EAEIgb,EAAsBn4B,GAAA,CACtBg3B,GAAgBh3B,CAAK,GAAKA,EAAM,MAAQ,SAG5CkjB,EAAQ,EAAI,CAAA,EAEV,MAAA,CAACqU,GAAgB,CAAC5gB,EACb,KAEgBe,EAAA,IAAAhB,EAAU,MAAM,WAAYH,EAAS,CAC5D,IAAAzV,EACA,SAAAmW,EACA,MAAOke,EACP,SAAU/d,EACV,KAAA0K,EACA,OAAQqW,EACR,UAAW5hB,EAAS,CAClB,QAAS/W,GACRs4B,CAAS,EACZ,MAAAj7B,EACA,OAAQsuB,EACR,UAAW,EAAA,EACVtZ,EAAOkmB,EAAsB,CAC9B,SAAUR,EAAa,IAAmBa,GAAA,OAClC,MAAAhvB,EAAQouB,EAAeY,CAAW,EACpB,OAAAC,gBAAe3hB,EAAU,MAAM,iBAAkBH,EAAS,CAAC,IAAGxZ,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,mBAAoB,GAAI,CAC7H,OAAQouB,EACR,IAAK/hB,EACL,MAAAA,CAAA,CACD,EAAG4uB,EAAeI,CAAW,CAAC,CAAA,CAChC,CACF,CAAA,CAAC,CACJ,CAuEa,MAAAE,MAAyD5gB,EAAA,IAAAigB,GAA0BphB,EAAS,CAAA,EAAI5J,CAAM,CAAC,EC9L9GoJ,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,cAAe,WAAY,QAAS,UAAW,iBAAkB,cAAe,iBAAiB,EASzKwiB,GAA4B,CAAC,CACjC,OAAAnkB,EACA,gBAAAokB,EACA,eAAAR,EACA,eAAAR,EACA,eAAArM,EACA,sBAAAC,CACF,IAC+B,CAAC,GAAI,GAAIgM,GAAgBhjB,CAAM,GAAK,CAAA,CAAG,EACxC,IAAcyI,GAAA,CAClC,MAAAzT,EAAQouB,EAAe3a,CAAM,EAC/B,IAAAwO,EAAQ2M,EAAenb,CAAM,EACjC,OAAIwO,IAAU,KACJA,EAAA,KAEyBgN,EAAA,cAAAG,EAAiBjiB,EAAS,CAAA,EAAI6U,EAAuB,CACtF,OAAQD,EACR,IAAK/hB,EACL,MAAAA,CAAA,CACD,EAAGiiB,CAAK,CAAA,CACV,EAEGoN,GAAgCriB,GAAO,KAAK,EAAE,CAClD,QAAS,OACT,WAAY,WACZ,MAAO,OACN,WAAa,CACZ,OAAQ,kBACV,CACF,CAAC,EACD,SAASsiB,GAA4Bz9B,EAAO,eACpC,KAAA,CACF,KAAAqH,EACA,WAAA0X,EACA,KAAAlQ,EACA,OAAAO,EACA,gBAAA4P,EACA,YAAA0e,EACA,SAAAze,EACA,MAAO6Q,EACP,QAAAzQ,EAAU,WACV,YAAAF,CACE,EAAAnf,EACJsf,EAASvD,GAA8B/b,EAAO8a,EAAS,EACnDoK,EAAc7d,EAAK,OAAS,GAC5BuH,EAAKiR,KACLkQ,EAAUlQ,KACVpE,EAAYhM,IACZygB,IAAiBrW,GAAA/X,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAArB,YAAA+X,EAAiC,SAAU,GAClE,IAAI8jB,EAAiB,KACrB,GAAIt2B,EAAK,MAAO,CACd,MAAM8R,EAAS/J,EAAO,QAAQ,UAAU/H,EAAK,KAAK,EAC9C60B,GAAqB/iB,CAAM,IACZwkB,EAAAxkB,EAErB,CACA,MAAMojB,EAAiBoB,GAAA,YAAAA,EAAgB,eACjCZ,EAAiBY,GAAA,YAAAA,EAAgB,eACjCC,EAAsBvO,EAAAA,QAAc,IACjC8M,GAAgBwB,CAAc,EACpC,CAACA,CAAc,CAAC,EACb7d,EAAiB1D,cAA2BrX,GAAA,CAC5C,IAAAoJ,EAAQpJ,EAAM,OAAO,MAGjBoJ,EAAAkuB,GAAyBluB,EAAOyvB,EAAqBrB,CAAc,EAChExd,EAAAzD,EAAS,CAAC,EAAGjU,EAAM,CAC5B,MAAA8G,CACD,CAAA,CAAC,GACD,CAACyvB,EAAqBrB,EAAgBxd,EAAY1X,CAAI,CAAC,EACtD,GAAA,CAAC60B,GAAqByB,CAAc,EAC/B,OAAA,KAET,MAAMvN,EAAQN,GAAa1gB,EAAO,QAAQ,cAAc,uBAAuB,EAC/E,cAA0BouB,GAA+B,CACvD,SAAU,CAAoB7T,EAAA,KAAAlO,EAAU,MAAM,gBAAiB,CAC7D,UAAW,GACX,SAAU,CAAcgB,EAAAA,IAAKhB,EAAU,MAAM,eAAgBH,EAAS,IAAI+U,EAAA5U,EAAU,YAAV,YAAA4U,EAAqB,eAAgB,CAC7G,GAAIN,EACJ,QAASnhB,EACT,OAAQ,GACR,QAAAyQ,EACA,SAAU+Q,CAAA,CACX,CAAC,QAAqB3U,EAAU,MAAM,WAAYH,EAAS,CAC1D,GAAA1M,EACA,MAAAwhB,EACA,QAAAL,EACA,MAAO7K,EACP,SAAUpF,EACV,QAAAT,EACA,KAAMxQ,GAAQ,OACd,WAAY,CACV,SAAAoQ,EACA,IAAKD,EACL,YAAa0e,GAAetuB,EAAO,QAAQ,cAAc,6BAA6B,CACxF,EACA,OAAQ8gB,EACR,QAAS7Q,IAAY,WAAa,GAAO,MACxC,EAAAC,GAAkCue,EAAApiB,EAAU,YAAV,YAAAoiB,EAAqB,WAAY,CACpE,SAAUP,GAA0B,CAClC,OAAQK,EACR,gBAAiBliB,EAAU,MAAM,iBACjC,eAAAshB,EACA,eAAAR,EACA,eAAArM,EACA,uBAAuB4N,EAAAriB,EAAU,YAAV,YAAAqiB,EAAqB,gBAAA,CAC7C,CACF,CAAA,CAAC,CAAC,CACJ,CAAA,EAAG3e,CAAW,CAAA,CAChB,CACH,CCvHA,MAAMrE,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,QAAS,QAAS,aAAc,OAAQ,SAAS,EAC7H2hB,GAAa,CAAC,KAAK,EAQf3iB,GAASikB,GAAoB,EACnC,SAASC,GAAoCh+B,EAAO,CAC5C,KAAA,CACF,KAAAqH,EACA,WAAA0X,EACA,OAAA3P,EACA,gBAAA4P,EACA,MAAAvV,EACA,MAAA7H,EACA,WAAAyf,EACA,KAAAC,EACA,QAAAjC,EAAU,UACR,EAAArf,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDyG,EAAiB,CACrB,MAAA9X,EACA,MAAA7H,EACA,WAAAyf,EACA,KAAAC,EACA,QAAAjC,CAAA,EAEIzQ,EAAKiR,KACLpE,EAAYhM,IAClB,IAAIkuB,EAAiB,KACrB,GAAIt2B,EAAK,MAAO,CACd,MAAM8R,EAAS/J,EAAO,QAAQ,UAAU/H,EAAK,KAAK,EAC9C60B,GAAqB/iB,CAAM,IACZwkB,EAAAxkB,EAErB,CACA,MAAMojB,EAAiBoB,GAAA,YAAAA,EAAgB,eACjCZ,EAAiBY,GAAA,YAAAA,EAAgB,eACjCM,EAAuB7hB,EAAkB,YAAA,CAACwF,EAAQzT,IAAUouB,EAAe3a,CAAM,IAAM2a,EAAepuB,CAAK,EAAG,CAACouB,CAAc,CAAC,EAC9H2B,EAAuB7O,EAAAA,QAAc,IAClC8M,GAAgBwB,CAAc,GAAK,GACzC,CAACA,CAAc,CAAC,EAIbQ,EAAiB9O,EAAAA,QAAc,IAC9B,MAAM,QAAQhoB,EAAK,KAAK,EAGtBA,EAAK,MAAM,OAAO,CAACuT,EAAKzM,IAAU,CACvC,MAAMiwB,EAAgBF,EAAqB,QAAU3B,EAAej5B,CAAC,IAAM6K,CAAK,EAChF,OAAIiwB,GAAiB,MACnBxjB,EAAI,KAAKwjB,CAAa,EAEjBxjB,CACT,EAAG,CAAE,CAAA,EARI,GASR,CAAC2hB,EAAgBl1B,EAAK,MAAO62B,CAAoB,CAAC,EAC/C/hB,EAAeC,EAAAA,YAAkB,CAACrX,EAAOoJ,IAAU,CAC5C4Q,EAAAzD,EAAS,CAAC,EAAGjU,EAAM,CAC5B,MAAO8G,EAAM,IAAIouB,CAAc,CAChC,CAAA,CAAC,CACD,EAAA,CAACxd,EAAY1X,EAAMk1B,CAAc,CAAC,EACjB,OAAA9f,EAAA,IAAKgF,GAAcnG,EAAS,CAC9C,SAAU,GACV,QAAS4iB,EACT,qBAAAD,EACA,cAAenkB,GACf,GAAAlL,EACA,MAAOuvB,EACP,SAAUhiB,EACV,eAAA4gB,EACA,WAAY,CAAC5uB,EAAOwT,IAAgBxT,EAAM,IAAI,CAACyT,EAAQrE,IAAU,CAC/D,MAAM8gB,EAAe1c,EAAY,CAC7B,MAAApE,CAAA,CACD,EACD,CACE,IAAA/W,CACE,EAAA63B,EACJC,EAAWviB,GAA8BsiB,EAAc5B,EAAU,EACnE,OAAyBhgB,EAAA,IAAAhB,EAAU,MAAM,SAAUH,EAAS,CAC1D,QAAS,WACT,KAAM,QACN,MAAOyhB,EAAenb,CAAM,CAAA,EAC3B0c,CAAQ,EAAG93B,CAAG,CAAA,CAClB,EACD,eAAyCiW,OAAAA,OAAAA,EAAAA,IAAAhB,EAAU,MAAM,cAAeH,EAAS,CAAC,EAAG5J,EAAQ,CAC3F,MAAOtC,EAAO,QAAQ,cAAc,uBAAuB,EAC3D,YAAaA,EAAO,QAAQ,cAAc,6BAA6B,EACvE,gBAAiBkM,EAAS,GAAI5J,EAAO,gBAAiB,CACpD,OAAQ,EAAA,CACT,EACD,SAAUsN,EACV,KAAM,cACL,EAAAuC,GAAgBzf,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAa,CAAC,EAAA,EACrD8U,CAAK,CAAC,CACX,CCjGA,MAAM2nB,GAAmBpwB,GACnBA,GAAS,MAAQ,CAAC+R,GAAS/R,CAAK,EAC3BA,EAEFA,EAAM,MAEFqwB,GAA+B,IAAM,CAAC,CACjD,MAAO,KACP,iBAAkBlb,GACZA,EAAW,OAAS,MAAQA,EAAW,QAAU,GAC5C,KAEFnV,GAASowB,GAAiBpwB,CAAK,IAAMowB,GAAiBjb,EAAW,KAAK,EAE/E,eAAgBma,EAClB,EAAG,CACD,MAAO,MACP,iBAAkBna,GACZA,EAAW,OAAS,MAAQA,EAAW,QAAU,GAC5C,KAEFnV,GAASowB,GAAiBpwB,CAAK,IAAMowB,GAAiBjb,EAAW,KAAK,EAE/E,eAAgBma,EAClB,EAAG,CACD,MAAO,UACP,iBAAkBna,GAAc,CAC9B,GAAI,CAAC,MAAM,QAAQA,EAAW,KAAK,GAAKA,EAAW,MAAM,SAAW,EAClE,OAAO,KAET,MAAMmb,EAAmBnb,EAAW,MAAM,IAAIib,EAAgB,EAC9D,OAAOpwB,GAASswB,EAAiB,SAASF,GAAiBpwB,CAAK,CAAC,CAClE,EACD,eAAgB6vB,EAClB,CAAC,EC/BKU,GAAmBvtB,GAChB,OAAOA,EAAQ,CAAC,GAAM,SAEzBwtB,GAAwBxwB,GACrB+R,GAAS/R,CAAK,EAAIA,EAAM,MAAQA,EAEnCywB,GAAwBzwB,GACrB+R,GAAS/R,CAAK,EAAIA,EAAM,MAAQ,OAAOA,CAAK,EAExC0wB,GAA6BvjB,EAAS,CAAE,EAAEkL,GAAqB,CAC1E,KAAM,eACN,eAAgBoY,GAChB,eAAgBD,GAChB,eAAexwB,EAAO4P,EAAKrC,EAAQtM,EAAQ,CAEzC,MAAMqjB,EAAQrjB,EAAO,QAAQ,SAAS2O,CAAG,EACzC,GAAI,CAACme,GAAqBxgB,CAAM,EAC9B,MAAO,GAET,MAAM4gB,EAAeH,GAAgBzgB,EAAQ,CAC3C,GAAI+W,EACJ,IAAA1U,CACN,CAAK,EACD,GAAI5P,GAAS,KACX,MAAO,GAET,GAAI,CAACmuB,EACH,OAAOnuB,EAET,GAAI,CAACuwB,GAAiBpC,CAAY,EAChC,OAAO5gB,EAAO,eAAevN,CAAK,EAEpC,MAAMgvB,EAAcb,EAAa,KAAK1a,GAAUlG,EAAO,eAAekG,CAAM,IAAMzT,CAAK,EACvF,OAAOgvB,EAAczhB,EAAO,eAAeyhB,CAAW,EAAI,EAC3D,EACD,eAAgBE,GAChB,gBAAiBmB,GAA8B,EAE/C,kBAAmB,CAACrwB,EAAO4P,EAAK5E,IAAW,CACzC,MAAMuC,EAASvC,EACTmjB,EAAeH,GAAgBzgB,CAAM,GAAK,CAAA,EAC1C6gB,EAAiB7gB,EAAO,eAO9B,GANoB4gB,EAAa,KAAK1a,GAChC2a,EAAe3a,CAAM,IAAMzT,CAIhC,EAEC,OAAOA,CAIV,CACH,CAAC,ECtDY2wB,GAA4B,SAC5BC,GAA4B,KACb,CACxB,OAAQvY,GACR,OAAQkV,GACR,KAAML,GACN,SAAUC,GACV,QAAS5K,GACT,aAAcmO,GACd,CAAC7U,EAAwB,EAAGC,GAC5B,OAAQzD,EACZ,GChBawY,GAAmC/rB,GAASA,EAAM,gBAClDgsB,GAAqCrpB,GAAeopB,GAEjEE,IAAwBA,GAAA,YAAAA,EAAsB,UAAW,EAAK,EACjDC,GAAuCvpB,GAAeopB,GAAkCE,GAAwBA,EAAqB,OAAO,EAC5IE,GAAkCxpB,GAAeopB,GAAkCE,GAAwBA,EAAqB,QAAQ,ECDxIG,GAA6BpsB,GAASA,EAAM,eAC5CqsB,GAAyChoB,GAAuB+nB,GAA4BE,IAAkBA,GAAA,YAAAA,EAAgB,yBAA0B,CAAA,CAAE,EAC1JC,GAAiCloB,GAAuB+nB,GAA4BE,IAAkBA,GAAA,YAAAA,EAAgB,SAAU,CAAA,CAAE,EAClIE,GAA0CnoB,GAAuB+nB,GAA4BE,IAAkBA,GAAA,YAAAA,EAAgB,kBAAmB,CAAA,CAAE,EACpJG,GAAyC9pB,GAAeypB,GAA4BE,IAAkBA,GAAA,YAAAA,EAAgB,WAAY,CAAC,ECFnII,GAA+B,CAAC,WAAY,WAAY,QAAS,MAAM,EAC9EC,GAAeb,GAAyB,EAOvC,SAASc,GAAwB,CACtC,iBAAAC,EACA,eAAAC,EACA,YAAAC,CACF,EAAG,CACD,MAAMC,EAAoB,IAAI,IAAID,EAAY,IAAItlB,GAAOA,EAAI,KAAK,CAAC,EAC7DwlB,EAAoB,CACxB,IAAK,CAAE,EACP,aAAc,CAAE,EAChB,OAAQpnB,GAAS,CACf,MAAM3K,EAAQ+xB,EAAkB,IAAIpnB,CAAK,EACrC3K,GAASA,EAAM,SAAW,KAC5B+xB,EAAkB,IAAIpnB,CAAK,EAAE,OAAS,GACtConB,EAAkB,aAAa,KAAKpnB,CAAK,EAE5C,CACL,EAGE,SAASqnB,GAAoB,CAE3B,GAAID,EAAkB,aAAa,SAAWD,EAAkB,KAC9D,OAEF,MAAMG,EAAmB,CACvB,IAAK,CAAE,EACP,IAAK,CAAE,CACb,EACI,IAAIC,EAAqBP,EACrBQ,EAAYP,EACZQ,EAAiB,EAGrBL,EAAkB,aAAa,QAAQpnB,GAAS,CAC9CunB,GAAsBH,EAAkB,IAAIpnB,CAAK,EAAE,cACnDwnB,GAAaJ,EAAkB,IAAIpnB,CAAK,EAAE,IAChD,CAAK,EACD,QAASzP,EAAI,EAAGA,EAAI22B,EAAY,OAAQ32B,GAAK,EAAG,CAC9C,MAAM8P,EAAS6mB,EAAY32B,CAAC,EAC5B,GAAI62B,EAAkB,IAAI/mB,EAAO,KAAK,GAAK+mB,EAAkB,IAAI/mB,EAAO,KAAK,EAAE,SAAW,GACxF,SAKF,IAAIqnB,EADqBH,EAAqBC,EACPnnB,EAAO,KAG1CqnB,EAAgBrnB,EAAO,UACzBonB,GAAkBpnB,EAAO,SAAWqnB,EACpCA,EAAgBrnB,EAAO,SACvBinB,EAAiB,IAAIjnB,EAAO,KAAK,EAAI,IAC5BqnB,EAAgBrnB,EAAO,WAChConB,GAAkBpnB,EAAO,SAAWqnB,EACpCA,EAAgBrnB,EAAO,SACvBinB,EAAiB,IAAIjnB,EAAO,KAAK,EAAI,IAEvC+mB,EAAkB,IAAI/mB,EAAO,KAAK,EAAI,CACpC,OAAQ,GACR,cAAAqnB,EACA,KAAMrnB,EAAO,IACrB,CACK,CAGGonB,EAAiB,EAEnB,OAAO,KAAKH,EAAiB,GAAG,EAAE,QAAQtnB,GAAS,CACjDonB,EAAkB,OAAOpnB,CAAK,CACtC,CAAO,EACQynB,EAAiB,EAE1B,OAAO,KAAKH,EAAiB,GAAG,EAAE,QAAQtnB,GAAS,CACjDonB,EAAkB,OAAOpnB,CAAK,CACtC,CAAO,EAGDknB,EAAY,QAAQ,CAAC,CACnB,MAAAlnB,CACR,IAAY,CACJonB,EAAkB,OAAOpnB,CAAK,CACtC,CAAO,EAIHqnB,GACD,CACD,OAAAA,IACOD,EAAkB,GAC3B,CAQO,MAAMO,GAAsB,CAACC,EAAUC,IAAe,CAC3D,MAAMC,EAAgB,CAAA,EACtB,IAAIb,EAAiB,EACjBc,EAA2B,EAC/B,MAAMb,EAAc,CAAA,EAIpBU,EAAS,cAAc,QAAQI,GAAe,CAC5C,IAAI3nB,EAASunB,EAAS,OAAOI,CAAW,EACpCN,EAAgB,EAChBO,EAAS,GACTL,EAAS,sBAAsBI,CAAW,IAAM,KAC9C3nB,EAAO,MAAQA,EAAO,KAAO,GAC/B4mB,GAAkB5mB,EAAO,KACzB4nB,EAAS,IAETP,EAAgBngB,GAAMlH,EAAO,OAASqN,GAAoB,MAAOrN,EAAO,UAAYqN,GAAoB,SAAUrN,EAAO,UAAYqN,GAAoB,QAAQ,EAEnKqa,GAA4BL,GAE1BrnB,EAAO,gBAAkBqnB,IAC3BrnB,EAASmC,EAAS,CAAE,EAAEnC,EAAQ,CAC5B,cAAAqnB,CACR,CAAO,GAECO,GACFf,EAAY,KAAK7mB,CAAM,EAEzBynB,EAAcE,CAAW,EAAI3nB,CACjC,CAAG,EACD,MAAM6nB,EAAiBL,IAAe,OAAY,EAAIA,EAAW,kBAAkB,OAASA,EAAW,WAAaA,EAAW,cAAgB,GACzIb,EAAmB,KAAK,IAAIkB,EAAiBH,EAA0B,CAAC,EAG9E,GAAId,EAAiB,GAAKiB,EAAiB,EAAG,CAC5C,MAAMC,EAAuBpB,GAAwB,CACnD,iBAAAC,EACA,eAAAC,EACA,YAAAC,CACN,CAAK,EACD,OAAO,KAAKiB,CAAoB,EAAE,QAAQnoB,GAAS,CACjD8nB,EAAc9nB,CAAK,EAAE,cAAgBmoB,EAAqBnoB,CAAK,EAAE,aACvE,CAAK,CACF,CACD,OAAOwC,EAAS,CAAE,EAAEolB,EAAU,CAC5B,OAAQE,CACZ,CAAG,CACH,EAMaM,GAAoB,CAACzoB,EAAc0oB,IAAiB,CAC/D,GAAI,CAACA,EACH,OAAO1oB,EAET,KAAM,CACJ,cAAA2oB,EAAgB,CAAE,EAClB,WAAAT,EAAa,CAAE,CAChB,EAAGQ,EACEE,EAA+B,OAAO,KAAKV,CAAU,EAC3D,GAAIU,EAA6B,SAAW,GAAKD,EAAc,SAAW,EACxE,OAAO3oB,EAET,MAAM6oB,EAAsB,CAAA,EACtBC,EAAqB,CAAA,EAC3B,QAASl4B,EAAI,EAAGA,EAAI+3B,EAAc,OAAQ/3B,GAAK,EAAG,CAChD,MAAMyP,EAAQsoB,EAAc/3B,CAAC,EAGzBoP,EAAa,OAAOK,CAAK,IAC3BwoB,EAAoBxoB,CAAK,EAAI,GAC7ByoB,EAAmB,KAAKzoB,CAAK,EAEhC,CACD,MAAM0oB,EAAmBD,EAAmB,SAAW,EAAI9oB,EAAa,cAAgB,CAAC,GAAG8oB,EAAoB,GAAG9oB,EAAa,cAAc,OAAOK,GAAS,CAACwoB,EAAoBxoB,CAAK,CAAC,CAAC,EACpL2oB,EAAkBnmB,EAAS,CAAE,EAAE7C,EAAa,MAAM,EACxD,QAASpP,EAAI,EAAGA,EAAIg4B,EAA6B,OAAQh4B,GAAK,EAAG,CAC/D,MAAMyP,EAAQuoB,EAA6Bh4B,CAAC,EACtCq4B,EAAYpmB,EAAS,CAAE,EAAEmmB,EAAgB3oB,CAAK,EAAG,CACrD,eAAgB,EACtB,CAAK,EACD,OAAO,QAAQ6nB,EAAW7nB,CAAK,CAAC,EAAE,QAAQ,CAAC,CAACtS,EAAK2H,CAAK,IAAM,CAC1DuzB,EAAUl7B,CAAG,EAAI2H,IAAU,GAAK,IAAWA,CACjD,CAAK,EACDszB,EAAgB3oB,CAAK,EAAI4oB,CAC1B,CAKD,OAJwBpmB,EAAS,CAAE,EAAE7C,EAAc,CACjD,cAAe+oB,EACf,OAAQC,CACZ,CAAG,CAEH,EACA,SAASE,GAAqB9yB,EAAM,CAClC,IAAI6M,EAASkkB,GAAad,EAAyB,EACnD,OAAIjwB,GAAQ+wB,GAAa/wB,CAAI,IAC3B6M,EAASkkB,GAAa/wB,CAAI,GAErB6M,CACT,CACO,MAAMkmB,GAAqB,CAAC,CACjC,OAAAxyB,EACA,gBAAAyyB,EACA,aAAAV,EACA,sBAAAjoB,EAAwBH,GAAkC3J,CAAM,EAChE,wBAAA0yB,EAA0B,EAC5B,IAAM,SACJ,MAAMC,EAA2B,CAAC3yB,EAAO,QAAQ,MAAM,QACvD,IAAIqJ,EACJ,GAAIspB,EACFtpB,EAAe,CACb,cAAe,CAAE,EACjB,OAAQ,CAAE,EACV,sBAAAS,CACN,MACS,CACL,MAAM8oB,EAAezpB,GAAyBnJ,EAAO,QAAQ,KAAK,EAClEqJ,EAAe,CACb,cAAeqpB,EAA0B,CAAA,EAAK,CAAC,GAAGE,EAAa,aAAa,EAC5E,OAAQ1mB,EAAS,GAAI0mB,EAAa,MAAM,EAExC,sBAAA9oB,CACN,CACG,CACD,IAAI+oB,EAAgB,CAAA,EAChBH,GAA2B,CAACC,IAC9BE,EAAgB,OAAO,KAAKxpB,EAAa,MAAM,EAAE,OAAO,CAACmC,EAAKpU,IAAQ8U,EAAS,CAAA,EAAIV,EAAK,CACtF,CAACpU,CAAG,EAAG,EACb,CAAK,EAAG,CAAE,CAAA,GAGRq7B,EAAgB,QAAQK,GAAa,CACnC,KAAM,CACJ,MAAAppB,CACD,EAAGopB,EAEJD,EAAcnpB,CAAK,EAAI,GACvB,IAAIqpB,EAAgB1pB,EAAa,OAAOK,CAAK,EACzCqpB,GAAiB,MACnBA,EAAgB7mB,EAAS,CAAE,EAAEqmB,GAAqBO,EAAU,IAAI,EAAG,CACjE,MAAAppB,EACA,eAAgB,EACxB,CAAO,EACDL,EAAa,cAAc,KAAKK,CAAK,GAC5BgpB,GACTrpB,EAAa,cAAc,KAAKK,CAAK,EAInCqpB,GAAiBA,EAAc,OAASD,EAAU,OACpDC,EAAgB7mB,EAAS,CAAE,EAAEqmB,GAAqBO,EAAU,IAAI,EAAG,CACjE,MAAAppB,CACR,CAAO,GAEH,IAAIspB,EAAiBD,EAAc,eACnCxC,GAA6B,QAAQn5B,GAAO,CACtC07B,EAAU17B,CAAG,IAAM,SACrB47B,EAAiB,GACbF,EAAU17B,CAAG,IAAM,KACrB07B,EAAU17B,CAAG,EAAI,KAG3B,CAAK,EACDiS,EAAa,OAAOK,CAAK,EAAIwC,EAAS,CAAE,EAAE6mB,EAAeD,EAAW,CAClE,eAAAE,CACN,CAAK,CACL,CAAG,EACGN,GAA2B,CAACC,GAC9B,OAAO,KAAKtpB,EAAa,MAAM,EAAE,QAAQK,GAAS,CAC3CmpB,EAAcnpB,CAAK,GACtB,OAAOL,EAAa,OAAOK,CAAK,CAExC,CAAK,EAEH,MAAMupB,EAAgCjzB,EAAO,QAAQ,6BAA6B,iBAAkBqJ,CAAY,EAC1G6pB,EAAkCpB,GAAkBmB,EAA+BlB,CAAY,EACrG,OAAOV,GAAoB6B,IAAiCzoB,GAAA/X,EAAAsN,EAAO,SAAQ,oBAAf,YAAAyK,EAAA,KAAA/X,KAAwC,MAAS,CAC/G,EACO,SAASygC,GAAiC,CAC/C,oBAAAC,EACA,OAAApzB,EACA,iBAAAqzB,EACA,gBAAAC,EACA,YAAAC,CACF,EAAG,CACD,IAAIC,EAAgCJ,EACpC,QAASn5B,EAAIo5B,EAAkBp5B,EAAIq5B,EAAiBr5B,GAAK,EAEvD,GADYs5B,EAAYt5B,CAAC,EAChB,CACP,MAAMopB,EAAQkQ,EAAYt5B,CAAC,EAAE,GACvBw5B,EAAkBzzB,EAAO,QAAQ,4BAA4BqjB,EAAO+P,CAAmB,EACzFK,GAAmBA,EAAgB,mBACrCD,EAAgCC,EAAgB,qBAEnD,CAEH,OAAOD,CACT,CACO,SAASE,GAAqB1zB,EAAQpP,EAAO,CAClD,MAAM+iC,EAAgB7qB,GAA0B9I,CAAM,EAChD4zB,EAAWtD,GAAuCtwB,CAAM,EACxD6zB,EAA2BhE,GAAmC7vB,CAAM,EACpE8zB,EAAsB,KAAK,MAAMljC,EAAM,mBAAqB+iC,CAAa,EACzEI,EAAsBF,EAA2B,KAAK,OAAOjjC,EAAM,oBAAsBA,EAAM,oBAAsB+iC,CAAa,EAAI,EAC5I,OAAOG,GAAuB,GAAKF,GAAY,IAAMG,CACvD,CC7TO,SAASC,GAASC,EAAW,CAClC,OAAoB9T,EAAU,KAAC8T,EAAWnxB,EAAwB,CACpE,CCaA,MAAMoxB,GAAQ,EACRC,GAAO,IACPxoB,GAAoBC,GAAc,CACtC,KAAM,CACJ,gBAAAwoB,EACA,QAAAh/B,CACD,EAAGwW,EACEyoB,EAAQ,CACZ,KAAM,CAAC,aAAc,eAAeD,CAAe,EAAE,CACzD,EACE,OAAOvoB,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,EACMk/B,GAAwBvoB,GAAO,MAAO,CAC1C,KAAM,cACN,KAAM,aACN,kBAAmB,CAACnb,EAAOqb,IAAW,CAAC,CACrC,CAAC,KAAKlL,EAAY,kBAAkB,CAAC,EAAE,EAAGkL,EAAO,kBAAkB,CACvE,EAAK,CACD,CAAC,KAAKlL,EAAY,mBAAmB,CAAC,EAAE,EAAGkL,EAAO,mBAAmB,CACzE,EAAKA,EAAO,UAAU,CACtB,CAAC,EAAE,KAAO,CACR,SAAU,WACV,IAAK,EACL,OAAQ,IACR,MAAO,GACP,OAAQ,EACR,CAAC,KAAKlL,EAAY,kBAAkB,CAAC,EAAE,EAAG,CACxC,KAAM,CACP,EACD,CAAC,KAAKA,EAAY,mBAAmB,CAAC,EAAE,EAAG,CACzC,MAAO,CACR,CACH,EAAE,EACF,SAASwzB,GAAkB3jC,EAAO,CAChC,KAAM,CACJ,gBAAAwjC,CACD,EAAGxjC,EACEkoB,EAAU3Y,SAAa,IAAI,EAC3BH,EAASD,KACToB,EAAUiP,KACVujB,EAAgBnwB,EAAgBxD,EAAQ8I,EAAyB,EACjE0rB,EAAoBhxB,EAAgBxD,EAAQmL,EAA6B,EACzEomB,EAAa/tB,EAAgBxD,EAAQiE,EAAsB,EAC3DwwB,EAAiBt0B,EAAAA,OAAa,CAClC,KAAM,EACN,IAAK,CACT,CAAG,EACKu0B,EAAmB,IAAM,CAC7B,GAAIN,IAAoB,OAEtB,OAAOK,EAAe,QAAQ,KAAO,EAEvC,GAAIL,IAAoB,QAAS,CAE/B,MAAMO,EAAgBH,EAAoBjD,EAAW,kBAAkB,MACvE,OAAOkD,EAAe,QAAQ,KAAOE,CACtC,CACD,MAAO,EACX,EACQ,CAACC,EAAUC,CAAW,EAAI5yB,EAAc,SAAC,EAAK,EAC9C,CAAC6yB,EAAeC,CAAgB,EAAI9yB,EAAc,SAACyyB,CAAgB,EACnEroB,EAAYhM,IACZuL,EAAaM,EAAS,CAAE,EAAEG,EAAW,CACzC,gBAAA+nB,CACJ,CAAG,EACKh/B,EAAUuW,GAAkBC,CAAU,EACtCopB,EAAoBtB,GAAqB1zB,EAAQqM,CAAS,EAC1D4oB,EAAe,KAAK,MAAM5oB,EAAU,mBAAqBsnB,CAAa,EACtEuB,EAAQ,CACZ,OAAQD,EACR,IAAKD,EAAoBC,CAC7B,EACMb,IAAoB,OACtBc,EAAM,KAAO3D,EAAW,gBACf6C,IAAoB,UAC7Bc,EAAM,MAAQ3D,EAAW,kBAAoBA,EAAW,WAAaA,EAAW,cAAgB,IAElG,MAAM4D,EAAkBC,GAAqB,CAC3CX,EAAe,QAAUW,EACzBL,EAAiBL,CAAgB,CACrC,EACQW,EAAiBC,GAAiB3/B,GAAS,CAC/C,IAAImE,EAIJ,GADAnE,EAAM,eAAc,EAChBy+B,IAAoB,OACtBt6B,EAASnE,EAAM,QAAUmjB,EAAQ,QAAQ,sBAAuB,EAAC,cACxDsb,IAAoB,QAC7Bt6B,EAAS,KAAK,IAAI,EAAGnE,EAAM,QAAUmjB,EAAQ,QAAQ,sBAAuB,EAAC,IAAI,MAEjF,OAAM,IAAI,MAAM,6BAA6B,EAE/Chf,GAAUA,EAASo6B,IAASC,GAAOD,GAGnC/yB,EAAQ,MAAM,EAAG,IAAM,CACrBnB,EAAO,QAAQ,OAAO,CACpB,KAAMy0B,EAAe,QAAQ,KAAO36B,EACpC,IAAK26B,EAAe,QAAQ,GACpC,CAAO,CACP,CAAK,CACL,CAAG,EACKc,EAA8BD,GAAiB,IAAM,CACzDT,EAAY,EAAI,CACpB,CAAG,EACKW,EAA4BF,GAAiB,IAAM,CACvDT,EAAY,EAAK,CACrB,CAAG,EAID,OAHAnyB,GAAuB1C,EAAQ,uBAAwBm1B,CAAe,EACtEzyB,GAAuB1C,EAAQ,wBAAyBu1B,CAA2B,EACnF7yB,GAAuB1C,EAAQ,sBAAuBw1B,CAAyB,EAC3E,CAACZ,GAAY,CAACE,EACT,KAEWznB,EAAAA,IAAKinB,GAAuB,CAC9C,IAAKxb,EACL,UAAWX,GAAK/iB,EAAQ,IAAI,EAC5B,WAAYwW,EACZ,WAAYypB,EACZ,MAAOH,CACX,CAAG,CACH,CACO,MAAMO,GAAiBzB,GAASO,EAAiB,ECzIlD3N,GAAO,IAAM,CAAC,EACJ,SAAA8O,GAAkBj/B,EAAK+R,EAAImtB,EAAS,CAC5C,MAAAC,EAAQz1B,SAAa,IAAI,EAC/By1B,EAAM,QAAUptB,EAChB4E,GAAkB,IAAM,CACtB,GAAyB,OAAO,eAAmB,IAC1C,OAAAwZ,GAGT,MAAMlP,EAASjhB,EAAI,QACbo/B,EAAW,IAAI,eAA0BtxB,GAAA,CAS3CqxB,EAAM,QAAQrxB,CAAO,CACvB,CACD,EACD,OAAImT,GACFme,EAAS,QAAQne,CAAM,EAElB,IAAM,CAIXme,EAAS,WAAW,CAAA,CACtB,EACC,CAACp/B,EAAKk/B,CAAO,CAAC,CACnB,CClCa,MAAAG,GAA2Ch2B,EAAAA,cAAc,MAAS,EAIxE,SAASi2B,IAA2B,CACnC,MAAAhQ,EAAgB9lB,aAAiB61B,EAAqB,EAC5D,GAAI/P,IAAkB,OACd,MAAA,IAAI,MAAM,CAAC,uDAAwD,oHAAqH,8EAA8E,EAAE,KAAK;AAAA,CAAI,CAAC,EAEnR,OAAAA,CACT,CCRO,MAAMiQ,GAAiB,CAACh2B,EAAQpP,IAAU,CAC/C,IAAIoqB,EACA5J,EACJ,OAAIxgB,EAAM,YAAcA,EAAM,iBAAmB,UAC/CwgB,EAAQiX,GAA+BroB,CAAM,EAC7Cgb,EAAO+N,GAAiD/oB,CAAM,IAE9Dgb,EAAOuJ,GAAqCvkB,CAAM,EAC9Cgb,EAAK,SAAW,EAClB5J,EAAQ,KAERA,EAAQ,CACN,cAAe,EACf,aAAc4J,EAAK,OAAS,CACpC,GAGS,CACL,KAAAA,EACA,MAAA5J,CACJ,CACA,EASa6kB,GAAqB,CAACj2B,EAAQpP,IAAU,CACnD,MAAMslC,EAAWF,GAAeh2B,EAAQpP,CAAK,EAC7C,OAAOqvB,EAAa,QAAC,KAAO,CAC1B,KAAMiW,EAAS,KACf,MAAOA,EAAS,KACpB,GAAM,CAACA,EAAS,KAAMA,EAAS,KAAK,CAAC,CACrC,ECvCMC,GAAY,OAAO,UAAc,IAAc,UAAU,UAAU,YAAa,EAAG,QAC5EC,GAAYD,GAAU,SAAS,SAAS,ECDxCE,GAAuBxyB,GAASA,EAAM,SCKtCyyB,GAA6BzyB,GAASA,EAAM,eAM5C0yB,GAAoC/vB,GAAe8vB,GAA4BzyB,GAASA,EAAM,OAAO,EAMrG2yB,GAA0ChwB,GAAe8vB,GAA4BzyB,GAASA,EAAM,iBAAiB,EAOrH4yB,GAA4BjwB,GAAe8vB,GAA4BzyB,GAASA,EAAM,aAAa,EAQnG6yB,GAAmCxuB,GAAuBrE,GAASA,EAAM,eAAe,cAAc,iBAAkBA,GAASA,EAAM,eAAe,cAAc,gBAAiB,CAAC8yB,EAAkBC,KAAqB,CACxO,iBAAAD,EACA,gBAAAC,CACF,EAAE,EChCWC,GAAuB,CAClC,cAAe,EACf,aAAc,EACd,iBAAkB,EAClB,gBAAiB,CACnB,EACaC,GAAiC,CAACjzB,EAAOjT,IAAU,CAC9D,MAAMmmC,EAAiB,CACrB,QAAS,CAACnmC,EAAM,sBAChB,kBAAmB,GACnB,cAAeimC,EACnB,EACE,OAAO3qB,EAAS,CAAE,EAAErI,EAAO,CACzB,eAAAkzB,CACJ,CAAG,CACH,EACO,SAASC,GAAsBh3B,EAAQpP,EAAO,CAKnD,MAAMqmC,EAAoBtB,GAAW,CACnC31B,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,eAAgBqI,EAAS,GAAIrI,EAAM,eAAgB,CACjD,QAAA8xB,CACR,CAAO,CACF,CAAA,CAAC,CACN,EAYE7P,GAAiB9lB,EAJL,CACV,2BAA4Bi3B,EAC5B,iCAT8BtB,GAAW,CACzC31B,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,eAAgBqI,EAAS,GAAIrI,EAAM,eAAgB,CACjD,kBAAmB8xB,CAC3B,CAAO,CACF,CAAA,CAAC,CACN,CAIA,EACgC,QAAQ,EAOtCnzB,EAAAA,UAAgB,IAAM,CACpBy0B,EAAkB,CAACrmC,EAAM,qBAAqB,CAClD,EAAK,CAACA,EAAM,qBAAqB,CAAC,CAElC,CC1BA,MAAMsmC,GAAuB,GAC7B,IAAIC,GAA+B,SAAUA,EAAiB,CAC5D,OAAAA,EAAgBA,EAAgB,KAAU,CAAC,EAAI,OAC/CA,EAAgBA,EAAgB,GAAQ,CAAC,EAAI,KAC7CA,EAAgBA,EAAgB,KAAU,CAAC,EAAI,OAC/CA,EAAgBA,EAAgB,KAAU,CAAC,EAAI,OAC/CA,EAAgBA,EAAgB,MAAW,CAAC,EAAI,QACzCA,CACT,EAAEA,IAAmB,CAAA,CAAE,EACvB,MAAMC,GAAwB,CAC5B,IAAK,EACL,KAAM,CACR,EACaC,GAAsB,OAAO,OAAO,IAAI,GAAK,EACpDC,GAAoB,CAACrgC,EAAMsgC,EAAaC,EAAgBC,EAAgBC,KAAsB,CAClG,UAAWP,GAAgB,KAC3B,OAAQQ,GAAmB1gC,EAAMkgC,GAAgB,KAAMI,EAAaC,EAAgBC,EAAgBC,CAAgB,CACtH,GACA,IAAIE,GAAU,GACd,GAAI,CACE,OAAO,OAAW,MACpBA,GAAU,QAAQ,KAAK,OAAO,UAAU,SAAS,EAErD,MAAY,CAEZ,CACO,MAAMC,GAAyB,IAAM,CAC1C,MAAM73B,EAAS+1B,KACT1pB,EAAYhM,IACZ4J,EAAiBzG,EAAgBxD,EAAQ4J,EAAoC,EAC7E+rB,EAAUnyB,EAAgBxD,EAAQu2B,EAAiC,GAAK,CAACqB,GACzEE,EAAoBt0B,EAAgBxD,EAAQw2B,EAAuC,GAAK,CAACoB,GACzFrG,EAAa/tB,EAAgBxD,EAAQiE,EAAsB,EAC3D8zB,EAAYxG,EAAW,kBACvBpV,EAAa3Y,EAAgBxD,EAAQ8b,EAAsB,EAC3DvR,EAAgB/G,EAAgBxD,EAAQmK,EAA0C,EAClF6tB,EAAsB7b,EAAW,OAAO,OAAS,EACjD,CAAC8b,EAAQC,CAAS,EAAIj2B,EAAc,SAACo1B,EAAmB,EACxDviC,EAAQokB,KACRif,EAAY30B,EAAgBxD,EAAQoiB,EAAqB,EACzDgW,EAAe50B,EAAgBxD,EAAQ0iB,EAAwB,EAC/D2V,EAAW70B,EAAgBxD,EAAQq2B,EAAoB,EACvDiC,EAAqB90B,EAAgBxD,EAAQojB,EAAyB,EACtEmV,EAActC,GAAmBj2B,EAAQqM,CAAS,EAClDmsB,EAAcx4B,EAAO,QAAQ,eAC7By4B,EAAUz4B,EAAO,QAAQ,eACzB04B,EAAc14B,EAAO,QAAQ,mBAC7B24B,EAAuBx4B,SAAa,IAAI,EACxCy4B,EAAyBz4B,SAAa,IAAI,EAC1C04B,EAAgBtH,EAAW,YAAY,OACvCiD,EAAoBjD,EAAW,kBAC/BuH,EAAat1B,EAAgBxD,EAAQyL,EAAsB,EACjEiqB,GAAkB+C,EAAS,IAAMz4B,EAAO,QAAQ,OAAQ,CAAA,EAiBxD,MAAMy0B,EAAiBt0B,SAAai3B,EAAqB,EACnD2B,EAAgC54B,SAAai3B,EAAqB,EAClE4B,EAAqB74B,SAAa02B,EAAoB,EACtDoC,EAAgBz1B,EAAgBxD,EAAQy2B,EAAyB,EACjEyC,EAAgB9oB,KAChB+oB,EAAgBh5B,SAAa,MAAS,EACtCi5B,EAAcz1B,GAAW,IAAM2zB,GAAkBxiC,EAAM,UAAWuX,EAAU,YAAaA,EAAU,eAAgBklB,EAAW,UAAY,GAAI2F,GAAuB,CAAC,CAAC,EAAE,QACzKmC,EAAc,CAClB,SAAUpZ,EAAa,QAAC,IAAMkY,EAAYI,EAAY,KAAK,UAAU5pB,GAAOA,EAAI,KAAOwpB,EAAU,EAAE,EAAI,GAAI,CAACA,EAAWI,EAAY,IAAI,CAAC,EACxI,YAAatY,EAAa,QAAC,IAAMkY,EAAYluB,EAAe,UAAUF,GAAUA,EAAO,QAAUouB,EAAU,KAAK,EAAI,GAAI,CAACA,EAAWluB,CAAc,CAAC,CACvJ,EACQqvB,EAAsBtsB,EAAiB,YAACusB,GAAqB,CACjE,GAAIC,GAAuBD,EAAmBv5B,EAAO,QAAQ,MAAM,eAAe,aAAa,EAC7F,OAEF,MAAMy5B,EAAwBF,EAAkB,gBAAkBP,EAAmB,QAAQ,eAAiBO,EAAkB,eAAiBP,EAAmB,QAAQ,aAC5Kh5B,EAAO,QAAQ,SAAS6D,IACfqI,EAAS,CAAE,EAAErI,GAAO,CACzB,eAAgBqI,EAAS,GAAIrI,GAAM,eAAgB,CACjD,cAAe01B,CACzB,CAAS,CACT,CAAO,CACF,EAKGhI,EAAW,SAAWkI,IACxBT,EAAmB,QAAUO,EAC7Bv5B,EAAO,QAAQ,aAAa,6BAA8Bu5B,CAAiB,GAE7ER,EAA8B,QAAUtE,EAAe,OACxD,EAAE,CAACz0B,EAAQuxB,EAAW,OAAO,CAAC,EACzBmI,EAA6B,IAAM,CACvC,MAAMC,EAAY,CAChB,IAAKjB,EAAY,QAAQ,UACzB,KAAMA,EAAY,QAAQ,UAChC,EACUkB,EAAKD,EAAU,KAAOlF,EAAe,QAAQ,KAC7CoF,GAAKF,EAAU,IAAMlF,EAAe,QAAQ,IAC5CqF,GAAcF,IAAO,GAAKC,KAAO,EACvCpF,EAAe,QAAUkF,EACzB,MAAM/rB,GAAYksB,GAAcC,GAAkBH,EAAIC,EAAE,EAAI1C,GAAgB,KAGtE6C,GAAY,KAAK,IAAIvF,EAAe,QAAQ,IAAMsE,EAA8B,QAAQ,GAAG,EAC3FkB,GAAe,KAAK,IAAIxF,EAAe,QAAQ,KAAOsE,EAA8B,QAAQ,IAAI,EAGhGmB,GAAoBF,IAAazI,EAAW,WAAa0I,IAAgB/C,GACzEiD,GAAqBf,EAAY,YAAcxrB,GAErD,GAAI,EADiBssB,IAAqBC,IAExC,OAAOlB,EAKT,GAAIkB,GACF,OAAQvsB,GAAS,CACf,KAAKupB,GAAgB,KACrB,KAAKA,GAAgB,KACrB,KAAKA,GAAgB,MACnBgC,EAAc,QAAU,OACxB,MACF,QACEA,EAAc,QAAUF,EACxB,KACH,CAEHG,EAAY,UAAYxrB,GACxBwrB,EAAY,OAASzB,GAAmB7iC,EAAM,UAAW8Y,GAAWvB,EAAU,YAAaA,EAAU,eAAgBklB,EAAW,UAAY,GAAI2F,GAAuB,CAAC,EACxK,MAAMkD,GAASC,GAAer6B,EAAQqM,EAAWspB,EAASmC,CAAiB,EACrEyB,GAAoBe,GAAqBF,GAAQ3F,EAAe,QAAS2E,CAAW,EAG1FmB,OAAAA,GAAAA,UAAmB,IAAM,CACvBjB,EAAoBC,EAAiB,CAC3C,CAAK,EACDL,EAAc,MAAM,IAAMQ,CAA0B,EAC7CH,EACX,EACQiB,EAA2B,IAAM,CACrC,MAAMJ,EAASC,GAAer6B,EAAQqM,EAAWspB,EAASmC,CAAiB,EACrEyB,EAAoBe,GAAqBF,EAAQ3F,EAAe,QAAS2E,CAAW,EAE1FD,EAAc,QAAU,OACxBG,EAAoBC,CAAiB,CACzC,EACQkB,EAAenF,GAAiB3/B,GAAS,CAC7C,KAAM,CACJ,UAAA+kC,EACA,WAAAC,EACN,EAAQhlC,EAAM,cAWV,GARI+kC,EAAY,GAGZ5lC,EAAM,YAAc,OAClB6lC,GAAa,GAIf7lC,EAAM,YAAc,OAClB6lC,GAAa,EACf,OAGJ,MAAMpB,GAAoBG,IAC1B15B,EAAO,QAAQ,aAAa,uBAAwB,CAClD,IAAK06B,EACL,KAAMC,GACN,cAAepB,EACrB,CAAK,CACL,CAAG,EACKqB,EAActF,GAAiB3/B,GAAS,CAC5CqK,EAAO,QAAQ,aAAa,uBAAwB,CAAE,EAAErK,CAAK,CACjE,CAAG,EACKklC,EAAkBvF,GAAiB3/B,GAAS,CAChDqK,EAAO,QAAQ,aAAa,2BAA4B,CAAE,EAAErK,CAAK,CACrE,CAAG,EACKmlC,EAAU,CAACx4B,EAAS,KAAO,QAC/B,GAAI,CAACA,EAAO,MAAQ,CAACi2B,EAAY,MAC/B,MAAO,GAET,MAAMwC,EAAoBz4B,EAAO,eAAiB22B,EAC5C+B,GAAgB,CAAChD,GAAuB11B,EAAO,WAAa,QAAa01B,GAAuB11B,EAAO,WAAa,SACpH24B,GAAkB34B,EAAO,WAAa,OAC5C,IAAI44B,GAGJ,OAAQ54B,EAAO,SAAQ,CACrB,IAAK,MACH44B,GAAiB,EACjB,MACF,IAAK,SACHA,GAAiB/e,EAAW,IAAI,OAASoc,EAAY,KAAK,OAC1D,MACF,KAAK,OACH2C,GAAiB/e,EAAW,IAAI,OAChC,KACH,CACD,MAAMgf,GAAY74B,EAAO,MAAQi2B,EAAY,KACvClF,GAAmB0H,EAAkB,cACrCzH,GAAkB,KAAK,IAAIyH,EAAkB,aAAcI,GAAU,MAAM,EAC3EC,GAAa94B,EAAO,KAAO8O,GAAM,EAAG9O,EAAO,KAAK,MAAM,EAAI8O,GAAMiiB,GAAkBC,EAAe,EACvG,IAAI+H,GAAkB,GAClB,CAACJ,IAAmB5B,EAAY,WAAa,KAC3CA,EAAY,SAAWhG,KACzBgI,GAAkBhC,EAAY,SAC9B+B,GAAW,QAAQC,EAAe,GAEhChC,EAAY,UAAY/F,KAC1B+H,GAAkBhC,EAAY,SAC9B+B,GAAW,KAAKC,EAAe,IAGnC,MAAMrgB,GAAO,CAAA,EACPsgB,IAAW5oC,GAAA2Z,EAAU,YAAV,YAAA3Z,GAAqB,IAChC6oC,GAAkBvwB,GAA4BhL,CAAM,EAC1D,OAAAo7B,GAAW,QAAQI,IAAkB,cACnC,KAAM,CACJ,GAAAh8B,GACA,MAAAtN,EACR,EAAUipC,GAAUK,EAAc,EACtBC,MAAY/oC,GAAA6lC,GAAA,YAAAA,EAAa,QAAb,YAAA7lC,GAAoB,gBAAiB,GAAKwoC,GAAiBM,GAG7E,GAAI1C,EAAY,CACd,MAAM4C,GAAiBnxB,EAAc,KAAK,OACpCoxB,GAAgB1xB,EAAe,OAASM,EAAc,MAAM,OAClEvK,EAAO,QAAQ,iBAAiB,CAC9B,MAAOR,GACP,eAAAk8B,GACA,cAAAC,GACA,QAAS1xB,CACnB,CAAS,EACGM,EAAc,KAAK,OAAS,GAC9BvK,EAAO,QAAQ,iBAAiB,CAC9B,MAAOR,GACP,eAAgB,EAChB,cAAe+K,EAAc,KAAK,OAClC,QAASN,CACrB,CAAW,EAECM,EAAc,MAAM,OAAS,GAC/BvK,EAAO,QAAQ,iBAAiB,CAC9B,MAAOR,GACP,eAAgByK,EAAe,OAASM,EAAc,MAAM,OAC5D,cAAeN,EAAe,OAC9B,QAASA,CACrB,CAAW,CAEJ,CACD,MAAMsC,IAAW4rB,GAAA,YAAAA,EAAW,MAAO34B,GAC7Bo8B,GAAiB57B,EAAO,QAAQ,iBAAiBR,EAAE,EAA+C,OAA3CQ,EAAO,QAAQ,sBAAsBR,EAAE,EACpG,IAAIq8B,GACAvD,EAAmB94B,EAAE,GAAK,KAC5Bq8B,GAAa,GAEbA,GAAa77B,EAAO,QAAQ,gBAAgBR,EAAE,EAEhD,IAAIs8B,GAAiB,GACjBx5B,EAAO,WAAa,SACtBw5B,GAAiBN,KAAmB,GAEtC,IAAIO,GAAgB,GACpB,MAAMC,GAAyBR,KAAmBL,GAAU,OAAS,EACrE,GAAIH,GACF,GAAKC,GAOHc,GAAgBC,OAPI,CACpB,MAAMC,GAAY1D,EAAY,KAAK,OAAS,EACdiD,KAAmBS,KAE/CF,GAAgB,GAE5B,CAKM,MAAMG,GADeV,KAAmBH,GAExC,IAAIc,GAAe,KACf/D,IAAiB,MAAQA,EAAa,KAAO54B,KAE/C28B,GADmBn8B,EAAO,QAAQ,cAAcR,GAAI44B,EAAa,KAAK,EAC5C,WAAa,OAASA,EAAa,MAAQ,MAEvE,IAAIgE,GAAuBrB,EACvB,CAACE,IAAmB9B,EAAc,SAAWqC,IAAkBrC,EAAc,QAAQ,eAAiBqC,GAAiBrC,EAAc,QAAQ,eAC/IiD,GAAuBjD,EAAc,SAEvC,MAAMkD,GAAaC,GAAkBf,GAAiBa,GAAsBtnC,EAAM,UAAWyV,EAAc,KAAK,MAAM,EAChHgyB,GAAmBP,IAA0B15B,EAAO,WAAa,MAoBvE,GAnBA0Y,GAAK,KAAmB3N,EAAI,IAAChB,EAAU,MAAM,IAAKH,EAAS,CACzD,IAAKha,GACL,MAAOsN,GACP,MAAOi8B,GACP,SAAUI,GACV,UAAWv5B,EAAO,KAAO,OAAY+1B,EAAS,UAAUmD,EAAc,EACtE,WAAYa,GACZ,WAAY9K,EACZ,UAAWqK,GACX,aAAcO,GACd,cAAe5xB,EACf,eAAgBN,EAChB,cAAemyB,GACf,mBAAoB7vB,GAAW8sB,EAAY,YAAc,OACzD,eAAgByC,GAChB,cAAeC,GACf,aAAcG,GACd,iBAAkBK,EAC1B,EAASjB,EAAQ,EAAG97B,EAAE,CAAC,EACb08B,GACF,OAEF,MAAMM,GAAQvE,EAAO,IAAIz4B,EAAE,EACvBg9B,IACFxhB,GAAK,KAAKwhB,EAAK,EAEbT,IACF/gB,GAAK,MAAKiG,IAAAxW,GAAAzK,EAAO,SAAQ,mCAAf,YAAAihB,GAAA,KAAAxW,GAAkD,CAC1D,UAAWjL,EACZ,EAAC,CAEV,CAAK,EACMwb,EACX,EACQyhB,EAA2B1E,EAAU,OAASvD,GAAqBuD,EAAU,MAC7E2E,EAAgBzc,EAAAA,QAAc,KAAO,CACzC,UAAYwc,EAAsC,OAAX,SACvC,UAAWpwB,EAAU,WAAa,SAAW,MAC9C,GAAG,CAACowB,EAA0BpwB,EAAU,UAAU,CAAC,EAC9CswB,EAAc1c,EAAAA,QAAc,IAAM,CACtC,MAAM/N,EAAO,CACX,MAAOuqB,EAA2BjI,EAAoB,OACtD,OAAQqE,CACd,EACI,OAAIxsB,EAAU,YAAcksB,EAAY,KAAK,SAAW,IACtDrmB,EAAK,OAASwN,GAAwB1f,CAAM,GAEvCkS,CACR,EAAE,CAAClS,EAAQw0B,EAAmBqE,EAAe4D,EAA0BpwB,EAAU,WAAYksB,EAAY,KAAK,MAAM,CAAC,EACtH/1B,OAAAA,EAAAA,UAAgB,IAAM,CACpBxC,EAAO,QAAQ,aAAa,kCAAkC,CAClE,EAAK,CAACA,EAAQ28B,CAAW,CAAC,EACxBvvB,GAAkB,IAAM,CAEtBpN,EAAO,QAAQ,QAChB,EAAE,CAACA,EAAQq4B,EAAS,sBAAsB,CAAC,EAC5CjrB,GAAkB,IAAM,CAClBuoB,IAEF+C,EAAY,QAAQ,WAAa,EACjCA,EAAY,QAAQ,UAAY,EAEnC,EAAE,CAAC/C,EAAS6C,EAAaE,CAAW,CAAC,EACtC7R,GAAWkR,EAAU,QAAU,EAAG,IAAM,CACtC,MAAMqC,EAASC,GAAer6B,EAAQqM,EAAWspB,EAASmC,CAAiB,EACrE8E,EAAuBtC,GAAqBF,EAAQ3F,EAAe,QAAS2E,CAAW,EAC7FE,EAAoBsD,CAAoB,EACxC58B,EAAO,QAAQ,aAAa,uBAAwB,CAClD,IAAKy0B,EAAe,QAAQ,IAC5B,KAAMA,EAAe,QAAQ,KAC7B,cAAemI,CACrB,CAAK,CACL,CAAG,EACD58B,EAAO,QAAQ,SAAS,UAAW,CACjC,oBAAqBw6B,CACzB,CAAG,EACD93B,GAAuB1C,EAAQ,gBAAiBw6B,CAAwB,EACxE93B,GAAuB1C,EAAQ,kBAAmBw6B,CAAwB,EAC1E93B,GAAuB1C,EAAQ,qBAAsBw6B,CAAwB,EACtE,CACL,cAAAvB,EACA,UAAAf,EACA,QAAA4C,EACA,kBAAmB,KAAO,CACxB,IAAKrC,CACX,GACI,iBAAkB,KAAO,CACvB,IAAKC,EACL,SAAU+B,EACV,QAASG,EACT,YAAaC,EACb,MAAO6B,EACP,KAAM,eAGN,SAAUG,GAAqB,GAAK,MAC1C,GACI,gBAAiB,KAAO,CACtB,MAAOF,EACP,KAAM,cACZ,GACI,mBAAoB,KAAO,CACzB,KAAM,UACZ,GACI,0BAA2B,KAAO,CAChC,IAAKhE,EACL,KAAM,cACZ,GACI,4BAA6B,KAAO,CAClC,IAAKC,EACL,KAAM,cACZ,EACA,CACA,EACA,SAASyB,GAAer6B,EAAQqM,EAAWspB,EAASmC,EAAmB,CACrE,MAAMvG,EAAattB,GAAuBjE,EAAO,QAAQ,KAAK,EACxDu4B,EAAcvC,GAAeh2B,EAAQqM,CAAS,EAC9CpC,EAAiBL,GAAqC5J,CAAM,EAC5D88B,EAAY98B,EAAO,QAAQ,MAAM,KAAK,WAAW,GAAG,EAAE,EACtD+8B,EAAa9yB,EAAe,GAAG,EAAE,EACvC,MAAO,CACL,QAAA0rB,EACA,kBAAAmC,EACA,OAAA93B,EACA,WAAYqM,EAAU,WACtB,YAAaA,EAAU,YACvB,eAAgBA,EAAU,eAC1B,gBAAiBklB,EAAW,gBAC5B,kBAAmBA,EAAW,kBAC9B,mBAAoBA,EAAW,kBAAkB,MACjD,oBAAqBA,EAAW,kBAAkB,OAClD,cAAeuL,IAAc,OAAY98B,EAAO,QAAQ,sBAAsB88B,CAAS,EAAI,EAC3F,iBAAiBC,GAAA,YAAAA,EAAY,gBAAiB,EAC9C,SAAU1G,GAAqBr2B,EAAO,QAAQ,KAAK,EACnD,gBAAiBgL,GAA4BhL,CAAM,EACnD,KAAMu4B,EAAY,KAClB,MAAOA,EAAY,MACnB,cAAepuB,GAA2CnK,CAAM,EAChE,eAAAiK,CACJ,CACA,CACA,SAASqwB,GAAqBF,EAAQ3F,EAAgB2E,EAAa,CACjE,IAAIH,EACJ,GAAI,CAACmB,EAAO,QACVnB,EAAgB,CACd,cAAe,EACf,aAAcmB,EAAO,KAAK,OAC1B,iBAAkB,EAClB,gBAAiBA,EAAO,eAAe,MAC7C,MACS,CACL,KAAM,CACJ,IAAA4C,EACA,KAAAC,CACD,EAAGxI,EACEyI,EAAW,KAAK,IAAID,CAAI,EAAI7C,EAAO,gBAInCxR,EAAgB,KAAK,IAAIuU,GAAwB/C,EAAQ4C,EAAK,CAClE,QAAS,GACT,aAAc5C,EAAO,SAAS,UAAUA,EAAO,SAAS,UAAU,OAAS,CAAC,EAAIA,EAAO,aAC7F,CAAK,EAAGA,EAAO,SAAS,UAAU,OAAS,CAAC,EAClCvR,EAAeuR,EAAO,WAAaxR,EAAgBwR,EAAO,KAAK,OAAS+C,GAAwB/C,EAAQ4C,EAAM5C,EAAO,mBAAmB,EAC9I,IAAIzD,EAAmB,EACnBC,EAAkBwD,EAAO,gBAAgB,OAC7C,GAAIA,EAAO,kBAAmB,CAC5B,IAAIgD,EAAuB,GAC3B,KAAM,CAAC/J,EAAkBC,CAAe,EAAI+J,GAAmB,CAC7D,WAAYzU,EACZ,UAAWC,EACX,cAAe,EACf,aAAcuR,EAAO,KAAK,OAC1B,aAAchB,EAAY,OAAO,UACjC,YAAaA,EAAY,OAAO,SAChC,UAAWgB,EAAO,SAAS,UAC3B,SAAUA,EAAO,aACzB,CAAO,EACD,QAASngC,EAAIo5B,EAAkBp5B,EAAIq5B,GAAmB,CAAC8J,EAAsBnjC,GAAK,EAAG,CACnF,MAAM0U,EAAMyrB,EAAO,KAAKngC,CAAC,EACzBmjC,EAAuBhD,EAAO,OAAO,QAAQ,iBAAiBzrB,EAAI,EAAE,CACrE,CACIyuB,IACHzG,EAAmB2G,GAAaJ,EAAU9C,EAAO,gBAAiB,CAChE,QAAS,GACT,aAAcA,EAAO,iBAC/B,CAAS,EACDxD,EAAkB0G,GAAaJ,EAAW9C,EAAO,mBAAoBA,EAAO,eAAe,EAE9F,CACDnB,EAAgB,CACd,cAAArQ,EACA,aAAAC,EACA,iBAAA8N,EACA,gBAAAC,CACN,CACG,CAED,OAD4B2G,GAAoBnD,EAAQnB,EAAeG,CAAW,CAEpF,CACA,SAAS+D,GAAwB/C,EAAQtgC,EAAQiI,EAAS,SACxD,MAAMy7B,EAAqCpD,EAAO,OAAO,QAAQ,wBAAuB,EACxF,IAAIqD,EAAkBD,IAAuC,KACzD9qC,EAAA0nC,EAAO,QAAP,MAAA1nC,EAAc,cAAgB,CAAC+qC,IAEjCA,EAAkBD,GAAsCpD,EAAO,MAAM,cAEvE,MAAMsD,EAAyCzsB,GAAMusB,KAAsC/yB,EAAA2vB,EAAO,QAAP,YAAA3vB,EAAc,gBAAiB,GAAI,EAAG2vB,EAAO,SAAS,UAAU,MAAM,EACjK,OAAIqD,GAAmBrD,EAAO,SAAS,UAAUsD,CAAsC,GAAK5jC,EAGnFwjC,GAAaxjC,EAAQsgC,EAAO,SAAS,UAAWr4B,CAAO,EAOzD47B,GAAkB7jC,EAAQsgC,EAAO,SAAS,UAAWsD,EAAwC37B,CAAO,CAC7G,CAOA,SAASw7B,GAAoBnD,EAAQb,EAAmBH,EAAa,CACnE,KAAM,CAAC/F,EAAkBC,CAAe,EAAI+J,GAAmB,CAC7D,WAAY9D,EAAkB,cAC9B,UAAWA,EAAkB,aAC7B,cAAe,EACf,aAAca,EAAO,KAAK,OAC1B,aAAchB,EAAY,OAAO,UACjC,YAAaA,EAAY,OAAO,SAChC,UAAWgB,EAAO,SAAS,UAC3B,SAAUA,EAAO,aACrB,CAAG,EACK,CAACwD,EAA4BC,CAAkB,EAAIR,GAAmB,CAC1E,WAAY9D,EAAkB,iBAC9B,UAAWA,EAAkB,gBAC7B,cAAea,EAAO,cAAc,KAAK,OACzC,aAAcA,EAAO,eAAe,OAASA,EAAO,cAAc,MAAM,OACxE,aAAchB,EAAY,OAAO,aACjC,YAAaA,EAAY,OAAO,YAChC,UAAWgB,EAAO,gBAClB,SAAUA,EAAO,eACrB,CAAG,EACKhH,EAAsBD,GAAiC,CAC3D,oBAAqByK,EACrB,OAAQxD,EAAO,OACf,iBAAA/G,EACA,gBAAAC,EACA,YAAa8G,EAAO,IACxB,CAAG,EACD,MAAO,CACL,cAAe/G,EACf,aAAcC,EACd,iBAAkBF,EAClB,gBAAiByK,CACrB,CACA,CAOA,SAASP,GAAaxjC,EAAQmR,EAAWlJ,EAAU,OAAW+7B,EAAa,EAAGC,EAAW9yB,EAAU,OAAQ,CACzG,GAAIA,EAAU,QAAU,EACtB,MAAO,GAET,GAAI6yB,GAAcC,EAChB,OAAOD,EAET,MAAME,EAAQF,EAAa,KAAK,OAAOC,EAAWD,GAAc,CAAC,EAC3DlmB,EAAW3M,EAAU+yB,CAAK,EAChC,IAAIC,EACJ,GAAIl8B,GAAA,MAAAA,EAAS,QAAS,CACpB,MAAMrD,GAASs/B,IAAU/yB,EAAU,OAAS,EAAIlJ,EAAQ,aAAekJ,EAAU+yB,EAAQ,CAAC,GAAKpmB,EAC/FqmB,EAAWnkC,EAAS4E,EAAQkZ,CAChC,MACIqmB,EAAWnkC,GAAU8d,EAEvB,OAAOqmB,EAAWX,GAAaxjC,EAAQmR,EAAWlJ,EAAS+7B,EAAYE,CAAK,EAAIV,GAAaxjC,EAAQmR,EAAWlJ,EAASi8B,EAAQ,EAAGD,CAAQ,CAC9I,CACA,SAASJ,GAAkB7jC,EAAQmR,EAAWkD,EAAOpM,EAAU,OAAW,CACxE,IAAIm8B,EAAW,EACf,KAAO/vB,EAAQlD,EAAU,QAAU,KAAK,IAAIA,EAAUkD,CAAK,CAAC,EAAIrU,GAC9DqU,GAAS+vB,EACTA,GAAY,EAEd,OAAOZ,GAAaxjC,EAAQmR,EAAWlJ,EAAS,KAAK,MAAMoM,EAAQ,CAAC,EAAG,KAAK,IAAIA,EAAOlD,EAAU,MAAM,CAAC,CAC1G,CACA,SAASoyB,GAAmB,CAC1B,WAAAc,EACA,UAAAlC,EACA,aAAAmC,EACA,YAAAC,EACA,cAAAC,EACA,aAAAC,EACA,UAAAtzB,EACA,SAAAuzB,CACF,EAAG,CACD,MAAMC,EAAgBxzB,EAAUkzB,CAAU,EAAIC,EACxCM,EAAezzB,EAAUgxB,CAAS,EAAIoC,EACtCM,EAAmBrB,GAAamB,EAAexzB,EAAW,CAC9D,QAAS,GACT,aAAcA,EAAUA,EAAU,OAAS,CAAC,EAAIuzB,CACpD,CAAG,EACKI,EAAkBtB,GAAaoB,EAAczzB,CAAS,EAC5D,MAAO,CAACgG,GAAM0tB,EAAkBL,EAAeC,CAAY,EAAGttB,GAAM2tB,EAAiBN,EAAeC,CAAY,CAAC,CACnH,CACO,SAAS/E,GAAuBqF,EAAUC,EAAU,CACzD,OAAID,IAAaC,EACR,GAEFD,EAAS,gBAAkBC,EAAS,eAAiBD,EAAS,eAAiBC,EAAS,cAAgBD,EAAS,mBAAqBC,EAAS,kBAAoBD,EAAS,kBAAoBC,EAAS,eAClN,CACO,SAASxC,GAAkBf,EAAiBtC,EAAerrB,EAAWmxB,EAAkB,CAE7F,MAAM9B,GADSrvB,IAAc,MAAQ,EAAI,KAClB2tB,EAAgBtC,EAAc,gBAAgB,GAAK,IAAMsC,EAAgBwD,CAAgB,GAAK,GACrH,OAAO,KAAK,IAAI9B,CAAI,CACtB,CACA,SAASlD,GAAkBH,EAAIC,EAAI,CACjC,OAAID,IAAO,GAAKC,IAAO,EACd1C,GAAgB,KAGrB,KAAK,IAAI0C,CAAE,GAAK,KAAK,IAAID,CAAE,EACzBC,EAAK,EACA1C,GAAgB,KAEhBA,GAAgB,GAGrByC,EAAK,EACAzC,GAAgB,MAEhBA,GAAgB,IAI7B,CACA,SAASQ,GAAmB1gC,EAAM2W,EAAW2pB,EAAaC,EAAgBC,EAAgBC,EAAkB,CAC1G,GAAIzgC,IAAS,MACX,OAAQ2W,EAAS,CACf,KAAKupB,GAAgB,KACnBvpB,EAAYupB,GAAgB,MAC5B,MACF,KAAKA,GAAgB,MACnBvpB,EAAYupB,GAAgB,KAC5B,KAEH,CAEH,OAAQvpB,EAAS,CACf,KAAKupB,GAAgB,KACnB,MAAO,CACL,SAAUI,EACV,UAAWA,EACX,YAAaC,EACb,aAAcA,CACtB,EACI,KAAKL,GAAgB,KACnB,MAAO,CACL,SAAU,EACV,UAAW,EACX,YAAa,EACb,aAAcO,CACtB,EACI,KAAKP,GAAgB,MACnB,MAAO,CACL,SAAU,EACV,UAAW,EACX,YAAaO,EACb,aAAc,CACtB,EACI,KAAKP,GAAgB,GACnB,MAAO,CACL,SAAU,EACV,UAAWM,EACX,YAAa,EACb,aAAc,CACtB,EACI,KAAKN,GAAgB,KACnB,MAAO,CACL,SAAUM,EACV,UAAW,EACX,YAAa,EACb,aAAc,CACtB,EACI,QAEE,MAAM,IAAI,MAAM,aAAa,CAChC,CACH,CC3sBO,MAAMuH,GAAkB,IAAM,SACnC,MAAMh/B,EAASD,KACTsM,EAAYhM,IACZmlB,EAAgBhiB,EAAgBxD,EAAQ+a,EAAoB,EAC5DkkB,EAAkBz7B,EAAgBxD,EAAQmlB,EAA4B,EACtE+Z,EAAS1Z,IAAkB,EAC3B3I,EAAUrZ,EAAgBxD,EAAQib,EAAuB,EACzDkkB,EAAoB,CAACtiB,GAAWqiB,EAChCE,EAAuB,CAACviB,GAAW2I,EAAgB,GAAKyZ,IAAoB,EAClF,IAAII,EAAc,KACdC,EAAwB,KAC5B,OAAIH,IACFE,EAAc,iBAEZD,IACFC,EAAc,oBAEZxiB,IACFwiB,EAAc,iBACdC,IAAwB70B,GAAA/X,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,iBAArB,YAAA+X,EAAsCy0B,EAAS,gBAAkB,aAAc,MAElG,CACL,YAAAG,EACA,sBAAAC,CACJ,CACA,ECpBMC,GAAyBxzB,GAAO,MAAO,CAC3C,KAAM,cACN,KAAM,iBACN,kBAAmByzB,GAAQA,IAAS,eAAiBA,IAAS,wBAC9D,kBAAmB,CAAC5uC,EAAOqb,IAAWA,EAAO,cAC/C,CAAC,EAAE,CAAC,CACF,YAAAozB,EACA,sBAAAC,CACF,IAEAA,IAA0B,WAAa,CACrC,SAAU,SAEV,IAAK,qCACL,KAAM,EACN,MAAO,EAEP,OAAQ,EAER,OAAQD,IAAgB,iBAAmB,EACzC,CAAA,EACA,CAAC,CAAC,EACAI,GAA0B1zB,GAAO,MAAO,CAC5C,KAAM,cACN,KAAM,sBACN,kBAAmByzB,GAAQA,IAAS,eAAiBA,IAAS,wBAC9D,kBAAmB,CAAC5uC,EAAOqb,IAAWA,EAAO,mBAC/C,CAAC,EAAE,CAAE,CAAA,EACCN,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAKG,OAAAC,GAJO,CACZ,KAAM,CAAC,gBAAgB,EACvB,MAAO,CAAC,qBAAqB,CAAA,EAEFjL,GAAyBxL,CAAO,CAC/D,EACA,SAASsqC,GAAmB9uC,EAAO,CACjC,MAAMoP,EAASD,KACTsM,EAAYhM,IACZk4B,EAActC,GAAmBj2B,EAAQqM,CAAS,EAClDklB,EAAa/tB,EAAgBxD,EAAQiE,EAAsB,EAC7D,IAAA07B,EAASpO,EAAW,kBAAkB,OAASA,EAAW,mBAAqBA,EAAW,uBAAyBA,EAAW,WAAaA,EAAW,cAAgB,IACtKllB,EAAU,YAAcksB,EAAY,KAAK,SAAW,GAAKoH,IAAW,KACtEA,EAASjgB,GAAwB1f,CAAM,GAEzC,MAAM5K,EAAUuW,GAAkBO,EAAS,CAAA,EAAItb,EAAO,CACpD,QAASyb,EAAU,OACpB,CAAA,CAAC,EACkB,OAAAgB,EAAA,IAAKkyB,GAAwBrzB,EAAS,CACxD,UAAWiM,GAAK/iB,EAAQ,IAAI,GAC3BxE,EAAO,CACR,SAA4Byc,EAAAA,IAAAoyB,GAAyBvzB,EAAS,CAC5D,UAAWiM,GAAK/iB,EAAQ,KAAK,EAC7B,MAAO,CACL,OAAAuqC,EACA,MAAOpO,EAAW,kBAAkB,KACtC,CACF,EAAG3gC,CAAK,CAAC,CACV,CAAA,CAAC,CACJ,CASO,SAASgvC,GAAahvC,EAAO,SAC5B,KAAA,CACJ,YAAAyuC,CACE,EAAAzuC,EACEyb,EAAYhM,IAClB,GAAI,CAACg/B,EACI,OAAA,KAEH,MAAAQ,GAAUntC,EAAA2Z,EAAU,QAAV,YAAA3Z,EAAkB2sC,GAC5BS,GAAer1B,EAAA4B,EAAU,YAAV,YAAA5B,EAAsB40B,GAC3C,OAAyBhyB,EAAA,IAAAqyB,GAAoBxzB,EAAS,CAAA,EAAItb,EAAO,CAC/D,SAA4Byc,EAAA,IAAAwyB,EAAS3zB,EAAS,CAAC,EAAG4zB,CAAY,CAAC,CAChE,CAAA,CAAC,CACJ,CCjGO,MAAMC,GAAyBl8B,GAASA,EAAM,WCarD,SAASm8B,IAAc,OACrB,MAAMhgC,EAAS+1B,KACT1pB,EAAYhM,IACZ4J,EAAiBzG,EAAgBxD,EAAQ4J,EAAoC,EAC7Eq2B,EAAqBz8B,EAAgBxD,EAAQ4lB,EAAmC,EAChFsa,EAAmB18B,EAAgBxD,EAAQ+jB,EAA4B,EACvEoc,EAA4B38B,EAAgBxD,EAAQ2iB,EAAgC,EACpFyd,EAAoB58B,EAAgBxD,EAAQ0iB,EAAwB,EACpE2d,EAAiC78B,EAAgBxD,EAAQ6iB,EAAqC,EAC9Fyd,EAAoB98B,EAAgBxD,EAAQsiB,EAA6B,EACzEie,EAAyB/8B,EAAgBxD,EAAQwiB,EAAkC,EACnFge,EAAyBh9B,EAAgBxD,EAAQswB,EAAsC,EACvFmQ,EAAkBj9B,EAAgBxD,EAAQ+/B,EAAsB,EAChEW,EAAmBl9B,EAAgBxD,EAAQ2J,EAAiC,EAC5Eg3B,EAA8Bn9B,EAAgBxD,EAAQqwB,EAAuC,EAC7FuQ,EAA+B,EAAEP,IAAmC,MAAQF,IAA8B,MAAQC,IAAsB,MACxIS,EAAsB1gC,SAAa,IAAI,EAC7C,OAAAH,EAAO,QAAQ,SAAS,UAAW,CACjC,0BAA2B6gC,CAC/B,CAAG,EACmBxzB,EAAI,IAAChB,EAAU,MAAM,cAAeH,EAAS,CAC/D,IAAK20B,EACL,eAAgB52B,EAChB,mBAAoBg2B,EACpB,iBAAkBC,EAClB,0BAA2BC,EAC3B,+BAAgCE,EAChC,kBAAmBC,EACnB,uBAAwBC,EACxB,uBAAwBC,EACxB,gBAAiBC,EACjB,iBAAkBC,EAClB,4BAA6BC,EAC7B,6BAA8BC,CAC/B,GAAEluC,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAa,CAAC,CACxC,CACA,MAAMouC,GAAsB9M,GAASgM,EAAW,EC1CnCe,GAAwB,IAAM,CACzC,MAAM/gC,EAAS+1B,KACT1pB,EAAYhM,IACZ4J,EAAiBzG,EAAgBxD,EAAQ4J,EAAoC,EAC7E4b,EAAgBhiB,EAAgBxD,EAAQ+a,EAAoB,EAC5DylB,EAAyBh9B,EAAgBxD,EAAQswB,EAAsC,EACvF0Q,EAAkBx9B,EAAgBxD,EAAQkc,EAA2B,EAC3E,IAAI+kB,EAAO,OACX,OAAI50B,EAAU,WACZ40B,EAAO,YAEF,CACL,KAAAA,EACA,gBAAiBh3B,EAAe,OAChC,gBAAiBu2B,EAAyB,EAAIQ,EAAkBxb,EAChE,uBAAwBtD,GAA8B7V,CAAS,CACnE,CACA,EClBM60B,GAAkBn1B,GAAO,KAAK,EAAE,CACpC,SAAU,WACV,IAAK,qCACL,KAAM,CACR,CAAC,EACKo1B,GAAUp1B,GAAO,MAAO,CAC5B,KAAM,cACN,KAAM,OACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,IAC/C,CAAC,EAAE,CACD,SAAU,EACV,SAAU,WACV,SAAU,QACZ,CAAC,EACYm1B,GAAiCh1B,EAAgB,WAAC,CAACxb,EAAO6F,IAAQ,CAC7E,MAAM4qC,EAAiBN,KACjB10B,EAAYhM,IAClB,OAAoBka,EAAK,KAAC4mB,GAASj1B,EAAS,CAC1C,IAAKzV,EACL,WAAY4V,EACZ,UAAWzb,EAAM,UACjB,SAAU,EACX,EAAEywC,EAAgB,CACjB,SAAU,CAAch0B,EAAI,IAAC6zB,GAAiB,CAC5C,KAAM,eACN,UAAW,iBACjB,CAAK,EAAGtwC,EAAM,QAAQ,CACnB,CAAA,CAAC,CACJ,CAAC,EC3BK+a,GAAoB,IAIjBE,GAHO,CACZ,KAAM,CAAC,cAAc,CACzB,EAC+BjL,GAAyB,CAAE,CAAA,EAEpDugC,GAAUp1B,GAAO,KAAK,EAAE,CAC5B,SAAU,SACV,OAAQ,EACR,IAAK,CACP,CAAC,EACM,SAASu1B,GAAiB1wC,EAAO,CACtC,MAAMwE,EAAUuW,KAChB,OAAoB0B,EAAI,IAAC8zB,GAASj1B,EAAS,CAAA,EAAItb,EAAO,CACpD,UAAWunB,GAAK/iB,EAAQ,KAAMxE,EAAM,UAAWmQ,EAAY,gBAAgB,CAAC,EAC5E,KAAM,cACP,CAAA,CAAC,CACJ,CCjBA,MAAM4K,GAAoB,IAIjBE,GAHO,CACZ,KAAM,CAAC,iBAAiB,CAC5B,EAC+BjL,GAAyB,CAAE,CAAA,EAEpDugC,GAAUp1B,GAAO,KAAK,EAAE,CAC5B,SAAU,SACV,OAAQ,EACR,OAAQ,kEACV,CAAC,EACM,SAASw1B,GAAoB3wC,EAAO,CACzC,MAAMwE,EAAUuW,KAChB,OAAoB0B,EAAI,IAAC8zB,GAASj1B,EAAS,CAAA,EAAItb,EAAO,CACpD,UAAWunB,GAAK/iB,EAAQ,KAAMxE,EAAM,UAAWmQ,EAAY,mBAAmB,CAAC,EAC/E,KAAM,cACP,CAAA,CAAC,CACJ,CChBA,MAAM4K,GAAoB,CAAC/a,EAAO4wC,IAAsB,CACtD,KAAM,CACJ,QAAApsC,CACD,EAAGxE,EAIJ,OAAOib,GAHO,CACZ,KAAM,CAAC,yBAA0B21B,GAAqB,oCAAoC,CAC9F,EAC+B5gC,GAAyBxL,CAAO,CAC/D,EACMqsC,GAA6B11B,GAAO,MAAO,CAC/C,KAAM,cACN,KAAM,yBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,sBAC/C,CAAC,EAAE,CAAE,CAAA,EACCy1B,GAA0Ct1B,EAAAA,WAAiB,SAAoCxb,EAAO6F,EAAK,OAC/G,MAAM4V,EAAYhM,IACZmhC,EAAoB,CAACn1B,EAAU,cAAc3Z,EAAA9B,EAAM,QAAN,YAAA8B,EAAa,aAAc,OACxE0C,EAAUuW,GAAkBU,EAAWm1B,CAAiB,EAC9D,OAAoBn0B,EAAI,IAACo0B,GAA4Bv1B,EAAS,CAC5D,IAAKzV,CACN,EAAE7F,EAAO,CACR,WAAYyb,EACZ,UAAW8L,GAAK/iB,EAAQ,KAAMxE,EAAM,SAAS,CAC9C,CAAA,CAAC,CACJ,CAAC,ECxBK+wC,GAAS51B,GAAO,KAAK,EAAE,CAC3B,QAAS,OACT,cAAe,MACf,MAAO,2BACP,UAAW,YACb,CAAC,EACK61B,GAAS71B,GAAO,KAAK,EAAE,CAC3B,SAAU,SACV,OAAQ,OACR,UAAW,aACX,UAAW,kCACX,gBAAiB,kCACnB,CAAC,EACK81B,GAAa91B,GAAO61B,EAAM,EAAE,CAChC,KAAM,EACN,YAAa,iCACf,CAAC,EACKE,GAAc/1B,GAAO61B,EAAM,EAAE,CACjC,MAAO,EACP,WAAY,iCACd,CAAC,EACKG,GAAOh2B,GAAO,KAAK,EAAE,CACzB,SAAU,EACV,UAAW,iCACb,CAAC,EACD,SAASi2B,GAA0B,CACjC,WAAAC,CACF,EAAG,CACD,MAAMjiC,EAASD,KACT,CACJ,kBAAAmiC,EACA,YAAAC,EACA,WAAAC,EACA,WAAAC,EACA,cAAAC,EACA,gBAAAC,EACA,iBAAAC,CACJ,EAAMh/B,EAAgBxD,EAAQiE,EAAsB,EAC5Cw+B,EAAkBL,EAAaE,EAAgB,EAC/CI,EAAiBR,EAAkB,OAASC,EAAY,OAASM,EACjE9C,EAAS,KAAK,IAAI8C,EAAiBC,CAAc,EACvD,OAAI/C,IAAW,EACN,KAEWplB,EAAAA,KAAMonB,GAAQ,CAChC,UAAW5gC,EAAY,OACvB,KAAM,eACN,MAAO,CACL,OAAA4+B,EACA,mBAAoBsC,IAAe,EAAI,cAAgB,gCACxD,EACD,SAAU,CAACM,EAAkB,GAAkBl1B,EAAAA,IAAKw0B,GAAY,CAC9D,UAAW9gC,EAAY,oBAAoB,EAC3C,MAAO,CACL,MAAOwhC,CACR,CACP,CAAK,EAAgBl1B,EAAAA,IAAK00B,GAAM,CAAE,CAAA,EAAGS,EAAmB,GAAkBn1B,EAAI,IAACy0B,GAAa,CACtF,UAAW/gC,EAAY,qBAAqB,EAC5C,MAAO,CACL,MAAOyhC,GAAoBH,EAAaC,EAAgB,EACzD,CACP,CAAK,CAAC,CACN,CAAG,CACH,CACA,MAAMK,GAAW3O,GAASgO,EAAyB,ECtE7Ct2B,GAAY,CAAC,WAAW,EAYxBC,GAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAxW,CACD,EAAGwW,EAIJ,OAAOC,GAHO,CACZ,KAAM,CAAC,2BAA2B,CACtC,EAC+BjL,GAAyBxL,CAAO,CAC/D,EACMwtC,GAAgC72B,GAAO,MAAO,CAClD,KAAM,cACN,KAAM,4BACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,yBAC/C,CAAC,EAAE,CACD,SAAU,WACV,QAAS,OAET,cAAe,QACjB,CAAC,EACK42B,GAA6Cz2B,EAAAA,WAAiB,SAAuCxb,EAAO6F,EAAK,CACrH,KAAM,CACF,UAAAohB,CACN,EAAQjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTsM,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACrCy2B,EAAYt/B,EAAgBxD,EAAQ,IAAM,CAC9C,MAAMi5B,EAAgBxC,GAA0Bz2B,CAAM,EAEtD,OADiBq2B,GAAqBr2B,EAAO,QAAQ,KAAK,EAC1C,UAAUi5B,EAAc,aAAa,GAAK,CAC9D,CAAG,EACD,OAAoB5rB,EAAI,IAACu1B,GAA+B12B,EAAS,CAC/D,IAAKzV,EACL,UAAW0hB,GAAK/iB,EAAQ,KAAMyiB,CAAS,EACvC,WAAYxL,EACZ,MAAO,CACL,UAAW,kBAAkBy2B,CAAS,QACvC,CACL,EAAKt7B,CAAK,CAAC,CACX,CAAC,ECrDYu7B,GAA2Bl/B,GAASA,EAAM,aAC1Cm/B,GAAkCx8B,GAAeu8B,GAA0BE,GAAgBA,EAAa,mBAAmB,ECF3HC,GAAgC,CAC3C,eAAgB,GAChB,gBAAiB,GACjB,eAAgB,IAChB,OAAQ,EACV,ECFaC,GAA4Bt/B,GAASA,EAAM,SCH3Cu/B,GAAmCv/B,GAASA,EAAM,gBCA/D,IAAIw/B,GAAyC,SAAUA,EAA2B,CAChF,OAAAA,EAA0B,QAAa,UACvCA,EAA0B,QAAa,UAChCA,CACT,EAAEA,IAA6B,CAAA,CAAE,ECKjC,MAAM13B,GAAoB,CAACC,EAAYgM,IAAa,CAClD,KAAM,CACJ,QAAAxiB,CACD,EAAGwW,EACEyoB,EAAQ,CACZ,KAAM,CAAC,YAAa,cAAczc,CAAQ,EAAE,EAC5C,QAAS,CAAC,kBAAkB,CAChC,EACE,OAAO/L,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,EACMkuC,GAAYv3B,GAAO,KAAK,EAAE,CAC9B,SAAU,WACV,QAAS,eACT,OAAQ,EACR,UAAW,CACT,QAAS,cACV,EAKD,SAAU,gDACZ,CAAC,EACKw3B,GAAoBx3B,GAAOu3B,EAAS,EAAE,CAC1C,MAAO,cACP,OAAQ,sLACR,UAAW,OACX,UAAW,SAEX,QAAS,EACT,UAAW,CACT,MAAO,aACR,EACD,IAAK,qCACL,MAAO,KACT,CAAC,EACKE,GAAsBz3B,GAAOu3B,EAAS,EAAE,CAC5C,MAAO,OACP,OAAQ,cACR,UAAW,SACX,UAAW,OAEX,QAAS,EACT,UAAW,CACT,OAAQ,aACT,EACD,OAAQ,KACV,CAAC,EACKG,GAAU13B,GAAO,KAAK,EAAE,CAC5B,QAAS,cACX,CAAC,EACK23B,GAAoCt3B,EAAAA,WAAiB,SAA8Bxb,EAAO6F,EAAK,CACnG,MAAMuJ,EAAS+1B,KACT1pB,EAAYhM,IACZsjC,EAAWxjC,SAAa,EAAK,EAC7Bu+B,EAAev+B,SAAa,CAAC,EAC7ByjC,EAAezjC,SAAa,IAAI,EAChC0jC,EAAa1jC,SAAa,IAAI,EAC9B/K,EAAUuW,GAAkBU,EAAWzb,EAAM,QAAQ,EACrD2gC,EAAa/tB,EAAgBxD,EAAQiE,EAAsB,EAC3D6/B,EAAoBlzC,EAAM,WAAa,WAAa,SAAW,QAC/DmzC,EAAiBnzC,EAAM,WAAa,WAAa,YAAc,aAC/DozC,EAAYpzC,EAAM,WAAa,WAAa2gC,EAAW,WAAaA,EAAW,WAC/EoL,EAAcpL,EAAW,YAAYuS,CAAiB,GAAKE,EAAYzS,EAAW,cAAgB,GAElG0S,GADgBrzC,EAAM,WAAa,WAAa2gC,EAAW,kBAAkB,OAASA,EAAW,kBAAkB,QAC7EoL,EAAcpL,EAAW,kBAAkBuS,CAAiB,GAClGI,EAAmB5O,GAAiB,IAAM,CAC9C,MAAM6O,EAAWnkC,EAAO,QAAQ,mBAAmB,QAC7CokC,EAAYR,EAAa,QAC/B,GAAIO,EAASJ,CAAc,IAAMrF,EAAa,QAC5C,OAEF,GAAIiF,EAAS,QAAS,CACpBA,EAAS,QAAU,GACnB,MACD,CACDA,EAAS,QAAU,GACnB,MAAM5kC,EAAQolC,EAASJ,CAAc,EAAIpH,EACzCyH,EAAUL,CAAc,EAAIhlC,EAAQklC,EACpCvF,EAAa,QAAUyF,EAASJ,CAAc,CAClD,CAAG,EACKM,EAAoB/O,GAAiB,IAAM,CAC/C,MAAM6O,EAAWnkC,EAAO,QAAQ,mBAAmB,QAC7CokC,EAAYR,EAAa,QAC/B,GAAID,EAAS,QAAS,CACpBA,EAAS,QAAU,GACnB,MACD,CACDA,EAAS,QAAU,GACnB,MAAM5kC,EAAQqlC,EAAUL,CAAc,EAAIE,EAC1CE,EAASJ,CAAc,EAAIhlC,EAAQ49B,CACvC,CAAG,EACD54B,GAAW,IAAM,CACf,MAAMogC,EAAWnkC,EAAO,QAAQ,mBAAmB,QAC7CokC,EAAYR,EAAa,QAC/B,OAAAO,EAAS,iBAAiB,SAAUD,EAAkB,CACpD,QAAS,EACf,CAAK,EACDE,EAAU,iBAAiB,SAAUC,EAAmB,CACtD,QAAS,EACf,CAAK,EACM,IAAM,CACXF,EAAS,oBAAoB,SAAUD,EAAkB,CACvD,QAAS,EACjB,CAAO,EACDE,EAAU,oBAAoB,SAAUC,EAAmB,CACzD,QAAS,EACjB,CAAO,CACP,CACA,CAAG,EACD7hC,EAAAA,UAAgB,IAAM,CACJqhC,EAAW,QACnB,MAAM,YAAYC,EAAmB,GAAGG,CAAkB,IAAI,CAC1E,EAAK,CAACA,EAAoBH,CAAiB,CAAC,EAC1C,MAAM7mC,EAAYrM,EAAM,WAAa,WAAa2yC,GAAoBC,GACtE,OAAoBn2B,EAAAA,IAAKpQ,EAAW,CAClC,IAAK2kB,GAAWnrB,EAAKmtC,CAAY,EACjC,UAAWxuC,EAAQ,KACnB,SAAU,GACV,cAAe,OACf,SAAuBiY,EAAI,IAACo2B,GAAS,CACnC,IAAKI,EACL,UAAWzuC,EAAQ,OACzB,CAAK,CACL,CAAG,CACH,CAAC,EChHKuW,GAAoB,CAACC,EAAY2lB,EAAY+N,IAA0B,CAC3E,KAAM,CACJ,QAAAlqC,CACD,EAAGwW,EACEyoB,EAAQ,CACZ,KAAM,CAAC,OAAQ9C,EAAW,iBAAmB,GAAK,uBAAwB+N,IAA0B,YAAc,iCAAiC,EACnJ,SAAU,CAAC,iBAAiB,CAChC,EACE,OAAOzzB,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,EACMkvC,GAAWv4B,GAAO,MAAO,CAC7B,KAAM,cACN,KAAM,kBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,eAC/C,CAAC,EAAE,CACD,SAAU,WACV,OAAQ,OACR,SAAU,SACV,eAAgB,OAChB,uBAAwB,CACtB,QAAS,MACV,EACD,eAAgB,CACd,SAAU,QACX,EAED,OAAQ,CACV,CAAC,EACD,SAASs4B,GAAoB3zC,EAAO,CAClC,MAAMoP,EAASD,KACTsM,EAAYhM,IACZkxB,EAAa/tB,EAAgBxD,EAAQiE,EAAsB,EAC3DugC,EAAgBxF,KAChB5pC,EAAUuW,GAAkBU,EAAWklB,EAAYiT,EAAc,qBAAqB,EACtFC,EAAkB5M,KAClB,CACJ,kBAAA6M,EACA,iBAAAC,EACA,gBAAAC,EACA,mBAAAC,EACA,0BAAAC,EACA,4BAAAC,EACA,QAAAjK,CACD,EAAG2J,EACEzpB,EAAO8f,IACb,OAAoBvgB,EAAK,KAACtd,GAAWiP,EAAS,CAC5C,UAAW9W,EAAQ,IACpB,EAAEsvC,EAAiB,EAAI,CACtB,SAAU,CAAcr3B,EAAI,IAACooB,GAAgB,CAC3C,gBAAiB,MACvB,CAAK,EAAgBpoB,EAAI,IAACooB,GAAgB,CACpC,gBAAiB,OACvB,CAAK,EAAgBlb,EAAAA,KAAM+pB,GAAUp4B,EAAS,CACxC,UAAW9W,EAAQ,QACpB,EAAEuvC,EAAgB,EAAI,CACrB,WAAYt4B,EACZ,SAAU,CAAckO,EAAK,KAACyqB,GAAc,CAC1C,SAAU,CAAc33B,EAAI,IAAC2yB,GAAa,CAAA,CAAE,EAAgB3yB,MAAKhB,EAAU,MAAM,WAAY,CAC3F,SAAU,MACV,gBAAiBo4B,CAC3B,CAAS,CAAC,CACH,CAAA,EAAgBp3B,EAAAA,IAAK43B,GAAU/4B,EAAS,CAAE,EAAEs4B,CAAa,CAAC,EAAgBn3B,EAAAA,IAAKo2B,GAASv3B,EAAS,CAAE,EAAE04B,EAAe,EAAI,CACvH,SAAuBrqB,EAAK,KAAC2qB,GAAYh5B,EAAS,CAAE,EAAE24B,EAAkB,EAAI,CAC1E,SAAU,CAAC7pB,EAAmB3N,EAAAA,IAAKhB,EAAU,MAAM,aAAc,CAC/D,gBAAiBo4B,CAC7B,CAAW,CAAC,CACZ,CAAS,CAAC,CACV,CAAO,CAAC,EAAgBp3B,EAAI,IAAC83B,GAAa,CAClC,WAAYnqB,EAAK,MACzB,CAAO,EAAgB3N,EAAI,IAAC+3B,GAAiB,CACrC,SAAuB/3B,EAAI,IAAChB,EAAU,MAAM,WAAY,CACtD,SAAU,SACV,gBAAiBo4B,CAC3B,CAAS,CACT,CAAO,CAAC,CACR,CAAK,CAAC,EAAGlT,EAAW,YAA2BlkB,EAAAA,IAAKi2B,GAAWp3B,EAAS,CAClE,SAAU,UAChB,EAAO44B,EAA2B,CAAA,CAAC,EAAGvT,EAAW,YAA2BlkB,EAAI,IAACi2B,GAAWp3B,EAAS,CAC/F,SAAU,YACX,EAAE64B,EAA6B,CAAA,CAAC,EAAGn0C,EAAM,QAAQ,CACnD,CAAA,CAAC,CACJ,CCnGO,SAASy0C,IAAwB,OACtC,MAAMh5B,EAAYhM,IAClB,OAAIgM,EAAU,WACL,KAEWgB,MAAKhB,EAAU,MAAM,OAAQH,EAAS,CAAE,GAAExZ,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,MAAM,CAA2B,CACtH,CCTA,IAAI4yC,GACG,SAASC,IAA2B,CACzC,OAAID,KAAgC,QAClC,SAAS,cAAc,KAAK,EAAE,MAAM,CAClC,IAAI,eAAgB,CAClB,OAAAA,GAA8B,GACvB,EACR,CACP,CAAK,EAEIA,EACT,CCXO,SAASE,GAAY3jB,EAAS,CACnC,OAAOA,EAAQ,aAAeA,EAAQ,cAAgBA,EAAQ,YAAcA,EAAQ,WACtF,CACO,SAAS4jB,GAA+BC,EAAM7tB,EAAW,CAC9D,OAAO6tB,EAAK,QAAQ,IAAI7tB,CAAS,EAAE,CACrC,CAIO,SAAS8tB,GAA+BC,EAAS,CACtD,OAAOA,EAAQ,QAAQ,SAAU,MAAM,CACzC,CACO,SAASC,GAA2BC,EAAMp8B,EAAO,CACtD,OAAOo8B,EAAK,cAAc,qCAAqCH,GAA+Bj8B,CAAK,CAAC,IAAI,CAC1G,CACA,SAASq8B,GAA0BvmC,EAAI,CACrC,MAAO,IAAIuB,EAAY,GAAG,aAAa4kC,GAA+B,OAAOnmC,CAAE,CAAC,CAAC,IACnF,CACO,SAASwmC,GAAkBF,EAAMtmC,EAAI,CAC1C,OAAOsmC,EAAK,cAAcC,GAA0BvmC,CAAE,CAAC,CACzD,CACO,SAASymC,GAAmBH,EAAM,CACvC,GAAAtmC,EACA,MAAAkK,CACF,EAAG,CACD,MAAMw8B,EAAcH,GAA0BvmC,CAAE,EAC1C2mC,EAAe,IAAIplC,EAAY,IAAI,gBAAgB4kC,GAA+Bj8B,CAAK,CAAC,KACxFvG,EAAW,GAAG+iC,CAAW,IAAIC,CAAY,GAC/C,OAAOL,EAAK,cAAc3iC,CAAQ,CACpC,CAaO,SAASijC,GAAsBzwC,EAAO,CAC3C,OAGAA,EAAM,OAAO,WAAa,GAAK,CAACA,EAAM,cAAc,SAASA,EAAM,MAAM,CAI3E,CACO,SAAS0wC,GAAuBC,EAAW,CAChD,OAAOA,EAAU,aAAa,YAAY,CAC5C,CACO,SAASC,GAA2Bb,EAAMh8B,EAAO,CACtD,OAAOg8B,EAAK,cAAc,gBAAgBC,GAA+Bj8B,CAAK,CAAC,IAAI,CACrF,CACO,SAAS88B,GAA6BF,EAAW,CACtD,OAAOA,EAAU,aAAa,aAAa,EAAE,MAAM,EAAG,EAAE,EAAE,MAAM,KAAK,CACvE,CACO,SAASG,GAAiCf,EAAMh8B,EAAO,CAC5D,OAAO,MAAM,KAAKg8B,EAAK,iBAAiB,oBAAoBC,GAA+Bj8B,CAAK,CAAC,MAAM,GAAK,CAAE,CAAA,CAChH,CACO,SAASg9B,GAA4Bp7B,EAAKq7B,EAAK,OAEpD,GAAI,CADSlB,GAA+Bn6B,EAAKvK,EAAY,IAAI,EAE/D,MAAM,IAAI,MAAM,uCAAuC,EAEzD,MAAM6lC,EAAet7B,EAAI,aAAa,eAAe,EACrD,GAAI,CAACs7B,EACH,MAAO,GAET,MAAMC,EAAW,OAAOD,CAAY,EAAI,EAClCE,EAAQ,CAAA,EACd,OAAKp0C,EAAAi0C,EAAI,qBAAJ,MAAAj0C,EAAwB,SAG7Bq0C,GAAUJ,CAAG,EAAE,QAAQK,GAAc,CACnC,MAAM3jB,EAAQ2jB,EAAW,aAAa,SAAS,EAC/C,GAAI,CAAC3jB,EACH,OAEF,IAAI4jB,EAAcJ,EAClB,MAAMpT,EAAkBkT,EAAI,4BAA4BtjB,EAAOwjB,CAAQ,EACnEpT,GAAmBA,EAAgB,mBACrCwT,EAAcxT,EAAgB,sBAEhC,MAAMyT,EAAOF,EAAW,cAAc,mBAAmBC,CAAW,IAAI,EACpEC,GACFJ,EAAM,KAAKI,CAAI,CAErB,CAAG,EACMJ,GAjBE,EAkBX,CACO,SAASK,GAAgBR,EAAKS,EAAO,CAC1C,OAAOT,EAAI,eAAe,QAAQ,cAAc,IAAI5lC,EAAYqmC,CAAK,CAAC,EAAE,CAC1E,CACA,MAAMC,GAAkB,CAAC,CACvB,IAAAV,EACA,SAAAE,EACA,SAAAjvB,EACA,SAAA0vB,CACF,IAAM,CACJ,GAAIT,IAAa,KACf,MAAO,GAET,MAAMC,EAAQ,CAAA,EACd,OAAAC,GAAUJ,CAAG,EAAE,QAAQK,GAAc,CACrBA,EAAW,aAAa,SAAS,GAI/CA,EAAW,iBAAiB,IAAIjmC,EAAY6W,IAAa,OAAS,mBAAqB,mBAAmB,CAAC,EAAE,EAAE,QAAQsvB,GAAQ,CAC7H,MAAMK,EAAkBC,GAAkBN,CAAI,EAC1CK,IAAoB,MAAQD,EAASC,CAAe,GACtDT,EAAM,KAAKI,CAAI,CAEvB,CAAK,CACL,CAAG,EACMJ,CACT,EACO,SAASW,GAA4Bd,EAAKr7B,EAAK,CACpD,MAAMu7B,EAAWW,GAAkBl8B,CAAG,EACtC,OAAO+7B,GAAgB,CACrB,IAAAV,EACA,SAAAE,EACA,SAAU,OACV,SAAU14B,GAASA,EAAQ04B,CAC/B,CAAG,CACH,CACO,SAASa,GAA8Bf,EAAKr7B,EAAK,CACtD,MAAMu7B,EAAWW,GAAkBl8B,CAAG,EACtC,OAAO+7B,GAAgB,CACrB,IAAAV,EACA,SAAAE,EACA,SAAU,QACV,SAAU14B,GAASA,EAAQ04B,CAC/B,CAAG,CACH,CACA,MAAMc,GAAoB,CAAC,CACzB,IAAAhB,EACA,SAAAE,EACA,SAAAjvB,EACA,SAAA0vB,CACF,IAAM,OACJ,GAAI,GAAC50C,EAAAi0C,EAAI,4BAAJ,MAAAj0C,EAA+B,SAClC,MAAO,GAET,GAAIm0C,IAAa,KACf,MAAO,GAET,MAAMe,EAAW,CAAA,EACjB,OAAAjB,EAAI,0BAA0B,QAAQ,iBAAiB,IAAI5lC,EAAY6W,IAAa,OAAS,2BAA6B,2BAA2B,CAAC,EAAE,EAAE,QAAQiK,GAAW,CAC3K,MAAM0lB,EAAkBC,GAAkB3lB,CAAO,EAC7C0lB,IAAoB,MAAQD,EAASC,CAAe,GACtDK,EAAS,KAAK/lB,CAAO,CAE3B,CAAG,EACM+lB,CACT,EACO,SAASC,GAA8BlB,EAAKr7B,EAAK,CACtD,MAAMu7B,EAAWW,GAAkBl8B,CAAG,EACtC,OAAOq8B,GAAkB,CACvB,IAAAhB,EACA,SAAU,OACV,SAAAE,EACA,SAAU14B,GAASA,EAAQ04B,CAC/B,CAAG,CACH,CACO,SAASiB,GAAgCnB,EAAKr7B,EAAK,CACxD,MAAMu7B,EAAWW,GAAkBl8B,CAAG,EACtC,OAAOq8B,GAAkB,CACvB,IAAAhB,EACA,SAAU,QACV,SAAAE,EACA,SAAU14B,GAASA,EAAQ04B,CAC/B,CAAG,CACH,CACO,SAASkB,GAAepB,EAAKj9B,EAAO,CAEzC,OADgBi9B,EAAI,0BAA0B,QAC/B,cAAc,+BAA+BhB,GAA+Bj8B,CAAK,CAAC,yBAAyB,CAC5H,CACO,SAASs+B,GAAcrB,EAAKj9B,EAAO,CACxC,MAAMu+B,EAAYtB,EAAI,mBAAmB,QACzC,OAAO,MAAM,KAAKsB,EAAU,iBAAiB,2CAA2CtC,GAA+Bj8B,CAAK,CAAC,qBAAqB,CAAC,CACrJ,CACA,SAASq9B,GAAUJ,EAAK,CACtB,OAAOA,EAAI,mBAAmB,QAAQ,iBAEtC,yBAAyB5lC,EAAY,GAAG,EAAE,CAC5C,CACA,SAASymC,GAAkBl8B,EAAK,CAC9B,MAAMs7B,EAAet7B,EAAI,aAAa,eAAe,EACrD,OAAKs7B,EAGE,OAAOA,CAAY,EAAI,EAFrB,IAGX,CClMO,MAAMsB,WAA0B,KAAM,CAAE,CAUxC,SAASC,GAAiBnoC,EAAQ,CACvC,MAAMooC,EAAwBp7B,EAAiB,YAACtD,IAAU,CACxD,MAAAA,EACA,OAAQ1J,EAAO,QAAQ,UAAU0J,CAAK,CAC1C,GAAM,CAAC1J,CAAM,CAAC,EACNqoC,EAAer7B,EAAiB,YAACxN,GAAM,CAC3C,MAAMmP,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EACpC,GAAI,CAACmP,EACH,MAAM,IAAIu5B,GAAkB,mBAAmB1oC,CAAE,QAAQ,EAO3D,MALe,CACb,GAAAA,EACA,QAASQ,EAAO,QAAQ,cAAe,EACvC,IAAA2O,CACN,CAEA,EAAK,CAAC3O,CAAM,CAAC,EACLsoC,EAAgBt7B,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,CACrD,MAAM4C,EAAStM,EAAO,QAAQ,UAAU0J,CAAK,EACvCiF,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EAC9B2e,EAAUne,EAAO,QAAQ,WAAWR,CAAE,EAC5C,GAAI,CAACmP,GAAO,CAACwP,EACX,MAAM,IAAI+pB,GAAkB,mBAAmB1oC,CAAE,QAAQ,EAE3D,MAAM+oC,EAAW55B,EAAIjF,CAAK,EACpB3K,EAAQuN,GAAA,MAAAA,EAAQ,YAAcA,EAAO,YAAYi8B,EAAU55B,EAAKrC,EAAQtM,CAAM,EAAIuoC,EAClFpQ,EAAY/V,GAAsBpiB,CAAM,EACxCo4B,EAAe1V,GAAyB1iB,CAAM,EAC9CsC,EAAS,CACb,GAAA9C,EACA,MAAAkK,EACA,IAAAiF,EACA,QAAAwP,EACA,OAAA7R,EACA,SAAUtM,EAAO,QAAQ,YAAYR,EAAIkK,CAAK,EAC9C,SAAUyuB,IAAc,MAAQA,EAAU,QAAUzuB,GAASyuB,EAAU,KAAO34B,EAC9E,SAAU44B,GAAgBA,EAAa,QAAU1uB,GAAS0uB,EAAa,KAAO54B,EAAK,EAAI,GACvF,MAAAT,EACA,eAAgBA,EAChB,WAAY,EAClB,EACI,OAAIuN,GAAUA,EAAO,iBACnBhK,EAAO,eAAiBgK,EAAO,eAAevN,EAAO4P,EAAKrC,EAAQtM,CAAM,GAE1EsC,EAAO,WAAagK,GAAUtM,EAAO,QAAQ,eAAesC,CAAM,EAC3DA,CACX,EAAK,CAACtC,CAAM,CAAC,EACLwoC,EAAex7B,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,CACpD,MAAM4C,EAAStM,EAAO,QAAQ,UAAU0J,CAAK,EACvCiF,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EACpC,GAAI,CAACmP,EACH,MAAM,IAAIu5B,GAAkB,mBAAmB1oC,CAAE,QAAQ,EAE3D,MAAI,CAAC8M,GAAU,CAACA,EAAO,YACdqC,EAAIjF,CAAK,EAEX4C,EAAO,YAAYqC,EAAIrC,EAAO,KAAK,EAAGqC,EAAKrC,EAAQtM,CAAM,CACpE,EAAK,CAACA,CAAM,CAAC,EACLyoC,EAAcz7B,EAAAA,YAAkB,CAAC2B,EAAKrC,IAAW,CACrD,MAAM5C,EAAQ4C,EAAO,MACrB,GAAI,CAACA,GAAU,CAACA,EAAO,YACrB,OAAOqC,EAAIjF,CAAK,EAElB,MAAM3K,EAAQ4P,EAAIrC,EAAO,KAAK,EAC9B,OAAOA,EAAO,YAAYvN,EAAO4P,EAAKrC,EAAQtM,CAAM,CACxD,EAAK,CAACA,CAAM,CAAC,EACL0oC,EAAuB17B,EAAAA,YAAkB,CAAC2B,EAAKrC,IAAW,CAC9D,MAAMvN,EAAQ0pC,EAAY95B,EAAKrC,CAAM,EACrC,MAAI,CAACA,GAAU,CAACA,EAAO,eACdvN,EAEFuN,EAAO,eAAevN,EAAO4P,EAAKrC,EAAQtM,CAAM,CAC3D,EAAK,CAACA,EAAQyoC,CAAW,CAAC,EAClBE,EAAyB37B,EAAiB,YAACtD,GAC1C1J,EAAO,QAAQ,eAAe,QAG5B6lC,GAA2B7lC,EAAO,QAAQ,eAAe,QAAS0J,CAAK,EAFrE,KAGR,CAAC1J,CAAM,CAAC,EACL4oC,EAAgB57B,EAAiB,YAACxN,GACjCQ,EAAO,QAAQ,eAAe,QAG5BgmC,GAAkBhmC,EAAO,QAAQ,eAAe,QAASR,CAAE,EAFzD,KAGR,CAACQ,CAAM,CAAC,EACL6oC,EAAiB77B,EAAAA,YAAkB,CAACxN,EAAIkK,IACvC1J,EAAO,QAAQ,eAAe,QAG5BimC,GAAmBjmC,EAAO,QAAQ,eAAe,QAAS,CAC/D,GAAAR,EACA,MAAAkK,CACN,CAAK,EALQ,KAMR,CAAC1J,CAAM,CAAC,EAYX8lB,GAAiB9lB,EAXC,CAChB,aAAAwoC,EACA,cAAAF,EACA,eAAAO,EACA,YAAAJ,EACA,qBAAAC,EACA,aAAAL,EACA,cAAAO,EACA,sBAAAR,EACA,uBAAAO,CACJ,EACsC,QAAQ,CAC9C,CCvHO,MAAMG,GAA4B,CAACC,EAAgBC,EAAgBC,EAAeC,EAAgCC,IAAkB,CACzI,MAAMC,EAAoBJ,IAAmBC,EAAgB,EAC7D,OAAIF,IAAmB//B,GAAyB,MAAQogC,EAC/C,GAELF,EACEH,IAAmB//B,GAAyB,KACvC,GAEL+/B,IAAmB//B,GAAyB,MACvC,CAACogC,EAGH,CAACA,GAAqBD,EAExB,EACT,EACaE,GAA2B,CAACN,EAAgBC,IAChDD,IAAmB//B,GAAyB,OAASggC,IAAmB,ECjB3Et9B,GAAY,CAAC,SAAU,QAAS,gBAAiB,QAAS,WAAY,WAAY,QAAS,YAAa,QAAS,iBAAkB,UAAW,oBAAqB,eAAgB,eAAgB,iBAAkB,eAAgB,gBAAiB,gBAAiB,UAAW,gBAAiB,cAAe,YAAa,cAAe,YAAa,UAAW,cAAe,YAAY,EACrY2hB,GAAa,CAAC,eAAgB,8BAA8B,EAiBnD,IAAAic,YAAwCA,EAAgB,CACjEA,OAAAA,EAAeA,EAAe,KAAU,CAAC,EAAI,OAC7CA,EAAeA,EAAe,KAAU,CAAC,EAAI,OAC7CA,EAAeA,EAAe,MAAW,CAAC,EAAI,QAC9CA,EAAeA,EAAe,QAAa,CAAC,EAAI,UACzCA,CACT,EAAE,CAAE,CAAA,EACG,MAAMC,GAAiC,CAC5C,CAACD,GAAe,IAAI,EAAGtgC,GAAyB,KAChD,CAACsgC,GAAe,KAAK,EAAGtgC,GAAyB,MACjD,CAACsgC,GAAe,IAAI,EAAG,OACvB,CAACA,GAAe,OAAO,EAAG,MAC5B,EACME,GAAoB,CACxB,GAAI,GACJ,MAAO,YACP,IAAK,CAAC,EACN,QAAS,CACP,GAAI,GACJ,MAAO,EACP,KAAM,OACN,OAAQ,GACR,YAAa,IACf,EACA,OAAQ,CACN,KAAM,SACN,MAAO,YACP,cAAe,CACjB,EACA,SAAU92B,GAAc,KACxB,SAAU,GACV,SAAU,GACV,MAAO,KACP,eAAgB,YAChB,WAAY,GACZ,IAAK,CAAC,CACR,EACM/G,GAAkCC,GAAA,CAChC,KAAA,CACJ,MAAA69B,EACA,eAAAC,EACA,gBAAAC,EACA,eAAAZ,EACA,WAAAa,EACA,WAAA/N,EACA,gBAAAgO,EACA,QAAAz0C,CACE,EAAAwW,EACEyoB,EAAQ,CACZ,KAAM,CAAC,OAAQ,aAAayV,GAAWL,CAAK,CAAC,GAAI5N,GAAc,WAAY+N,GAAc,iBAAkBF,GAAkB,uBAAwBC,GAAmB,wBAAyBZ,IAAmBO,GAAe,MAAQ,mBAAoBP,IAAmBO,GAAe,OAAS,oBAAqBO,GAAmB,CAACD,GAAc,qBAAqB,CAAA,EAEjX,OAAA/9B,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,EAKM20C,GAA8B39B,EAAAA,WAAW,SAAkBxb,EAAO6F,EAAK,QACrE,KAAA,CACF,OAAAsT,EACA,MAAAsZ,EACA,cAAA2mB,EACA,MAAAP,EACA,SAAA5C,EACA,MAAAnoC,EACA,UAAAmZ,EACA,MAAOoyB,EACP,QAAAC,EACA,kBAAAC,EACA,aAAAjO,EACA,aAAAkO,EACA,eAAArB,EACA,aAAAsB,EACA,cAAApB,EACA,cAAAE,EACA,QAAAnvB,EACA,cAAAswB,EACA,YAAAC,EACA,UAAAC,EACA,YAAAC,EACA,UAAAC,EACA,QAAAC,EACA,YAAAC,EACA,WAAAC,CACE,EAAAj6C,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTsM,EAAYhM,IACZqJ,EAAQK,EAAO,MACf+gC,EAAoBtnC,EAAgBxD,EAAQ,IAAM,CAIlD,GAAA,CAEF,MAAM3L,GADa2L,EAAO,QAAQ,cAAcqjB,EAAO3Z,CAAK,EAE5D,OAAArV,GAAO,IAAM2L,EAAO,QACb3L,SACAd,GAAG,CACV,GAAIA,cAAa20C,GACR,OAAAsB,GAEH,MAAAj2C,EACR,GACC+P,EAAoB,EACjBu4B,EAAar4B,EAAgBxD,EAAQ,IAAMA,EAAO,QAAQ,6BAA6B,iBAAkB,GAAO,CACpH,GAAIqjB,EACJ,MAAA3Z,CACD,CAAA,CAAC,EACI,CACJ,SAAAqhC,EACA,SAAAx+B,EACA,WAAAq9B,EAAa,GACb,MAAA7qC,CACE,EAAA+rC,EACEE,EAAoBjhC,EAAO,OAAS,aAAarX,GAAAqX,EAAO,aAAP,YAAArX,GAAA,KAAAqX,EAAoB/J,EAAO,QAAQ,aAAaqjB,CAAK,GAAG,SAAe,CAAC4nB,GAAO,MAAM,WACtIp7B,GAAYk7B,IAAa,QAAU,CAACnB,IAAe,CAACoB,EAAoBF,EAAkB,SAAW,GACrG,CACJ,QAASI,EACT,iBAAAC,CACE,EAAA9+B,EAOE++B,EAAa,CAJI5nC,EAAgBxD,EAAQ,IAAMA,EAAO,QAAQ,6BAA6B,gBAAiB,GAAI,CACpH,GAAIqjB,EACJ,MAAA3Z,CAAA,CACD,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,CAAC,CACM,EAC9BK,EAAO,eACEqhC,EAAA,KAAK,OAAOrhC,EAAO,eAAkB,WAAaA,EAAO,cAAc+gC,CAAiB,EAAI/gC,EAAO,aAAa,EAEzHA,EAAO,UAAY,QACVqhC,EAAA,KAAKrqC,EAAY,YAAY,CAAC,EAEvCoqC,GACSC,EAAA,KAAKD,EAAiBL,CAAiB,CAAC,EAE/C,MAAAO,EAAgBP,EAAkB,gBAAkB/rC,EACpDusC,EAAUnrC,SAAa,IAAI,EAC3BwhB,GAAYC,GAAWnrB,EAAK60C,CAAO,EACnC17B,GAAkBzP,SAAa,IAAI,EACnC0pC,GAAkBx9B,EAAU,eAAiB,GAC7CuL,GAAW2xB,GAA+BR,CAAc,EACxDW,GAAiBL,GAAyBzxB,GAAUyyB,CAAY,EAChEV,GAAkBb,GAA0BlxB,GAAUyyB,EAAcpB,EAAe58B,EAAU,uBAAwB88B,CAAa,EAClIv9B,GAAa,CACjB,MAAA69B,EACA,eAAAC,GACA,gBAAAC,GACA,WAAAC,EACA,QAASv9B,EAAU,QACnB,eAAA08B,EACA,WAAAlN,EACA,gBAAAgO,EAAA,EAEIz0C,GAAUuW,GAAkBC,EAAU,EACtC2/B,GAAiBv+B,EAAkB,YAAAnL,IAAsBlM,IAAA,CAC7D,MAAM2M,GAAStC,EAAO,QAAQ,cAAcqjB,EAAO3Z,GAAS,EAAE,EAC9D1J,EAAO,QAAQ,aAAa6B,GAAWS,GAAQ3M,EAAK,EAChD60C,GACFA,EAAU70C,EAAK,GAEhB,CAACqK,EAAQ0J,EAAO8gC,EAAWnnB,CAAK,CAAC,EAC9BmoB,GAAmBx+B,EAAkB,YAAAnL,IAAsBlM,IAAA,CAC/D,MAAM2M,GAAStC,EAAO,QAAQ,cAAcqjB,EAAO3Z,GAAS,EAAE,EAC9D1J,EAAO,QAAQ,aAAa6B,GAAWS,GAAQ3M,EAAK,EAChD40C,GACFA,EAAY50C,EAAK,GAElB,CAACqK,EAAQ0J,EAAO6gC,EAAalnB,CAAK,CAAC,EAChCooB,GAAUz+B,EAAAA,YAAkB,CAACnL,GAAW6pC,KAAyB/1C,IAAA,CAErE,GAAI,CAACqK,EAAO,QAAQ,OAAOqjB,CAAK,EAC9B,OAEF,MAAM/gB,GAAStC,EAAO,QAAQ,cAAcqjB,EAAO3Z,GAAS,EAAE,EAC9D1J,EAAO,QAAQ,aAAa6B,GAAWS,GAAQ3M,EAAK,EAChD+1C,IACFA,GAAY/1C,EAAK,CAElB,EAAA,CAACqK,EAAQ0J,EAAO2Z,CAAK,CAAC,EACnB6R,GAAQjV,EAAAA,QAAc,IAAM,CAChC,GAAIic,EACK,MAAA,CACL,QAAS,EACT,QAAS,EACT,MAAO,EACP,OAAQ,CAAA,EAGZ,MAAMyP,GAAYz/B,EAAS,CACzB,UAAW,GAAGxN,CAAK,MAClBurC,CAAS,EACR,OAAAlB,IAAmBO,GAAe,OACpCqC,GAAU,KAAOvB,GAEfrB,IAAmBO,GAAe,QACpCqC,GAAU,MAAQvB,GAEbuB,EAAA,EACN,CAACjtC,EAAOw9B,EAAc+N,EAAWG,EAAcrB,CAAc,CAAC,EAoBjE,GAnBAvmC,EAAAA,UAAgB,IAAM,CACpB,GAAI,CAAC+J,GAAYw+B,IAAar4B,GAAc,KAC1C,OAEF,MAAMk5B,GAAMC,GAAc7rC,EAAO,QAAQ,eAAe,OAAO,EAC3D,GAAAsrC,EAAQ,SAAW,CAACA,EAAQ,QAAQ,SAASM,GAAI,aAAa,EAAG,CACnE,MAAME,GAAmBR,EAAQ,QAAQ,cAAc,gBAAgB,EACjES,GAAiBn8B,GAAgB,SAAWk8B,IAAoBR,EAAQ,QAC9E,GAAI/F,KACFwG,GAAe,MAAM,CACnB,cAAe,EAAA,CAChB,MACI,CACC,MAAAtX,GAAiBz0B,EAAO,QAAQ,kBAAkB,EACxD+rC,GAAe,MAAM,EACd/rC,EAAA,QAAQ,OAAOy0B,EAAc,CACtC,CACF,CACC,EAAA,CAACloB,EAAUw+B,EAAU/qC,CAAM,CAAC,EAC3B8qC,IAAsBtB,GACjB,OAAA,KAET,IAAIwC,GAAcxkC,EAAM,QAgBpBvS,GACAg3C,GAIA,GAHAjC,IAAkB,MAAQjgC,EAAO,aACxB9U,GAAA8U,EAAO,WAAW+gC,CAAiB,GAE5Cd,IAAkB,MAAQjgC,EAAO,eAAgB,CACnD,MAAMmiC,GAAalsC,EAAO,QAAQ,wBAAwBqjB,EAAOtZ,EAAO,KAAK,EAGvEoiC,GAAoBx/B,GAA8Bq9B,EAAe3c,EAAU,EAC3E+e,GAAiBriC,EAAO,eAAiBA,EAAO,eAAeigC,EAAc,MAAOkC,GAAYniC,EAAQ/J,CAAM,EAAI8qC,EAAkB,eACpIxoC,GAAS4J,EAAS,CAAC,EAAG4+B,EAAmB,CAC7C,IAAKoB,GACL,eAAAE,IACCD,EAAiB,EACTl3C,GAAA8U,EAAO,eAAezH,EAAM,EAC5B8oC,EAAA,KAAKrqC,EAAY,eAAe,CAAC,EACjCqqC,EAAA,KAAKF,GAAA,YAAAA,EAAc,gBAAgB,CAChD,CACA,GAAIj2C,KAAa,OAAW,CACpB,MAAAo3C,GAAchB,GAAA,YAAAA,EAAe,WACxBp2C,GAAAo3C,GACHJ,GAAAI,EACV,CACwBC,EAAA,eAAer3C,EAAQ,GAAK+1C,IAC1B/1C,GAAAwlB,eAAmBxlB,GAAU,CACnD,gBAAA2a,EAAA,CACD,GAEG,MAAA28B,GAAyBpC,EAAoB,KAAO,CACxD,YAAasB,GAAQ,gBAAiBb,CAAW,EACjD,WAAYa,GAAQ,eAAgBZ,CAAU,CAAA,EAE5B,OAAAx9B,EAAA,IAAK,MAAOnB,EAAS,CACvC,IAAKyV,GACL,UAAWxJ,GAAKN,EAAWuzB,EAAYh2C,GAAQ,IAAI,EACnD,KAAM,WACN,aAAcsU,EACd,gBAAiBm9B,EACjB,gBAAiBA,EAAW,EAC5B,eAAgBqD,EAChB,MAAAhV,GACA,MAAA+W,GACA,SAAAp8B,EACA,QAAS47B,GAAQ,YAAazxB,CAAO,EACrC,cAAeyxB,GAAQ,kBAAmBnB,CAAa,EACvD,YAAamB,GAAQ,gBAAiBhB,CAAW,EACjD,YAAae,GAAiB,eAAe,EAC7C,UAAWD,GAAe,aAAa,EACvC,UAAWE,GAAQ,cAAef,CAAS,EAC3C,QAASe,GAAQ,YAAad,CAAO,CAAA,EACpC4B,GAAwB/kC,EAAO,CAChC,QAASwkC,GACT,SAAA/2C,EACD,CAAA,CAAC,CACJ,CAAC,EAkCKu3C,GAAmBxY,GAAS+V,EAAQ,EC1VpCr+B,GAAY,CAAC,QAAS,OAAQ,aAAc,SAAS,EACzD2hB,GAAa,CAAC,QAAS,OAAQ,aAAc,UAAW,mBAAoB,WAAW,EAOnFof,GAAmCrgC,EAAiB,WAAA,CAACxb,EAAO6F,IAAQ,OACxE,MAAM4V,EAAYhM,IACd,GAAA,CAACzP,EAAM,WAAY,CACf,KAAA,CACF,MAAAowB,EACA,KAAA0rB,EACA,QAAA1yB,CACE,EAAAppB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDihC,EAAuBh3C,GAAA,CAC3BqkB,GAAAA,MAAAA,EAAUrkB,EAAK,EAEjB,OAAyB0X,EAAA,IAAAhB,EAAU,MAAM,eAAgBH,EAAS,CAChE,IAAAzV,EACA,KAAM,QACN,KAAM,WACN,aAAcuqB,GACbxZ,EAAO,CACR,QAASmlC,CAAA,GACRj6C,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,eAAgB,CACtC,SAA6B+nB,EAAA,aAAaiyB,EAAM,CAC9C,SAAU,OAAA,CACX,CACF,CAAA,CAAC,CACJ,CACM,KAAA,CACF,MAAA1rB,EACA,KAAA0rB,EACA,QAAA1yB,EACA,iBAAA4yB,EAAmB,GACnB,UAAAC,CACE,EAAAj8C,EACJ4W,EAAQmF,GAA8B/b,EAAOy8B,EAAU,EACnDsf,EAAuBh3C,GAAA,CAC3BqkB,GAAA,MAAAA,EAAUrkB,GACNi3C,IACUC,GAAA,MAAAA,IACd,EAEkB,OAAAtyB,EAAA,KAAMuyB,GAAU5gC,EAAS,CAC3C,IAAAzV,GACC+Q,EAAO,CACR,QAASmlC,EACT,SAAU,CAACD,GAAqBr/B,EAAA,IAAK0/B,GAAc,CACjD,SAAUL,CACX,CAAA,EAAG1rB,CAAK,CACV,CAAA,CAAC,CACJ,CAAC,ECvDKtV,GAAY,CAAC,QAAS,OAAQ,QAAS,QAAS,SAAU,QAAS,QAAS,WAAW,EAWvFshC,GAAwB,QACxBC,GAAiB,QACjBC,GAA8B,CAAC,GAAI,EAAE,EACrCC,GAA8B,CAClC,OAAQ,CAAC,GAAI,EAAE,EACf,OAAQ,CAAC,GAAI,EAAE,EACf,KAAM,CAAC,GAAI,EAAE,EACb,SAAU,CAAC,GAAI,EAAE,EACjB,aAAc,CAAC,GAAI,EAAE,CACvB,EACMxhC,GAAkCC,GAAA,CAChC,KAAA,CACJ,MAAA69B,EACA,QAAAr0C,EACA,MAAAg4C,CACE,EAAAxhC,EACEyoB,EAAQ,CACZ,KAAM,CAAC,OAAQ,eAAgB,aAAaoV,EAAQK,GAAWL,CAAK,EAAI,MAAM,GAAI2D,GAAS,WAAW,CAAA,EAEjG,OAAAvhC,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,EACMi4C,GAAwBz7B,GAA4B,KAAK,EAC/D,SAAS07B,GAAiB18C,EAAO,CACzB,KAAA,CACF,MAAA8Y,EACA,KAAAjK,EACA,MAAAgqC,EACA,MAAA/qC,EACA,OAAAihC,EACA,MAAAyN,EAAQ,GACR,MAAAlY,EACA,UAAArd,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAElDE,EAAa,CACjB,QAFgBvL,IAEG,QACnB,MAAAopC,EACA,MAAA2D,CAAA,EAEIh4C,EAAUuW,GAAkBC,CAAU,EAGtC2hC,EAAgBttB,EAAAA,QAAc,IAAM,CAExC,GAD0BxgB,IAAS,WAAaA,IAAS,UAEhD,MAAA,CACL,QAAS,WACT,MAAOutC,GACP,OAAQA,EAAA,EAMN,KAAA,CAAC97B,EAAKC,CAAG,EAAI1R,EAAO0tC,GAA4B1tC,CAAI,GAAKytC,GAA8BA,GACtF,MAAA,CACL,QAAS,OACT,MAAO,GAAG,KAAK,MAAMG,GAAsBn8B,EAAKC,CAAG,CAAC,CAAC,IACrD,OAAQ87B,EAAA,CACV,EACC,CAACxtC,CAAI,CAAC,EACW,OAAA4N,EAAA,IAAK,MAAOnB,EAAS,CACvC,aAAcxC,EACd,UAAWyO,GAAK/iB,EAAQ,KAAMyiB,CAAS,EACvC,MAAO3L,EAAS,CACd,OAAAyzB,EACA,SAAUjhC,EACV,SAAUA,GACTw2B,CAAK,GACP1tB,EAAO,CACR,SAAU,CAAC4lC,GAAsB//B,EAAA,IAAKmgC,GAAUthC,EAAS,CAAA,EAAIqhC,CAAa,CAAC,CAC5E,CAAA,CAAC,CACJ,CAiBA,MAAM5K,GAAW3O,GAASsZ,EAAgB,ECjG1C,SAASG,GAAe34C,EAAO,CAC7B,OAAIA,EAAM,KACDA,EAAM,KAAK,QAAQ,UAAU,OAElCA,EAAM,QAAQ,OAAS,QAClB44C,GAAQC,GAAM74C,EAAM,QAAQ,QAAS,CAAC,EAAG,GAAI,EAE/C84C,GAAOD,GAAM74C,EAAM,QAAQ,QAAS,CAAC,EAAG,GAAI,CACrD,CACA,MAAM+4C,GAAsB,CAC1B,CAAC,IAAIvmC,EAAE,eAAe,MAAMA,EAAE,2BAA2B,CAAC,EAAE,EAAG,CAC7D,WAAY,UACZ,MAAO,MACR,CACH,EACMwmC,GAAqB,CACzB,CAAC,MAAMxmC,EAAE,mBAAmB,EAAE,EAAG,CAC/B,WAAY,UACZ,MAAO,MACR,EACD,CAAC,MAAMA,EAAE,QAAQ,EAAE,EAAG,CACpB,MAAO,OACP,WAAY,SACb,CACH,EAIMymC,GAAmB,wHACZC,GAAiBjiC,GAAO,MAAO,CAC1C,KAAM,cACN,KAAM,OACN,kBAAmB,CAACnb,EAAOqb,IAAW,CAAC,CACrC,CAAC,KAAK3E,EAAE,UAAU,EAAE,EAAG2E,EAAO,UAClC,EAAK,CACD,CAAC,KAAK3E,EAAE,uBAAuB,EAAE,EAAG2E,EAAO,uBAC/C,EAAK,CACD,CAAC,KAAK3E,EAAE,oCAAoC,CAAC,EAAE,EAAG2E,EAAO,oCAAoC,CACjG,EAAK,CACD,CAAC,KAAK3E,EAAE,sCAAsC,CAAC,EAAE,EAAG2E,EAAO,sCAAsC,CACrG,EAAK,CACD,CAAC,KAAK3E,EAAE,qCAAqC,CAAC,EAAE,EAAG2E,EAAO,qCAAqC,CACnG,EAAK,CACD,CAAC,KAAK3E,EAAE,4BAA4B,EAAE,EAAG2E,EAAO,4BACpD,EAAK,CACD,CAAC,KAAK3E,EAAE,4BAA4B,CAAC,KAAKA,EAAE,IAAI,EAAE,EAAG2E,EAAO,4BAA4B,CAC5F,EAAK,CACD,CAAC,KAAK3E,EAAE,UAAU,EAAE,EAAG2E,EAAO,UAClC,EAAK,CACD,CAAC,MAAM3E,EAAE,eAAe,EAAE,EAAG2E,EAAO,eACxC,EAAK,CACD,CAAC,MAAM3E,EAAE,IAAI,EAAE,EAAG2E,EAAO,IAC7B,EAAK,CACD,CAAC,MAAM3E,EAAE,eAAe,CAAC,EAAE,EAAG2E,EAAO,eAAe,CACxD,EAAK,CACD,CAAC,MAAM3E,EAAE,kBAAkB,CAAC,EAAE,EAAG2E,EAAO,kBAAkB,CAC9D,EAAK,CACD,CAAC,MAAM3E,EAAE,gBAAgB,CAAC,EAAE,EAAG2E,EAAO,gBAAgB,CAC1D,EAAK,CACD,CAAC,MAAM3E,EAAE,iBAAiB,CAAC,EAAE,EAAG2E,EAAO,iBAAiB,CAC5D,EAAK,CACD,CAAC,MAAM3E,EAAE,gBAAgB,CAAC,EAAE,EAAG2E,EAAO,gBAAgB,CAC1D,EAAK,CACD,CAAC,MAAM3E,EAAE,mBAAmB,CAAC,EAAE,EAAG2E,EAAO,mBAAmB,CAChE,EAAK,CACD,CAAC,MAAM3E,EAAE,iBAAiB,CAAC,EAAE,EAAG2E,EAAO,iBAAiB,CAC5D,EAAK,CACD,CAAC,MAAM3E,EAAE,kBAAkB,CAAC,EAAE,EAAG2E,EAAO,kBAAkB,CAC9D,EAAK,CACD,CAAC,MAAM3E,EAAE,uBAAuB,CAAC,EAAE,EAAG2E,EAAO,uBAAuB,CACxE,EAAK,CACD,CAAC,MAAM3E,EAAE,YAAY,EAAE,EAAG2E,EAAO,YACrC,EAAK,CACD,CAAC,MAAM3E,EAAE,YAAY,EAAE,EAAG2E,EAAO,YACrC,EAAK,CACD,CAAC,MAAM3E,EAAE,aAAa,EAAE,EAAG2E,EAAO,aACtC,EAAK,CACD,CAAC,MAAM3E,EAAE,2BAA2B,CAAC,EAAE,EAAG2E,EAAO,2BAA2B,CAChF,EAAK,CACD,CAAC,MAAM3E,EAAE,yBAAyB,CAAC,EAAE,EAAG2E,EAAO,yBAAyB,CAC5E,EAAK,CACD,CAAC,MAAM3E,EAAE,0BAA0B,CAAC,EAAE,EAAG2E,EAAO,0BAA0B,CAC9E,EAAK,CACD,CAAC,MAAM3E,EAAE,wBAAwB,CAAC,EAAE,EAAG2E,EAAO,wBAAwB,CAC1E,EAAK,CACD,CAAC,MAAM3E,EAAE,sBAAsB,CAAC,EAAE,EAAG2E,EAAO,sBAAsB,CACtE,EAAK,CACD,CAAC,MAAM3E,EAAE,uBAAuB,CAAC,EAAE,EAAG2E,EAAO,uBAAuB,CACxE,EAAK,CACD,CAAC,MAAM3E,EAAE,wBAAwB,CAAC,EAAE,EAAG2E,EAAO,wBAAwB,CAC1E,EAAK,CACD,CAAC,MAAM3E,EAAE,sBAAsB,CAAC,EAAE,EAAG2E,EAAO,sBAAsB,CACtE,EAAK,CACD,CAAC,MAAM3E,EAAE,+BAA+B,CAAC,EAAE,EAAG2E,EAAO,+BAA+B,CACxF,EAAK,CACD,CAAC,MAAM3E,EAAE,YAAY,EAAE,EAAG2E,EAAO,YACrC,EAAK,CACD,CAAC,MAAM3E,EAAE,eAAe,EAAE,EAAG2E,EAAO,eACxC,EAAK,CACD,CAAC,MAAM3E,EAAE,oBAAoB,EAAE,EAAG2E,EAAO,oBAC7C,EAAK,CACD,CAAC,MAAM3E,EAAE,8BAA8B,EAAE,EAAG2E,EAAO,8BACvD,EAAK,CACD,CAAC,MAAM3E,EAAE,0BAA0B,EAAE,EAAG2E,EAAO,0BACnD,EAAK,CACD,CAAC,MAAM3E,EAAE,4BAA4B,CAAC,EAAE,EAAG2E,EAAO,4BAA4B,CAClF,EAAK,CACD,CAAC,MAAM3E,EAAE,2BAA2B,CAAC,EAAE,EAAG2E,EAAO,2BAA2B,CAChF,EAAK,CACD,CAAC,MAAM3E,EAAE,eAAe,EAAE,EAAG2E,EAAO,eACxC,EAAK,CACD,CAAC,MAAM3E,EAAE,UAAU,EAAE,EAAG2E,EAAO,UACnC,EAAK,CACD,CAAC,MAAM3E,EAAE,aAAa,EAAE,EAAG2E,EAAO,aACtC,EAAK,CACD,CAAC,MAAM3E,EAAE,QAAQ,EAAE,EAAG2E,EAAO,QACjC,EAAK,CACD,CAAC,MAAM3E,EAAE,cAAc,EAAE,EAAG2E,EAAO,cACvC,EAAK,CACD,CAAC,MAAM3E,EAAE,QAAQ,EAAE,EAAG2E,EAAO,QACjC,EAAK,CACD,CAAC,MAAM3E,EAAE,QAAQ,EAAE,EAAG2E,EAAO,QACjC,EAAK,CACD,CAAC,MAAM3E,EAAE,eAAe,CAAC,EAAE,EAAG2E,EAAO,eAAe,CACxD,EAAK,CACD,CAAC,MAAM3E,EAAE,cAAc,CAAC,EAAE,EAAG2E,EAAO,cAAc,CACtD,EAAK,CACD,CAAC,MAAM3E,EAAE,eAAe,CAAC,EAAE,EAAG2E,EAAO,eAAe,CACxD,EAAK,CACD,CAAC,MAAM3E,EAAE,GAAG,EAAE,EAAG2E,EAAO,GAC5B,EAAK,CACD,CAAC,MAAM3E,EAAE,yBAAyB,EAAE,EAAG2E,EAAO,yBAClD,EAAK,CACD,CAAC,MAAM3E,EAAE,cAAc,EAAE,EAAG2E,EAAO,cACvC,EAAK,CACD,CAAC,MAAM3E,EAAE,2BAA2B,CAAC,EAAE,EAAG2E,EAAO,2BAA2B,CAChF,EAAK,CACD,CAAC,MAAM3E,EAAE,QAAQ,EAAE,EAAG2E,EAAO,QACjC,EAAK,CACD,CAAC,MAAM3E,EAAE,eAAe,EAAE,EAAG2E,EAAO,eACxC,EAAK,CACD,CAAC,MAAM3E,EAAE,oBAAoB,EAAE,EAAG2E,EAAO,oBAC7C,EAAK,CACD,CAAC,MAAM3E,EAAE,0BAA0B,EAAE,EAAG2E,EAAO,0BACnD,EAAK,CACD,CAAC,MAAM3E,EAAE,oCAAoC,EAAE,EAAG2E,EAAO,oCAC7D,EAAK,CACD,CAAC,MAAM3E,EAAE,qBAAqB,EAAE,EAAG2E,EAAO,qBAC9C,EAAK,CACD,CAAC,MAAM3E,EAAE,iCAAiC,CAAC,EAAE,EAAG2E,EAAO,iCAAiC,CAC5F,EAAKA,EAAO,IAAI,CAChB,CAAC,EAAE,CAAC,CACF,MAAOgiC,CACT,IAAM,SACJ,MAAMjuC,EAAS+1B,KACTxE,EAAa/tB,EAAgBxD,EAAQiE,EAAsB,EAC3DiqC,EAAcT,GAAeQ,CAAC,EAC9BE,EAASF,EAAE,MAAM,aACjBG,EAAsBH,EAAE,KAAOA,EAAE,KAAK,QAAQ,WAAW,UAAUv7C,EAAAu7C,EAAE,OAAO,cAAT,YAAAv7C,EAAsB,sBAAuBu7C,EAAE,QAAQ,WAAW,QACrII,IAAmB5jC,EAAAwjC,EAAE,OAAO,cAAT,YAAAxjC,EAAsB,mBAAoB2jC,EAC7DE,EAAoBL,EAAE,KAAO,QAAQA,EAAE,KAAK,QAAQ,WAAW,cAAc,MAAMA,EAAE,KAAK,QAAQ,OAAO,eAAe,IAAMN,GAAMM,EAAE,QAAQ,WAAW,QAASA,EAAE,QAAQ,OAAO,eAAe,EAClMM,GAAgBN,EAAE,MAAQA,GAAG,QAAQ,OAAO,aAC5CO,GAAcP,EAAE,MAAQA,GAAG,QAAQ,OAAO,MAC1CQ,GAAmBR,EAAE,MAAQA,GAAG,QAAQ,OAAO,gBAC/CS,EAAqBT,EAAE,KAAO,QAAQA,EAAE,KAAK,QAAQ,QAAQ,WAAW,MAAMQ,CAAe,IAAMd,GAAMM,EAAE,QAAQ,QAAQ,KAAMQ,CAAe,EAChJE,EAA0BV,EAAE,KAAO,QAAQA,EAAE,KAAK,QAAQ,QAAQ,WAAW;AAAA,kBACnEA,EAAE,KAAK,QAAQ,OAAO,eAAe;AAAA,kBACrCA,EAAE,KAAK,QAAQ,OAAO,YAAY;AAAA,kBAChCN,GAAMM,EAAE,QAAQ,QAAQ,KAAMA,EAAE,QAAQ,OAAO,gBAAkBA,EAAE,QAAQ,OAAO,YAAY,EAC1GW,EAAwBX,EAAE,KAAOO,EAAaK,GAAMR,EAAkBG,EAAYD,CAAY,EAC9FO,EAA2Bb,EAAE,KAAOS,EAAqBG,GAAMR,EAAkBK,EAAoBD,CAAe,EACpHM,EAAgCd,EAAE,KAAOO,EAAaK,GAAMC,EAA0BN,EAAYD,CAAY,EAC9GS,EAAiB,CACrB,gBAAiBN,EACjB,UAAW,CACT,gBAAiBC,EAEjB,uBAAwB,CACtB,gBAAiBD,CAClB,CACF,CACL,EA0eE,OAzekBxiC,EAAS,CACzB,6BAA8B,OAAOiiC,GAAW,SAAW,GAAGA,CAAM,KAAOA,EAC3E,iCAAkCF,EAAE,WAAW,iBAC/C,wCAAyCK,EACzC,iCAAkCF,EAClC,8BAA+BC,EAC/B,4BAA6BH,EAC7B,kCAAmC,EACnC,mBAAoB,MACpB,wBAAyB,IACzB,wBAAyB,IACzB,2BAA4B,OAC5B,sBAAuB,MACvB,+BAAgC,MAChC,6BAA8B,MAC9B,8BAA+B,MAC/B,0BAA2B,MAC3B,gCAAiC,MACjC,gCAAiC,MACjC,mCAAoC,MACpC,KAAM,EACN,UAAW,aACX,SAAU,WACV,YAAa,MACb,YAAa,QACb,YAAAA,EACA,aAAc,kCACd,OAAQD,EAAE,MAAQA,GAAG,QAAQ,KAAK,OACtC,EAAKA,EAAE,WAAW,MAAO,CACrB,QAAS,OACT,OAAQ,OACR,QAAS,OACT,SAAU,EAEV,UAAW,EACX,cAAe,SACf,SAAU,SACV,eAAgB,OAEhB,CAAC,IAAI3mC,EAAE,IAAI,mBAAmBymC,EAAgB,EAAE,EAAG,CACjD,oBAAqB,kCACrB,qBAAsB,iCACvB,EACD,CAAC,KAAKzmC,EAAE,UAAU,EAAE,EAAG,CACrB,OAAQ,MACT,EACD,CAAC,KAAKA,EAAE,UAAU,EAAE,EAAG,CACrB,CAAC,MAAMA,EAAE,iCAAiC,MAAM,EAAG,CACjD,SAAU,oBACX,EACD,wBAAyB,CACvB,CAAC,MAAMA,EAAE,mBAAmB,EAAE,EAAG,CAC/B,MAAO,eACP,WAAY,mBACb,EACD,CAAC,MAAMA,EAAE,QAAQ,EAAE,EAAG,CACpB,MAAO,eACP,WAAY,mBACb,CACF,EACD,CAAC,MAAMA,EAAE,IAAI,EAAE,EAAG,CAChB,SAAU,qBACV,WAAY,SACZ,SAAU,yBACV,SAAU,wBACX,EACD,CAAC,MAAMA,EAAE,oBAAoB,EAAE,EAAG,CAChC,MAAO,OACR,EACD,CAAC,MAAMA,EAAE,oBAAoB,EAAE,EAAG,CAChC,MAAO,OACR,CACF,EACD,CAAC,MAAMA,EAAE,YAAY,QAAQA,EAAE,IAAI,EAAE,EAAG,CACtC,wBAAyB,cACzB,WAAY,KACZ,QAAS,SACT,UAAW,YACZ,EACD,CAAC,MAAMA,EAAE,YAAY,qBAAqBA,EAAE,IAAI,eAAe,EAAG,CAChE,QAAS,SAAS2mC,EAAE,KAAO,QAAQA,EAAE,KAAK,QAAQ,QAAQ,WAAW,UAAYN,GAAMM,EAAE,QAAQ,QAAQ,KAAM,EAAG,CAAC,OACnH,aAAc,EACd,cAAe,EAChB,EACD,CAAC,MAAM3mC,EAAE,YAAY,cAAcA,EAAE,IAAI,QAAQ,EAAG,CAClD,QAAS,SAAS2mC,EAAE,QAAQ,QAAQ,IAAI,MACzC,EACD,CAAC,KAAK3mC,EAAE,iBAAiB,CAAC,0CAA0C,EAAG,CACrE,oBAAqB,6CACtB,EACD,CAAC,KAAKA,EAAE,iBAAiB,CAAC,yBAAyBA,EAAE,oBAAoB,CAAC,EAAE,EAAG,CAC7E,qBAAsB,CAACiqB,EAAW,YAAcA,EAAW,gBAAkB,EAAI,8CAAgD,MAClI,EACD,CAAC,MAAMjqB,EAAE,oBAAoB,QAAQA,EAAE,YAAY,EAAE,EAAG,CACtD,QAAS,EACT,eAAgB,SAChB,WAAY,QACb,EACD,CAAC,MAAMA,EAAE,YAAY,EAAE,EAAG,CACxB,SAAU,WACV,QAAS,OACT,WAAY,QACb,EACD,CAAC,MAAMA,EAAE,oBAAoB,CAAC,EAAE,EAAG,CACjC,SAAU,QACX,EACD,CAAC,MAAMA,EAAE,sBAAsB,CAAC,KAAKA,EAAE,mBAAmB,QAAQA,EAAE,wBAAwB,CAAC,KAAKA,EAAE,mBAAmB,EAAE,EAAG,CAC1H,WAAY,UACZ,MAAO,MACR,EACD,CAAC,MAAMA,EAAE,YAAY,SAASA,EAAE,sBAAsB,CAAC,MAAMA,EAAE,QAAQ,EAAE,EAAG,CAC1E,QAAS,EACT,WAAY2mC,EAAE,YAAY,OAAO,CAAC,SAAS,EAAG,CAC5C,SAAUA,EAAE,YAAY,SAAS,OACzC,CAAO,CACF,EACD,CAAC,MAAM3mC,EAAE,0BAA0B,EAAE,EAAG,CACtC,QAAS,OACT,WAAY,SACZ,SAAU,EACV,KAAM,EACN,WAAY,SACZ,SAAU,SAEV,SAAU,UACX,EACD,CAAC,MAAMA,EAAE,iCAAiC,EAAE,EAAG,CAC7C,SAAU,SACV,QAAS,OACT,WAAY,QACb,EACD,CAAC,MAAMA,EAAE,2BAA2B,CAAC,KAAKA,EAAE,0BAA0B,EAAE,EAAG,CACzE,kBAAmB,MACnB,kBAAmB,QACnB,UAAW,YACZ,EACD,CAAC,MAAMA,EAAE,QAAQ,QAAQA,EAAE,UAAU,EAAE,EAAG,CACxC,SAAU,SACX,EACD,CAAC,MAAMA,EAAE,wBAAwB,CAAC,EAAE,EAAG,CACrC,OAAQ,SACT,EACD,CAAC,MAAMA,EAAE,2BAA2B,CAAC,KAAKA,EAAE,0BAA0B,EAAE,EAAG,CACzE,eAAgB,QACjB,EACD,CAAC,MAAMA,EAAE,0BAA0B,CAAC,KAAKA,EAAE,8BAA8B,QAAQA,EAAE,0BAA0B,CAAC,KAAKA,EAAE,0BAA0B,EAAE,EAAG,CAClJ,cAAe,aAChB,EACD,CAAC,MAAMA,EAAE,2BAA2B,CAAC,KAAKA,EAAE,QAAQ,QAAQA,EAAE,0BAA0B,CAAC,KAAKA,EAAE,QAAQ,EAAE,EAAG,CAC3G,YAAa,OACb,WAAY,EACb,EACD,CAAC,MAAMA,EAAE,0BAA0B,CAAC,KAAKA,EAAE,QAAQ,QAAQA,EAAE,0BAA0B,CAAC,KAAKA,EAAE,QAAQ,EAAE,EAAG,CAC1G,YAAa,OACb,WAAY,GACb,EACD,CAAC,MAAMA,EAAE,sBAAsB,CAAC,EAAE,EAAG,CACnC,iBAAkB2mC,EAAE,MAAQA,GAAG,QAAQ,OAAO,KAC/C,EACD,CAAC,MAAM3mC,EAAE,0BAA0B,CAAC,QAAQA,EAAE,2BAA2B,CAAC,EAAE,EAAG,CAC7E,SAAU,SACV,OAAQ,EAER,WAAY,kCACb,EACD,CAAC,MAAMA,EAAE,eAAe,EAAE,EAAG,CAC3B,WAAY,SACZ,SAAU,WACV,OAAQ,EACR,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,MAAO4mC,CACR,EACD,CAAC,MAAM5mC,EAAE,aAAa,EAAE,EAAG,CACzB,MAAO,0BACR,EACD,wBAAyB,CACvB,CAAC,MAAMA,EAAE,aAAa,QAAQ,EAAGumC,GACjC,CAAC,MAAMvmC,EAAE,YAAY,QAAQ,EAAGwmC,GAChC,CAAC,MAAMxmC,EAAE,YAAY,SAASA,EAAE,sBAAsB,CAAC,YAAYA,EAAE,QAAQ,EAAE,EAAG,CAChF,QAAS,EACV,CACF,EACD,uBAAwB,CACtB,CAAC,MAAMA,EAAE,aAAa,EAAE,EAAGumC,GAC3B,CAAC,MAAMvmC,EAAE,YAAY,EAAE,EAAGwmC,EAC3B,EACD,CAAC,MAAMxmC,EAAE,2BAA2B,CAAC,EAAE,EAAG,CACxC,KAAM,GACP,EACD,CAAC,MAAMA,EAAE,4BAA4B,CAAC,EAAE,EAAG,CACzC,MAAO,GACR,EACD,CAAC,MAAMA,EAAE,4BAA4B,CAAC,EAAE,EAAG,CACzC,OAAQ,aACR,YAAa,OACb,UAAW,CACT,OAAQ2mC,EAAE,MAAQA,GAAG,QAAQ,KAAK,QAElC,uBAAwB,CACtB,MAAOC,CACR,CACF,EACD,CAAC,KAAK5mC,EAAE,2BAA2B,CAAC,EAAE,EAAG,CACvC,OAAQ2mC,EAAE,MAAQA,GAAG,QAAQ,KAAK,OACnC,EACD,QAAS,CACP,cAAe,MAChB,CACF,EACD,CAAC,MAAM3mC,EAAE,aAAa,EAAE,EAAG,CACzB,MAAO,SACR,EACD,CAAC,MAAMA,EAAE,QAAQ,EAAE,EAAG,CACpB,MAAO,EACP,WAAY,SACZ,SAAU,GACV,YAAa,IACb,QAAS,OACT,WAAY,QACb,EACD,CAAC,IAAIA,EAAE,QAAQ,EAAE,EAAG,CAClB,WAAY,UACZ,MAAO,MACR,EACD,CAAC,MAAMA,EAAE,eAAe,EAAE,EAAG,CAC3B,CAAC,MAAMA,EAAE,YAAY,EAAE,EAAG,CACxB,UAAW,aACX,UAAW,0CACZ,CACF,EAED,CAAC,MAAMA,EAAE,mBAAmB,CAAC,KAAKA,EAAE,YAAY;AAAA,WACzCA,EAAE,mBAAmB,CAAC,KAAKA,EAAE,MAAM;AAAA,WACnCA,EAAE,mBAAmB,CAAC,KAAKA,EAAE,eAAe,EAAE,EAAG,CACtD,aAAc,0CACf,EACD,CAAC,MAAMA,EAAE,mBAAmB,CAAC,KAAKA,EAAE,IAAI,EAAE,EAAG,CAC3C,aAAc,iCACf,EAED,CAAC,IAAIA,EAAE,GAAG,EAAE,EAAG,CACb,QAAS,OACT,MAAO,2BACP,YAAa,QAGb,mBAAoB,iCACpB,CAAC,KAAKA,EAAE,mBAAmB,CAAC,EAAE,EAAG,CAC/B,mBAAoB,aACrB,EACD,UAAW,CACT,iBAAkB2mC,EAAE,MAAQA,GAAG,QAAQ,OAAO,MAE9C,uBAAwB,CACtB,gBAAiB,aAClB,CACF,EACD,CAAC,KAAK3mC,EAAE,WAAW,QAAQ,EAAG,CAC5B,gBAAiB,aAClB,EACD,iBAAkB0nC,CACnB,EACD,CAAC,MAAM1nC,EAAE,gBAAgB,CAAC,QAAQA,EAAE,mBAAmB,CAAC,EAAE,EAAG,CAC3D,aAAc,CACZ,WAAY,qCACb,CACF,EAED,CAAC,MAAMA,EAAE,IAAI,EAAE,EAAG,CAChB,OAAQ,gBACR,SAAU,eACV,SAAU,eACV,WAAY,4BAGZ,UAAW,aACX,UAAW,kCACX,SAAU,SACV,WAAY,SACZ,aAAc,WACd,iBAAkB0nC,CACnB,EACD,CAAC,MAAM1nC,EAAE,oCAAoC,CAAC,KAAKA,EAAE,kBAAkB,CAAC,KAAKA,EAAE,IAAI,EAAE,EAAG,CACtF,eAAgB,aACjB,EACD,CAAC,KAAKA,EAAE,4BAA4B,CAAC,KAAKA,EAAE,IAAI,EAAE,EAAG,CACnD,WAAY,MACb,EACD,CAAC,MAAMA,EAAE,oBAAoB,CAAC,OAAOA,EAAE,IAAI,EAAE,EAAG,CAC9C,WAAY,UACZ,WAAY,SACb,EACD,CAAC,MAAMA,EAAE,SAAS,EAAE,EAAG,CACrB,QAAS,EACT,OAAQ,OACT,EACD,CAAC,MAAMA,EAAE,IAAI,IAAIA,EAAE,qBAAqB,CAAC,EAAE,EAAG,CAC5C,OAAQ,SACT,EACD,CAAC,MAAMA,EAAE,IAAI,IAAIA,EAAE,eAAe,CAAC,EAAE,EAAG,CACtC,QAAS,EACT,QAAS,OACT,UAAW2mC,EAAE,QAAQ,CAAC,EACtB,iBAAkBA,EAAE,MAAQA,GAAG,QAAQ,WAAW,MAClD,iBAAkB,CAChB,QAAS,UAAUA,EAAE,MAAQA,GAAG,QAAQ,QAAQ,IAAI,OACpD,cAAe,MAChB,CACF,EACD,CAAC,MAAM3mC,EAAE,cAAc,CAAC,EAAE,EAAG,CAC3B,UAAW2mC,EAAE,QAAQ,CAAC,CACvB,EACD,CAAC,MAAM3mC,EAAE,cAAc,CAAC,KAAKA,EAAE,IAAI,EAAE,EAAG,CACtC,UAAW2mC,EAAE,QAAQ,CAAC,EACtB,iBAAkBA,EAAE,MAAQA,GAAG,QAAQ,WAAW,KACnD,EACD,CAAC,MAAM3mC,EAAE,eAAe,EAAE,EAAG,CAC3B,QAAS,OACT,OAAQ,OACR,MAAO,OACP,WAAY,SACZ,eAAgB,QACjB,EACD,CAAC,MAAMA,EAAE,WAAW,qBAAqB,EAAG,CAC1C,OAAQ2mC,EAAE,MAAQA,GAAG,QAAQ,KAAK,SACnC,EACD,CAAC,MAAM3mC,EAAE,WAAW,sBAAsB,EAAG,CAC3C,OAAQ2mC,EAAE,MAAQA,GAAG,QAAQ,KAAK,QACnC,EACD,CAAC,MAAM3mC,EAAE,WAAW,EAAE,EAAG,CACvB,QAAS,cACT,WAAY,SACZ,QAAS2mC,EAAE,QAAQ,CAAC,CACrB,EACD,CAAC,MAAM3mC,EAAE,cAAc,EAAE,EAAG,CAC1B,QAAS,cACT,KAAM,EACN,WAAY,SACZ,eAAgB,SAChB,SAAU2mC,EAAE,MAAQA,GAAG,QAAQ,OAAO,eACvC,EACD,CAAC,MAAM3mC,EAAE,2BAA2B,CAAC,EAAE,EAAG,CACxC,OAAQ,OACR,QAAS,CACV,EACD,CAAC,MAAMA,EAAE,uBAAuB,EAAE,EAAG,CACnC,QAAS,EACT,QAAS,OACT,WAAY,SACb,EACD,CAAC,IAAIA,EAAE,eAAe,EAAE,EAAG,CACzB,YAAA4mC,CACD,EACD,CAAC,MAAM5mC,EAAE,sBAAsB,CAAC,QAAQA,EAAE,8BAA8B,CAAC,EAAE,EAAG,CAC5E,gBAAiB,iCACjB,gBAAiB,MACjB,gBAAiB,OAClB,EACD,CAAC,MAAMA,EAAE,uBAAuB,CAAC,QAAQA,EAAE,+BAA+B,CAAC,EAAE,EAAG,CAC9E,iBAAkB,iCAClB,iBAAkB,MAClB,iBAAkB,OACnB,EACD,CAAC,MAAMA,EAAE,YAAY,CAAC,EAAE,EAAG,CACzB,QAAS,OACT,WAAY,SACZ,WAAY,SACb,EACD,CAAC,MAAMA,EAAE,gBAAgB,CAAC,EAAE,EAAG,CAC7B,UAAW,OACX,eAAgB,YACjB,EACD,CAAC,MAAMA,EAAE,iBAAiB,CAAC,EAAE,EAAG,CAC9B,UAAW,QACX,eAAgB,UACjB,EACD,CAAC,MAAMA,EAAE,kBAAkB,CAAC,EAAE,EAAG,CAC/B,UAAW,SACX,eAAgB,QACjB,EACD,CAAC,MAAMA,EAAE,kBAAkB,CAAC,QAAQA,EAAE,mBAAmB,CAAC,EAAE,EAAG,CAC7D,SAAU,SACV,OAAQ,EACR,WAAY,kCACb,EACD,CAAC,MAAMA,EAAE,sBAAsB,KAAKA,EAAE,GAAG,EAAE,EAAG,CAC5C,UAAW,CACT,CAAC,MAAMA,EAAE,kBAAkB,CAAC,QAAQA,EAAE,mBAAmB,CAAC,EAAE,EAAG,CAC7D,gBAAiBsnC,CAClB,CACF,EACA,iBAAmB,CAClB,CAAC,MAAMtnC,EAAE,kBAAkB,CAAC,QAAQA,EAAE,mBAAmB,CAAC,EAAE,EAAG,CAC7D,gBAAiBwnC,CAClB,EACD,UAAW,CACT,CAAC,MAAMxnC,EAAE,kBAAkB,CAAC,QAAQA,EAAE,mBAAmB,CAAC,EAAE,EAAG,CAC7D,gBAAiBynC,CAClB,CACF,CACF,CACF,EACD,CAAC,MAAMznC,EAAE,cAAc,EAAE,EAAG,CAC1B,KAAM,WACN,QAAS,cACV,EACD,CAAC,MAAMA,EAAE,YAAY,EAAE,EAAG,CACxB,KAAM,WACN,OAAQ,OACR,QAAS,cACT,WAAY,QACb,EACD,CAAC,MAAMA,EAAE,8BAA8B,EAAE,EAAG,CAC1C,QAAS,OACT,MAAO,OACP,OAAQ,MACT,EACD,CAAC,MAAMA,EAAE,yBAAyB,EAAE,EAAG,CACrC,QAAS,MACV,EACD,CAAC,MAAMA,EAAE,wBAAwB,CAAC,QAAQA,EAAE,eAAe,CAAC,EAAE,EAAG,CAC/D,YAAa2mC,EAAE,MAAQA,GAAG,QAAQ,WAAW,MAC7C,QAAS,SACT,aAAc,kCACd,SAAUA,EAAE,MAAQA,GAAG,QAAQ,OAAO,eACvC,EACD,CAAC,MAAM3mC,EAAE,eAAe,CAAC,EAAE,EAAG,CAC5B,YAAa2mC,EAAE,MAAQA,GAAG,QAAQ,WAAW,MAC7C,QAAS,SACT,aAAc,kCACd,SAAUA,EAAE,MAAQA,GAAG,QAAQ,OAAO,gBACtC,CAAC,MAAM3mC,EAAE,yBAAyB,EAAE,EAAG,CACrC,QAAS,MACV,CACF,EACD,CAAC,MAAMA,EAAE,oBAAoB,EAAE,EAAG,CAChC,QAAS,OACT,WAAY,SACZ,MAAO,MACR,EACD,CAAC,MAAMA,EAAE,0BAA0B,EAAE,EAAG,CACtC,KAAM,WACN,UAAW,UACX,YAAa2mC,EAAE,QAAQ,CAAC,CACzB,EACD,CAAC,MAAM3mC,EAAE,oCAAoC,EAAE,EAAG,CAChD,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,OAAQ,MACT,EACD,CAAC,MAAMA,EAAE,oBAAoB,EAAE,EAAG,CAChC,QAAS,OACT,WAAY,SACZ,MAAO,MACR,EACD,CAAC,MAAMA,EAAE,0BAA0B,EAAE,EAAG,CACtC,KAAM,WACN,UAAW,UACX,YAAa2mC,EAAE,QAAQ,CAAC,CACzB,EAED,CAAC,IAAI3mC,EAAE,eAAe,EAAE,EAAG,CACzB,SAAU,mEACV,UAAW,UACX,CAAC,KAAKA,EAAE,4BAA4B,CAAC,EAAE,EAAG,CACxC,UAAW,iCACZ,EACD,CAAC,KAAKA,EAAE,8BAA8B,CAAC,EAAE,EAAG,CAC1C,gBAAiB,mCACjB,SAAU,SACV,MAAO,CACR,CACF,EACD,CAAC,MAAMA,EAAE,MAAM,EAAE,EAAG,CAClB,KAAM,CACP,EACD,CAAC,MAAMA,EAAE,mBAAmB,CAAC,EAAE,EAAG,CAChC,UAAW,0CACZ,EAED,CAAC,MAAMA,EAAE,iCAAiC,CAAC,EAAE,EAAG,CAC9C,CAAC,MAAMA,EAAE,sBAAsB,QAAQA,EAAE,qBAAqB,CAAC,QAAQA,EAAE,UAAU,EAAE,EAAG,CACtF,QAAS,MACV,CACF,CACL,CAAG,CAEH,CAAC,EAMD,SAASunC,GAAMI,EAAYC,EAASC,EAASC,EAAQ,EAAG,CACtD,MAAM10C,EAAI,CAACpH,EAAGO,IAAM,KAAK,OAAOP,IAAM,EAAI87C,IAAU,EAAID,GAAWt7C,IAAM,EAAIu7C,GAASD,IAAYC,CAAK,EACjGC,EAAkBC,GAAeL,CAAU,EAC3CM,EAAeD,GAAeJ,CAAO,EACrCM,EAAM,CAAC90C,EAAE20C,EAAgB,OAAO,CAAC,EAAGE,EAAa,OAAO,CAAC,CAAC,EAAG70C,EAAE20C,EAAgB,OAAO,CAAC,EAAGE,EAAa,OAAO,CAAC,CAAC,EAAG70C,EAAE20C,EAAgB,OAAO,CAAC,EAAGE,EAAa,OAAO,CAAC,CAAC,CAAC,EAC7K,OAAOE,GAAe,CACpB,KAAM,MACN,OAAQD,CACZ,CAAG,CACH,CCnrBA,MAAM9jC,GAAY,CAAC,WAAW,EAYxBC,GAAoB,CAACC,EAAY7C,IAAY,CAC3C,KAAA,CACJ,WAAA2mC,EACA,QAAAt6C,EACA,uBAAAu6C,CACE,EAAA/jC,EACEyoB,EAAQ,CACZ,KAAM,CAAC,OAAQqb,GAAc,aAAc,gBAAgB5F,GAAW/gC,CAAO,CAAC,GAAI6C,EAAW,MAAM,UAAY,MAAQ,kBAAmB,kBAAmB+jC,GAA0B,oBAAoB,CAAA,EAEtM,OAAA9jC,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,EACMw6C,GAA8BxjC,EAAAA,WAAW,SAAkBxb,EAAO6F,EAAK,CAC3E,MAAM4V,EAAYhM,IACZ,CACF,UAAAwX,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAAS+1B,KACThtB,EAAUvF,EAAgBxD,EAAQ6I,EAAmB,EACrDgnC,EAAiB7vC,EAAO,QAAQ,eAChC2hB,EAAYC,GAAWiuB,EAAgBp5C,CAAG,EAC1CmV,EAAaS,EACbjX,EAAUuW,GAAkBC,EAAY7C,CAAO,EAG/C,CAAC+mC,EAAcC,CAAe,EAAI9tC,WAAe,EAAK,EAI5D,OAHAmL,GAAkB,IAAM,CACtB2iC,EAAgB,EAAI,CACtB,EAAG,CAAE,CAAA,EACAD,EAGeziC,EAAA,IAAK2gC,GAAgB9hC,EAAS,CAChD,IAAKyV,EACL,UAAWxJ,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,WAAAwW,CAAA,EACCpE,CAAK,CAAC,EANA,IAOX,CAAC,ECjDKkE,GAAY,CAAC,WAAW,EASxBC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,kBAAmB,iBAAiB,CAAA,EAEhBjL,GAAyBxL,CAAO,CAC/D,EACM46C,GAA0BjkC,GAAO,MAAO,CAC5C,KAAM,cACN,KAAM,kBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,eAC/C,CAAC,EAAE,CACD,QAAS,OACT,eAAgB,gBAChB,WAAY,SACZ,UAAW,GACX,UAAW,WACb,CAAC,EACKgkC,GAAyC7jC,EAAAA,WAAW,SAA6Bxb,EAAO6F,EAAK,CAC3F,KAAA,CACF,UAAAohB,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACvB,OAAAgB,EAAA,IAAK2iC,GAAyB9jC,EAAS,CACzD,IAAAzV,EACA,UAAW0hB,GAAK/iB,EAAQ,KAAMyiB,CAAS,EACvC,WAAYxL,CAAA,EACX7E,CAAK,CAAC,CACX,CAAC,ECzCKkE,GAAY,CAAC,WAAW,EASxBC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,SAAS,CAAA,EAEWjL,GAAyBxL,CAAO,CAC/D,EACM86C,GAAkBnkC,GAAO,MAAO,CACpC,KAAM,cACN,KAAM,UACN,kBAAmB,CAAC9I,EAAGgJ,IAAWA,EAAO,OAC3C,CAAC,EAAE,CACD,MAAO,OACP,OAAQ,OACR,QAAS,OACT,UAAW,SACX,WAAY,SACZ,eAAgB,SAChB,gBAAiB,4CACnB,CAAC,EACKkkC,GAAiC/jC,EAAAA,WAAW,SAAqBxb,EAAO6F,EAAK,CAC3E,KAAA,CACF,UAAAohB,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACvB,OAAAgB,EAAA,IAAK6iC,GAAiBhkC,EAAS,CACjD,IAAAzV,EACA,UAAW0hB,GAAK/iB,EAAQ,KAAMyiB,CAAS,EACvC,WAAYxL,CAAA,EACX7E,CAAK,CAAC,CACX,CAAC,EC3CKkE,GAAY,CAAC,YAAa,UAAU,EASpCC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,kBAAkB,CAAA,EAEEjL,GAAyBxL,CAAO,CAC/D,EACMg7C,GAA2BrkC,GAAO,MAAO,CAC7C,KAAM,cACN,KAAM,mBACN,kBAAmB,CAAC9I,EAAGgJ,IAAWA,EAAO,gBAC3C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,QAAS,OACT,WAAY,SACZ,SAAU,OACV,IAAKA,EAAM,QAAQ,CAAC,EACpB,QAASA,EAAM,QAAQ,GAAK,GAAK,CAAC,CACpC,EAAE,EACIu7C,GAA0CjkC,EAAAA,WAAW,SAA8Bxb,EAAO6F,EAAK,CAC7F,KAAA,CACF,UAAAohB,EACA,SAAA5iB,CACE,EAAArE,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EAC3C,OAAKpX,EAGeoY,EAAA,IAAK+iC,GAA0BlkC,EAAS,CAC1D,IAAAzV,EACA,UAAW0hB,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,WAAYiX,GACX7E,EAAO,CACR,SAAAvS,CACD,CAAA,CAAC,EARO,IASX,CAAC,EC5CK0W,GAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAxW,EACA,KAAAqiB,CACD,EAAG7L,EAKJ,OAAOC,GAJO,CACZ,KAAM,CAAC,WAAY4L,GAAQ,UAAU,EACrC,OAAQ,CAAC,gBAAgB,CAC7B,EAC+B7W,GAAyBxL,CAAO,CAC/D,EACak7C,GAAoCnwB,EAAU,KAACvvB,GAAS,SACnE,KAAM,CACJ,OAAA0b,EACA,KAAAmL,EACA,aAAA84B,EACA,mBAAAC,EACA,cAAAC,CACD,EAAG7/C,EACEoP,EAASD,KACTsM,EAAYhM,IACZuL,EAAaM,EAAS,CAAE,EAAEtb,EAAO,CACrC,QAASyb,EAAU,OACvB,CAAG,EACKjX,EAAUuW,GAAkBC,CAAU,EACtC8kC,EAAsB1jC,EAAiB,YAACrX,GAAS,CACrDA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EACrBqK,EAAO,QAAQ,iBAAiBsM,EAAO,KAAK,CAC7C,EAAE,CAACtM,EAAQsM,EAAO,KAAK,CAAC,EACzB,OAAoBe,EAAAA,IAAK,MAAO,CAC9B,UAAWjY,EAAQ,KACnB,SAAuBiY,EAAAA,IAAKhB,EAAU,MAAM,YAAaH,EAAS,CAChE,MAAOlM,EAAO,QAAQ,cAAc,iBAAiB,EACrD,WAAY,GAClB,GAAOtN,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,YAAa,CACnC,SAAuB2a,EAAAA,IAAKhB,EAAU,MAAM,eAAgBH,EAAS,CACnE,IAAKukC,EACL,SAAU,GACV,UAAWr7C,EAAQ,OACnB,aAAc4K,EAAO,QAAQ,cAAc,iBAAiB,EAC5D,KAAM,QACN,QAAS0wC,EACT,gBAAiB,OACjB,gBAAiBj5B,EACjB,gBAAiBA,EAAO84B,EAAe,OACvC,GAAIC,CACZ,GAAS/lC,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,eAAgB,CACtC,SAAuB4C,EAAI,IAAChB,EAAU,MAAM,eAAgB,CAC1D,SAAU,OACpB,CAAS,CACT,CAAO,CAAC,CACR,CAAK,CAAC,CACN,CAAG,CACH,CAAC,ECtDD,SAASskC,GAAqB,CAC5B,aAAAJ,EACA,mBAAAC,EACA,iBAAAI,EACA,sBAAAC,EACA,MAAAnnC,EACA,KAAA+N,EACA,OAAAC,EACA,SAAAI,CACF,EAAG,CACD,MAAM9X,EAASD,KACTuM,EAAStM,EAAO,QAAQ,UAAU0J,CAAK,EACvCkQ,EAAW0b,GAA0B3/B,GAAA,CACrCA,IAEFA,EAAM,gBAAgB,EAClB+hB,GAAA,MAAAA,EAAQ,SAAS/hB,EAAM,UAI7BqK,EAAO,QAAQ,gBAAe,CAC/B,EACG,MAAA,CAAC0X,GAAU,CAACpL,EACP,WAEgBkL,GAAU,CACjC,UAAW,UAAUlL,EAAO,QAAU,QAAU,QAAU,KAAK,GAC/D,KAAAmL,EACA,OAAAC,EACA,QAASkC,EACT,SAAA9B,EACA,SAA4BzK,EAAAA,IAAAujC,EAAkB1kC,EAAS,CACrD,OAAAI,EACA,SAAAsN,EACA,KAAAnC,EACA,GAAI84B,EACJ,WAAYC,CACd,EAAGK,CAAqB,CAAC,CAAA,CAC1B,CACH,CC5CA,MAAMnlC,GAAY,CAAC,WAAW,EAUxBC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,mBAAmB,CAAA,EAECjL,GAAyBxL,CAAO,CAC/D,EACM07C,GAA4B/kC,GAAO,MAAO,CAC9C,KAAM,cACN,KAAM,oBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,iBAC/C,CAAC,EAAE,CACD,aAAc,WACd,SAAU,SACV,WAAY,SACZ,WAAY,qCACd,CAAC,EACK8kC,GAA4C3kC,EAAAA,WAAW,SAAgCxb,EAAO6F,EAAK,CACjG,KAAA,CACF,UAAAohB,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACvB,OAAAgB,EAAA,IAAKyjC,GAA2B5kC,EAAS,CAC3D,IAAAzV,EACA,UAAW0hB,GAAK/iB,EAAQ,KAAMyiB,CAAS,EACvC,WAAYxL,CAAA,EACX7E,CAAK,CAAC,CACX,CAAC,EAED,SAASwpC,GAAsBpgD,EAAO,OAC9B,KAAA,CACJ,MAAAowB,EACA,YAAAxiB,CACE,EAAA5N,EACEyb,EAAYhM,IACZ4wC,EAAW9wC,SAAa,IAAI,EAC5B,CAAC+wC,EAASC,CAAU,EAAIlvC,WAAe,EAAE,EACzCmvC,EAAkBpkC,EAAAA,YAAkB,IAAM,CAC1C,GAAA,CAACxO,IAAeyyC,GAAA,MAAAA,EAAU,SAAS,CAC/B,MAAAI,EAAS7L,GAAYyL,EAAS,OAAO,EAEzCE,EADEE,EACSrwB,EAEA,EAFK,CAIpB,CAAA,EACC,CAACxiB,EAAawiB,CAAK,CAAC,EACvB,OAAyB3T,EAAA,IAAAhB,EAAU,MAAM,YAAaH,EAAS,CAC7D,MAAO1N,GAAe0yC,CAAA,GACrBx+C,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,YAAa,CACnC,eAA4Bq+C,GAAwB,CAClD,YAAaK,EACb,IAAKH,EACL,SAAUjwB,CAAA,CACX,CACF,CAAA,CAAC,CACJ,CCtEA,MAAMtV,GAAY,CAAC,YAAa,WAAY,SAAU,MAAM,EAO5D,IAAI4lC,YAAwDA,EAAgC,CAC1FA,OAAAA,EAA+B,KAAU,OACzCA,EAA+B,MAAW,QACnCA,CACT,EAAEA,IAAkC,CAAA,CAAE,EACtC,MAAM3lC,GAAkCC,GAAA,CAChC,KAAA,CACJ,UAAA2lC,EACA,SAAAC,EACA,QAAAp8C,EACA,KAAAq8C,CACE,EAAA7lC,EACEyoB,EAAQ,CACZ,KAAM,CAAC,kBAAmBkd,GAAa,6BAA8BC,GAAY,4BAA6BC,GAAQ,wBAAwB3H,GAAW2H,CAAI,CAAC,EAAE,EAChK,KAAM,CAAC,eAAe,CAAA,EAEjB,OAAA5lC,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,EACA,SAASs8C,GAA6B9gD,EAAO,CACrC,KAAA,CACF,OAAA+uC,EACA,KAAA8R,EAAOH,GAA+B,KACpC,EAAA1gD,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZuL,EAAaM,EAAS,CAAC,EAAGtb,EAAO,CACrC,KAAA6gD,EACA,QAASplC,EAAU,OAAA,CACpB,EACKjX,EAAUuW,GAAkBC,CAAU,EACtC+lC,EAAY3kC,cAA2BrX,GAAA,CAC3CA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,CACxB,EAAG,CAAE,CAAA,EACL,OAGE0X,EAAA,IAAK,MAAOnB,EAAS,CACnB,UAAW9W,EAAQ,KACnB,MAAO,CACL,UAAWuqC,EACX,QAAStzB,EAAU,yBAA2B,EAAI,CACpD,GACC7E,EAAO,CACR,QAASmqC,EACT,SAAuBtkC,EAAA,IAAKhB,EAAU,MAAM,iBAAkB,CAC5D,UAAWjX,EAAQ,IAAA,CACpB,CAAA,CACF,CAAC,CAEN,CACA,MAAMw8C,GAA+CzxB,EAAA,KAAKuxB,EAA4B,EC1DhFhmC,GAAY,CAAC,UAAW,iBAAkB,WAAY,SAAU,aAAc,gBAAiB,WAAY,WAAY,gBAAiB,cAAe,kBAAmB,cAAe,YAAa,QAAS,uBAAwB,aAAc,yBAA0B,kBAAmB,QAAS,YAAa,0BAA2B,6BAA8B,OAAO,EASxXmmC,GAA2CzlC,EAAAA,WAAiB,SAAqCxb,EAAO6F,EAAK,CACjH,KAAM,CACF,QAAArB,EACA,SAAAyxC,EACA,OAAAlH,EACA,WAAAmS,EACA,cAAAC,EACA,SAAAxlC,EACA,SAAAsD,EACA,cAAAmiC,EACA,YAAAC,EACA,gBAAAC,EACA,YAAA1zC,EACA,MAAAE,EACA,qBAAAyzC,EAAuB,KACvB,WAAAC,EAAa,KACb,uBAAAC,EAAyB,KACzB,gBAAAC,EACA,MAAAtxB,EACA,UAAAuwB,EACA,wBAAAgB,EACA,2BAAAC,EACA,MAAAtd,CACN,EAAQtkC,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAAS+1B,KACT1pB,EAAYhM,IACZoyC,EAAgBtyC,SAAa,IAAI,EACjCwhB,EAAYC,GAAW6wB,EAAeh8C,CAAG,EAC/C,IAAIi8C,EAAW,OACf,OAAIX,GAAiB,OACnBW,EAAWX,IAAkB,MAAQ,YAAc,cAErDv4B,EAAAA,gBAAsB,IAAM,OAC1B,MAAMinB,EAAkBzgC,EAAO,QAAQ,MAAM,WAC7C,GAAIuM,GAAY,CAACk0B,EAAgB,KAAM,CAErC,MAAMsL,EADmB0G,EAAc,QAAQ,cAAc,gBAAgB,GAClCA,EAAc,QACzD1G,GAAA,MAAAA,EAAgB,SACZr5C,EAAAsN,EAAO,QAAQ,4BAAf,MAAAtN,EAA0C,UAC5CsN,EAAO,QAAQ,0BAA0B,QAAQ,WAAa,EAEjE,CACL,EAAK,CAACA,EAAQuM,CAAQ,CAAC,EACDgO,EAAK,KAAC,MAAOrO,EAAS,CACxC,IAAKyV,EACL,UAAWxJ,GAAK/iB,EAAQ,KAAMk9C,CAAe,EAC7C,MAAOpmC,EAAS,CAAE,EAAEgpB,EAAO,CACzB,OAAAyK,EACA,MAAAjhC,EACA,SAAUA,EACV,SAAUA,CAChB,CAAK,EACD,KAAM,eACN,SAAUmR,EACV,gBAAiBg3B,EAAW,EAC5B,YAAa6L,EACb,aAAcR,GAAmB,KAAOlxB,EAAQ,MACjD,EAAExZ,EAAO,CACR,SAAU,CAAc+S,EAAAA,KAAM,MAAOrO,EAAS,CAC5C,UAAW9W,EAAQ,mBACnB,UAAW68C,EACX,KAAM,cACP,EAAEM,EAAyB,CAC1B,SAAU,CAAch4B,EAAK,KAAC,MAAO,CACnC,UAAWnlB,EAAQ,eACnB,KAAM,eACN,SAAU,CAAciY,EAAI,IAAC,MAAO,CAClC,UAAWjY,EAAQ,sBACnB,SAAU88C,IAAoB,OAAYA,EAA+B7kC,EAAAA,IAAK2jC,GAAuB,CACnG,MAAOhwB,EACP,YAAaxiB,EACb,YAAaE,CACzB,CAAW,CACF,CAAA,EAAG2zC,CAAsB,CAC3B,CAAA,EAAGF,CAAoB,CACzB,CAAA,CAAC,EAAgB9kC,EAAAA,IAAKukC,GAA2B1lC,EAAS,CACzD,UAAW,CAACG,EAAU,qBAAuB,CAAC,CAACklC,EAC/C,SAAUO,EACV,OAAQnS,EACR,KAAMqS,CACZ,EAAOQ,CAA0B,CAAC,EAAGJ,CAAU,CAC5C,CAAA,CAAC,CACJ,CAAC,EC/EKzmC,GAAkCC,GAAA,CAChC,KAAA,CACJ,OAAAU,EACA,QAAAlX,EACA,WAAAu9C,EACA,cAAAZ,EACA,gBAAApI,EACA,eAAAD,EACA,mBAAAkJ,EACA,eAAA7J,CACE,EAAAn9B,EACEinC,EAAiBd,GAAiB,KAClCe,EAAmBF,GAAsB,MAAQA,EAAqB,EAEtEG,EAAkBzmC,EAAO,OAAS,SAClC+nB,EAAQ,CACZ,KAAM,CAAC,eAAgB/nB,EAAO,cAAgB,QAAU,0BAA2BA,EAAO,cAAgB,UAAY,4BAA6BA,EAAO,cAAgB,SAAW,2BAA4BA,EAAO,UAAY,yBAA0BqmC,GAAc,uBAAwBE,GAAkB,uBAAwBC,GAAoB,yBAA0BC,GAAmB,wBAAyB,kBAAmBpJ,GAAmB,gCAAiCD,GAAkB,+BAAgCX,IAAmB,QAAU,2BAA4BA,IAAmB,SAAW,2BAA2B,EACnpB,mBAAoB,CAAC,gCAAgC,EACrD,eAAgB,CAAC,4BAA4B,EAC7C,sBAAuB,CAAC,mCAAmC,CAAA,EAEtD,OAAAl9B,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,EACA,SAAS49C,GAAqBpiD,EAAO,aAC7B,KAAA,CACJ,OAAA0b,EACA,eAAA2mC,EACA,SAAApM,EACA,aAAA5R,EACA,WAAA6c,EACA,OAAAoB,EACA,cAAAnB,EACA,UAAAoB,EACA,mBAAAP,EACA,SAAArmC,EACA,SAAAsD,EACA,eAAAujC,EACA,cAAApB,EACA,MAAA9c,EACA,eAAA6T,EACA,eAAAC,EACA,cAAAC,EACA,cAAAE,CACE,EAAAv4C,EACEoP,EAAS+1B,KACT1pB,EAAYhM,IACZoyC,EAAgBtyC,SAAa,IAAI,EACjCowC,EAAe9/B,KACf+/B,EAAqB//B,KACrBggC,EAAgBtwC,SAAa,IAAI,EACjC,CAACkzC,EAAoBC,CAAqB,EAAIrxC,WAAegxC,CAAc,EAC3EhB,EAAchyB,EAAAA,QAAc,IAAM,CAAC5T,EAAU,sBAAwB,CAAC+mC,GAAkB,CAAC9mC,EAAO,eAAgB,CAACD,EAAU,qBAAsB+mC,EAAgB9mC,EAAO,cAAc,CAAC,EACzL,IAAA4lC,EACA5lC,EAAO,eACT4lC,EAAkB5lC,EAAO,aAAatM,EAAO,QAAQ,sBAAsBsM,EAAO,KAAK,CAAC,GAEpF,MAAAo9B,EAAiBL,GAAyBN,EAAgBC,CAAc,EACxEW,EAAkBb,GAA0BC,EAAgBC,EAAgBC,EAAe58B,EAAU,uBAAwB88B,CAAa,EAC1Iv9B,EAAaM,EAAS,CAAC,EAAGtb,EAAO,CACrC,QAASyb,EAAU,QACnB,gBAAAs9B,EACA,eAAAD,CAAA,CACD,EACKt0C,EAAUuW,GAAkBC,CAAU,EACtC6/B,EAAUz+B,EAAkB,YAAAnL,IAAsBlM,IAAA,CAGlDywC,GAAsBzwC,EAAK,GAGxBqK,EAAA,QAAQ,aAAa6B,GAAW7B,EAAO,QAAQ,sBAAsBsM,EAAO,KAAK,EAAG3W,EAAK,CAC/F,EAAA,CAACqK,EAAQsM,EAAO,KAAK,CAAC,EACnBinC,EAAsBtzB,EAAAA,QAAc,KAAO,CAC/C,QAASwrB,EAAQ,mBAAmB,EACpC,cAAeA,EAAQ,yBAAyB,EAChD,YAAaA,EAAQ,kBAAkB,EAEvC,WAAYA,EAAQ,iBAAiB,EAErC,aAAcA,EAAQ,mBAAmB,EAEzC,aAAcA,EAAQ,mBAAmB,EAEzC,UAAWA,EAAQ,qBAAqB,EACxC,QAASA,EAAQ,mBAAmB,EACpC,OAAQA,EAAQ,kBAAkB,CAAA,GAChC,CAACA,CAAO,CAAC,EACPc,EAAyBtsB,UAAc,IAAMgyB,EAAc,CAC/D,YAAaxG,EAAQ,uBAAuB,EAC5C,YAAaA,EAAQ,uBAAuB,EAC5C,WAAYA,EAAQ,sBAAsB,EAC1C,UAAWA,EAAQ,qBAAqB,GACtC,GAAI,CAACwG,EAAaxG,CAAO,CAAC,EACxB+G,EAA6BvyB,EAAAA,QAAc,KAAO,CACtD,YAAawrB,EAAQ,0BAA0B,EAC/C,cAAeA,EAAQ,4BAA4B,CAAA,GACjD,CAACA,CAAO,CAAC,EACbjpC,EAAAA,UAAgB,IAAM,CACf6wC,GACHC,EAAsBL,CAAc,CACtC,EACC,CAACI,EAAoBJ,CAAc,CAAC,EACjC,MAAAj7B,EAAehL,EAAAA,YAAkB,IAAM,CAC3CsmC,EAAsB,EAAK,CAC7B,EAAG,CAAE,CAAA,EACCnB,EAAuB,CAAC9lC,EAAU,mBAAqB,CAACC,EAAO,yBAAuCgkC,GAAsB,CAChI,OAAAhkC,EACA,aAAAikC,EACA,mBAAAC,EACA,KAAM6C,EACN,cAAA5C,CAAA,CACD,EACK2B,QAA+BzB,GAAsB,CACzD,aAAAJ,EACA,mBAAAC,EACA,MAAOlkC,EAAO,MACd,KAAM2mC,EACN,OAAQxC,EAAc,QACtB,iBAAkBpkC,EAAU,MAAM,WAClC,uBAAuB3Z,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,WAC5C,SAAUslB,CAAA,CACX,EACKnJ,EAAevC,EAAO,cAAgBD,EAAU,aAChDmnC,GAAgBlnC,EAAO,UAAYylC,GAAiB,OAAS,CAACzlC,EAAO,eAAiB,CAACD,EAAU,qBACjGgmC,EAA4C93B,EAAA,KAAAk5B,WAAgB,CAChE,SAAU,CAAC,CAACpnC,EAAU,qBAAyCgB,EAAA,IAAAhB,EAAU,MAAM,6BAA8BH,EAAS,CACpH,MAAOI,EAAO,MACd,QAASsmC,CACX,GAAGnoC,GAAA4B,EAAU,YAAV,YAAA5B,GAAqB,4BAA4B,CAAC,EAAG+oC,GAAkCnmC,EAAA,IAAAhB,EAAU,MAAM,qBAAsBH,EAAS,CACvI,MAAOI,EAAO,MACd,UAAWylC,EACX,MAAOoB,EACP,aAAAtkC,EACA,SAAU,CAACvC,EAAO,QACjB,GAAA2U,GAAA5U,EAAU,YAAV,YAAA4U,GAAqB,oBAAoB,CAAC,CAAC,CAAA,CAC/C,EACDzH,EAAAA,gBAAsB,IAAM,QACpB,MAAAinB,GAAkBzgC,EAAO,QAAQ,MAAM,WACzC,GAAAuM,GAAY,CAACk0B,GAAgB,KAAM,CAE/B,MAAAsL,GADmB0G,EAAc,QAAQ,cAAc,gBAAgB,GAClCA,EAAc,QACzD1G,IAAA,MAAAA,GAAgB,SACZr5C,GAAAsN,EAAO,QAAQ,4BAAf,MAAAtN,GAA0C,UACrCsN,EAAA,QAAQ,0BAA0B,QAAQ,WAAa,EAElE,CAAA,EACC,CAACA,EAAQuM,CAAQ,CAAC,EACrB,MAAM+lC,EAAkB,OAAOhmC,EAAO,iBAAoB,WAAaA,EAAO,gBAAgB,CAC5F,MAAOA,EAAO,MACd,OAAAA,CAAA,CACD,EAAIA,EAAO,gBACN0U,EAAQ1U,EAAO,YAAcA,EAAO,MACtB,OAAAe,EAAA,IAAKwkC,GAA6B3lC,EAAS,CAC7D,IAAKumC,EACL,QAAAr9C,EACA,eAAA69C,EACA,SAAApM,EACA,OAAQ5R,EACR,WAAA6c,EACA,cAAAC,EACA,SAAAxlC,EACA,SAAAsD,EACA,cAAAmiC,EACA,YAAAC,EACA,gBAAAC,EACA,YAAa5lC,EAAO,YACpB,UAAWA,EAAO,MAClB,MAAOA,EAAO,cACd,qBAAA6lC,EACA,uBAAAE,EACA,gBAAiBl6B,GAAKm6B,EAAiBY,GAAUnyC,EAAY,oBAAoB,CAAC,EAClF,MAAAigB,EACA,UAAW,CAAC3U,EAAU,qBAAuB,CAAC,CAACC,EAAO,UACtD,aAAcA,EAAO,MACrB,WAAA8lC,EACA,wBAAyB7F,EACzB,2BAAAiG,EACA,MAAAtd,CAAA,EACCqe,CAAmB,CAAC,CACzB,CA0BA,MAAM5Q,GAAW3O,GAASgf,EAAoB,EC1NxCtnC,GAAY,CAAC,WAAW,EAQxBC,GAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAxW,CACD,EAAGwW,EAIJ,OAAOC,GAHO,CACZ,KAAM,CAAC,qBAAqB,CAChC,EAC+BjL,GAAyBxL,CAAO,CAC/D,EACMs+C,GAA8B3nC,GAAO,MAAO,CAChD,KAAM,cACN,KAAM,sBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,mBAC/C,CAAC,EAAE,KAAO,CACR,QAAS,OACT,WAAY,SACZ,MAAO,CACT,EAAE,EACW0nC,GAAuCvnC,EAAAA,WAAiB,SAAiCxb,EAAO6F,EAAK,CAChH,KAAM,CACF,UAAAohB,CACN,EAAQjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EAC3C,OAAoBgB,EAAI,IAACqmC,GAA6BxnC,EAAS,CAC7D,IAAKzV,EACL,UAAW0hB,GAAK/iB,EAAQ,KAAMyiB,CAAS,EACvC,WAAYxL,CAChB,EAAK7E,CAAK,CAAC,CACX,CAAC,ECtCKkE,GAAY,CAAC,YAAa,QAAS,eAAgB,UAAU,EAU7DC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,UAAU,CAAA,EAEUjL,GAAyBxL,CAAO,CAC/D,EACA,SAASw+C,GAAQC,EAAOjmC,EAAWiK,EAAWhJ,EAAc,CACtD,IAAAmR,EACJ,MAAM8zB,EAAY,CAAA,EAClB,OAAIlmC,IAAc,MAChBoS,EAAO6zB,EAAM,0BACJjmC,IAAc,OACvBoS,EAAO6zB,EAAM,4BAEb7zB,EAAO6zB,EAAM,mBACbC,EAAU,aAAejlC,GAEpBmR,EAAyB3S,EAAAA,IAAA2S,EAAM9T,EAAS,CAC7C,SAAU,QACV,UAAA2L,CAAA,EACCi8B,CAAS,CAAC,EAAI,IACnB,CACA,SAASC,GAA4BnjD,EAAO,OACpC,KAAA,CACF,UAAAgd,EACA,MAAAO,EACA,aAAAU,EACA,SAAAiB,CACE,EAAAlf,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTsM,EAAYhM,IACZuL,EAAaM,EAAS,CAAC,EAAGtb,EAAO,CACrC,QAASyb,EAAU,OAAA,CACpB,EACKjX,EAAUuW,GAAkBC,CAAU,EACtCooC,EAAcJ,GAAQvnC,EAAU,MAAOuB,EAAWxY,EAAQ,KAAMyZ,CAAY,EAClF,GAAI,CAACmlC,EACI,OAAA,KAET,MAAMC,EAA0B5mC,EAAAA,IAAKhB,EAAU,MAAM,eAAgBH,EAAS,CAC5E,SAAU,GACV,aAAclM,EAAO,QAAQ,cAAc,2BAA2B,EACtE,MAAOA,EAAO,QAAQ,cAAc,2BAA2B,EAC/D,KAAM,QACN,SAAA8P,CACC,GAAApd,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,eAAgB8U,EAAO,CAC7C,SAAUwsC,CACX,CAAA,CAAC,EACF,cAA0BL,GAAyB,CACjD,SAAU,CAACxlC,GAAS,YAA0B+lC,GAAO,CACnD,aAAc/lC,EACd,MAAO,UACP,QAAS,WACT,SAAU8lC,CAAA,CACX,EAAG9lC,GAAS,MAAQ8lC,CAAU,CAAA,CAChC,CACH,CACA,MAAME,GAA8Ch0B,EAAA,KAAK4zB,EAA2B,EC5D9EpoC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,YAAY,CAAA,EAEQjL,GAAyBxL,CAAO,CAC/D,EACA,SAASg/C,GAAiCxjD,EAAO,SACzC,KAAA,CACJ,QAAAyjD,EACA,MAAA3qC,EACA,QAAAsQ,CACE,EAAAppB,EACEoP,EAASD,KACTsM,EAAYhM,IACZuL,EAAaM,EAAS,CAAC,EAAGtb,EAAO,CACrC,QAASyb,EAAU,OAAA,CACpB,EACKjX,EAAUuW,GAAkBC,CAAU,EACtC0oC,EAAkB9wC,EAAgBxD,EAAQojC,EAAgC,EAC1EziB,EAAUlQ,KACV8jC,EAAU9jC,KACV+jC,EAAexnC,cAA2BrX,GAAA,CAC9CA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EAChB,KAAA,CACJ,KAAA8hB,EACA,iBAAAg9B,CACE,EAAArR,GAAiCpjC,EAAO,QAAQ,KAAK,EACrDyX,GAAQg9B,IAAqBpR,GAA0B,QACzDrjC,EAAO,QAAQ,kBAEfA,EAAO,QAAQ,gBAAgB,OAAWu0C,EAAS5zB,CAAO,EAExD3G,GACFA,EAAQha,EAAO,QAAQ,sBAAsB0J,CAAK,EAAG/T,CAAK,CAC5D,EACC,CAACqK,EAAQ0J,EAAOsQ,EAASu6B,EAAS5zB,CAAO,CAAC,EAC7C,GAAI,CAAC0zB,EACI,OAAA,KAET,MAAM58B,EAAO68B,EAAgB,MAAQA,EAAgB,UAAY3zB,EAC3DszB,EAA0B5mC,EAAAA,IAAKhB,EAAU,MAAM,eAAgBH,EAAS,CAC5E,GAAIyU,EACJ,QAAS6zB,EACT,MAAO,UACP,aAAcx0C,EAAO,QAAQ,cAAc,0BAA0B,EACrE,KAAM,QACN,SAAU,GACV,gBAAiB,OACjB,gBAAiByX,EACjB,gBAAiBA,EAAO88B,EAAU,MAAA,GACjC7hD,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,eAAgB,CACtC,SAAuB2a,EAAA,IAAKhB,EAAU,MAAM,mBAAoB,CAC9D,UAAWjX,EAAQ,KACnB,SAAU,OAAA,CACX,CACF,CAAA,CAAC,EACF,OAAyBiY,EAAA,IAAAhB,EAAU,MAAM,YAAaH,EAAS,CAC7D,MAAOlM,EAAO,QAAQ,cAAc,kCAAkC,EAAEq0C,CAAO,EAC/E,WAAY,GAAA,GACX5pC,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,YAAa,CACnC,gBAA6BkpC,GAAyB,CACpD,SAAU,CAACU,EAAU,SAAuBH,GAAO,CACjD,aAAcG,EACd,MAAO,UACP,SAAUJ,CAAA,CACX,EAAGI,IAAY,GAAKJ,CAAU,CAAA,CAChC,CACF,CAAA,CAAC,CACJ,CClFO,MAAMS,GAAsBC,GAA4BtnC,EAAI,IAAC,OAAQ,CAC1E,EAAG,6DACL,CAAC,EAAG,aAAa,EACJunC,GAAwBD,GAA4BtnC,EAAI,IAAC,OAAQ,CAC5E,EAAG,gEACL,CAAC,EAAG,eAAe,EACNwnC,GAAyBF,GAA4BtnC,EAAI,IAAC,OAAQ,CAC7E,EAAG,wDACL,CAAC,EAAG,oBAAoB,EACXynC,GAAqBH,GAA4BtnC,EAAI,IAAC,OAAQ,CACzE,EAAG,8CACL,CAAC,EAAG,YAAY,EACH0nC,GAAqBJ,GAA4BtnC,EAAI,IAAC,OAAQ,CACzE,EAAG,gDACL,CAAC,EAAG,YAAY,EACH2nC,GAAoBL,GAA4BtnC,EAAI,IAAC,OAAQ,CACxE,EAAG,gJACL,CAAC,EAAG,WAAW,EACF4nC,GAAiBN,GAA4BtnC,EAAI,IAAC,OAAQ,CACrE,EAAG,4OACL,CAAC,EAAG,QAAQ,EACC6nC,GAAeP,GAA4BtnC,EAAI,IAAC,OAAQ,CACnE,EAAG,+CACL,CAAC,EAAG,MAAM,EACG8nC,GAAsBR,GAA4BtnC,EAAI,IAAC,OAAQ,CAC1E,EAAG,uHACL,CAAC,EAAG,aAAa,EACJ+nC,GAAiBT,GAA4BtnC,EAAI,IAAC,OAAQ,CACrE,EAAG,gPACL,CAAC,EAAG,YAAY,EACHgoC,GAAoBV,GAA4BtnC,EAAI,IAAC,OAAQ,CACxE,EAAG,gBACL,CAAC,EAAG,WAAW,EACFioC,GAAuBX,GAA4BtnC,EAAI,IAAC,OAAQ,CAC3E,EAAG,6DACL,CAAC,EAAG,cAAc,EACLkoC,GAAoBZ,GAA4BtnC,EAAI,IAAC,OAAQ,CACxE,EAAG,qDACL,CAAC,EAAG,WAAW,EACFmoC,GAAqBb,GAA4BtnC,EAAI,IAAC,OAAQ,CACzE,EAAG,gCACL,CAAC,EAAG,YAAY,EACHooC,GAA6Bd,GAA4BtnC,EAAI,IAAC,OAAQ,CACjF,EAAG,mJACL,CAAC,EAAG,oBAAoB,EACXqoC,GAAgBf,GAA4BtnC,EAAI,IAAC,OAAQ,CACpE,EAAG,uGACL,CAAC,EAAG,OAAO,EACEsoC,GAAchB,GAA4BtnC,EAAI,IAAC,OAAQ,CAClE,EAAG,qCACL,CAAC,EAAG,KAAK,EACIuoC,GAAiBjB,GAA4BtnC,EAAI,IAAC,OAAQ,CACrE,EAAG,mBACL,CAAC,EAAG,QAAQ,EACCwoC,GAAelB,GAA4BtnC,EAAI,IAAC,OAAQ,CACnE,EAAG,iOACL,CAAC,EAAG,MAAM,EACGyoC,GAAenB,GAA4BtnC,EAAI,IAAC,OAAQ,CACnE,EAAG,qSACL,CAAC,EAAG,MAAM,EACG0oC,GAAkBpB,GAA4BtnC,EAAI,IAAC,OAAQ,CACtE,EAAG,oHACL,CAAC,EAAG,SAAS,EACA2oC,GAAgBrB,GAA4BtnC,EAAI,IAAC,OAAQ,CACpE,EAAG,mDACL,CAAC,EAAG,OAAO,EACE4oC,GAAmBtB,GAA4BtnC,EAAI,IAAC,OAAQ,CACvE,EAAG,mJACL,CAAC,EAAG,UAAU,EACD6oC,GAAwBvB,GAA4BtnC,EAAI,IAAC,OAAQ,CAC5E,EAAG,2fACL,CAAC,EAAG,eAAe,EACN8oC,GAAqBxB,GAA4BtnC,EAAI,IAAC,IAAK,CACtE,SAAuBA,EAAI,IAAC,OAAQ,CAClC,EAAG,0EACP,CAAG,CACH,CAAC,EAAG,YAAY,EACH+oC,GAAgBzB,GAA4BtnC,EAAI,IAAC,OAAQ,CACpE,EAAG,uGACL,CAAC,EAAG,OAAO,EACEgpC,GAAiB1B,GAA4BtnC,EAAI,IAAC,OAAQ,CACrE,EAAG,+EACL,CAAC,EAAG,QAAQ,EACCipC,GAAwB3B,GAA4BtnC,EAAI,IAAC,OAAQ,CAC5E,EAAG,6MACL,CAAC,EAAG,QAAQ,ECtFN3B,GAAY,CAAC,WAAY,SAAU,KAAM,aAAc,YAAa,WAAY,MAAM,EAStF6qC,GAAiBxqC,GAAO2O,EAAQ,EAAE,KAAO,CAC7C,SAAU,GACZ,EAAE,EACI87B,GAA6CpqC,EAAAA,WAAW,SAAiCxb,EAAO6F,EAAK,CACnG,KAAA,CACF,SAAAmjB,EACA,GAAApa,EACA,WAAAi3C,EACA,UAAA5+B,EACA,SAAA5iB,EACA,KAAAwiB,CACE,EAAA7mB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD4O,EAAoBtN,cAA2BrX,GAAA,CAC/C62B,GAAS72B,EAAM,GAAG,GACpBA,EAAM,eAAe,EAEnBi3B,GAAcj3B,EAAM,GAAG,GACzBikB,EAASjkB,CAAK,CAChB,EACC,CAACikB,CAAQ,CAAC,EACO,OAAAvM,EAAA,IAAKkpC,GAAgBrqC,EAAS,CAChD,GAAA1M,EACA,IAAA/I,EACA,UAAW0hB,GAAKpX,EAAY,SAAU8W,CAAS,EAC/C,kBAAmB4+B,EACnB,UAAWn8B,EACX,UAAW7C,GACVjQ,EAAO,CACR,SAAAvS,CACD,CAAA,CAAC,CACJ,CAAC,ECxCKyW,GAAY,CAAC,cAAc,EAI3BgrC,GAAyB9lD,GAAS,CACtC,MAAMoP,EAAS+1B,KACT,CACJ,aAAA4gB,EACA,iBAAAC,EACA,MAAAviB,EAAQ,CAAE,EACV,UAAAwiB,EAAY,CAAE,EACd,SAAAj9B,EACA,OAAAtN,EACA,YAAAwqC,EAAc,EACf,EAAGlmD,EACEmmD,EAAsB92B,EAAAA,QAAc,IAAM/T,EAAS,CAAE,EAAEyqC,EAActiB,CAAK,EAAG,CAACsiB,EAActiB,CAAK,CAAC,EAClG2iB,EAAqB/2B,EAAAA,QAAc,IAAM,CAC7C,GAAI,CAAC42B,GAAa,OAAO,KAAKA,CAAS,EAAE,SAAW,EAClD,OAAOD,EAET,MAAMK,EAAc/qC,EAAS,CAAE,EAAE2qC,CAAS,EAC1C,cAAO,QAAQD,CAAgB,EAAE,QAAQ,CAAC,CAACx/C,EAAK8/C,CAAgB,IAAM,CACpED,EAAY7/C,CAAG,EAAI8U,EAAS,CAAE,EAAEgrC,EAAkBL,EAAUz/C,CAAG,GAAK,CAAA,CAAE,CAC5E,CAAK,EACM6/C,CACX,EAAK,CAACL,EAAkBC,CAAS,CAAC,EAC1BM,EAAen3C,EAAO,QAAQ,6BAA6B,aAAc,CAAE,EAAEpP,EAAM,MAAM,EACzFwmD,EAAYn3B,EAAAA,QAAc,IAAM,CACpC,MAAMo3B,EAAuB,OAAO,KAAKV,CAAY,EACrD,OAAO,OAAO,KAAKtiB,CAAK,EAAE,OAAOj9B,GAAO,CAACigD,EAAqB,SAASjgD,CAAG,CAAC,CAC/E,EAAK,CAACi9B,EAAOsiB,CAAY,CAAC,EACxB,OAAO12B,EAAa,QAAC,IAAM,CAGzB,MAAMq3B,EAFc,MAAM,KAAK,IAAI,IAAI,CAAC,GAAGH,EAAc,GAAGC,CAAS,CAAC,CAAC,EACrC,OAAOhgD,GAAO2/C,EAAoB3/C,CAAG,GAAK,IAAI,EACnD,KAAK,CAACiB,EAAG/E,IAAM,CAC1C,MAAMikD,EAAgBP,EAAmB3+C,CAAC,EACpCm/C,EAAiBR,EAAmB1jD,CAAC,EACrCmkD,EAAmB,OAAO,SAASF,GAAA,YAAAA,EAAe,YAAY,EAAIA,EAAc,aAAe,IAC/FG,EAAoB,OAAO,SAASF,GAAA,YAAAA,EAAgB,YAAY,EAAIA,EAAe,aAAe,IACxG,OAAOC,EAAmBC,CAChC,CAAK,EACD,OAAOJ,EAAO,OAAO,CAAC9rC,EAAKpU,EAAK+W,IAAU,CACxC,IAAIwpC,EAAY,CACd,OAAArrC,EACA,QAASsN,CACjB,EACM,MAAMg+B,EAA0BZ,EAAmB5/C,CAAG,EACtD,GAAIwgD,EAAyB,CAC3B,MAAMC,EAAclrC,GAA8BirC,EAAyBlsC,EAAS,EACpFisC,EAAYzrC,EAAS,CAAA,EAAIyrC,EAAWE,CAAW,CAChD,CACD,OAAOf,GAAe3oC,IAAUmpC,EAAO,OAAS,EAAI,CAAC,GAAG9rC,EAAK,CAACurC,EAAoB3/C,CAAG,EAAGugD,CAAS,EAAG,CAACG,GAAS,CAAA,CAAE,CAAC,EAAI,CAAC,GAAGtsC,EAAK,CAACurC,EAAoB3/C,CAAG,EAAGugD,CAAS,CAAC,CACpK,EAAE,CAAE,CAAA,CACT,EAAK,CAACb,EAAaxqC,EAAQ6qC,EAAcv9B,EAAUm9B,EAAqBC,EAAoBI,CAAS,CAAC,CACtG,EC/CA,SAASW,GAAuBnnD,EAAO,CAC/B,KAAA,CACJ,OAAA0b,EACA,QAAA0N,CACE,EAAAppB,EACEoP,EAASD,KACTsM,EAAYhM,IAIZyP,EAHiBlG,GAAqC5J,CAAM,EAC3B,OAAcsL,GAAAA,EAAI,oBAAsB,EAAI,EAElD,SAAW,EACtC0sC,EAAehrC,cAA2BrX,GAAA,CAM1Cma,IAGJ9P,EAAO,QAAQ,oBAAoBsM,EAAO,MAAO,EAAK,EACtD0N,EAAQrkB,CAAK,EAAA,EACZ,CAACqK,EAAQsM,EAAO,MAAO0N,EAASlK,CAAQ,CAAC,EAIxC,OAHAzD,EAAU,uBAGVC,EAAO,WAAa,GACf,YAEiBwgC,GAAU,CAClC,QAASkL,EACT,SAAAloC,EACA,SAAU,CAAczC,EAAA,IAAK0/B,GAAc,CACzC,SAAuB1/B,EAAA,IAAKhB,EAAU,MAAM,mBAAoB,CAC9D,SAAU,OAAA,CACX,CAAA,CACF,EAAgBgB,EAAA,IAAK4qC,GAAc,CAClC,SAAUj4C,EAAO,QAAQ,cAAc,sBAAsB,CAAA,CAC9D,CAAC,CAAA,CACH,CACH,CCxCA,SAASk4C,GAAyBtnD,EAAO,CACjC,KAAA,CACJ,QAAAopB,CACE,EAAAppB,EACEoP,EAASD,KACTsM,EAAYhM,IACZ83C,EAAcnrC,cAA2BrX,GAAA,CAC7CqkB,EAAQrkB,CAAK,EACNqK,EAAA,QAAQ,gBAAgBqjC,GAA0B,OAAO,CAAA,EAC/D,CAACrjC,EAAQga,CAAO,CAAC,EACpB,OAAI3N,EAAU,sBACL,YAEiBygC,GAAU,CAClC,QAASqL,EACT,SAAU,CAAc9qC,EAAA,IAAK0/B,GAAc,CACzC,SAAuB1/B,EAAA,IAAKhB,EAAU,MAAM,4BAA6B,CACvE,SAAU,OAAA,CACX,CAAA,CACF,EAAgBgB,EAAA,IAAK4qC,GAAc,CAClC,SAAUj4C,EAAO,QAAQ,cAAc,yBAAyB,CAAA,CACjE,CAAC,CAAA,CACH,CACH,CC1BA,SAASo4C,GAA0BxnD,EAAO,CACpB,OAAA2pB,EAAAA,KAAMk5B,EAAAA,SAAgB,CACxC,SAAU,CAAcpmC,EAAA,IAAK0qC,GAAwB7rC,EAAS,CAAI,EAAAtb,CAAK,CAAC,QAAqBsnD,GAA0BhsC,EAAS,CAAA,EAAItb,CAAK,CAAC,CAAC,CAAA,CAC5I,CACH,CCFA,SAASynD,GAAyBznD,EAAO,CACjC,KAAA,CACJ,OAAA0b,EACA,QAAA0N,CACE,EAAAppB,EACEoP,EAASD,KACTsM,EAAYhM,IACZi4C,EAAatrC,cAA2BrX,GAAA,CAC5CqkB,EAAQrkB,CAAK,EACNqK,EAAA,QAAQ,gBAAgBsM,EAAO,KAAK,GAC1C,CAACtM,EAAQsM,EAAO,MAAO0N,CAAO,CAAC,EAClC,OAAI3N,EAAU,qBAAuB,CAACC,EAAO,WACpC,YAEiBwgC,GAAU,CAClC,QAASwL,EACT,SAAU,CAAcjrC,EAAA,IAAK0/B,GAAc,CACzC,SAAuB1/B,EAAA,IAAKhB,EAAU,MAAM,qBAAsB,CAChE,SAAU,OAAA,CACX,CAAA,CACF,EAAgBgB,EAAA,IAAK4qC,GAAc,CAClC,SAAUj4C,EAAO,QAAQ,cAAc,kBAAkB,CAAA,CAC1D,CAAC,CAAA,CACH,CACH,CCtBA,SAASu4C,GAAuB3nD,EAAO,CAC/B,KAAA,CACJ,OAAA0b,EACA,QAAA0N,CACE,EAAAppB,EACEoP,EAASD,KACT2N,EAAYlK,EAAgBxD,EAAQ6jB,EAAqB,EACzDxX,EAAYhM,IACZ0xC,EAAgB9xB,EAAAA,QAAc,IAAM,CACxC,GAAI,CAAC3T,EACI,OAAA,KAET,MAAMwB,EAAWJ,EAAU,QAAazV,EAAK,QAAUqU,EAAO,KAAK,EACnE,OAAOwB,GAAA,YAAAA,EAAU,IAAA,EAChB,CAACxB,EAAQoB,CAAS,CAAC,EAChBmB,EAAevC,EAAO,cAAgBD,EAAU,aAChDmsC,EAAsBxrC,cAA2BrX,GAAA,CACrDqkB,EAAQrkB,CAAK,EACb,MAAMiY,EAAYjY,EAAM,cAAc,aAAa,YAAY,GAAK,KACpEqK,EAAO,QAAQ,WAAWsM,EAAO,MAAOsB,IAAcmkC,EAAgB,KAAOnkC,CAAS,GACrF,CAAC5N,EAAQsM,EAAQ0N,EAAS+3B,CAAa,CAAC,EAC3C,GAAI1lC,EAAU,sBAAwB,CAACC,GAAU,CAACA,EAAO,UAAY,CAACuC,EAAa,KAAK5W,GAAQ,CAAC,CAACA,CAAI,EAC7F,OAAA,KAET,MAAMwgD,EAAkBrhD,GAAA,CACtB,MAAM4pB,EAAQhhB,EAAO,QAAQ,cAAc5I,CAAG,EAC9C,OAAO,OAAO4pB,GAAU,WAAaA,EAAM1U,CAAM,EAAI0U,CAAA,EAEnC,OAAAzG,EAAAA,KAAMk5B,EAAAA,SAAgB,CACxC,SAAU,CAAC5kC,EAAa,SAAS,KAAK,GAAKkjC,IAAkB,MAAqBx3B,EAAA,KAAMuyB,GAAU,CAChG,QAAS0L,EACT,aAAc,MACd,SAAU,CAAcnrC,EAAA,IAAK0/B,GAAc,CACzC,SAAuB1/B,EAAA,IAAKhB,EAAU,MAAM,4BAA6B,CACvE,SAAU,OAAA,CACX,CAAA,CACF,EAAgBgB,EAAA,IAAK4qC,GAAc,CAClC,SAAUQ,EAAS,mBAAmB,CAAA,CACvC,CAAC,CAAA,CACH,EAAI,KAAM5pC,EAAa,SAAS,MAAM,GAAKkjC,IAAkB,OAAsBx3B,EAAA,KAAMuyB,GAAU,CAClG,QAAS0L,EACT,aAAc,OACd,SAAU,CAAcnrC,EAAA,IAAK0/B,GAAc,CACzC,SAAuB1/B,EAAA,IAAKhB,EAAU,MAAM,6BAA8B,CACxE,SAAU,OAAA,CACX,CAAA,CACF,EAAgBgB,EAAA,IAAK4qC,GAAc,CAClC,SAAUQ,EAAS,oBAAoB,CAAA,CACxC,CAAC,CAAA,CACH,EAAI,KAAM5pC,EAAa,SAAS,IAAI,GAAKkjC,GAAiB,KAAoBx3B,EAAA,KAAMuyB,GAAU,CAC7F,QAAS0L,EACT,SAAU,CAAmBnrC,EAAAA,IAAA0/B,GAAc,CAAA,CAAE,QAAqBkL,GAAc,CAC9E,SAAUj4C,EAAO,QAAQ,cAAc,kBAAkB,CAAA,CAC1D,CAAC,CACH,CAAA,EAAI,IAAI,CAAA,CACV,CACH,CChEA,MAAM0L,GAAY,CAAC,eAAgB,mBAAoB,QAAS,WAAW,EAS9DgtC,GAAyB,CACpC,mBAAoBH,GACpB,qBAAsBF,GACtB,sBAAuBD,EACzB,EACaO,GAA8B,CACzC,mBAAoB,CAClB,aAAc,EAChB,EACA,qBAAsB,CACpB,aAAc,EAChB,EACA,sBAAuB,CACrB,aAAc,EAChB,CACF,EACMC,GAA2CxsC,EAAAA,WAAW,SAA+Bxb,EAAO6F,EAAK,CAC/F,KAAA,CACF,aAAAkgD,EACA,iBAAAC,EACA,MAAAviB,EACA,UAAAwiB,CACE,EAAAjmD,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDmtC,EAAenC,GAAuBxqC,EAAS,CAAA,EAAI1E,EAAO,CAC9D,aAAAmvC,EACA,iBAAAC,EACA,MAAAviB,EACA,UAAAwiB,CACD,CAAA,CAAC,EACkB,OAAAxpC,EAAA,IAAKmpC,GAAyBtqC,EAAS,CACzD,IAAAzV,GACC+Q,EAAO,CACR,SAAUqxC,EAAa,IAAI,CAAC,CAACC,EAAWC,CAAU,EAAG5qC,IAAuBd,EAAAA,IAAKyrC,EAAW5sC,EAAS,CAAA,EAAI6sC,CAAU,EAAG5qC,CAAK,CAAC,CAC7H,CAAA,CAAC,CACJ,CAAC,EACK6qC,GAAoC5sC,EAAAA,WAAW,SAAwBxb,EAAO6F,EAAK,CACvF,OAAyB4W,EAAA,IAAAurC,GAAuB1sC,EAAS,CAAA,EAAItb,EAAO,CAClE,IAAA6F,EACA,aAAciiD,GACd,iBAAkBC,EACnB,CAAA,CAAC,CACJ,CAAC,ECnDKjtC,GAAY,CAAC,YAAa,WAAW,EAUrCC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,cAAc,CAAA,EAEMjL,GAAyBxL,CAAO,CAC/D,EACM6jD,GAAuBltC,GAAO,MAAO,CACzC,KAAM,cACN,KAAM,eACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,YAC/C,CAAC,EAAE,CACD,QAAS,OACT,cAAe,SACf,KAAM,EACN,UAAW,CACT,QAAS,CACX,CACF,CAAC,EACKitC,GAAY,IAAM,GAClBC,GAAsC/sC,EAAAA,WAAW,SAA0Bxb,EAAO6F,EAAK,CACrF,KAAA,CACF,UAAAohB,EACA,UAAAg/B,EAAY,CAAC,CACX,EAAAjmD,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACvB,OAAAgB,EAAA,IAAK+rC,GAAWltC,EAAS,CAC3C,KAAM,GACN,oBAAqB,GACrB,UAAAgtC,EAAA,EACCrC,EAAU,UAAW,CACtB,SAA4BxpC,EAAAA,IAAA4rC,GAAsB/sC,EAAS,CACzD,IAAAzV,EACA,SAAU,GACV,UAAW0hB,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,WAAYiX,CACd,EAAG7E,CAAK,CAAC,CACV,CAAA,CAAC,CACJ,CAAC,ECtDY6xC,GAAkC,CAAChhD,EAAG/E,IAAM,CAEvD,MAAMgmD,EAAe,IAAI,IAAI,OAAO,KAAKjhD,CAAC,EAAE,OAAOjB,GAAOiB,EAAEjB,CAAG,IAAM,EAAK,CAAC,EACrEmiD,EAAe,IAAI,IAAI,OAAO,KAAKjmD,CAAC,EAAE,OAAO8D,GAAO9D,EAAE8D,CAAG,IAAM,EAAK,CAAC,EAC3E,GAAIkiD,EAAa,OAASC,EAAa,KACrC,MAAO,GAET,IAAIllD,EAAS,GACb,OAAAilD,EAAa,QAAQliD,GAAO,CACrBmiD,EAAa,IAAIniD,CAAG,IACvB/C,EAAS,GAEf,CAAG,EACMA,CACT,EACamlD,GAAyB,CAACzvC,EAAQ0vC,KAAiB1vC,EAAO,YAAcA,EAAO,OAAO,YAAa,EAAC,QAAQ0vC,CAAW,EAAI,GCAlI9tC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAOG,OAAAC,GANO,CACZ,KAAM,CAAC,mBAAmB,EAC1B,OAAQ,CAAC,yBAAyB,EAClC,OAAQ,CAAC,yBAAyB,EAClC,IAAK,CAAC,sBAAsB,CAAA,EAEDjL,GAAyBxL,CAAO,CAC/D,EACM+Z,GAAW,IAAI,KAAK,SAC1B,SAASuqC,GAAsB9oD,EAAO,WACpC,MAAMoP,EAASD,KACT45C,EAAiBx5C,SAAa,IAAI,EAClC0J,EAAUrG,EAAgBxD,EAAQuJ,EAA6B,EAC/DqwC,EAA+Bj2C,GAAW,IAAMgG,GAAkC3J,CAAM,CAAC,EAAE,QAC3F8J,EAAwBtG,EAAgBxD,EAAQ2J,EAAiC,EACjF0C,EAAYhM,IACZ,CAACo5C,EAAaI,CAAc,EAAI53C,WAAe,EAAE,EACjD7M,EAAUuW,GAAkBU,CAAS,EACrC,CACJ,KAAAytC,EACA,gBAAAC,EAAkBP,GAClB,qBAAAQ,EAAuB,GACvB,sBAAAC,EAAwB,GACxB,mBAAAC,EAAqB,GACrB,cAAAC,EAAgB,MAChB,oBAAAC,CACE,EAAAxpD,EACEypD,EAAkBp6B,UAAc,IAAMo5B,GAAgCvvC,EAAuB8vC,CAA4B,EAAG,CAAC9vC,EAAuB8vC,CAA4B,CAAC,EACjLU,EAAgBr6B,EAAAA,QAAc,IAAM,CACxC,OAAQ65B,EAAM,CACZ,IAAK,MACH,MAAO,CAAC,GAAGjwC,CAAO,EAAE,KAAK,CAACxR,EAAG/E,IAAM6b,GAAS,QAAQ9W,EAAE,YAAcA,EAAE,MAAO/E,EAAE,YAAcA,EAAE,KAAK,CAAC,EACvG,IAAK,OACH,MAAO,CAAC,GAAGuW,CAAO,EAAE,KAAK,CAACxR,EAAG/E,IAAM,CAAC6b,GAAS,QAAQ9W,EAAE,YAAcA,EAAE,MAAO/E,EAAE,YAAcA,EAAE,KAAK,CAAC,EACxG,QACS,OAAAuW,CACX,CAAA,EACC,CAACA,EAASiwC,CAAI,CAAC,EACZ9B,EAAwBriD,GAAA,CACtB,KAAA,CACJ,KAAM+T,CAAA,EACJ/T,EAAM,OACVqK,EAAO,QAAQ,oBAAoB0J,EAAOI,EAAsBJ,CAAK,IAAM,EAAK,CAAA,EAE5E6wC,EAAiBt6B,EAAAA,QAAc,IAAM,CACzC,MAAMu6B,EAAmBJ,EAAsBA,EAAoBE,CAAa,EAAI,KAC9EG,EAAyBD,EAAmBF,EAAc,OAAO,CAAC,CACtE,MAAA5wC,CACI,IAAA8wC,EAAiB,SAAS9wC,CAAK,CAAC,EAAI4wC,EAC1C,OAAKb,EAGEgB,EAAuB,OAAiB1wC,GAAAgwC,EAAgBhwC,EAAQ0vC,EAAY,YAAa,CAAA,CAAC,EAFxFgB,GAGR,CAACH,EAAeb,EAAaM,EAAiBK,CAAmB,CAAC,EAC/DM,EAAmB1tC,cAA+B2tC,GAAA,CAChD,MAAAC,EAAejxC,GAAkC3J,CAAM,EACvD66C,EAAW3uC,EAAS,CAAC,EAAG0uC,CAAY,EACpCJ,EAAmBJ,EAAsBA,EAAoBvwC,CAAO,EAAI,KAC9E,OAACswC,IAAkB,eAAiBI,EAAiB1wC,GAAS,QAAeyB,GAAA,CACvEA,EAAI,WAAakvC,GAAoB,MAAQA,EAAiB,SAASlvC,EAAI,KAAK,KAC9EqvC,EAEK,OAAAE,EAASvvC,EAAI,KAAK,EAEhBuvC,EAAAvvC,EAAI,KAAK,EAAI,GAE1B,CACD,EACMtL,EAAO,QAAQ,yBAAyB66C,CAAQ,CAAA,EACtD,CAAC76C,EAAQ6J,EAASuwC,EAAqBD,EAAeI,CAAc,CAAC,EAClEO,EAA0B9tC,cAA2BrX,GAAA,CAC1CkkD,EAAAlkD,EAAM,OAAO,KAAK,CACnC,EAAG,CAAE,CAAA,EACColD,EAAkB96B,EAAAA,QAAc,IAAMs6B,EAAe,OAAcjvC,GAAAA,EAAI,QAAQ,EAAG,CAACivC,CAAc,CAAC,EAClGS,EAA4B/6B,EAAc,QAAA,IAAM86B,EAAgB,MAAMhxC,GAAUD,EAAsBC,EAAO,KAAK,GAAK,MAAQD,EAAsBC,EAAO,KAAK,IAAM,EAAK,EAAG,CAACD,EAAuBixC,CAAe,CAAC,EACvNE,EAA2Bh7B,EAAAA,QAAc,IAAM86B,EAAgB,MAAgBhxC,GAAAD,EAAsBC,EAAO,KAAK,IAAM,EAAK,EAAG,CAACD,EAAuBixC,CAAe,CAAC,EACvKG,EAAiB/6C,SAAa,IAAI,EACxCqC,EAAAA,UAAgB,IAAM,CAChBw3C,EACFL,EAAe,QAAQ,QACduB,EAAe,SAAW,OAAOA,EAAe,QAAQ,OAAU,YAC3EA,EAAe,QAAQ,OACzB,EACC,CAAClB,CAAoB,CAAC,EACzB,IAAImB,EAA2B,GAC/B,MAAMC,EAAkCrxC,GAClCoxC,IAA6B,IAASpxC,EAAO,WAAa,IACjCoxC,EAAA,GACpB,IAEF,GAEW,OAAA5gC,EAAAA,KAAMk5B,EAAAA,SAAgB,CACxC,SAAU,CAAcpmC,EAAA,IAAKguC,GAA6B,CACxD,UAAWjmD,EAAQ,OACnB,WAAYiX,EACZ,SAAuBgB,EAAAA,IAAKhB,EAAU,MAAM,cAAeH,EAAS,CAClE,YAAalM,EAAO,QAAQ,cAAc,8BAA8B,EACxE,SAAU25C,EACV,MAAOF,EACP,SAAUqB,EACV,QAAS,WACT,KAAM,QACN,WAAY,CACV,eAA6BztC,EAAA,IAAKhB,EAAU,MAAM,mBAAoB,CACpE,SAAU,QACV,SAA4BgB,EAAAA,IAAAhB,EAAU,MAAM,gBAAiB,CAAA,CAAE,CAAA,CAChE,EACD,GAAI,CACF,GAAI,GACN,CACF,EACA,UAAW,EAAA,GACV3Z,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,aAAa,CAAC,CAAA,CACvC,EAAgB6nB,EAAA,KAAM+gC,GAA2B,CAChD,UAAWlmD,EAAQ,KACnB,WAAYiX,EACZ,SAAU,CAACkuC,EAAe,IAAIxwC,GAAA,oBAA4BwxC,GAAkB,CAC1E,UAAWnmD,EAAQ,IACnB,QAAsBiY,EAAAA,IAAKhB,EAAU,MAAM,aAAcH,EAAS,CAChE,SAAUnC,EAAO,WAAa,GAC9B,QAASD,EAAsBC,EAAO,KAAK,IAAM,GACjD,QAASiuC,EACT,KAAMjuC,EAAO,MACb,GAAI,CACF,EAAG,EACL,EACA,SAAUqxC,EAAsBrxC,CAAM,EAAImxC,EAAiB,MAAA,GAC1DxoD,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,YAAY,CAAC,EACrC,MAAOqX,EAAO,YAAcA,EAAO,KAAA,EAClCA,EAAO,KAAK,EAAC,EAAGwwC,EAAe,SAAW,GAAkBltC,EAAA,IAAKmuC,GAAgC,CAClG,WAAYnvC,EACZ,SAAUrM,EAAO,QAAQ,cAAc,4BAA4B,CAAA,CACpE,CAAC,CAAA,CACH,GAAI,CAACi6C,GAAyB,CAACC,IAAuBK,EAAe,OAAS,EAAiBhgC,EAAA,KAAMkhC,GAA6B,CACjI,WAAYpvC,EACZ,UAAWjX,EAAQ,OACnB,SAAU,CAAE6kD,EAYW5sC,EAAA,IAAA,OAAQ,CAAA,CAAE,QAZqBkuC,GAAkB,CACtE,QAAsBluC,EAAAA,IAAKhB,EAAU,MAAM,aAAcH,EAAS,CAChE,SAAU6uC,EAAgB,SAAW,EACrC,QAASC,EACT,cAAe,CAACA,GAA6B,CAACC,EAC9C,QAAS,IAAMP,EAAiB,CAACM,CAAyB,EAC1D,KAAMh7C,EAAO,QAAQ,cAAc,kCAAkC,EACrE,GAAI,CACF,EAAG,EACL,CAAA,GACCyK,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,YAAY,CAAC,EACrC,MAAOzK,EAAO,QAAQ,cAAc,kCAAkC,CACvE,CAAA,EAAoCk6C,EAK/B,KALiE7sC,EAAAA,IAAKhB,EAAU,MAAM,WAAYH,EAAS,CAC/G,QAAS,IAAMlM,EAAO,QAAQ,yBAAyB45C,CAA4B,EACnF,SAAUS,CAAA,GACTp5B,EAAA5U,EAAU,YAAV,YAAA4U,EAAqB,WAAY,CAClC,SAAUjhB,EAAO,QAAQ,cAAc,wBAAwB,CAAA,CAChE,CAAC,CAAQ,CACX,CAAA,EAAI,IAAI,CAAA,CACV,CACH,CAyCA,MAAMs7C,GAA4BvvC,GAAO,MAAO,CAC9C,KAAM,cACN,KAAM,oBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,iBAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,QAASA,EAAM,QAAQ,EAAG,EAAG,GAAG,EAChC,QAAS,OACT,cAAe,SACf,SAAU,OACV,KAAM,MACN,UAAW,IACX,WAAY,YACd,EAAE,EACIumD,GAA8BtvC,GAAO,MAAO,CAChD,KAAM,cACN,KAAM,0BACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,uBAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,QAASA,EAAM,QAAQ,IAAK,CAAC,CAC/B,EAAE,EACI2mD,GAA8B1vC,GAAO,MAAO,CAChD,KAAM,cACN,KAAM,0BACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,uBAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,QAASA,EAAM,QAAQ,GAAK,EAAG,GAAK,CAAC,EACrC,QAAS,OACT,eAAgB,gBAChB,UAAW,aAAaA,EAAM,QAAQ,OAAO,EAC/C,EAAE,EACI0mD,GAAiCzvC,GAAO,KAAK,EAAE,CAAC,CACpD,MAAAjX,CACF,KAAO,CACL,QAASA,EAAM,QAAQ,GAAK,CAAC,EAC7B,MAAOA,EAAM,QAAQ,KAAK,GAAG,CAC/B,EAAE,EC3PF,SAAS4mD,GAAiB9qD,EAAO,OAC/B,MAAMyb,EAAYhM,IAClB,OAAyBgN,EAAA,IAAA8rC,GAAkBjtC,EAAS,CAAA,EAAItb,EAAO,CAC7D,eAA4B8oD,GAAuBxtC,EAAS,CAAI,GAAAxZ,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,iBAAiB,CAAC,CACxG,CAAA,CAAC,CACJ,CCVA,MAAMgZ,GAAY,CAAC,WAAY,YAAa,SAAS,EAaxCiwC,GAAmB36C,GAAuB,cAAe,CAAC,QAAS,OAAO,CAAC,EAClF46C,GAAgB7vC,GAAOuL,GAAQ,CACnC,KAAM,cACN,KAAM,QACN,kBAAmB,CAAC1mB,EAAOqb,IAAWA,EAAO,KAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,OAAQA,EAAM,OAAO,KACvB,EAAE,EACI+mD,GAAgB9vC,GAAOyM,GAAO,CAClC,KAAM,cACN,KAAM,QACN,kBAAmB,CAAC5nB,EAAOqb,IAAWA,EAAO,KAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,iBAAkBA,EAAM,MAAQA,GAAO,QAAQ,WAAW,MAC1D,SAAU,IACV,UAAW,IACX,QAAS,OACT,SAAU,gBAAgBA,EAAM,QAAQ,EAAG,CAAC,IAC5C,SAAU,MACZ,EAAE,EACIgnD,GAAyB1vC,EAAiB,WAAA,CAACxb,EAAO6F,IAAQ,CACxD,KAAA,CACF,SAAAxB,EACA,UAAA4iB,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTsM,EAAYhM,IACZjL,EAAUumD,GACV,CAACI,EAAUC,CAAW,EAAI/5C,WAAe,EAAK,EAC9CiW,EAAkBlL,EAAAA,YAAkB,IAAM,CAC9ChN,EAAO,QAAQ,iBAAgB,EAC9B,CAACA,CAAM,CAAC,EACL+hB,EAAgB/U,cAA2BrX,GAAA,CAC3C42B,GAAY52B,EAAM,GAAG,GACvBqK,EAAO,QAAQ,iBACjB,EACC,CAACA,CAAM,CAAC,EACLi8C,EAAYh8B,EAAc,QAAA,IAAM,CAAC,CACrC,KAAM,OACN,QAAS,GACT,QAAS,CACP,aAAc,UAChB,CAAA,EACC,CACD,KAAM,WACN,QAAS,GACT,MAAO,OACP,GAAI,IAAM,CACR+7B,EAAY,EAAI,CAClB,EACA,OAAQ,IAAM,IAAM,CAClBA,EAAY,EAAK,CACnB,CAAA,CACD,EAAG,CAAE,CAAA,EACA,CAACE,EAAUC,CAAW,EAAIl6C,WAAe,IAAI,EAOnD,OANAO,EAAAA,UAAgB,IAAM,SACpB,MAAM45C,GAAc3xC,GAAA/X,EAAAsN,EAAO,QAAQ,iBAAf,YAAAtN,EAA+B,UAA/B,YAAA+X,EAAwC,cAAc,+BACtE2xC,GACFD,EAAYC,CAAW,CACzB,EACC,CAACp8C,CAAM,CAAC,EACNk8C,EAGe7uC,EAAA,IAAKuuC,GAAe1vC,EAAS,CAC/C,IAAAzV,EACA,UAAW,eACX,UAAW0hB,GAAKN,EAAWziB,EAAQ,KAAK,EACxC,WAAYiX,EACZ,SAAA6vC,EACA,UAAAD,GACCz0C,EAAO,CACR,eAA4B8Q,GAAmB,CAC7C,WAAY,YACZ,YAAaJ,EACb,eAA4B2jC,GAAe,CACzC,UAAWzmD,EAAQ,MACnB,WAAYiX,EACZ,UAAW,EACX,UAAW0V,EACX,SAAUg6B,GAAY9mD,CAAA,CACvB,CAAA,CACF,CACF,CAAA,CAAC,EArBO,IAsBX,CAAC,ECtGKyW,GAAY,CAAC,WAAW,EASxBC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,cAAc,CAAA,EAEMjL,GAAyBxL,CAAO,CAC/D,EACMinD,GAAuBtwC,GAAO,MAAO,CACzC,KAAM,cACN,KAAM,eACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,YAC/C,CAAC,EAAE,CACD,QAAS,OACT,cAAe,SACf,SAAU,OACV,KAAM,MACN,UAAW,GACb,CAAC,EACD,SAASqwC,GAAiB1rD,EAAO,CACzB,KAAA,CACF,UAAAinB,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACvB,OAAAgB,EAAA,IAAKgvC,GAAsBnwC,EAAS,CACtD,UAAWiM,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,WAAYiX,CAAA,EACX7E,CAAK,CAAC,CACX,CCxCA,MAAMkE,GAAY,CAAC,WAAW,EASxBC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,aAAa,CAAA,EAEOjL,GAAyBxL,CAAO,CAC/D,EACMmnD,GAAsBxwC,GAAO,MAAO,CACxC,KAAM,cACN,KAAM,cACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,WAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,QAASA,EAAM,QAAQ,EAAG,EAC1B,QAAS,OACT,eAAgB,eAClB,EAAE,EACF,SAAS0nD,GAAgB5rD,EAAO,CACxB,KAAA,CACF,UAAAinB,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACvB,OAAAgB,EAAA,IAAKkvC,GAAqBrwC,EAAS,CACrD,UAAWiM,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,WAAYiX,CAAA,EACX7E,CAAK,CAAC,CACX,CCxCA,MAAMkE,GAAY,CAAC,WAAW,EASxBC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,aAAa,CAAA,EAEOjL,GAAyBxL,CAAO,CAC/D,EACMqnD,GAAsB1wC,GAAO,MAAO,CACxC,KAAM,cACN,KAAM,cACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,WAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,QAASA,EAAM,QAAQ,CAAC,CAC1B,EAAE,EACF,SAAS4nD,GAAgB9rD,EAAO,CACxB,KAAA,CACF,UAAAinB,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACvB,OAAAgB,EAAA,IAAKovC,GAAqBvwC,EAAS,CACrD,UAAWiM,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,WAAYiX,CAAA,EACX7E,CAAK,CAAC,CACX,CCtCA,MAAMkE,GAAY,CAAC,OAAQ,qBAAsB,eAAgB,qBAAsB,2BAA4B,6BAA8B,kCAAmC,kBAAmB,iBAAkB,cAAe,gBAAiB,kBAAmB,0BAA2B,qBAAsB,mBAAoB,kBAAmB,WAAY,UAAU,EACxX2hB,GAAa,CAAC,qBAAqB,EAgB/B1hB,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EASG,OAAAC,GARO,CACZ,KAAM,CAAC,YAAY,EACnB,WAAY,CAAC,sBAAsB,EACnC,mBAAoB,CAAC,8BAA8B,EACnD,YAAa,CAAC,uBAAuB,EACrC,cAAe,CAAC,yBAAyB,EACzC,WAAY,CAAC,sBAAsB,CAAA,EAERjL,GAAyBxL,CAAO,CAC/D,EACMunD,GAAqB5wC,GAAO,MAAO,CACvC,KAAM,cACN,KAAM,aACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,UAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,QAAS,OACT,QAASA,EAAM,QAAQ,CAAC,CAC1B,EAAE,EACI8nD,GAAuB7wC,GAAO,MAAO,CACzC,KAAM,cACN,KAAM,uBACN,kBAAmB,CAAC9I,EAAGgJ,IAAWA,EAAO,oBAC3C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,WAAY,EACZ,eAAgB,WAChB,YAAaA,EAAM,QAAQ,EAAG,EAC9B,aAAcA,EAAM,QAAQ,EAAG,CACjC,EAAE,EACI+nD,GAA+B9wC,GAAO,MAAO,CACjD,KAAM,cACN,KAAM,+BACN,kBAAmB,CAAC9I,EAAGgJ,IAAWA,EAAO,4BAC3C,CAAC,EAAE,CACD,SAAU,GACV,YAAa,EACb,eAAgB,KAClB,CAAC,EACK6wC,GAAwB/wC,GAAO,MAAO,CAC1C,KAAM,cACN,KAAM,wBACN,kBAAmB,CAAC9I,EAAGgJ,IAAWA,EAAO,qBAC3C,CAAC,EAAE,CACD,MAAO,GACT,CAAC,EACK8wC,GAA0BhxC,GAAO,MAAO,CAC5C,KAAM,cACN,KAAM,0BACN,kBAAmB,CAAC9I,EAAGgJ,IAAWA,EAAO,uBAC3C,CAAC,EAAE,CACD,MAAO,GACT,CAAC,EACK+wC,GAAuBjxC,GAAO,MAAO,CACzC,KAAM,cACN,KAAM,uBACN,kBAAmB,CAAC9I,EAAGgJ,IAAWA,EAAO,oBAC3C,CAAC,EAAE,CACD,MAAO,GACT,CAAC,EACKgxC,GAA6CC,GAAA,CACjD,OAAQA,EAAe,CACrB,KAAKtqC,GAAkB,IACd,MAAA,yBACT,KAAKA,GAAkB,GACd,MAAA,wBACT,QACQ,MAAA,IAAI,MAAM,mEAAmE,CACvF,CACF,EACMuqC,GAAiB7xC,GAAOA,EAAI,YAAcA,EAAI,MAC9C6D,GAAW,IAAI,KAAK,SACpBiuC,GAAoChxC,EAAAA,WAAW,SAAwBxb,EAAO6F,EAAK,gCACjF,KAAA,CACF,KAAAwB,EACA,mBAAAolD,EACA,aAAAC,EACA,mBAAAC,EACA,yBAAAC,EACA,2BAAAC,EACA,gCAAAC,EACA,gBAAA9tC,EACA,eAAA+tC,EAAiB,CAAC/qC,GAAkB,IAAKA,GAAkB,EAAE,EAC7D,YAAAgrC,EACA,cAAAC,EACA,gBAAAC,EAAkB,CAAC,EACnB,wBAAAC,EAA0B,CAAC,EAC3B,mBAAAC,EAAqB,CAAC,EACtB,iBAAAC,EAAmB,CAAC,EACpB,gBAAAC,EAAkB,CAAC,EACnB,SAAAC,CACE,EAAAvtD,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACT4lB,EAAeniB,EAAgBxD,EAAQsJ,EAAwB,EAC/D80C,EAAoB56C,EAAgBxD,EAAQqL,EAAuC,EACnFyI,EAActQ,EAAgBxD,EAAQikB,EAAuB,EAC7Do6B,EAAiB5tC,KACjB6tC,EAAsB7tC,KACtB8tC,EAAmB9tC,KACnB+tC,EAAwB/tC,KACxBpE,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACrCoyC,EAAWt+C,SAAa,IAAI,EAC5Bu+C,EAAoBv+C,SAAa,IAAI,EACrCw+C,EAAsB7qC,EAAY,eAAiBlB,GAAkB,IACrEgsC,EAAyBvB,GAAsBM,EAAe,OAAS,EACvEkB,IAAuBnsD,GAAA2Z,EAAU,YAAV,YAAA3Z,GAAqB,kBAAmB,CAAA,EAE/DosD,KADkBr0C,GAAA4B,EAAU,YAAV,YAAA5B,GAAqB,aAAc,CAAA,GAChB,QAAU,GAC/Cs0C,IAAsB99B,GAAA5U,EAAU,YAAV,YAAA4U,GAAqB,iBAAkB,CAAA,EAC7DF,IAAwB0N,GAAApiB,EAAU,YAAV,YAAAoiB,GAAqB,mBAAoB,CAAA,EACjE,CACF,oBAAAuwB,CACE,EAAAd,EACJe,EAAuBtyC,GAA8BuxC,EAAiB7wB,EAAU,EAC5E,CACJ,gBAAA6xB,EACA,cAAAC,CACF,EAAIl/B,EAAM,QAAQ,IAAM,CACtB,IAAIm/B,GAAYnnD,EAAK,MAGf,MAAAonD,GAA8B15B,EAAa1tB,EAAK,KAAK,EAAE,aAAe,GAAQ0tB,EAAa1tB,EAAK,KAAK,EAAI,KAC/G,GAAIonD,GACK,MAAA,CACL,gBAAiB,CAACA,EAA2B,EAC7C,cAAeD,EAAA,EAGnB,GAAIvB,IAAkB,QAAa,OAAOA,GAAkB,WACnD,MAAA,CACL,gBAAiBO,EACjB,cAAegB,EAAA,EAGnB,MAAME,GAAiBzB,EAAc,CACnC,MAAO5lD,EAAK,MACZ,QAASmmD,EACT,gBAAgBtqC,GAAA,YAAAA,EAAa,QAAS,CAAC,CAAA,CACxC,EACM,MAAA,CACL,gBAAiBsqC,EAAkB,OAAiBr0C,IAAA,CAClD,MAAMw1C,GAAkBD,GAAe,SAASv1C,GAAO,KAAK,EAC5D,OAAIA,GAAO,QAAU9R,EAAK,OAAS,CAACsnD,KACtBH,GAAA,QAEPG,EAAA,CACR,EACD,cAAeH,EAAA,CACjB,EACC,CAACvB,EAAe/pC,GAAA,YAAAA,EAAa,MAAOsqC,EAAmBnmD,EAAK,MAAO0tB,CAAY,CAAC,EAC7E65B,EAAwBv/B,EAAAA,QAAc,IAAM,CAChD,OAAQ29B,EAAa,CACnB,IAAK,MACH,OAAOsB,EAAgB,KAAK,CAAC7mD,GAAG/E,KAAM6b,GAAS,QAAQguC,GAAe9kD,EAAC,EAAG8kD,GAAe7pD,EAAC,CAAC,CAAC,EAC9F,IAAK,OACH,OAAO4rD,EAAgB,KAAK,CAAC7mD,GAAG/E,KAAM,CAAC6b,GAAS,QAAQguC,GAAe9kD,EAAC,EAAG8kD,GAAe7pD,EAAC,CAAC,CAAC,EAC/F,QACS,OAAA4rD,CACX,CAAA,EACC,CAACA,EAAiBtB,CAAW,CAAC,EAC3B6B,EAAgBxnD,EAAK,MAAQ+H,EAAO,QAAQ,UAAU/H,EAAK,KAAK,EAAI,KACpEynD,GAAkBz/B,EAAAA,QAAc,IAAM,QAC1C,MAAI,CAAChoB,EAAK,UAAY,CAACwnD,EACd,MAEF/sD,GAAA+sD,EAAc,kBAAd,YAAA/sD,GAA+B,SAAiB+hB,GAAS,QAAUxc,EAAK,SAAQ,EACtF,CAACA,EAAMwnD,CAAa,CAAC,EAClBE,GAAe3yC,cAA2BrX,IAAA,CACxC,MAAA+T,GAAQ/T,GAAM,OAAO,MACrBoU,GAAS/J,EAAO,QAAQ,UAAU0J,EAAK,EACzC,GAAAK,GAAO,QAAU01C,EAAc,MAEjC,OAIF,MAAMG,GAAc71C,GAAO,gBAAgB,KAAiB0K,IAAAA,GAAS,QAAUxc,EAAK,QAAQ,GAAK8R,GAAO,gBAAgB,CAAC,EAIrH,IAAA+L,GADqB,CAAC8pC,GAAY,gBAAkBA,GAAY,kBAAmBF,IAAA,YAAAA,GAAiB,iBAAkB31C,GAAO,OAAS01C,EAAc,KACnH,OAAYxnD,EAAK,MAGtD,GAAI8R,GAAO,OAAS,gBAAkB+L,KAAgB,OAAW,CAC/D,MAAMxJ,GAASvC,GACTmjB,GAAeH,GAAgBzgB,EAAM,EACvC,MAAM,QAAQwJ,EAAW,EACbA,GAAAA,GAAY,OAAcze,IAGpC41B,GAAyB51B,GAAK61B,GAAc5gB,IAAA,YAAAA,GAAQ,cAAc,IAAM,MAE3E,EACQ2gB,GAAyBh1B,EAAK,MAAOi1B,GAAc5gB,IAAA,YAAAA,GAAQ,cAAc,IAAM,SAE1EwJ,GAAA,OAElB,CACmBynC,EAAArxC,EAAS,CAAC,EAAGjU,EAAM,CACpC,MAAAyR,GACA,SAAUk2C,GAAY,MACtB,MAAO9pC,EACR,CAAA,CAAC,CAAA,EACD,CAAC9V,EAAQu9C,EAAoBtlD,EAAMwnD,EAAeC,EAAe,CAAC,EAC/DG,GAAiB7yC,cAA2BrX,IAAA,CAC1C,MAAA8e,GAAW9e,GAAM,OAAO,MACxBiqD,GAAcH,GAAA,YAAAA,EAAe,gBAAgB,KAAWK,IAAAA,GAAG,QAAUrrC,IACrEsrC,GAAiB,EAACH,IAAA,MAAAA,GAAa,kBAAkBA,IAAA,YAAAA,GAAa,mBAAmBF,IAAA,YAAAA,GAAiB,gBACrFnC,EAAArxC,EAAS,CAAC,EAAGjU,EAAM,CACpC,SAAAwc,GACA,MAAOsrC,GAAiB,OAAY9nD,EAAK,KAC1C,CAAA,CAAC,GACD,CAACslD,EAAoBtlD,EAAMwnD,EAAeC,EAAe,CAAC,EACvDM,GAAsBhzC,cAA2BrX,IAAA,CAC/C,MAAAunD,GAAgBvnD,GAAM,OAAO,QAAUid,GAAkB,IAAI,SAAS,EAAIA,GAAkB,IAAMA,GAAkB,GAC1H8qC,EAAgCR,EAAa,CAAA,EAC5C,CAACQ,CAA+B,CAAC,EAC9BuC,GAAqB,IAAM,CAC/B3C,EAAarlD,CAAI,CAAA,EAEbwhB,OAAAA,EAAA,oBAAoB7J,EAAiB,KAAO,CAChD,MAAO,IAAM,QACP8vC,IAAA,MAAAA,GAAiB,gBACnBhtD,GAAA+rD,GAAA,YAAAA,EAAU,UAAV,MAAA/rD,GAAmB,QAEnBgsD,EAAkB,QAAQ,OAE9B,CAAA,GACE,CAACgB,EAAe,CAAC,EACDnlC,EAAA,KAAMoiC,GAAoBzwC,EAAS,CACrD,IAAAzV,EACA,UAAWrB,EAAQ,KACnB,UAAW6C,EAAK,GAChB,WAAYoU,GACX7E,EAAO,CACR,SAAU,CAAmB6F,EAAAA,IAAAuvC,GAAsB1wC,EAAS,CAC1D,QAAS,WACT,GAAIG,EAAU,MAAM,eAAA,EACnBwyC,EAAsBf,EAAiB,CACxC,UAAW3lC,GAAK/iB,EAAQ,WAAYypD,EAAqB,UAAWf,EAAgB,SAAS,EAC7F,WAAYzxC,EACZ,SAAuBgB,EAAAA,IAAKhB,EAAU,MAAM,eAAgBH,EAAS,CACnE,aAAclM,EAAO,QAAQ,cAAc,4BAA4B,EACvE,MAAOA,EAAO,QAAQ,cAAc,4BAA4B,EAChE,QAASigD,GACT,KAAM,QACN,SAAU9B,CAAA,GACTzvB,GAAAriB,EAAU,YAAV,YAAAqiB,GAAqB,eAAgB,CACtC,SAAuBrhB,EAAA,IAAKhB,EAAU,MAAM,sBAAuB,CACjE,SAAU,OAAA,CACX,CAAA,CACF,CAAC,CACH,CAAA,CAAC,EAAgBgB,EAAAA,IAAKwvC,GAA8B3wC,EAAS,CAC5D,QAAS,WACT,GAAIG,EAAU,MAAM,eAAA,EACnBwyC,EAAsBd,EAAyB,CAChD,GAAI7xC,EAAS,CACX,QAAS0yC,EAAyB,OAAS,OAC3C,WAAYpB,EAA2B,UAAY,QAAA,EAClDqB,EAAqB,IAAM,CAAA,EAAId,EAAwB,IAAM,CAAA,CAAE,EAClE,UAAW5lC,GAAK/iB,EAAQ,mBAAoBypD,EAAqB,UAAWd,EAAwB,SAAS,EAC7G,WAAY1xC,EACZ,SAAuBgB,EAAAA,IAAKhB,EAAU,MAAM,WAAYH,EAAS,CAC/D,WAAY,CACV,aAAclM,EAAO,QAAQ,cAAc,0BAA0B,CACvE,EACA,MAAO2+C,GAAuB,GAC9B,SAAUqB,GACV,SAAU,CAAC,CAACvC,GAA8BE,EAAe,SAAW,EACpE,OAAQmB,CAAA,GACPoB,GAAA7zC,EAAU,YAAV,YAAA6zC,GAAqB,WAAY,CAClC,SAAUvC,EAAe,IAAkCT,IAAAlvB,EAAA,cAAe3hB,EAAU,MAAM,iBAAkBH,EAAS,CAAA,EAAI6U,EAAuB,CAC9I,OAAQ+9B,EACR,IAAK5B,GAAc,SAAS,EAC5B,MAAOA,GAAc,SAAS,CAAA,CAC/B,EAAGl9C,EAAO,QAAQ,cAAci9C,GAA0BC,EAAa,CAAC,CAAC,CAAC,CAAA,CAC5E,CAAC,CACH,CAAA,CAAC,EAAgB3iC,EAAAA,KAAMuiC,GAAuB5wC,EAAS,CACtD,QAAS,WACT,GAAIG,EAAU,MAAM,eAAA,EACnBwyC,EAAsBZ,EAAkB,CACzC,UAAW9lC,GAAK/iB,EAAQ,YAAaypD,EAAqB,UAAWZ,EAAiB,SAAS,EAC/F,WAAY5xC,EACZ,SAAU,CAAmBgB,EAAA,IAAAhB,EAAU,MAAM,eAAgBH,EAAS,CAAC,EAAG6yC,EAAqB,CAC7F,QAASV,EACT,GAAIC,EACJ,SAAUt+C,EAAO,QAAQ,cAAc,oBAAoB,CAAA,CAC5D,CAAC,QAAqBqM,EAAU,MAAM,WAAYH,EAAS,CAC1D,QAASoyC,EACT,GAAID,EACJ,MAAOr+C,EAAO,QAAQ,cAAc,oBAAoB,EACxD,MAAOm/C,GAAiB,GACxB,SAAUQ,GACV,OAAQb,EACR,SAAUX,CAAA,GACTgC,GAAA9zC,EAAU,YAAV,YAAA8zC,GAAqB,WAAY,CAClC,SAAUX,EAAsB,IAAwBl0C,IAAA0iB,EAAA,cAAe3hB,EAAU,MAAM,iBAAkBH,EAAS,CAAA,EAAI6U,EAAuB,CAC3I,OAAQ+9B,EACR,IAAKxzC,GAAI,MACT,MAAOA,GAAI,KAAA,CACZ,EAAG6xC,GAAe7xC,EAAG,CAAC,CAAC,CACzB,CAAA,CAAC,CAAC,CACJ,CAAA,CAAC,EAAgBiP,EAAAA,KAAMwiC,GAAyB7wC,EAAS,CACxD,QAAS,WACT,GAAIG,EAAU,MAAM,eAAA,EACnBwyC,EAAsBb,EAAoB,CAC3C,UAAW7lC,GAAK/iB,EAAQ,cAAeypD,EAAqB,UAAWb,EAAmB,SAAS,EACnG,WAAY3xC,EACZ,SAAU,CAAmBgB,EAAA,IAAAhB,EAAU,MAAM,eAAgBH,EAAS,CAAC,EAAG6yC,EAAqB,CAC7F,QAASR,EACT,GAAIC,EACJ,SAAUx+C,EAAO,QAAQ,cAAc,qBAAqB,CAAA,CAC7D,CAAC,QAAqBqM,EAAU,MAAM,WAAYH,EAAS,CAC1D,QAASsyC,EACT,MAAOx+C,EAAO,QAAQ,cAAc,qBAAqB,EACzD,GAAIu+C,EACJ,MAAOtmD,EAAK,SACZ,SAAU4nD,GACV,OAAQf,EACR,SAAUJ,EACV,SAAUP,CAAA,GACTiC,GAAA/zC,EAAU,YAAV,YAAA+zC,GAAqB,WAAY,CAClC,UAAUC,GAAAZ,GAAA,YAAAA,EAAe,kBAAf,YAAAY,GAAgC,IAA6B5rC,IAAAuZ,EAAAA,cAAe3hB,EAAU,MAAM,iBAAkBH,EAAS,CAAA,EAAI6U,EAAuB,CAC1J,OAAQ+9B,EACR,IAAKrqC,GAAS,MACd,MAAOA,GAAS,KACjB,CAAA,EAAGA,GAAS,OAASzU,EAAO,QAAQ,cAAc,iBAAiB8pC,GAAWr1B,GAAS,KAAK,CAAC,EAAE,CAAC,EAClG,CAAA,CAAC,CAAC,CACJ,CAAA,CAAC,EAAgBpH,EAAAA,IAAK2vC,GAAsB9wC,EAAS,CACpD,QAAS,WACT,GAAIG,EAAU,MAAM,eAAA,EACnBwyC,EAAsBI,EAAsB,CAC7C,UAAW9mC,GAAK/iB,EAAQ,WAAYypD,EAAqB,UAAWI,EAAqB,SAAS,EAClG,WAAY5yC,EACZ,SAAUqzC,IAAA,MAAAA,GAAiB,eAAmCryC,EAAA,IAAAqyC,GAAgB,eAAgBxzC,EAAS,CACrG,OAAAlM,EACA,KAAA/H,EACA,WAAYslD,EACZ,gBAAiBkB,EACjB,SAAUN,CAAA,EACTuB,GAAgB,oBAAqBV,CAAmB,EAAG/mD,EAAK,KAAK,EAAI,IAC7E,CAAA,CAAC,CAAC,CACJ,CAAA,CAAC,CACJ,CAAC,EChXKyT,GAAY,CAAC,iBAAkB,cAAe,kBAAmB,wBAAyB,WAAY,yBAA0B,wBAAwB,EAcxJ40C,GAAwBh1C,IAAA,CAC5B,MAAOA,EAAI,MACX,SAAUA,EAAI,gBAAgB,CAAC,EAAE,MACjC,GAAI,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,CACpC,GACMi1C,GAAqCn0C,EAAAA,WAAW,SAAyBxb,EAAO6F,EAAK,SACzF,MAAMuJ,EAASD,KACTsM,EAAYhM,IACZyT,EAActQ,EAAgBxD,EAAQikB,EAAuB,EAC7Dm6B,EAAoB56C,EAAgBxD,EAAQqL,EAAuC,EACnFm1C,EAA0Bh9C,EAAgBxD,EAAQuL,EAAkC,EACpFk1C,EAAgBtgD,SAAa,IAAI,EACjCugD,EAAoBvgD,SAAa,IAAI,EACrC,CACF,eAAAw9C,EAAiB,CAAC/qC,GAAkB,IAAKA,GAAkB,EAAE,EAC7D,YAAAgrC,EACA,gBAAA+C,EACA,sBAAAC,EACA,uBAAAC,EAAyB,GACzB,uBAAAC,EAAyB,EACvB,EAAAlwD,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDq1C,EAAc/gD,EAAO,QAAQ,iBAC7BghD,EAA2Bh0C,cAA8ByH,GAAA,CACtDzU,EAAA,QAAQ,uBAAuByU,CAAQ,CAAA,EAC7C,CAACzU,CAAM,CAAC,EACLihD,EAAmBj0C,EAAAA,YAAkB,IAAM,CAC3C,IAAAk0C,EACA,GAAAN,GAAyB,OAAOA,GAA0B,WAAY,CAExE,MAAMO,EAAgBP,EAAsB,CAC1C,gBAAgB9sC,GAAA,YAAAA,EAAa,QAAS,CAAC,EACvC,QAASsqC,CAAA,CACV,EACD,GAAI+C,IAAkB,KACb,OAAA,KAEgBD,EAAA9C,EAAkB,KAAK,CAAC,CAC/C,MAAA10C,CAAA,IACIA,IAAUy3C,CAAa,CAAA,MAE7BD,EAAyB9C,EAAkB,KAAe9xC,GAAA,OAAA,OAAA5Z,EAAA4Z,EAAO,kBAAP,YAAA5Z,EAAwB,OAAM,EAE1F,OAAKwuD,EAGEZ,GAAcY,CAAsB,EAFlC,MAGR,CAACptC,GAAA,YAAAA,EAAa,MAAOsqC,EAAmBwC,CAAqB,CAAC,EAC3DQ,EAAep0C,EAAAA,YAAkB,IAAM,CAC3C,GAAI4zC,IAA0B,QAAa,OAAOA,GAA0B,WAC1E,OAAOK,EAAiB,EAEpB,MAAAI,EAAiBvtC,EAAY,MAAM,OAASA,EAAY,MAAQ,CAACmtC,EAAkB,CAAA,EAAE,OAAO,OAAO,EAGnGK,EAAsBV,EAAsB,CAChD,eAAAS,EACA,QAASjD,CAAA,CACV,EACD,GAAIkD,IAAwB,KACnB,OAAA,KAEH,MAAAJ,EAAyB9C,EAAkB,KAAK,CAAC,CACrD,MAAA10C,CAAA,IACIA,IAAU43C,CAAmB,EACnC,OAAKJ,EAGEZ,GAAcY,CAAsB,EAFlC,IAEkC,EAC1C,CAACptC,EAAY,MAAOsqC,EAAmBwC,EAAuBK,CAAgB,CAAC,EAC5EttC,EAAQsM,EAAAA,QAAc,IACtBnM,EAAY,MAAM,OACbA,EAAY,OAEhB4sC,EAAkB,UACrBA,EAAkB,QAAUO,KAEvBP,EAAkB,QAAU,CAACA,EAAkB,OAAO,EAAI,CAAA,GAChE,CAAC5sC,EAAY,MAAOmtC,CAAgB,CAAC,EAClC5D,EAAqB1pC,EAAM,OAAS,EACpC,CACJ,gBAAA4tC,EACA,aAAAC,CAAA,EACEvhC,EAAAA,QAAc,IAAMtM,EAAM,OAAO,CAACnI,EAAKvT,KACrCuoD,EAAwBvoD,EAAK,KAAK,EAChCuT,EAAA,aAAa,KAAKvT,CAAI,EAEtBuT,EAAA,gBAAgB,KAAKvT,CAAI,EAExBuT,GACN,CACD,gBAAiB,CAAC,EAClB,aAAc,CAAC,CAChB,CAAA,EAAG,CAACmI,EAAO6sC,CAAuB,CAAC,EAC9BiB,EAAez0C,EAAAA,YAAkB,IAAM,CAC3C,MAAM00C,EAAYN,IACbM,GAGL1hD,EAAO,QAAQ,kBAAkB,CAAC,GAAG2T,EAAO+tC,CAAS,CAAC,CACrD,EAAA,CAAC1hD,EAAQohD,EAAcztC,CAAK,CAAC,EAC1B2pC,EAAetwC,cAA0B/U,GAAA,CACvC,MAAA0pD,EAAyBH,EAAa,SAAW,EAChDxhD,EAAA,QAAQ,iBAAiB/H,CAAI,EAChC0pD,GACF3hD,EAAO,QAAQ,iBAEhB,EAAA,CAACA,EAAQwhD,EAAa,MAAM,CAAC,EAC1BI,EAAkB50C,EAAAA,YAAkB,IACpCw0C,EAAa,SAAW,GAAKA,EAAa,CAAC,EAAE,QAAU,QACzDxhD,EAAO,QAAQ,iBAAiBwhD,EAAa,CAAC,CAAC,EACxCxhD,EAAO,QAAQ,mBAEjBA,EAAO,QAAQ,eAAekM,EAAS,CAAA,EAAI4H,EAAa,CAC7D,MAAOytC,CAAA,CACR,EAAG,sBAAsB,EACzB,CAACvhD,EAAQuhD,EAAiBztC,EAAa0tC,CAAY,CAAC,EACvDh/C,OAAAA,EAAAA,UAAgB,IAAM,CAChBm7C,EAAe,OAAS,GAAK7pC,EAAY,eAAiB,CAAC6pC,EAAe,SAAS7pC,EAAY,aAAa,GACrFktC,EAAArD,EAAe,CAAC,CAAC,GAE3C,CAACA,EAAgBqD,EAA0BltC,EAAY,aAAa,CAAC,EACxEtR,EAAAA,UAAgB,IAAM,CAChBg/C,EAAa,OAAS,GACxBf,EAAc,QAAQ,OACxB,EACC,CAACe,EAAa,MAAM,CAAC,EACJjnC,EAAA,KAAM4+B,GAAkBjtC,EAAS,CACnD,IAAAzV,GACC+Q,EAAO,CACR,SAAU,CAAc+S,EAAA,KAAM+hC,GAAkB,CAC9C,SAAU,CAACiF,EAAgB,IAAI,CAACtpD,EAAMkW,IAA4Bd,EAAAA,IAAA+vC,GAAgBlxC,EAAS,CACzF,KAAAjU,EACA,mBAAoB8oD,EACpB,aAAAzD,EACA,mBAAAD,EACA,yBAA0BlvC,EAAQ,EAClC,2BAA4BA,IAAU,EACtC,gCAAiC6yC,EACjC,gBAAiB,KACjB,SAAU,GACV,eAAArD,EACA,YAAAC,CAAA,EACC+C,CAAe,EAAG1oD,EAAK,IAAM,KAAOkW,EAAQlW,EAAK,EAAE,CAAC,EAAGupD,EAAa,IAAI,CAACvpD,EAAMkW,IAAuBd,EAAA,IAAK+vC,GAAgBlxC,EAAS,CACrI,KAAAjU,EACA,mBAAoB8oD,EACpB,aAAAzD,EACA,mBAAAD,EACA,yBAA0BkE,EAAgB,OAASpzC,EAAQ,EAC3D,2BAA4BozC,EAAgB,OAASpzC,IAAU,EAC/D,gCAAiC6yC,EACjC,gBAAiB7yC,IAAUqzC,EAAa,OAAS,EAAIf,EAAgB,KACrE,eAAA9C,EACA,YAAAC,CACC,EAAA+C,CAAe,EAAG1oD,EAAK,IAAM,KAAOkW,EAAQozC,EAAgB,OAAStpD,EAAK,EAAE,CAAC,CAAC,CAAA,CAClF,EAAG,CAACoU,EAAU,iCAAmC,EAAEw0C,GAA0BC,GAAuCvmC,EAAA,KAAMiiC,GAAiB,CAC1I,SAAU,CAAEqE,EAKYxzC,EAAAA,IAAA,OAAQ,CAAA,CAAE,QALqBhB,EAAU,MAAM,WAAYH,EAAS,CAC1F,QAASu1C,EACT,UAA6Bp0C,EAAAA,IAAAhB,EAAU,MAAM,mBAAoB,CAAA,CAAE,CAAA,GAClE3Z,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,WAAY,CAClC,SAAUsN,EAAO,QAAQ,cAAc,sBAAsB,CAAA,CAC9D,CAAC,EAAmC,CAAC8gD,GAA0BU,EAAa,OAAS,QAAsBn1C,EAAU,MAAM,WAAYH,EAAS,CAC/I,QAAS01C,EACT,UAA6Bv0C,EAAAA,IAAAhB,EAAU,MAAM,yBAA0B,CAAA,CAAE,CAAA,GACxE5B,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,WAAY,CAClC,SAAUzK,EAAO,QAAQ,cAAc,sBAAsB,CAAA,CAC9D,CAAC,EAAI,IAAI,CACX,CAAA,EAAI,IAAI,CACV,CAAA,CAAC,CACJ,CAAC,EC/KK6hD,GAA8Cz1C,EAAAA,WAAW,SAAkCxb,EAAO6F,EAAK,SACrG,KAAA,CACJ,UAAAogD,EAAY,CAAC,CACX,EAAAjmD,EACEkxD,EAAcjL,EAAU,QAAU,GAClCkL,EAAelL,EAAU,SAAW,GACpCmL,EAAiBvxC,KACjBwxC,EAAgBxxC,KAChBzQ,EAASD,KACTsM,EAAYhM,IACZi0C,EAAkB9wC,EAAgBxD,EAAQojC,EAAgC,EAC1E+U,EAAuBxiD,GAAA,OACvB2+C,EAAgB,MAAQA,EAAgB,mBAAqBjR,GAA0B,QACzFrjC,EAAO,QAAQ,kBAEfA,EAAO,QAAQ,gBAAgBqjC,GAA0B,QAAS4e,EAAeD,CAAc,GAEjGtvD,EAAAovD,EAAY,UAAZ,MAAApvD,EAAA,KAAAovD,EAAsBnsD,EAAK,EAI7B,GAAI0W,EAAU,sBACL,OAAA,KAET,MAAM61C,EAAS5N,EAAgB,MAAQA,EAAgB,UAAY2N,EACnE,OAAyB50C,EAAA,IAAAhB,EAAU,MAAM,YAAaH,EAAS,CAC7D,MAAOlM,EAAO,QAAQ,cAAc,qBAAqB,EACzD,WAAY,GACX,EAAA+hD,GAAcrvD,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,YAAa,CACjD,SAAuB2a,EAAAA,IAAKhB,EAAU,MAAM,WAAYH,EAAS,CAC/D,IAAAzV,EACA,GAAIurD,EACJ,KAAM,QACN,aAAchiD,EAAO,QAAQ,cAAc,qBAAqB,EAChE,gBAAiB,OACjB,gBAAiBkiD,EACjB,gBAAiBA,EAASD,EAAgB,OAC1C,UAA6B50C,EAAAA,IAAAhB,EAAU,MAAM,mBAAoB,CAAA,CAAE,GAClEy1C,EAAa,CACd,QAAS3J,CAAA,GACR1tC,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,WAAY,CAClC,SAAUzK,EAAO,QAAQ,cAAc,gBAAgB,CAAA,CACxD,CAAC,CACH,CAAA,CAAC,CACJ,CAAC,ECvCKmiD,GAAgD/1C,EAAAA,WAAW,SAAoCxb,EAAO6F,EAAK,SACzG,KAAA,CACJ,UAAAogD,EAAY,CAAC,CACX,EAAAjmD,EACEkxD,EAAcjL,EAAU,QAAU,GAClCkL,EAAelL,EAAU,SAAW,GACpC72C,EAASD,KACTsM,EAAYhM,IACZ0I,EAAUvF,EAAgBxD,EAAQ6I,EAAmB,EACrDu5C,EAAkB3xC,KAClB4xC,EAAgB5xC,KAChB,CAACgH,EAAMoB,CAAO,EAAI5W,WAAe,EAAK,EACtC8W,EAAY5Y,SAAa,IAAI,EAC7BwhB,EAAYC,GAAWnrB,EAAKsiB,CAAS,EACrCupC,EAAiB,CAAC,CACtB,KAAwBj1C,EAAAA,IAAAhB,EAAU,MAAM,mBAAoB,CAAA,CAAE,EAC9D,MAAOrM,EAAO,QAAQ,cAAc,uBAAuB,EAC3D,MAAO,SAAA,EACN,CACD,KAAwBqN,EAAAA,IAAAhB,EAAU,MAAM,oBAAqB,CAAA,CAAE,EAC/D,MAAOrM,EAAO,QAAQ,cAAc,wBAAwB,EAC5D,MAAO,UAAA,EACN,CACD,KAAwBqN,EAAAA,IAAAhB,EAAU,MAAM,uBAAwB,CAAA,CAAE,EAClE,MAAOrM,EAAO,QAAQ,cAAc,2BAA2B,EAC/D,MAAO,aAAA,CACR,EACKuiD,EAAYtiC,EAAAA,QAAc,IAAM,CACpC,OAAQlX,EAAS,CACf,IAAK,UACH,OAAyBsE,EAAA,IAAAhB,EAAU,MAAM,mBAAoB,CAAE,CAAA,EACjE,IAAK,cACH,OAAyBgB,EAAA,IAAAhB,EAAU,MAAM,uBAAwB,CAAE,CAAA,EACrE,QACE,OAAyBgB,EAAA,IAAAhB,EAAU,MAAM,oBAAqB,CAAE,CAAA,CACpE,CAAA,EACC,CAACtD,EAASsD,CAAS,CAAC,EACjBm2C,EAAqC7sD,GAAA,OACjCkjB,EAAA4pC,GAAY,CAACA,CAAQ,GAC7B/vD,EAAAovD,EAAY,UAAZ,MAAApvD,EAAA,KAAAovD,EAAsBnsD,EAAK,EAEvB+sD,EAA6B,IAAM,CACvC7pC,EAAQ,EAAK,CAAA,EAET8pC,EAAoCC,GAAA,CACjC5iD,EAAA,QAAQ,WAAW4iD,CAAU,EACpC/pC,EAAQ,EAAK,CAAA,EAETyB,EAA6B3kB,GAAA,CAC7B62B,GAAS72B,EAAM,GAAG,GACpBA,EAAM,eAAe,EAEnBi3B,GAAcj3B,EAAM,GAAG,GACzBkjB,EAAQ,EAAK,CACf,EAIF,GAAIxM,EAAU,uBACL,OAAA,KAET,MAAMw2C,EAAkBP,EAAe,IAAI,CAAC9vC,EAAQrE,WAA6B2+B,GAAU,CACzF,QAAS,IAAM6V,EAAoBnwC,EAAO,KAAK,EAC/C,SAAUA,EAAO,QAAUzJ,EAC3B,SAAU,CAAcsE,EAAA,IAAK0/B,GAAc,CACzC,SAAUv6B,EAAO,IAAA,CAClB,EAAGA,EAAO,KAAK,CAAA,EACfrE,CAAK,CAAC,EACW,OAAAoM,EAAAA,KAAMk5B,EAAAA,SAAgB,CACxC,SAAU,CAAcpmC,EAAAA,IAAKhB,EAAU,MAAM,YAAaH,EAAS,CACjE,MAAOlM,EAAO,QAAQ,cAAc,qBAAqB,EACzD,WAAY,GACX,EAAA+hD,GAAcrvD,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,YAAa,CACjD,SAAuB2a,EAAAA,IAAKhB,EAAU,MAAM,WAAYH,EAAS,CAC/D,IAAKyV,EACL,KAAM,QACN,UAAA4gC,EACA,aAAcviD,EAAO,QAAQ,cAAc,qBAAqB,EAChE,gBAAiB,OACjB,gBAAiByX,EACjB,gBAAiBA,EAAO4qC,EAAgB,OACxC,GAAID,GACHN,EAAa,CACd,QAASU,CAAA,GACR/3C,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,WAAY,CAClC,SAAUzK,EAAO,QAAQ,cAAc,gBAAgB,CAAA,CACxD,CAAC,CAAA,CACH,CAAC,EAAgBqN,EAAA,IAAKmK,GAAU,CAC/B,KAAAC,EACA,OAAQsB,EAAU,QAClB,QAAS2pC,EACT,SAAU,eACV,eAA4BhoC,GAAU,CACpC,GAAI2nC,EACJ,UAAWthD,EAAY,SACvB,kBAAmBqhD,EACnB,UAAW9nC,EACX,cAAe7C,EACf,SAAUorC,CAAA,CACX,CAAA,CACF,CAAC,CAAA,CACH,CACH,CAAC,ECtGKl3C,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,mBAAmB,CAAA,EAECjL,GAAyBxL,CAAO,CAC/D,EACM0tD,GAA4B/2C,GAAO,KAAM,CAC7C,KAAM,cACN,KAAM,oBACN,kBAAmB,CAACg3C,EAAQ92C,IAAWA,EAAO,iBAChD,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,OAAQA,EAAM,QAAQ,EAAG,EAAG,EAAG,EAC/B,QAASA,EAAM,QAAQ,EAAG,CAAC,CAC7B,EAAE,EACIkuD,GAA6C52C,EAAAA,WAAW,SAAiCxb,EAAO6F,EAAK,SACnG,KAAA,CACJ,UAAAogD,EAAY,CAAC,CACX,EAAAjmD,EACEkxD,EAAcjL,EAAU,QAAU,GAClCkL,EAAelL,EAAU,SAAW,GACpC72C,EAASD,KACTsM,EAAYhM,IACZwlB,EAAgBriB,EAAgBxD,EAAQ0lB,EAA6B,EACrEjc,EAASjG,EAAgBxD,EAAQsJ,EAAwB,EACzDgrC,EAAkB9wC,EAAgBxD,EAAQojC,EAAgC,EAC1EhuC,EAAUuW,GAAkBU,CAAS,EACrC42C,EAAiBxyC,KACjByyC,EAAgBzyC,KAChB0yC,EAAqBljC,EAAAA,QAAc,IAAM,CAC7C,GAAIq0B,EAAgB,KACX,OAAAt0C,EAAO,QAAQ,cAAc,2BAA2B,EAE7D,GAAA6lB,EAAc,SAAW,EACpB,OAAA7lB,EAAO,QAAQ,cAAc,2BAA2B,EAE3D,MAAAojD,EAA2BnrD,GAAAwR,EAAOxR,EAAK,KAAK,EAAE,gBAAgB,KAAiBwc,GAAAA,EAAS,QAAUxc,EAAK,QAAQ,EAAE,OAAS+H,EAAO,QAAQ,cAAc,iBAAiB8pC,GAAW7xC,EAAK,QAAQ,CAAC,EAAE,EAAE,SAAS,EAC9MorD,EAA6BprD,GAAA,CAC3B,KAAA,CACJ,iBAAAqrD,CACF,EAAI75C,EAAOxR,EAAK,KAAK,EAAE,gBAAgB,KAAiBwc,GAAAA,EAAS,QAAUxc,EAAK,QAAQ,EACxF,OAAOqrD,EAAmBA,EAAiBrrD,EAAK,KAAK,EAAIA,EAAK,KAAA,EAEhE,cAA0B,MAAO,CAC/B,SAAU,CAAC+H,EAAO,QAAQ,cAAc,6BAA6B,EAAE6lB,EAAc,MAAM,EAAgBxY,EAAA,IAAKy1C,GAA2B,CACzI,UAAW1tD,EAAQ,KACnB,WAAYiX,EACZ,SAAUwZ,EAAc,IAAI,CAAC5tB,EAAMkW,IAAUjC,EAAS,CAAC,EAAGzC,EAAOxR,EAAK,KAAK,SAAuB,KAAM,CACtG,SAAU,GAAGwR,EAAOxR,EAAK,KAAK,EAAE,YAAcA,EAAK,KAAK;AAAA,oBAC9CmrD,EAAiBnrD,CAAI,CAAC;AAAA,oBAGhCA,EAAK,OAAS,KAAOorD,EAAmBprD,CAAI,EAAI,EAAE,EAAA,EACjDkW,CAAK,CAAC,CAAC,CAAA,CACX,CAAC,CAAA,CACH,CAAA,EACA,CAACnO,EAAQqM,EAAWioC,EAAgB,KAAMzuB,EAAepc,EAAQrU,CAAO,CAAC,EACtEo/C,EAAwB7+C,GAAA,OACtB,KAAA,CACJ,KAAA8hB,EACA,iBAAAg9B,CACE,EAAAH,EACA78B,GAAQg9B,IAAqBpR,GAA0B,QACzDrjC,EAAO,QAAQ,kBAEfA,EAAO,QAAQ,gBAAgBqjC,GAA0B,QAAS6f,EAAeD,CAAc,GAEjGvwD,EAAAovD,EAAY,UAAZ,MAAApvD,EAAA,KAAAovD,EAAsBnsD,EAAK,EAI7B,GAAI0W,EAAU,oBACL,OAAA,KAET,MAAM61C,EAAS5N,EAAgB,MAAQA,EAAgB,UAAY4O,EACnE,OAAyB71C,EAAA,IAAAhB,EAAU,MAAM,YAAaH,EAAS,CAC7D,MAAOi3C,EACP,WAAY,GACX,EAAApB,GAAcrvD,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,YAAa,CACjD,SAAuB2a,EAAAA,IAAKhB,EAAU,MAAM,WAAYH,EAAS,CAC/D,IAAAzV,EACA,GAAIwsD,EACJ,KAAM,QACN,aAAcjjD,EAAO,QAAQ,cAAc,qBAAqB,EAChE,gBAAiBkiD,EAASgB,EAAgB,OAC1C,gBAAiBhB,EACjB,gBAAiB,GACjB,gBAA6BhO,GAAO,CAClC,aAAcruB,EAAc,OAC5B,MAAO,UACP,SAA4BxY,EAAAA,IAAAhB,EAAU,MAAM,qBAAsB,CAAA,CAAE,CAAA,CACrE,GACAy1C,EAAa,CACd,QAAStN,CAAA,GACR/pC,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,WAAY,CAClC,SAAUzK,EAAO,QAAQ,cAAc,gBAAgB,CAAA,CACxD,CAAC,CACH,CAAA,CAAC,CACJ,CAAC,EC1GKujD,GAAgDn3C,EAAAA,WAAW,SAAoCxb,EAAO6F,EAAK,SACzG,KAAA,CACJ,SAAAxB,EACA,UAAA4hD,EAAY,CAAC,CACX,EAAAjmD,EACEkxD,EAAcjL,EAAU,QAAU,GAClCkL,EAAelL,EAAU,SAAW,GACpC72C,EAASD,KACTsM,EAAYhM,IACZmjD,EAAiB/yC,KACjBgzC,EAAehzC,KACf,CAACgH,EAAMoB,CAAO,EAAI5W,WAAe,EAAK,EACtC8W,EAAY5Y,SAAa,IAAI,EAC7BwhB,EAAYC,GAAWnrB,EAAKsiB,CAAS,EACrC2qC,EAA0B/tD,GAAA,OACtBkjB,EAAA4pC,GAAY,CAACA,CAAQ,GAC7B/vD,EAAAovD,EAAY,UAAZ,MAAApvD,EAAA,KAAAovD,EAAsBnsD,EAAK,EAEvBguD,EAAkB,IAAM9qC,EAAQ,EAAK,EACrCyB,EAA6B3kB,GAAA,CAC7B62B,GAAS72B,EAAM,GAAG,GACpBA,EAAM,eAAe,EAEnBi3B,GAAcj3B,EAAM,GAAG,GACTguD,GAClB,EAEF,OAAI1uD,GAAY,KACP,KAEWslB,EAAAA,KAAMk5B,EAAAA,SAAgB,CACxC,SAAU,CAAcpmC,EAAAA,IAAKhB,EAAU,MAAM,YAAaH,EAAS,CACjE,MAAOlM,EAAO,QAAQ,cAAc,oBAAoB,EACxD,WAAY,GACX,EAAA+hD,GAAcrvD,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,YAAa,CACjD,SAAuB2a,EAAAA,IAAKhB,EAAU,MAAM,WAAYH,EAAS,CAC/D,IAAKyV,EACL,KAAM,QACN,UAA6BtU,EAAAA,IAAAhB,EAAU,MAAM,WAAY,CAAA,CAAE,EAC3D,gBAAiBoL,EACjB,aAAczX,EAAO,QAAQ,cAAc,oBAAoB,EAC/D,gBAAiB,OACjB,gBAAiByX,EAAOgsC,EAAe,OACvC,GAAID,GACH1B,EAAa,CACd,QAAS4B,CAAA,GACRj5C,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,WAAY,CAClC,SAAUzK,EAAO,QAAQ,cAAc,eAAe,CAAA,CACvD,CAAC,CAAA,CACH,CAAC,EAAgBqN,EAAA,IAAKmK,GAAU,CAC/B,KAAAC,EACA,OAAQsB,EAAU,QAClB,QAAS4qC,EACT,SAAU,eACV,eAA4BjpC,GAAU,CACpC,GAAI+oC,EACJ,UAAW1iD,EAAY,SACvB,kBAAmByiD,EACnB,UAAWlpC,EACX,cAAe7C,EACf,SAAUmsC,EAAAA,SAAe,IAAI3uD,EAAmBupB,GAC3B8tB,EAAAA,eAAqB9tB,CAAK,EAGzB/D,EAAAA,aAAmB+D,EAAO,CAC5C,SAAUmlC,CAAA,CACX,EAJQnlC,CAKV,CAAA,CACF,CAAA,CACF,CAAC,CAAA,CACH,CACH,CAAC,EChFK9S,GAAY,CAAC,WAAY,SAAS,EACtC2hB,GAAa,CAAC,WAAY,SAAS,EACnCw2B,GAAa,CAAC,aAAc,eAAgB,cAAc,EAOrD,SAASC,GAAsBlzD,EAAO,CAC3C,MAAMoP,EAASD,KACT,CACF,SAAA6Z,EACA,QAAA7X,CACE,EAAAnR,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EACpC,OAAA2B,EAAA,IAAKy/B,GAAU5gC,EAAS,CAC1C,QAAS,IAAM,CACNlM,EAAA,QAAQ,gBAAgB+B,CAAO,EAC3B6X,GAAA,MAAAA,GACb,GACCpS,EAAO,CACR,SAAUxH,EAAO,QAAQ,cAAc,kBAAkB,CAC1D,CAAA,CAAC,CACJ,CACO,SAAS+jD,GAAwBnzD,EAAO,CAC7C,MAAMoP,EAASD,KACT,CACF,SAAA6Z,EACA,QAAA7X,CACE,EAAAnR,EACJ4W,EAAQmF,GAA8B/b,EAAOy8B,EAAU,EACrC,OAAAhgB,EAAA,IAAKy/B,GAAU5gC,EAAS,CAC1C,QAAS,IAAM,CACNlM,EAAA,QAAQ,kBAAkB+B,CAAO,EAC7B6X,GAAA,MAAAA,GACb,GACCpS,EAAO,CACR,SAAUxH,EAAO,QAAQ,cAAc,oBAAoB,CAC5D,CAAA,CAAC,CACJ,CACA,MAAMgkD,GAAuC53C,EAAAA,WAAW,SAA2Bxb,EAAO6F,EAAK,CACvF,KAAA,CACF,WAAAwtD,EAAa,CAAC,EACd,aAAAC,EAAe,CAAC,EAChB,aAAAC,CACE,EAAAvzD,EACJ4W,EAAQmF,GAA8B/b,EAAOizD,EAAU,EAEnDO,EADSrkD,KACoB,QAAQ,6BAA6B,aAAc,CAAA,EAAI,CACxF,aAAAokD,EACA,WAAAF,EACA,aAAAC,CACD,CAAA,EAAE,KAAK,CAAC7rD,EAAG/E,IAAM+E,EAAE,cAAgB/E,EAAE,cAAgB,EAAI,EAAE,EACxD,OAAA8wD,EAAoB,SAAW,EAC1B,KAEgB/2C,EAAA,IAAAk2C,GAA4Br3C,EAAS,CAAA,EAAI1E,EAAO,CACvE,IAAA/Q,EACA,SAAU2tD,EAAoB,IAAI,CAAC5pC,EAAQrM,IAAuBsM,EAAmB,aAAAD,EAAO,UAAW,CACrG,IAAKrM,CAAA,CACN,CAAC,CACH,CAAA,CAAC,CACJ,CAAC,EC/DKzC,GAAY,CAAC,oBAAqB,uBAAwB,aAAc,WAAW,EAenFC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,oBAAoB,CAAA,EAEAjL,GAAyBxL,CAAO,CAC/D,EACMivD,GAA6Bt4C,GAAOu4C,GAAW,CACnD,KAAM,cACN,KAAM,qBACN,kBAAmB,CAAC1zD,EAAOqb,IAAWA,EAAO,kBAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,MAAO,OACP,cAAeA,EAAM,QAAQ,EAAG,EAChC,UAAW,CACT,WAAYA,EAAM,QAAQ,EAAG,CAC/B,EACA,+BAAgC,CAC9B,aAAc,cAAcA,EAAM,MAAQA,GAAO,QAAQ,OAAO,EAClE,EACC,qOAG4D,CAE3D,QAAS,MACX,CACF,EAAE,EACIyvD,MAAyCC,EAAW,MAAM,GAAG,EAAE,OAAeC,GAAAA,IAAS,EAAE,EACzFC,GAA8BC,GAAUA,EAAO,KAAK,GAAG,EAC7D,SAASC,GAAuBh0D,EAAO,SACrC,MAAMoP,EAASD,KACTsM,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EACrCmJ,EAAoBhS,EAAgBxD,EAAQmkB,EAA6B,EACzE,CACF,kBAAA0gC,EAAoBN,GACpB,qBAAAO,EAAuBJ,GACvB,WAAAl4C,EAAaH,EAAU,iBACvB,UAAAwL,CACE,EAAAjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD,CAAC+tC,EAAaI,CAAc,EAAI53C,EAAAA,SAAe,IAAM6iD,EAAqBtvC,GAAqB,CAAE,CAAA,CAAC,EAClGuvC,EAA2B5kD,SAAaqV,CAAiB,EAC/DhT,EAAAA,UAAgB,IAAM,CACf+O,GAAYwzC,EAAyB,QAASvvC,CAAiB,IAElEuvC,EAAyB,QAAUvvC,EAGnCqkC,EAAkCmL,GAAAzzC,GAAYszC,EAAkBG,CAAe,EAAGxvC,CAAiB,EAAIwvC,EAAkBF,EAAqBtvC,GAAqB,CAAA,CAAE,CAAC,EAEvK,EAAA,CAACA,EAAmBsvC,EAAsBD,CAAiB,CAAC,EACzD,MAAAI,EAAoBj4C,cAAoCk4C,GAAA,CACtD,MAAAC,EAAuBN,EAAkBK,CAAc,EAC7DH,EAAyB,QAAUI,EAC5BnlD,EAAA,QAAQ,qBAAqBmlD,CAAoB,CAAA,EACvD,CAACnlD,EAAQ6kD,CAAiB,CAAC,EACxBO,EAA6BnlC,UAAc,IAAMolC,GAASJ,EAAmBz4C,CAAU,EAAG,CAACy4C,EAAmBz4C,CAAU,CAAC,EACzHsuC,EAA0B9tC,cAA2BrX,GAAA,CACnD,MAAAuvD,EAAiBvvD,EAAM,OAAO,MACpCkkD,EAAeqL,CAAc,EAC7BE,EAA2BF,CAAc,CAAA,EACxC,CAACE,CAA0B,CAAC,EACzBE,EAAoBt4C,EAAAA,YAAkB,IAAM,CAChD6sC,EAAe,EAAE,EACjBoL,EAAkB,EAAE,CAAA,EACnB,CAACA,CAAiB,CAAC,EACF,OAAA53C,EAAA,IAAKg3C,GAA4Bn4C,EAAS,CAC5D,GAAIG,EAAU,MAAM,cACpB,WAAYA,EACZ,QAAS,WACT,MAAOotC,EACP,SAAUqB,EACV,UAAW3iC,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,YAAa4K,EAAO,QAAQ,cAAc,+BAA+B,EACzE,aAAcA,EAAO,QAAQ,cAAc,yBAAyB,EACpE,KAAM,UACLwH,EAAO,CACR,WAAY0E,EAAS,CACnB,eAA6BmB,EAAA,IAAKhB,EAAU,MAAM,gBAAiB,CACjE,SAAU,OAAA,CACX,EACD,aAA2BgB,EAAAA,IAAKhB,EAAU,MAAM,eAAgBH,EAAS,CACvE,aAAclM,EAAO,QAAQ,cAAc,mCAAmC,EAC9E,KAAM,QACN,GAAI,CACF,WAAYy5C,EAAc,UAAY,QACxC,EACA,QAAS6L,CAAA,GACR5yD,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,eAAgB,CACtC,SAAuB2a,EAAA,IAAKhB,EAAU,MAAM,qBAAsB,CAChE,SAAU,OAAA,CACX,CAAA,CACF,CAAC,CAAA,EACD7E,EAAM,UAAU,CAClB,GAAAiD,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,aAAa,CAAC,CACxC,CCpHA,MAAMiB,GAAY,CAAC,YAAa,aAAc,eAAgB,eAAgB,kBAAmB,kBAAkB,EAY7G65C,GAAiCn5C,EAAAA,WAAW,SAAqBxb,EAAO6F,EAAK,CAG3E,KAAA,CACF,WAAAwtD,EACA,aAAAC,EACA,aAAAC,EACA,gBAAAqB,EAAkB,GAClB,iBAAAC,EAAmB,CAAC,CAClB,EAAA70D,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IAClB,OAAIgM,EAAU,qBAAuBA,EAAU,uBAAyBA,EAAU,wBAA0B,CAACm5C,EACpG,KAEWjrC,EAAA,KAAM81B,GAAsBnkC,EAAS,CACvD,IAAAzV,GACC+Q,EAAO,CACR,SAAU,CAAc6F,EAAA,IAAKw0C,GAA0B,CAAE,CAAA,EAAqBx0C,EAAAA,IAAA21C,GAAyB,CAAA,CAAE,EAAqB31C,EAAA,IAAA80C,GAA4B,CAAE,CAAA,QAAqB6B,GAAmB,CAClM,WAAAC,EACA,aAAAC,EAGA,aAAAC,CAAA,CACD,EAAgB92C,EAAA,IAAKq4C,GAAK,CACzB,GAAI,CACF,KAAM,CACR,CAAA,CACD,EAAGF,GAAqCn4C,MAAAu3C,GAAwB14C,EAAS,CAAC,EAAGu5C,CAAgB,CAAC,CAAC,CACjG,CAAA,CAAC,CACJ,CAAC,EC1CK/5C,GAAY,CAAC,YAAa,kBAAkB,EAU5CC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,kBAAkB,CAAA,EAEEjL,GAAyBxL,CAAO,CAC/D,EACMuwD,GAA2B55C,GAAO,MAAO,CAC7C,KAAM,cACN,KAAM,mBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,gBAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,WAAY,SACZ,QAAS,OACT,OAAQA,EAAM,QAAQ,EAAG,CAAC,EAC1B,WAAY,SACZ,MAAO,EACP,OAAQ,EACR,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,WAAY,UACZ,MAAO,OACP,OAAQ,MACV,CACF,EAAE,EACI8wD,GAA0Cx5C,EAAAA,WAAW,SAA8Bxb,EAAO6F,EAAK,CAC7F,KAAA,CACF,UAAAohB,EACA,iBAAAguC,CACE,EAAAj1D,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACT6L,EAAavL,IACbjL,EAAUuW,GAAkBC,CAAU,EACtCk6C,EAAkB9lD,EAAO,QAAQ,cAAc,mBAAmB,EAAE6lD,CAAgB,EACtE,OAAAx4C,EAAA,IAAKs4C,GAA0Bz5C,EAAS,CAC1D,IAAAzV,EACA,UAAW0hB,GAAK/iB,EAAQ,KAAMyiB,CAAS,EACvC,WAAAjM,GACCpE,EAAO,CACR,SAAUs+C,CACX,CAAA,CAAC,CACJ,CAAC,EC7CKC,GAAgC35C,EAAAA,WAAW,SAAoBxb,EAAO6F,EAAK,SAC/E,MAAMuJ,EAASD,KACTsM,EAAYhM,IACZ2lD,EAAwBxiD,EAAgBxD,EAAQkb,EAA4B,EAC5E2qC,EAAmBriD,EAAgBxD,EAAQ+iB,EAA6B,EACxEwF,EAA0B/kB,EAAgBxD,EAAQolB,EAAoC,EACtF6gC,EAA0B,CAAC55C,EAAU,4BAA8Bw5C,EAAmB,QAAsBD,GAAsB,CACtI,iBAAAC,CACD,CAAA,EAAsBx4C,EAAA,IAAA,MAAO,CAAA,CAAE,EAC1B64C,EAAkB,CAAC75C,EAAU,oBAAsB,CAACA,EAAU,WAA0BgB,EAAA,IAAKhB,EAAU,MAAM,eAAgBH,EAAS,CAAI,GAAAxZ,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,eAAgB,CACnL,SAAUszD,EACV,gBAAiBz9B,CAAA,CAClB,CAAC,EAAI,KACA49B,EAAoB95C,EAAU,YAAc,CAACA,EAAU,sBAAwBA,EAAU,MAAM,kBAAgCA,EAAU,MAAM,WAAYH,EAAS,IAAIzB,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,UAAU,CAAC,EAC1L,OAAA8P,EAAA,KAAM01B,GAAqB/jC,EAAS,CACtD,IAAAzV,GACC7F,EAAO,CACR,SAAU,CAACq1D,EAAyBC,EAAiBC,CAAiB,CACvE,CAAA,CAAC,CACJ,CAAC,ECtBM,SAASC,IAAuB,SACrC,MAAMpmD,EAASD,KACT8J,EAAUrG,EAAgBxD,EAAQuJ,EAA6B,EAC/D8C,EAAYhM,IACZgmD,EAAuB7iD,EAAgBxD,EAAQojC,EAAgC,EAC/EkjB,EAAetmD,EAAO,QAAQ,6BAA6B,kBAAmB,KAAMqmD,EAAqB,kBAAoBhjB,GAA0B,OAAO,EACpK,OAAoBh2B,EAAI,IAAChB,EAAU,MAAM,MAAOH,EAAS,CACvD,GAAIG,EAAU,MAAM,WACpB,KAAMxC,EAAQ,OAAS,GAAKw8C,EAAqB,KACjD,GAAIA,EAAqB,QACzB,kBAAmBA,EAAqB,OAC5C,GAAK3zD,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,OAAO+X,EAAA4B,EAAU,YAAV,YAAA5B,EAAqB,WAAY,CAC9D,SAAU67C,CACX,CAAA,CAAC,CACJ,CClBO,SAASC,IAAa,OAC3B,MAAMl6C,EAAYhM,IAClB,OAAoBka,EAAAA,KAAMk5B,EAAAA,SAAgB,CACxC,SAAU,CAAcpmC,EAAAA,IAAK+4C,GAAsB,CAAE,CAAA,EAAG/5C,EAAU,MAAM,SAAwBgB,EAAAA,IAAKhB,EAAU,MAAM,QAASH,EAAS,CAAA,GAAIxZ,EAAA2Z,EAAU,YAAV,YAAA3Z,EAAqB,OAAO,CAAC,CAAC,CAC7K,CAAG,CACH,CCTO,MAAM8zD,GAAsB,CAACzd,EAAgB3X,EAAe6V,EAAa1L,EAAiBhK,IAAe,CAC9G,MAAMk1B,EAAiBl1B,EAAW,WAAaA,EAAW,cAAgB,EAC1E,IAAI6Y,EACJ,OAAQrB,EAAc,CACpB,KAAK//B,GAAyB,KAC5BohC,EAAe7O,EAAgB0L,CAAW,EAC1C,MACF,KAAKj+B,GAAyB,MAC5BohC,EAAe7Y,EAAW,kBAAoBgK,EAAgB0L,CAAW,EAAI7V,EAAgBq1B,EAC7F,MACF,QACErc,EAAe,EACf,KACH,CACD,OAAOA,CACT,ECZMh1C,GAAU,CACd,KAAM2L,EAAY,gBAClB,OAAQA,EAAY,yBAAyB,EAC7C,UAAWA,EAAY,4BAA4B,EACnD,YAAaA,EAAY,8BAA8B,CACzD,EACA,SAAS2lD,GAAwB,CAC/B,OAAAC,EACA,UAAAC,EAAY,GACZ,YAAAC,CACF,EAAG,CACD,OAAoBx5C,EAAAA,IAAK,MAAO,CAC9B,KAAM,eACN,UAAW8K,GAAK/iB,GAAQ,KAAMuxD,GAAUvxD,GAAQ,OAAQwxD,GAAaxxD,GAAQ,UAAWyxD,GAAezxD,GAAQ,WAAW,CAC9H,CAAG,CACH,CCJA,MAAM0xD,GAAkB/6C,GAAO,MAAO,CACpC,KAAM,cACN,KAAM,yBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,sBAC/C,CAAC,EAAE,CACD,SAAU,OACV,MAAO,cAEP,OAAQ,OACR,SAAU,MACZ,CAAC,EACKN,GAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAxW,CACD,EAAGwW,EAIJ,OAAOC,GAHO,CACZ,KAAM,CAAC,wBAAwB,CACnC,EAC+BjL,GAAyBxL,CAAO,CAC/D,EACM2xD,GAAcr4C,GAAM,SAASA,EAAG,aAAa,eAAe,EAAG,EAAE,EACjEs4C,GAA0C56C,EAAAA,WAAiB,SAAoCxb,EAAOq2D,EAAc,CACxH,MAAM56C,EAAYhM,IACZ,CACJ,MAAAg0B,CACD,EAAGhoB,EACEjX,EAAUuW,GAAkB,CAChC,QAASU,EAAU,OACvB,CAAG,EACK5V,EAAM0J,SAAa,IAAI,EACvBwhB,EAAYC,GAAWnrB,EAAKwwD,CAAY,EACxCjnD,EAASD,KACTwxB,EAAa/tB,EAAgBxD,EAAQiE,EAAsB,EAC3DijD,GAAiB31B,GAAA,YAAAA,EAAY,kBAAkB,SAAU,EACzD41B,EAAoB,KAAK,KAAKD,EAAiB31B,EAAW,SAAS,EACnE61B,EAAa5jD,EAAgBxD,EAAQmL,EAA6B,EAClEF,EAAYzH,EAAgBxD,EAAQgL,EAA2B,EAC/Dq8C,EAAkBpnC,EAAa,QAAC,IAAMhV,EAAU,OAAOlM,GAASA,GAASqoD,CAAU,EAAE,OAAQ,CAACA,EAAYn8C,CAAS,CAAC,EACpHq8C,EAAoB9jD,EAAgBxD,EAAQ4J,EAAoC,EAChFC,EAAUoW,EAAAA,QAAc,IAAMqnC,EAAkB,MAAM,EAAGD,CAAe,EAAG,CAACC,EAAmBD,CAAe,CAAC,EAC/G98C,EAAgB/G,EAAgBxD,EAAQmK,EAA0C,EAClFo9C,EAAiBv6C,EAAiB,YAAC,CAACokB,EAAejjB,EAAOyJ,IAAa,CAC3E,MAAMwyB,EAAeoc,GAAoB5uC,EAAUwZ,EAAejjB,EAAOlD,EAAWsmB,CAAU,EAC9F,MAAO,CACL,CAAC3Z,CAAQ,EAAGwyB,CAClB,CACA,EAAK,CAAC7Y,EAAYtmB,CAAS,CAAC,EACpBu8C,EAAoBx6C,EAAiB,YAACtD,GAAS,CACnD,GAAIa,EAAc,KAAK,UAAUe,GAAOA,EAAI,QAAU5B,CAAK,IAAM,GAC/D,OAAOV,GAAyB,KAElC,GAAIuB,EAAc,MAAM,UAAUe,GAAOA,EAAI,QAAU5B,CAAK,IAAM,GAChE,OAAOV,GAAyB,KAGnC,EAAE,CAACuB,EAAc,KAAMA,EAAc,KAAK,CAAC,EACtCtV,EAAWgrB,EAAAA,QAAc,IAAM,CACnC,MAAMvgB,EAAQ,CAAA,EACd,QAASzF,EAAI,EAAGA,EAAIktD,EAAmBltD,GAAK,EAAG,CAC7C,MAAMwtD,EAAW,CAAA,EACjB,QAAS5gB,EAAW,EAAGA,EAAWh9B,EAAQ,OAAQg9B,GAAY,EAAG,CAC/D,MAAM98B,EAASF,EAAQg9B,CAAQ,EACzBkC,EAAiBye,EAAkBz9C,EAAO,KAAK,EAC/C29C,EAAe3e,IAAmB//B,GAAyB,KAC3D2+C,EAAgB5e,IAAmB//B,GAAyB,MAC5DigC,EAAgBF,EAAiBx+B,EAAcw+B,CAAc,EAAE,OACnEl/B,EAAQ,OAASU,EAAc,KAAK,OAASA,EAAc,MAAM,OAC7D8/B,EAAetB,EAAiBx+B,EAAcw+B,CAAc,EAAE,UAAUz9B,GAAOA,EAAI,QAAUvB,EAAO,KAAK,EAC7G88B,EAAWt8B,EAAc,KAAK,OAC1Bq9C,EAAc7e,GAAkBwe,EAAex9C,EAAO,cAAe88B,EAAUkC,CAAc,EAC7FI,EAAgB5X,EAAW,kBAAoBA,EAAW,kBAAkB,MAC5EoY,EAAkBb,GAA0BC,EAAgBsB,EAAcpB,EAAe58B,EAAU,uBAAwB88B,CAAa,EACxIO,EAAiBL,GAAyBN,EAAgBsB,CAAY,EACtEwd,EAAehhB,IAAah9B,EAAQ,OAAS,EAC7Ci+C,EAAqBH,GAAiBtd,IAAiB,EACvD0d,EAAkBD,GAAsB3e,EACxC6e,EAAiBH,GAAgB,CAACC,GAAsB3e,EACxD8e,EAAgB12B,EAAW,kBAAkB,MAAQA,EAAW,kBAChE22B,EAAiB,KAAK,IAAI,EAAGD,CAAa,EAC1CE,EAAyB96C,EAAAA,IAAKgnB,EAAM,aAAc,CACtD,MAAO6zB,EACP,MAAO,EACR,EAAE,0BAA0BjuD,CAAC,EAAE,EAC1BwsD,EAAiBl1B,EAAW,WAAaA,EAAW,cAAgB,EACpE62B,EAAqBP,GAAgBpB,IAAmB,EAC1DsB,GACFN,EAAS,KAAKU,CAAS,EAEzBV,EAAS,KAAmBp6C,MAAKgnB,EAAM,aAAc,CACnD,MAAOtqB,EAAO,MACd,KAAMA,EAAO,KACb,MAAOA,EAAO,MACd,MAAO,eACP,OAAQwnB,EAAW,UACnB,gBAAiBsV,EACjB,UAAW1uB,GAAKuvC,GAAgB3mD,EAAY,kBAAkB,EAAG4mD,GAAiB5mD,EAAY,mBAAmB,EAAG4oC,GAAmB5oC,EAAY,uBAAuB,EAAG2oC,GAAkB3oC,EAAY,sBAAsB,CAAC,EAClO,MAAOmL,EAAS,CACd,UAAW,GAAGnC,EAAO,aAAa,IACnC,EAAE69C,CAAW,CACxB,EAAW,mBAAmB3tD,CAAC,IAAI8P,EAAO,KAAK,EAAE,CAAC,EACtCi+C,GACFP,EAAS,KAAKU,CAAS,EAErBC,GACFX,EAAS,KAAmBp6C,EAAI,IAACq5C,GAAyB,CACxD,YAAan8C,EAAc,MAAM,OAAS,CAC3C,CAAA,CAAC,CAEL,CACD7K,EAAM,KAAmB2N,EAAI,IAAC,MAAO,CACnC,UAAW8K,GAAKpX,EAAY,IAAKA,EAAY,YAAa9G,IAAM,GAAK8G,EAAY,mBAAmB,CAAC,EACrG,SAAU0mD,CACX,EAAE,gBAAgBxtD,CAAC,EAAE,CAAC,CACxB,CACD,OAAOyF,CACX,EAAK,CAAC20B,EAAOxqB,EAASU,EAAe48C,EAAmB96C,EAAU,uBAAwBklB,EAAW,kBAAmBA,EAAW,kBAAkB,MAAOA,EAAW,UAAWA,EAAW,WAAYA,EAAW,cAAei2B,EAAmBD,CAAc,CAAC,EA0CnQ,OAAA7kD,GAAuB1C,EAAQ,eAvCJsC,GAAU,WACnC,KAAM,CACJ,OAAAgK,EACA,MAAA5N,CACD,EAAG4D,EACEwkC,GAAQp0C,EAAA+D,EAAI,UAAJ,YAAA/D,EAAa,iBAAiB,gBAAgBizC,GAA+Br5B,EAAO,KAAK,CAAC,MACxG,GAAI,CAACw6B,EACH,MAAM,IAAI,MAAM,2EAA2E,EAE7F,MAAMuhB,EAAkBx+C,EAAQ,UAAUyB,GAAOA,EAAI,QAAUgB,EAAO,KAAK,EACrEy8B,EAAiBye,EAAkBl7C,EAAO,KAAK,EAC/Co7C,EAAe3e,IAAmB//B,GAAyB,KAC3D2+C,EAAgB5e,IAAmB//B,GAAyB,MAC5Ds/C,EAAe,iBAAiBxhB,EAAM,CAAC,CAAC,EAAE,iBAAiB,SAAS,EACpEyhB,EAAQ,SAASD,EAAc,EAAE,EAAI5pD,EAM3C,GALIooC,GACFA,EAAM,QAAQjlB,GAAW,CACvBA,EAAQ,MAAM,YAAY,UAAW,GAAGnjB,CAAK,IAAI,CACzD,CAAO,EAECgpD,EAAc,CAChB,MAAMc,GAAc/9C,EAAAhU,EAAI,UAAJ,YAAAgU,EAAa,iBAAiB,IAAI1J,EAAY,kBAAkB,CAAC,IACrFynD,GAAA,MAAAA,EAAa,QAAQ3mC,GAAW,CACbklC,GAAYllC,CAAO,EACrBwmC,IACbxmC,EAAQ,MAAM,KAAO,GAAG,SAAS,iBAAiBA,CAAO,EAAE,KAAM,EAAE,EAAI0mC,CAAK,KAEtF,EACK,CACD,GAAIZ,EAAe,CACjB,MAAMa,GAAcvnC,EAAAxqB,EAAI,UAAJ,YAAAwqB,EAAa,iBAAiB,IAAIlgB,EAAY,mBAAmB,CAAC,IACtFynD,GAAA,MAAAA,EAAa,QAAQ3mC,GAAW,CACbklC,GAAYllC,CAAO,EACrBwmC,IACbxmC,EAAQ,MAAM,MAAQ,GAAG,SAAS,iBAAiBA,CAAO,EAAE,MAAO,EAAE,EAAI0mC,CAAK,KAExF,EACK,CACL,CACmE,EAC7Cl7C,EAAI,IAACy5C,GAAiB56C,EAAS,CACjD,UAAW9W,EAAQ,KACnB,IAAKusB,CACN,EAAE/wB,EAAO,CACR,SAAUqE,CACX,CAAA,CAAC,CACJ,CAAC,ECjLKyW,GAAY,CAAC,UAAW,gBAAiB,OAAO,EAUhD+8C,GAAmB,CACvB,oBAAqB,CACnB,UAAWC,GACX,MAAO,CAAC,CACV,EACA,kBAAmB,CACjB,UAAWC,GACX,MAAO,CACL,QAAS,OACX,CACF,EACA,SAAU,CACR,UAAW3B,GACX,MAAO,CACL,QAAS,OACX,CACF,CACF,EACM4B,GAAwCx8C,EAAAA,WAAW,SAA4Bxb,EAAO6F,EAAK,CACzF,KAAA,CACF,QAAAwZ,EAAU,oBACV,cAAA44C,EAAgB,oBAChB,MAAA3zB,CACE,EAAAtkC,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACT+oD,EAAYtlD,EAAgBxD,EAAQ+a,EAAoB,EACxDguC,EAAgBN,GAAiBK,IAAc,EAAID,EAAgB54C,CAAO,EAC5D,OAAA5C,EAAA,IAAK8iC,GAAajkC,EAAS,CAC7C,IAAAzV,EACA,MAAOyV,EAAS,CAAA,EAAI68C,EAAc,MAAO7zB,CAAK,GAC7C1tB,EAAO,CACR,SAAuB6F,EAAA,IAAK07C,EAAc,UAAW,CAAA,CAAE,CACxD,CAAA,CAAC,CACJ,CAAC,ECxCKC,GAAuC58C,EAAAA,WAAW,SAA2Bxb,EAAO6F,EAAK,CAE7F,MAAMwyD,EADSlpD,KACY,QAAQ,cAAc,aAAa,EAC1C,OAAAsN,EAAA,IAAK8iC,GAAajkC,EAAS,CAC7C,IAAAzV,GACC7F,EAAO,CACR,SAAUq4D,CACX,CAAA,CAAC,CACJ,CAAC,ECJKC,GAAqBn9C,GAAOo9C,EAAe,EAAE,CAAC,CAClD,MAAAr0D,CACF,KAAO,CACL,UAAW,mBAEX,CAAC,MAAMs0D,GAAuB,WAAW,EAAE,EAAG,CAC5C,QAAS,OACT,CAACt0D,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,QAAS,OACX,CACF,EACA,CAAC,MAAMs0D,GAAuB,KAAK,EAAE,EAAG,CACtC,QAAS,OACT,CAACt0D,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,QAAS,aACX,CACF,CACF,EAAE,EACIu0D,GAAyB,CAACC,EAAoBC,IAC3C,CAAC,CACN,KAAAl4C,EACA,GAAAC,EACA,MAAA7Q,EACA,KAAA6mB,KACIgiC,EAAmB,CACvB,KAAAj4C,EACA,GAAAC,EACA,MAAA7Q,EACA,KAAA6mB,EACA,UAAAiiC,CAAA,CACD,EAEGC,GAA4B,CAAC,CACjC,KAAAn4C,EACA,GAAAC,EACA,MAAA7Q,EACA,UAAA8oD,CACF,IACOA,EAGE,GAAGl4C,CAAI,IAAIC,CAAE,OAAO7Q,IAAU,GAAKA,EAAQ,aAAa8oD,EAAYj4C,EAAKi4C,EAAYj4C,CAAE,EAAE,GAFvF,GAAGD,CAAI,IAAIC,CAAE,OAAO7Q,IAAU,GAAKA,EAAQ,aAAa6Q,CAAE,EAAE,GAOjEm4C,GAAoCr9C,EAAAA,WAAW,SAAwBxb,EAAO6F,EAAK,CACvF,MAAMuJ,EAASD,KACTsM,EAAYhM,IACZ6nB,EAAkB1kB,EAAgBxD,EAAQ6nB,EAA2B,EACrE/K,EAAWtZ,EAAgBxD,EAAQ+nB,EAA8B,EACjEN,EAAYjkB,EAAgBxD,EAAQooB,EAAqB,EACzD,CACJ,eAAAshC,EACA,QAAA7sC,EACA,kBAAA8sC,CACE,EAAAt9C,EACEu9C,EAAgB3pC,EAAAA,QAAc,IAC9BnD,IAAa,IAAM4sC,IAAmB,UAAY7sC,EAC7C,CACL,oBAAqB,CACnB,SAAU,EACZ,EACA,oBAAqB,CACnB,SAAU,EACZ,CAAA,EAGG,GACN,CAACA,EAAS6sC,EAAgB5sC,CAAQ,CAAC,EAChC+sC,EAAW5pC,EAAAA,QAAc,IAAM,KAAK,IAAI,EAAGwH,EAAY,CAAC,EAAG,CAACA,CAAS,CAAC,EACtEqiC,EAAe7pC,EAAAA,QAAc,IAC7BnD,IAAa,IAGVoL,EAAgB,MAAQ2hC,EAFtB3hC,EAAgB,KAEwC2hC,EAChE,CAACA,EAAU3hC,EAAgB,KAAMpL,CAAQ,CAAC,EACvCitC,EAAuB/8C,cAA2BrX,GAAA,CACtD,MAAM0xB,EAAW,OAAO1xB,EAAM,OAAO,KAAK,EACnCqK,EAAA,QAAQ,YAAYqnB,CAAQ,CAAA,EAClC,CAACrnB,CAAM,CAAC,EACLgqD,EAAmBh9C,EAAAA,YAAkB,CAAC/J,EAAGqkB,IAAS,CAC/CtnB,EAAA,QAAQ,QAAQsnB,CAAI,CAAA,EAC1B,CAACtnB,CAAM,CAAC,EAuBLiqD,GAtBkD5iC,GAAA,CACtD,QAASptB,EAAI,EAAGA,EAAIoS,EAAU,gBAAgB,OAAQpS,GAAK,EAAG,CACtD,MAAAuY,EAASnG,EAAU,gBAAgBpS,CAAC,EACtC,GAAA,OAAOuY,GAAW,UACpB,GAAIA,IAAW6U,EACN,MAAA,WAEA7U,EAAO,QAAU6U,EACnB,MAAA,EAEX,CACO,MAAA,EAAA,GAWmDa,EAAgB,QAAQ,EAAI7b,EAAU,gBAAkB,GAC9G69C,EAAUlqD,EAAO,QAAQ,cAAc,oBAAoB,EAC3DmqD,EAA4Bd,GAAuBa,EAAQ,oBAAsBV,GAA2BG,CAAiB,EAC/G,OAAAt8C,EAAA,IAAK67C,GAAoBh9C,EAAS,CACpD,IAAAzV,EACA,UAAW,MACX,MAAOqmB,EACP,KAAMgtC,EAKN,mBAAoBG,EACpB,YAAa/hC,EAAgB,SAC7B,aAAc8hC,EACd,oBAAqBD,CAAA,EACpBH,EAAeM,EAAS,CACzB,mBAAoBC,CAAA,EACnBv5D,CAAK,CAAC,CACX,CAAC,ECrIK8a,GAAY,CAAC,YAAa,WAAY,iBAAiB,EAUvDC,GAAkCC,GAAA,CAChC,KAAA,CACJ,QAAAxW,CACE,EAAAwW,EAIG,OAAAC,GAHO,CACZ,KAAM,CAAC,UAAU,CAAA,EAEUjL,GAAyBxL,CAAO,CAC/D,EACMg1D,GAAmBr+C,GAAO,MAAO,CACrC,KAAM,cACN,KAAM,WACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,QAC/C,CAAC,EAAE,CAAC,CACF,MAAAnX,CACF,KAAO,CACL,WAAY,SACZ,QAAS,OACT,OAAQA,EAAM,QAAQ,EAAG,CAAC,CAC5B,EAAE,EACIu1D,GAAkCj+C,EAAAA,WAAW,SAAsBxb,EAAO6F,EAAK,CAC7E,KAAA,CACF,UAAAohB,EACA,SAAAiF,EACA,gBAAAmiB,CACE,EAAAruC,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACT6L,EAAavL,IACbjL,EAAUuW,GAAkBC,CAAU,EAC5C,GAAIkR,IAAa,EACR,OAAA,KAET,MAAMwtC,EAAOrrB,EAAkBniB,EAAW9c,EAAO,QAAQ,cAAc,wBAAwB,EAAEi/B,EAAiBniB,CAAQ,EAAIA,EAAS,eAAe,EAClI,OAAAvC,EAAA,KAAM6vC,GAAkBl+C,EAAS,CACnD,IAAAzV,EACA,UAAW0hB,GAAK/iB,EAAQ,KAAMyiB,CAAS,EACvC,WAAAjM,GACCpE,EAAO,CACR,SAAU,CAACxH,EAAO,QAAQ,cAAc,iBAAiB,EAAG,IAAKsqD,CAAI,CACtE,CAAA,CAAC,CACJ,CAAC,ECnDM,SAASC,GAAmBn1D,EAASi/B,EAAO,CACjD,OAAOxoB,GAAewoB,EAAOzzB,GAAyBxL,CAAO,CAC/D,CCHO,MAAMo1D,GAAiC,0BCCxC9+C,GAAY,CAAC,WAAY,QAAS,MAAO,QAAS,QAAS,YAAa,YAAa,iBAAkB,gBAAiB,YAAa,aAAc,aAAc,gBAAiB,qBAAsB,iBAAkB,gBAAiB,eAAgB,mBAAoB,cAAe,eAAgB,UAAW,gBAAiB,eAAgB,eAAgB,aAAc,aAAa,EA0B3Y,SAAS++C,GAAU,CACjB,MAAA/rD,CACF,EAAG,CACD,OAAKA,QAGoB,MAAO,CAC9B,KAAM,eACN,UAAWyZ,GAAKpX,EAAY,KAAMA,EAAY,SAAS,EACvD,MAAO,CACL,UAAW,GAAGrC,CAAK,IACrB,CAAA,CACD,EARQ,IASX,CACA,MAAMgsD,GAA6Bt+C,EAAAA,WAAW,SAAiBxb,EAAO+5D,EAAS,QACvE,KAAA,CACF,SAAAC,EACA,MAAAvnC,EACA,IAAA1U,EACA,MAAAR,EACA,MAAO87B,EACP,UAAA4gB,EACA,UAAAhzC,EACA,eAAA5N,EACA,cAAAM,EACA,WAAA8xB,EACA,WAAA9K,EACA,cAAA0H,EACA,mBAAA6xB,EACA,eAAAhvB,EACA,cAAAC,EACA,aAAAG,EACA,iBAAAK,EACA,QAAAviB,EACA,cAAAswB,EACA,aAAAygB,EACA,aAAAC,EACA,WAAAC,EACA,YAAAxgB,CACE,EAAA75C,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD1L,EAASD,KACTtJ,EAAM0J,SAAa,IAAI,EACvBkM,EAAYhM,IACZk4B,EAActC,GAAmBj2B,EAAQqM,CAAS,EAClDqB,EAAYlK,EAAgBxD,EAAQ6jB,EAAqB,EACzDqnC,EAAY1nD,EAAgBxD,EAAQyb,EAA+B,EACnE+kB,EAAyBh9B,EAAgBxD,EAAQswB,EAAsC,EACvFiL,EAAkB/3B,EAAgBxD,EAAQgL,EAA2B,EACrEmgD,EAAgB3nD,EAAgBxD,EAAQmjC,EAAyB,EACjExhB,EAAYC,GAAWnrB,EAAKk0D,CAAO,EACnCxsC,EAAUne,EAAO,QAAQ,WAAWqjB,CAAK,EACzCojC,EAAiBl1B,EAAW,WAAaA,EAAW,cAAgB,EACpE4X,EAAgB5X,EAAW,kBAAoBA,EAAW,kBAAkB,MAC5E65B,EAAUprD,EAAO,QAAQ,WAAWqjB,CAAK,IAAM1Q,GAAa,KAC5D04C,EAAWh/C,EAAU,WAAaoG,GAAc,IAChD64C,EAAeR,IAAuB,OACtCS,EAA0BD,GAAgBR,GAAsBvgD,EAAc,KAAK,QAAUugD,EAAqB7xB,EAAc,iBAChIuyB,EAA2BF,GAAgBR,EAAqB7gD,EAAe,OAASM,EAAc,MAAM,QAAUugD,GAAsB7xB,EAAc,gBAC1JwyB,EAAet9C,EAAQqyB,EAAyB,EAEhDprC,GAAUm1D,GAAmBl+C,EAAU,QAAS,CACpD,KAAM,CAAC,MAAOu+C,GAAY,WAAYS,GAAY,gBAAiBD,GAAW,eAAgBtvB,GAAkB,oBAAqBC,GAAiB,mBAAoBQ,GAAoB,oBAAqBsuB,IAAc,QAAU,oBAAoB,CAAA,CAChQ,EACDrxC,EAAAA,gBAAsB,IAAM,CAC1B,GAAI+e,EAAY,MAAO,CAMrB,MAAMkD,GAAWz7B,EAAO,QAAQ,iCAAiCqjB,CAAK,EAElEoY,IAAY,MACPz7B,EAAA,QAAQ,iCAAiCy7B,EAAQ,CAE5D,CACA,MAAMiwB,GAAcj1D,EAAI,QAExB,GAAI,CAACi1D,IADkBb,IAAc,QACC,OAAO,eAAmB,IACvD,OAEH,MAAAc,GAAiB,IAAI,eAA0BpnD,IAAA,CAC7C,KAAA,CAACH,EAAK,EAAIG,GACVo7B,GAASv7B,GAAM,eAAiBA,GAAM,cAAc,OAAS,EAAIA,GAAM,cAAc,CAAC,EAAE,UAAYA,GAAM,YAAY,OACrHpE,EAAA,QAAQ,mCAAmCqjB,EAAOsc,EAAM,CAAA,CAChE,EACD,OAAAgsB,GAAe,QAAQD,EAAW,EAC3B,IAAMC,GAAe,YAAW,EACtC,CAAC3rD,EAAQu4B,EAAY,MAAOpqB,EAAO08C,EAAWxnC,CAAK,CAAC,EACvD,MAAMooB,GAAUz+B,EAAAA,YAAkB,CAACnL,GAAW6pC,KAAyB/1C,IAAA,CAEjEywC,GAAsBzwC,EAAK,GAK1BqK,EAAO,QAAQ,OAAOqjB,CAAK,IAGzBrjB,EAAA,QAAQ,aAAa6B,GAAW7B,EAAO,QAAQ,aAAaqjB,CAAK,EAAG1tB,EAAK,EAC5E+1C,IACFA,GAAY/1C,EAAK,EACnB,EACC,CAACqK,EAAQqjB,CAAK,CAAC,EACZuoC,GAAe5+C,cAA2BrX,IAAA,CAC9C,MAAMuxC,GAAOzB,GAA+B9vC,GAAM,OAAQoL,EAAY,IAAI,EACpE2I,GAAQw9B,IAAA,YAAAA,GAAM,aAAa,cAIjC,GAAIx9B,GAAO,CAiBT,GAfIA,KAAUqgB,GAAgC,OAK1CrgB,KAAU8gD,IAKV9gD,KAAU,eAKV1J,EAAO,QAAQ,YAAYqjB,EAAO3Z,EAAK,IAAMgJ,GAAc,KAC7D,OAIF,MAAM3I,GAAS/J,EAAO,QAAQ,UAAU0J,EAAK,EACzC,IAAAK,IAAA,YAAAA,GAAQ,QAAS6Q,GACnB,MAEJ,CACQ6wB,GAAA,WAAYzxB,CAAO,EAAErkB,EAAK,GACjC,CAACqK,EAAQga,EAASyxB,GAASpoB,CAAK,CAAC,EAC9B,CACJ,MAAAgR,GACA,UAAAwiB,GACA,qBAAAgV,EACE,EAAAx/C,EACEy/C,GAAgBz/C,EAAU,cAC1B0/C,GAAQvoD,EAAgBxD,EAAQ,IAAMkM,EAAS,CAAI,EAAAlM,EAAO,QAAQ,6BAA6BqjB,CAAK,CAAC,EAAG/f,EAAoB,EAClI,IAAI0oD,GAAYnB,EACZmB,KAAc,QAAUD,KAENA,GAAM,YAAc,GACtB,EAId,MAAA72B,GAAQjV,EAAAA,QAAc,IAAM,CAChC,GAAIic,EACK,MAAA,CACL,QAAS,EACT,MAAO,EACP,OAAQ,CAAA,EAGZ,MAAM+vB,GAAW//C,EAAS,CAAC,EAAG+9B,EAAW,CACvC,UAAW4gB,IAAc,OAAS,OAASA,EAE3C,UAAAmB,GACA,WAAY,OAAOnB,GAAc,SAAW,GAAGA,CAAS,KAAOA,CAAA,CAChE,EACD,GAAIkB,IAAA,MAAAA,GAAO,WAAY,CACrB,MAAMG,GAAW7/C,EAAU,iBAAmB,SAAW,iBAAmB,YACnE4/C,GAAAC,EAAQ,EAAIH,GAAM,UAC7B,CACA,GAAIA,IAAA,MAAAA,GAAO,cAAe,CACxB,MAAMG,GAAW7/C,EAAU,iBAAmB,SAAW,oBAAsB,eAC3E,IAAA8/C,GAAgBF,GAASC,EAAQ,EAEjC,OAAOC,IAAkB,WACXA,GAAA,SAASA,IAAiB,IAAK,EAAE,GAEnDA,IAAiBJ,GAAM,cACvBE,GAASC,EAAQ,EAAIC,EACvB,CACO,OAAAF,EAAA,EACN,CAAC/vB,EAAc2uB,EAAW5gB,EAAW+hB,GAAWD,GAAO1/C,EAAU,cAAc,CAAC,EAC7E+/C,GAAgBpsD,EAAO,QAAQ,6BAA6B,eAAgB,CAAA,EAAIqjB,CAAK,EACvF,GAAA,OAAOhX,EAAU,iBAAoB,WAAY,CACnD,MAAMggD,GAA6Bl+C,KAASzb,GAAA6lC,EAAY,QAAZ,YAAA7lC,GAAmB,gBAAiB,GAC1E45D,GAAYpgD,EAAS,CAAC,EAAGlM,EAAO,QAAQ,aAAaqjB,CAAK,EAAG,CACjE,eAAgBgpC,KAA+B,EAC/C,cAAeA,KAA+B9zB,EAAY,KAAK,OAAS,EACxE,2BAAA8zB,EAAA,CACD,EACDD,GAAc,KAAK//C,EAAU,gBAAgBigD,EAAS,CAAC,CACzD,CACM,MAAAC,GAAU,CAACxiD,GAAQi/B,GAAgBwjB,GAA2BvjB,GAAeF,GAAiBO,GAAe,OAAS,QAC1H,MAAM7V,GAAkBzzB,EAAO,QAAQ,4BAA4BqjB,EAAOmpC,EAAyB,EACnG,GAAI/4B,IAAA,MAAAA,GAAiB,iBACZ,OAAA,KAET,MAAM/0B,IAAQ+0B,IAAA,YAAAA,GAAiB,UAAU,QAAS1pB,GAAO,cACnDmgC,IAAUzW,IAAA,YAAAA,GAAiB,UAAU,UAAW,EAChD2W,GAAeoc,GAAoBjd,GAA+BR,EAAc,EAAGh/B,GAAO,cAAeyiD,GAA2BjxB,EAAiBhK,CAAU,EACjK,IAAApT,GAAA,YAAAA,EAAS,QAAS,cACA,OAAA9Q,EAAA,IAAKgnB,GAAM,aAAc,CAC3C,KAAMtqB,GAAO,KACb,MAAArL,GACA,OAAQmsD,EACR,MAAO9gD,GAAO,MACd,MAAOA,GAAO,KAAA,EACbA,GAAO,KAAK,EAEjB,MAAMigC,KAAgBt3C,GAAAy4D,EAAc9nC,CAAK,IAAnB,YAAA3wB,GAAuBqX,GAAO,SAAU,KAIxD0iD,GAAgB1iD,GAAO,QAAU,cACjC2iD,GAAgB,OAAO,KAAKvB,CAAa,EAAE,OAAS,EACpDwB,GAAmB,EAAEd,IAAwB9hD,GAAO,gBACpD6iD,GAAgBd,IAAiB,CAACp+C,EAAU,QAAUw9C,GAAa,GAAK,CAACwB,GACzEviB,GAAoB,EAAEwiB,IAAoBF,IAAiBG,IAC3DC,GAAmB9jB,KAAmBO,GAAe,QACvC,OAAAj8B,MAAKgnB,GAAM,KAAMnoB,EAAS,CAC5C,OAAAnC,GACA,MAAArL,GACA,MAAA2kB,EACA,MAAOtZ,GAAO,OAAS,OACvB,SAAUyiD,GACV,QAAAtiB,GACA,kBAAAC,GACA,cAAAH,GACA,aAAc6iB,GACd,aAAAziB,GACA,eAAArB,GACA,aAAcC,GACd,cAAAC,GACA,cAAAE,CACC,EAAA0N,IAAA,YAAAA,GAAW,IAAI,EAAG9sC,GAAO,KAAK,CAAA,EAKnC,GAAI,CAACoU,EACI,OAAA,KAET,MAAM2uC,GAAYviD,EAAc,KAAK,IAAI,CAACR,GAAQ9P,KAEzCsyD,GAAQxiD,GAAQ9P,GADWA,GACmBsQ,EAAc,KAAK,OAAQ++B,GAAe,IAAI,CACpG,EACKyjB,GAAaxiD,EAAc,MAAM,IAAI,CAACR,GAAQ9P,KAAM,CACxD,MAAMuyD,GAA4BviD,EAAe,OAASM,EAAc,MAAM,OAAStQ,GAChF,OAAAsyD,GAAQxiD,GAAQ9P,GAAGuyD,GAA2BjiD,EAAc,MAAM,OAAQ++B,GAAe,KAAK,CAAA,CACtG,EACK0jB,GAAsB/iD,EAAe,OAASM,EAAc,KAAK,OAASA,EAAc,MAAM,OAC9Fu8B,GAAQ,CAAA,EACVykB,GACFzkB,GAAM,KAAKylB,GAAQtiD,EAAe6gD,CAAkB,EAAGA,EAAqBvgD,EAAc,KAAK,OAAQugD,EAAoBkC,GAAqB1jB,GAAe,OAAO,CAAC,EAEzK,QAASrvC,GAAIg/B,EAAc,iBAAkBh/B,GAAIg/B,EAAc,gBAAiBh/B,IAAK,EAAG,CAChF,MAAA8P,GAASE,EAAehQ,EAAC,EACzB+uC,GAAiB/uC,GAAIsQ,EAAc,KAAK,OAC9Cu8B,GAAM,KAAKylB,GAAQxiD,GAAQi/B,GAAgB/uC,GAAG+yD,EAAmB,CAAC,CACpE,CACIxB,GACF1kB,GAAM,KAAKylB,GAAQtiD,EAAe6gD,CAAkB,EAAGA,EAAqBvgD,EAAc,KAAK,OAAQugD,EAAoBkC,GAAqB1jB,GAAe,OAAO,CAAC,EAEzK,MAAM2jB,GAAgBt+C,EAAM,CAC1B,QAASi9C,GACT,cAAengB,GAAQ,iBAAkBnB,CAAa,EACtD,aAAcmB,GAAQ,gBAAiBsf,CAAY,EACnD,aAActf,GAAQ,gBAAiBuf,CAAY,EACnD,WAAYvf,GAAQ,cAAewf,CAAU,EAC7C,YAAaxf,GAAQ,eAAgBhB,CAAW,CAC9C,EAAA,KACEwd,GAAgB12B,EAAW,kBAAkB,MAAQA,EAAW,kBAAoBk1B,EACpFyB,GAAiB,KAAK,IAAI,EAAGD,EAAa,EAC5B,OAAA1tC,EAAA,KAAM,MAAOrO,EAAS,CACxC,IAAKyV,EACL,UAAW0B,EACX,gBAAiBlV,EACjB,KAAM,MACN,UAAWgK,GAAK,GAAGi0C,GAAeh3D,GAAQ,KAAMyiB,CAAS,EACzD,gBAAiB4zC,EACjB,gBAAiBb,EACjB,MAAA11B,EAAA,EACC+3B,GAAezlD,EAAO,CACvB,SAAU,CAACslD,GAAwBz/C,EAAA,IAAK,MAAO,CAC7C,KAAM,eACN,UAAWtM,EAAY,eACvB,MAAO,CACL,MAAOs7B,CACT,CACD,CAAA,EAAGyK,GAAOohB,GAAiB,SAAuBuC,GAAW,CAC5D,MAAOvC,EACR,CAAA,EAAG6E,GAAW,OAAS,SAAuB,MAAO,CACpD,KAAM,eACN,UAAWhsD,EAAY,MACxB,CAAA,EAAGgsD,GAAYtG,IAAmB,SAAuByG,GAAiB,CACzE,YAAa3iD,EAAc,MAAM,OAAS,CAAA,CAC3C,CAAC,CACH,CAAA,CAAC,CACJ,CAAC,EAgFK4iD,GAAkBn5B,GAAS02B,EAAO,ECpZjC,SAAS0C,GAAoB,CAClC,cAAArnC,EACA,MAAAn1B,EACA,SAAAqE,CACF,EAAG,CACD,MAAM+K,EAASG,EAAAA,OAAa4lB,EAAc,QAAQ,aAAc,CAAA,EAChE,OAAoB1Y,EAAI,IAACjN,GAAqB,SAAU,CACtD,MAAOxP,EACP,SAAuByc,EAAAA,IAAKyoB,GAAsB,SAAU,CAC1D,MAAO/P,EACP,SAAuB1Y,EAAAA,IAAKxN,GAAe,SAAU,CACnD,MAAOG,EACP,SAAU/K,CAClB,CAAO,CACP,CAAK,CACL,CAAG,CACH,CCpBO,MAAMo4D,GAAcrtD,GAAU,CACnC,MAAM6vC,EAAiB1vC,SAAa,IAAI,EAClCmtD,EAAiBntD,SAAa,IAAI,EAClCotD,EAAqBptD,SAAa,IAAI,EAC5CH,EAAO,QAAQ,SAAS,SAAU,CAChC,eAAA6vC,CACJ,CAAG,EACD7vC,EAAO,QAAQ,SAAS,UAAW,CACjC,eAAAstD,EACA,mBAAAC,CACJ,CAAG,CACH,ECTaC,GAAextD,GAAU,CACpC,MAAMlL,EAAQokB,KACTlZ,EAAO,QAAQ,MAAM,QACxBA,EAAO,QAAQ,MAAM,MAAQlL,GAE/B,MAAM24D,EAAgBttD,SAAa,EAAI,EACvCqC,EAAAA,UAAgB,IAAM,CAChBirD,EAAc,QAChBA,EAAc,QAAU,GAExBztD,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,MAAA/O,CACD,CAAA,CAAC,CAER,EAAK,CAACkL,EAAQlL,CAAK,CAAC,CACpB,ECfM44D,GAAa38C,GAAqB,GAAM,OAAO,aAAa,QAAQ,OAAO,GAAK,KAChF6V,GAAO,IAAM,CAAA,EACb+mC,GAAa,CACjB,MAAO/mC,GACP,KAAMA,GACN,KAAMA,GACN,MAAOA,EACT,EACMgnC,GAAa,CAAC,QAAS,OAAQ,OAAQ,OAAO,EACpD,SAASC,GAAYpvD,EAAMqvD,EAAUC,EAAW,QAAS,CACvD,MAAMC,EAAiBJ,GAAW,QAAQE,CAAQ,EAClD,GAAIE,IAAmB,GACrB,MAAM,IAAI,MAAM,oBAAoBF,CAAQ,kBAAkB,EAahE,OAXeF,GAAW,OAAO,CAACK,EAAWC,EAAQzzD,KAC/CA,GAAOuzD,EACTC,EAAUC,CAAM,EAAI,IAAI/lD,IAAS,CAC/B,KAAM,CAACgmD,EAAS,GAAG3mD,CAAK,EAAIW,EAC5B4lD,EAASG,CAAM,EAAE,UAAUzvD,CAAI,MAAM0vD,CAAO,GAAI,GAAG3mD,CAAK,CAChE,EAEMymD,EAAUC,CAAM,EAAItnC,GAEfqnC,GACN,CAAE,CAAA,CAEP,CACO,MAAMG,GAAuB,CAACpuD,EAAQpP,IAAU,CACrD,MAAMy9D,EAAYrhD,EAAiB,YAACvO,GAC9BivD,GACKG,GAAYpvD,EAAM,QAAS7N,EAAM,MAAM,EAE3CA,EAAM,SAGJi9D,GAAYpvD,EAAM7N,EAAM,SAAS,WAAYA,EAAM,MAAM,EAFvD+8D,GAGR,CAAC/8D,EAAM,SAAUA,EAAM,MAAM,CAAC,EACjCk1B,GAAiB9lB,EAAQ,CACvB,UAAAquD,CACD,EAAE,SAAS,CACd,ECxCO,MAAMC,EAAa,CACxB,aAAc,CACZ,KAAK,aAAe,GACpB,KAAK,SAAW,GAChB,KAAK,OAAS,EAChB,CACA,GAAGzsD,EAAW0sD,EAAUxsD,EAAU,CAAA,EAAI,CAChC,IAAAysD,EAAa,KAAK,OAAO3sD,CAAS,EACjC2sD,IACUA,EAAA,CACX,iBAAkB,IAClB,YAAa,GAAI,EAEd,KAAA,OAAO3sD,CAAS,EAAI2sD,GAEvBzsD,EAAQ,QACCysD,EAAA,aAAa,IAAID,EAAU,EAAI,EAE/BC,EAAA,QAAQ,IAAID,EAAU,EAAI,CASzC,CACA,eAAe1sD,EAAW0sD,EAAU,CAC9B,KAAK,OAAO1sD,CAAS,IACvB,KAAK,OAAOA,CAAS,EAAE,QAAQ,OAAO0sD,CAAQ,EAC9C,KAAK,OAAO1sD,CAAS,EAAE,aAAa,OAAO0sD,CAAQ,EAEvD,CACA,oBAAqB,CACnB,KAAK,OAAS,EAChB,CACA,KAAK1sD,KAAcsG,EAAM,CACjB,MAAAqmD,EAAa,KAAK,OAAO3sD,CAAS,EACxC,GAAI,CAAC2sD,EACH,OAEF,MAAMC,EAAwB,MAAM,KAAKD,EAAW,aAAa,MAAM,EACjEE,EAAmB,MAAM,KAAKF,EAAW,QAAQ,MAAM,EAC7D,QAASv0D,EAAIw0D,EAAsB,OAAS,EAAGx0D,GAAK,EAAGA,GAAK,EAAG,CACvD,MAAAs0D,EAAWE,EAAsBx0D,CAAC,EACpCu0D,EAAW,aAAa,IAAID,CAAQ,GAC7BA,EAAA,MAAM,KAAMpmD,CAAI,CAE7B,CACA,QAASlO,EAAI,EAAGA,EAAIy0D,EAAiB,OAAQz0D,GAAK,EAAG,CAC7C,MAAAs0D,EAAWG,EAAiBz0D,CAAC,EAC/Bu0D,EAAW,QAAQ,IAAID,CAAQ,GACxBA,EAAA,MAAM,KAAMpmD,CAAI,CAE7B,CACF,CACA,KAAKtG,EAAW0sD,EAAU,CAExB,MAAMI,EAAO,KACb,KAAK,GAAG9sD,EAAW,SAAS+sD,KAAmBzmD,EAAM,CAC9CwmD,EAAA,eAAe9sD,EAAW+sD,CAAe,EACrCL,EAAA,MAAMI,EAAMxmD,CAAI,CAAA,CAC1B,CACH,CACF,CCpEO,MAAM0mD,EAAM,CACjB,OAAO,OAAO9vD,EAAO,CACnB,OAAO,IAAI8vD,GAAM9vD,CAAK,CACvB,CACD,YAAY+vD,EAAQ,CAClB,KAAK,MAAQ,OACb,KAAK,UAAY,OACjB,KAAK,UAAYtmD,IACf,KAAK,UAAU,IAAIA,CAAE,EACd,IAAM,CACX,KAAK,UAAU,OAAOA,CAAE,CAChC,GAEI,KAAK,YAAc,IACV,KAAK,MAEd,KAAK,OAASzJ,GAAS,CACrB,KAAK,MAAQA,EACb,KAAK,UAAU,QAAQgwD,GAAKA,EAAEhwD,CAAK,CAAC,CAC1C,EACI,KAAK,MAAQ+vD,EACb,KAAK,UAAY,IAAI,GACtB,CACH,CClBA,MAAME,GAAqB,OAAO,iBAAiB,EAC7CC,GAAmBt5D,GAChBA,EAAM,uBAAyB,OAKxC,IAAIu5D,GAAW,EACf,SAASC,GAAiBz6C,EAAc,OACtC,MAAM06C,GAAqB18D,EAAAgiB,EAAa,UAAb,YAAAhiB,EAAuBs8D,IAClD,GAAII,EACF,OAAOA,EAET,MAAMvrD,EAAQ,CAAA,EACRwrD,EAAa,CACjB,MAAAxrD,EACA,MAAOgrD,GAAM,OAAOhrD,CAAK,EACzB,WAAY,CACV,GAAIqrD,EACL,CACL,EACE,OAAAA,IAAY,EACZG,EAAW,aAAe,IAAM36C,EAAa,QAC7C26C,EAAW,SAAW,CAACppC,EAAYqpC,IAAY,CAC7C,OAAO,KAAKA,CAAO,EAAE,QAAQC,GAAc,CACzC,MAAMrB,EAASoB,EAAQC,CAAU,EAC3BC,EAAuBH,EAAWE,CAAU,EAMlD,IALIC,GAAA,YAAAA,EAAsB,UAAW,GACnCA,EAAqB,OAAStB,EAE9BmB,EAAWE,CAAU,EAAIrB,EAEvBjoC,IAAe,SAAU,CAC3B,MAAMwpC,EAAY/6C,EAAa,QACzBg7C,EAAsBD,EAAUF,CAAU,GAC5CG,GAAA,YAAAA,EAAqB,UAAW,GAClCA,EAAoB,OAASxB,EAE7BuB,EAAUF,CAAU,EAAIrB,CAE3B,CACP,CAAK,CACL,EACEmB,EAAW,SAAS,UAAW,CAC7B,OAAQ,CAAE,EACV,aAAc,IAAIf,EACtB,CAAG,EACMe,CACT,CACA,SAASM,GAAgB5pC,EAAe,CAatC,MAZkB,CAChB,IAAI,OAAQ,CACV,OAAOA,EAAc,QAAQ,KAC9B,EACD,IAAI,OAAQ,CACV,OAAOA,EAAc,QAAQ,KAC9B,EACD,IAAI,YAAa,CACf,OAAOA,EAAc,QAAQ,UAC9B,EACD,CAACipC,EAAkB,EAAGjpC,EAAc,OACxC,CAEA,CACO,SAAS6pC,GAAyBC,EAAaj/D,EAAO,OAC3D,MAAM8jB,EAAevU,EAAAA,SACf4lB,EAAgB5lB,EAAAA,SACjB4lB,EAAc,UACjBA,EAAc,QAAUopC,GAAiBz6C,CAAY,GAElDA,EAAa,UAChBA,EAAa,QAAUi7C,GAAgB5pC,CAAa,GAEtD,MAAM+pC,EAAe9iD,EAAAA,YAAkB,IAAI7E,IAAS,CAClD,KAAM,CAAC1J,EAAM6D,EAAQ3M,EAAQ,CAAE,CAAA,EAAIwS,EAEnC,GADAxS,EAAM,oBAAsB,GACxBs5D,GAAiBt5D,CAAK,GAAKA,EAAM,qBAAoB,EACvD,OAEF,MAAM4M,EAAU3R,EAAM,YAAc4Q,GAAc,aAAe5Q,EAAM,YAAc4Q,GAAc,gBAAkB,CACnH,IAAKukB,EAAc,QAAQ,aAAc,CAC1C,EAAG,GACJA,EAAc,QAAQ,aAAa,KAAKtnB,EAAM6D,EAAQ3M,EAAO4M,CAAO,CACrE,EAAE,CAACwjB,EAAen1B,EAAM,SAAS,CAAC,EAC7Bm/D,EAAiB/iD,EAAiB,YAAC,CAACrX,EAAOmM,EAASC,IAAY,CACpEgkB,EAAc,QAAQ,aAAa,GAAGpwB,EAAOmM,EAASC,CAAO,EAC7D,MAAM4kC,EAAM5gB,EAAc,QAC1B,MAAO,IAAM,CACX4gB,EAAI,aAAa,eAAehxC,EAAOmM,CAAO,CACpD,CACA,EAAK,CAACikB,CAAa,CAAC,EAClB,OAAAD,GAAiBC,EAAe,CAC9B,eAAAgqC,EACA,aAAAD,CACD,EAAE,QAAQ,EACPD,GAAe,GAACn9D,EAAAm9D,EAAY,UAAZ,MAAAn9D,EAAqB,SACvCm9D,EAAY,QAAUn7C,EAAa,SAErC+E,EAAyB,oBAACo2C,EAAa,IAAMn7C,EAAa,QAAS,CAACA,CAAY,CAAC,EACjFlS,EAAAA,UAAgB,IAAM,CACpB,MAAMmkC,EAAM5gB,EAAc,QAC1B,MAAO,IAAM,CACX4gB,EAAI,aAAa,SAAS,CAChC,CACA,EAAK,CAAC5gB,CAAa,CAAC,EACXA,CACT,CC9GO,MAAMiqC,GAAoB,CAAChwD,EAAQpP,IAAU,CAClD,MAAMq/D,EAAgBjjD,EAAiB,YAAC5V,GAAO,CAC7C,GAAIxG,EAAM,WAAWwG,CAAG,GAAK,KAC3B,MAAM,IAAI,MAAM,+BAA+BA,CAAG,GAAG,EAEvD,OAAOxG,EAAM,WAAWwG,CAAG,CAC/B,EAAK,CAACxG,EAAM,UAAU,CAAC,EACrBoP,EAAO,QAAQ,SAAS,SAAU,CAChC,cAAAiwD,CACJ,CAAG,CACH,ECsBaC,GAAwBlwD,GAAU,CAC7C,MAAM2F,EAAQxF,SAAa,CAAA,CAAE,EACvBgwD,EAAYhwD,SAAa,EAAK,EAC9BiwD,EAAcpjD,EAAiB,YAACqjD,GAAc,CAC9CF,EAAU,SAAW,CAACE,IAG1BF,EAAU,QAAU,GACpB,OAAO,OAAOE,EAAW,QAAQ,EAAE,QAAQr7C,GAAY,CACrDA,GACN,CAAK,EACDm7C,EAAU,QAAU,GACrB,EAAE,CAAE,CAAA,EACCG,EAAwBtjD,EAAiB,YAAC,CAACujD,EAAO/wD,EAAIgxD,IAAc,CACnE7qD,EAAM,QAAQ4qD,CAAK,IACtB5qD,EAAM,QAAQ4qD,CAAK,EAAI,CACrB,WAAY,IAAI,IAChB,kBAAmB,CAAE,EACrB,SAAU,CAAE,CACpB,GAEI,MAAMF,EAAa1qD,EAAM,QAAQ4qD,CAAK,EAEtC,OADqBF,EAAW,WAAW,IAAI7wD,CAAE,IAC5BgxD,IACnBH,EAAW,WAAW,IAAI7wD,EAAIgxD,CAAS,EACvCH,EAAW,kBAAoB,MAAM,KAAK1qD,EAAM,QAAQ4qD,CAAK,EAAE,WAAW,OAAM,CAAE,EAClFH,EAAYC,CAAU,GAEjB,IAAM,CACX1qD,EAAM,QAAQ4qD,CAAK,EAAE,WAAW,OAAO/wD,CAAE,EACzCmG,EAAM,QAAQ4qD,CAAK,EAAE,kBAAoB,MAAM,KAAK5qD,EAAM,QAAQ4qD,CAAK,EAAE,WAAW,OAAQ,CAAA,CAClG,CACA,EAAK,CAACH,CAAW,CAAC,EACVK,EAAsBzjD,EAAiB,YAAC,CAACujD,EAAO/wD,EAAI2V,KACnDxP,EAAM,QAAQ4qD,CAAK,IACtB5qD,EAAM,QAAQ4qD,CAAK,EAAI,CACrB,WAAY,IAAI,IAChB,kBAAmB,CAAE,EACrB,SAAU,CAAE,CACpB,GAEI5qD,EAAM,QAAQ4qD,CAAK,EAAE,SAAS/wD,CAAE,EAAI2V,EAC7B,IAAM,CACX,MAAMu7C,EAAY/qD,EAAM,QAAQ4qD,CAAK,EAAE,SACrCI,EAAgBhkD,GAA8B+jD,EAAW,CAAClxD,CAAE,EAAE,IAAIoxD,EAAc,CAAC,EACnFjrD,EAAM,QAAQ4qD,CAAK,EAAE,SAAWI,CACtC,GACK,CAAE,CAAA,EACCE,EAAmC7jD,EAAiB,YAACujD,GAAS,CAClEH,EAAYzqD,EAAM,QAAQ4qD,CAAK,CAAC,CACpC,EAAK,CAACH,CAAW,CAAC,EACVU,EAAsB9jD,EAAAA,YAAkB,IAAI7E,IAAS,CACzD,KAAM,CAACooD,EAAOxxD,EAAOgyD,CAAO,EAAI5oD,EAChC,GAAI,CAACxC,EAAM,QAAQ4qD,CAAK,EACtB,OAAOxxD,EAET,MAAMiyD,EAAarrD,EAAM,QAAQ4qD,CAAK,EAAE,kBACxC,IAAIl8D,EAAS0K,EACb,QAAS9E,EAAI,EAAGA,EAAI+2D,EAAW,OAAQ/2D,GAAK,EAC1C5F,EAAS28D,EAAW/2D,CAAC,EAAE5F,EAAQ08D,CAAO,EAExC,OAAO18D,CACR,EAAE,CAAE,CAAA,EACC48D,EAA0B,CAC9B,sBAAAX,EACA,oBAAAG,EACA,iCAAAI,CACJ,EACQK,EAAyB,CAC7B,6BAA8BJ,CAClC,EACEhrC,GAAiB9lB,EAAQixD,EAAyB,SAAS,EAC3DnrC,GAAiB9lB,EAAQkxD,EAAwB,QAAQ,CAC3D,ECxGaC,GAA+B,CAACnxD,EAAQuwD,EAAOv7C,IAAa,CACvE,MAAMo8C,EAAUjxD,EAAAA,SACVX,EAAKW,EAAAA,OAAa,OAAO,KAAK,MAAM,KAAK,OAAQ,EAAG,GAAG,CAAC,EAAE,EAC1DkxD,EAAuBrkD,EAAAA,YAAkB,IAAM,CACnDokD,EAAQ,QAAUpxD,EAAO,QAAQ,sBAAsBuwD,EAAO/wD,EAAG,QAASwV,CAAQ,CACnF,EAAE,CAAChV,EAAQgV,EAAUu7C,CAAK,CAAC,EAC5B5pC,GAAe,IAAM,CACnB0qC,GACJ,CAAG,EACD,MAAMnrC,EAAgB/lB,SAAa,EAAI,EACvCqC,EAAAA,UAAgB,KACV0jB,EAAc,QAChBA,EAAc,QAAU,GAExBmrC,IAEK,IAAM,CACPD,EAAQ,UACVA,EAAQ,QAAO,EACfA,EAAQ,QAAU,KAE1B,GACK,CAACC,CAAoB,CAAC,CAC3B,ECvBaC,GAA6B,CAACtxD,EAAQuwD,EAAOv7C,IAAa,CACrE,MAAMo8C,EAAUjxD,EAAAA,SACVX,EAAKW,EAAAA,OAAa,OAAO,KAAK,MAAM,KAAK,OAAQ,EAAG,GAAG,CAAC,EAAE,EAC1DkxD,EAAuBrkD,EAAAA,YAAkB,IAAM,CACnDokD,EAAQ,QAAUpxD,EAAO,QAAQ,oBAAoBuwD,EAAO/wD,EAAG,QAASwV,CAAQ,CACjF,EAAE,CAAChV,EAAQgV,EAAUu7C,CAAK,CAAC,EAC5B5pC,GAAe,IAAM,CACnB0qC,GACJ,CAAG,EACD,MAAMnrC,EAAgB/lB,SAAa,EAAI,EACvCqC,EAAAA,UAAgB,KACV0jB,EAAc,QAChBA,EAAc,QAAU,GAExBmrC,IAEK,IAAM,CACPD,EAAQ,UACVA,EAAQ,QAAO,EACfA,EAAQ,QAAU,KAE1B,GACK,CAACC,CAAoB,CAAC,CAC3B,ECvBaE,GAAmC,CAACvxD,EAAQwxD,EAAcjB,EAAOC,IAAc,CAC1F,MAAMa,EAAuBrkD,EAAAA,YAAkB,IAAM,CACnDhN,EAAO,QAAQ,0BAA0BwxD,EAAcjB,EAAOC,CAAS,CACxE,EAAE,CAACxwD,EAAQwwD,EAAWD,EAAOiB,CAAY,CAAC,EAC3C7qC,GAAe,IAAM,CACnB0qC,GACJ,CAAG,EACD,MAAMnrC,EAAgB/lB,SAAa,EAAI,EACvCqC,EAAAA,UAAgB,IAAM,CAChB0jB,EAAc,QAChBA,EAAc,QAAU,GAExBmrC,GAEN,EAAK,CAACA,CAAoB,CAAC,CAC3B,ECbaI,GAAwB,OACxBC,GAA6B,CACxC,gBAAiB,UACjB,UAAW,UACX,QAAS,UACT,0BAA2B,SAC7B,EAyCaC,GAA4B3xD,GAAU,CACjD,MAAM4xD,EAAsBzxD,EAAAA,OAAa,IAAI,GAAK,EAC5C0xD,EAAkB1xD,SAAa,CAAA,CAAE,EACjC2xD,EAA4B9kD,EAAiB,YAAC,CAACwkD,EAAcO,EAAevB,IAAc,CAC9F,MAAMY,EAAU,IAAM,CACpB,MAAM5jC,EAAOqkC,EAAgB,QAAQE,CAAa,EAChDC,EAAkBrlD,GAA8B6gB,EAAM,CAACgkC,CAAY,EAAE,IAAIZ,EAAc,CAAC,EAC1FiB,EAAgB,QAAQE,CAAa,EAAIC,CAC/C,EACSH,EAAgB,QAAQE,CAAa,IACxCF,EAAgB,QAAQE,CAAa,EAAI,IAE3C,MAAME,EAAqBJ,EAAgB,QAAQE,CAAa,EAC1DG,EAAoBD,EAAmBT,CAAY,EAEzD,OADAS,EAAmBT,CAAY,EAAIhB,EAC/B,CAAC0B,GAAqBA,IAAsB1B,GAG5CgB,IAAiBxxD,EAAO,QAAQ,kBAAkB0xD,GAA2BK,CAAa,CAAC,GAC7F/xD,EAAO,QAAQ,aAAa,gCAAiC+xD,CAAa,EAErEX,CACX,EAAK,CAACpxD,CAAM,CAAC,EACLmyD,EAAyBnlD,EAAAA,YAAkB,CAAC+kD,EAAezvD,IAAW,CAC1E,MAAM8vD,EAAiBpyD,EAAO,QAAQ,kBAAkB0xD,GAA2BK,CAAa,CAAC,EACjG,GAAIK,GAAkB,KACpB,MAAM,IAAI,MAAM,qEAAqE,EAEvF,MAAM/B,EAAawB,EAAgB,QAAQE,CAAa,EACxD,GAAI,CAAC1B,GAAc,CAACA,EAAW+B,CAAc,EAC3C,MAAM,IAAI,MAAM,qCAAqCL,CAAa,kBAAkBK,CAAc,GAAG,EAEvG,MAAM5B,EAAYH,EAAW+B,CAAc,EAC3C,OAAO5B,EAAUluD,CAAM,CAC3B,EAAK,CAACtC,CAAM,CAAC,EACLqyD,EAAoBrlD,EAAiB,YAACslD,GAAiB,CAE3D,MAAMC,EADkB,MAAM,KAAKX,EAAoB,QAAQ,QAAO,CAAE,EACzB,KAAK,CAAC,CAAA,CAAGY,CAAQ,IAC1DA,EAAS,QAAUF,EACd,GAEFE,EAAS,aACjB,EACD,OAAOD,GAAA,YAAAA,EAAyB,KAAMd,EACvC,EAAE,CAAE,CAAA,EACCgB,EAA0BzlD,EAAiB,YAAC,CAACslD,EAAed,EAAckB,IAAgB,CAC9Fd,EAAoB,QAAQ,IAAIJ,EAAc,CAC5C,MAAOc,EACP,YAAAI,CACN,CAAK,EACD1yD,EAAO,QAAQ,aAAa,4BAA4B,CAC5D,EAAK,CAACA,CAAM,CAAC,EAOX8lB,GAAiB9lB,EANa,CAC5B,0BAAA8xD,EACA,uBAAAK,EACA,kBAAAE,EACA,wBAAAI,CACJ,EACkD,SAAS,CAC3D,EC1GaE,GAA6B3yD,GAAU,CAClD,MAAM4yD,EAAqBzyD,SAAa,CAAA,CAAE,EACpC,CAAG,CAAA0yD,CAAc,EAAI5wD,EAAAA,WACrB6wD,EAAuB9lD,EAAiB,YAAC+lD,GAAoB,CACjEH,EAAmB,QAAQG,EAAiB,OAAO,EAAIA,CACxD,EAAE,CAAE,CAAA,EACCjvD,EAAWkJ,EAAAA,YAAkB,CAACnJ,EAAOgqB,IAAW,CACpD,IAAI7pB,EAMJ,GALI6M,GAAWhN,CAAK,EAClBG,EAAWH,EAAM7D,EAAO,QAAQ,KAAK,EAErCgE,EAAWH,EAET7D,EAAO,QAAQ,QAAUgE,EAC3B,MAAO,GAET,IAAIgvD,EAAiB,GAGrB,MAAMC,EAAyB,CAAA,EAkB/B,GAjBA,OAAO,KAAKL,EAAmB,OAAO,EAAE,QAAQM,GAAW,CACzD,MAAMC,EAAeP,EAAmB,QAAQM,CAAO,EACjDE,EAAcD,EAAa,cAAcnzD,EAAO,QAAQ,MAAOA,EAAO,QAAQ,UAAU,EACxFqzD,EAAcF,EAAa,cAAcnvD,EAAUhE,EAAO,QAAQ,UAAU,EAC9EqzD,IAAgBD,IAGpBH,EAAuB,KAAK,CAC1B,QAASE,EAAa,QACtB,eAAgBE,IAAgBF,EAAa,SACrD,CAAO,EAGGA,EAAa,YAAc,QAAaE,IAAgBF,EAAa,YACvEH,EAAiB,IAEzB,CAAK,EACGC,EAAuB,OAAS,EAIlC,MAAM,IAAI,MAAM,0FAA0FA,EAAuB,CAAC,EAAE,OAAO,6CAA6CA,EAAuB,IAAIvkD,GAAMA,EAAG,OAAO,EAAE,KAAK,IAAI,CAAC,2BAA2B,EAU5Q,GARKskD,IAEHhzD,EAAO,QAAQ,MAAQgE,EACnBhE,EAAO,QAAQ,cACjBA,EAAO,QAAQ,aAAa,cAAegE,CAAQ,EAErDhE,EAAO,QAAQ,MAAM,OAAOgE,CAAQ,GAElCivD,EAAuB,SAAW,EAAG,CACvC,KAAM,CACJ,QAAAC,EACA,eAAAI,CACR,EAAUL,EAAuB,CAAC,EACtBE,EAAeP,EAAmB,QAAQM,CAAO,EACjDhhE,EAAQihE,EAAa,cAAcnvD,EAAUhE,EAAO,QAAQ,UAAU,EACxEmzD,EAAa,cAAgBG,GAC/BH,EAAa,aAAajhE,EAAO,CAC/B,OAAA27B,EACA,IAAK7tB,EAAO,OACtB,CAAS,EAEEgzD,GACHhzD,EAAO,QAAQ,aAAamzD,EAAa,YAAajhE,EAAO,CAC3D,OAAA27B,CACV,CAAS,CAEJ,CACD,MAAO,CAACmlC,CACZ,EAAK,CAAChzD,CAAM,CAAC,EACLuzD,EAAqBvmD,EAAiB,YAAC,CAAC5V,EAAKyM,EAAOgqB,IACjD7tB,EAAO,QAAQ,SAASwzD,GACtBtnD,EAAS,CAAE,EAAEsnD,EAAe,CACjC,CAACp8D,CAAG,EAAGyM,EAAM2vD,EAAcp8D,CAAG,CAAC,CACvC,CAAO,EACAy2B,CAAM,EACR,CAAC7tB,CAAM,CAAC,EACLopB,EAAcpc,EAAAA,YAAkB,IAAM6lD,EAAe,IAAM7yD,EAAO,QAAQ,KAAK,EAAG,CAACA,CAAM,CAAC,EAC1FyzD,EAAiB,CACrB,SAAA3vD,EACA,YAAAslB,CACJ,EACQsqC,EAAkB,CACtB,mBAAAH,EACA,qBAAAT,CACJ,EACEhtC,GAAiB9lB,EAAQyzD,EAAgB,QAAQ,EACjD3tC,GAAiB9lB,EAAQ0zD,EAAiB,SAAS,CACrD,EClFaC,GAAwB,CAAC9D,EAAaj/D,IAAU,CAC3D,MAAMm1B,EAAgB6pC,GAAyBC,EAAaj/D,CAAK,EACjE,OAAAy8D,GAAYtnC,CAAa,EACzBynC,GAAaznC,CAAa,EAC1BqoC,GAAqBroC,EAAen1B,CAAK,EACzC+hE,GAA2B5sC,CAAa,EACxCmqC,GAAsBnqC,CAAa,EACnC4rC,GAA0B5rC,CAAa,EACvCiqC,GAAkBjqC,EAAen1B,CAAK,EACtCm1B,EAAc,QAAQ,SAAS,UAAW,CACxC,UAAWn1B,CACf,CAAG,EACMm1B,CACT,ECxBa6tC,GAAyB,CAACC,EAAa9tC,EAAen1B,IAAU,CAC3E,MAAMkjE,EAAgB3zD,SAAa,EAAK,EACnC2zD,EAAc,UACjB/tC,EAAc,QAAQ,MAAQ8tC,EAAY9tC,EAAc,QAAQ,MAAOn1B,EAAOm1B,CAAa,EAC3F+tC,EAAc,QAAU,GAE5B,ECLA,SAASC,GAAkBh1D,EAAOklD,EAAY,CAC5C,MAAM+P,EAAW,OAAOj1D,GAAU,SAAWA,EAAQ,GAAGA,CAAK,GACzD,GAAAklD,EAAW,oBAAsBA,EAAW,eAAgB,CAC9D,MAAMgQ,EAAeD,EAAS,QAAQ,KAAM,IAAI,EAChD,OAAI/P,EAAW,gBAET,CAAC,IAAK,IAAK,IAAK,IAAK,IAAM,IAAI,EAAE,SAASgQ,EAAa,CAAC,CAAC,EACpD,KAAKA,CAAY,IAIxB,CAAChQ,EAAW,UAAW;AAAA,EAAM,KAAM,GAAG,EAAE,KAAkBiQ,GAAAF,EAAS,SAASE,CAAS,CAAC,EACjF,IAAID,CAAY,IAElBA,CACT,CACO,OAAAD,CACT,CACa,MAAAG,GAAqB,CAACC,EAAYryD,IAAY,SACnD,KAAA,CACJ,WAAAkiD,EACA,qBAAAoQ,CACE,EAAAtyD,EACA,IAAAhD,EACJ,GAAIs1D,EAAsB,CAClB,MAAAvoC,EAAasoC,EAAW,OAAO,KACjCtoC,IAAe,SACT/sB,EAAA,OAAOq1D,EAAW,KAAK,EACtBtoC,IAAe,QAAUA,IAAe,WACzC/sB,GAAArM,EAAA0hE,EAAW,QAAX,YAAA1hE,EAAkB,cACjB,QAAO+X,EAAA2pD,EAAW,QAAX,YAAA3pD,EAAkB,WAAa,WACvC1L,EAAAq1D,EAAW,MAAM,WAEzBr1D,EAAQq1D,EAAW,KACrB,MAEAr1D,EAAQq1D,EAAW,eAEd,OAAAL,GAAkBh1D,EAAOklD,CAAU,CAC5C,EACA,MAAMqQ,EAAO,CACX,YAAYvyD,EAAS,CACnB,KAAK,QAAU,OACf,KAAK,UAAY,GACjB,KAAK,QAAU,GACf,KAAK,QAAUA,CACjB,CACA,SAAShD,EAAO,CACT,KAAK,UACH,KAAA,WAAa,KAAK,QAAQ,WAAW,WAExCA,GAAU,KACZ,KAAK,WAAa,GACT,OAAO,KAAK,QAAQ,mBAAsB,WACnD,KAAK,WAAa,KAAK,QAAQ,kBAAkBA,EAAO,KAAK,QAAQ,UAAU,EAE/E,KAAK,WAAaA,EAEpB,KAAK,QAAU,EACjB,CACA,cAAe,CACb,OAAO,KAAK,SACd,CACF,CACA,MAAMw1D,GAAe,CAAC,CACpB,GAAA/0D,EACA,QAAAqK,EACA,cAAAy+B,EACA,WAAA2b,EACA,qBAAAoQ,CACF,IAAM,CACE,MAAA1lD,EAAM,IAAI2lD,GAAO,CACrB,WAAArQ,CAAA,CACD,EACD,OAAAp6C,EAAQ,QAAkBE,GAAA,CACxB,MAAMqqD,EAAa9rB,EAAc9oC,EAAIuK,EAAO,KAAK,EAM7C4E,EAAA,SAASwlD,GAAmBC,EAAY,CAC1C,qBAAAC,EACA,WAAApQ,CACD,CAAA,CAAC,CAAA,CACH,EACMt1C,EAAI,cACb,EACO,SAAS6lD,GAASzyD,EAAS,CAC1B,KAAA,CACJ,QAAA8H,EACA,OAAA4qD,EACA,WAAAxQ,EACA,qBAAAoQ,EACA,OAAAr0D,CACE,EAAA+B,EACE2yD,EAAUD,EAAO,OAAO,CAACjpD,EAAKhM,IAAO,GAAGgM,CAAG,GAAG+oD,GAAa,CAC/D,GAAA/0D,EACA,QAAAqK,EACA,cAAe7J,EAAO,QAAQ,cAC9B,qBAAAq0D,EACA,WAAApQ,CAAA,CACD,CAAC;AAAA,EAAQ,EAAE,EAAE,OACV,GAAA,CAACA,EAAW,eACP,OAAAyQ,EAET,MAAMxV,EAAkBr1C,EAAQ,UAAiBE,EAAO,QAAUggB,GAAgC,KAAK,EACjG4qC,EAAa,CAAA,EACnB,GAAI1Q,EAAW,2BAA4B,CACnC,MAAA2Q,EAAoB50D,EAAO,QAAQ,mBAAmB,EAC5D,IAAI60D,EAAuB,EAC3B,MAAMC,EAAyB5V,EAAgB,OAAO,CAAC1zC,EAAKzB,IAAW,CACrE,MAAMgrD,EAAkB/0D,EAAO,QAAQ,mBAAmB+J,EAAO,KAAK,EAClE,OAAAyB,EAAAzB,EAAO,KAAK,EAAIgrD,EACpBF,EAAuB,KAAK,IAAIA,EAAsBE,EAAgB,MAAM,EACrEvpD,CACT,EAAG,CAAE,CAAA,EACL,QAASvR,EAAI,EAAGA,EAAI46D,EAAsB56D,GAAK,EAAG,CAC1C,MAAA+6D,EAAiB,IAAIV,GAAO,CAChC,WAAArQ,EACA,kBAAA8P,EAAA,CACD,EACDY,EAAW,KAAKK,CAAc,EAC9B9V,EAAgB,QAAkBn1C,GAAA,CAChC,MAAMkrD,GAAiBH,EAAuB/qD,EAAO,KAAK,GAAK,CAAA,GAAI9P,CAAC,EAC9Di7D,EAAcN,EAAkBK,CAAa,EACnDD,EAAe,SAASE,EAAcA,EAAY,YAAcA,EAAY,QAAU,EAAE,CAAA,CACzF,CACH,CACF,CACM,MAAAC,EAAgB,IAAIb,GAAO,CAC/B,WAAArQ,EACA,kBAAA8P,EAAA,CACD,EACD,OAAA7U,EAAgB,QAAkBn1C,GAAA,CAChCorD,EAAc,SAASprD,EAAO,YAAcA,EAAO,KAAK,CAAA,CACzD,EACD4qD,EAAW,KAAKQ,CAAa,EAEtB,GADS,GAAGR,EAAW,IAAIhmD,GAAOA,EAAI,aAAc,CAAA,EAAE,KAAK;AAAA,CAAM,CAAC;AAAA,CACxD,GAAG+lD,CAAO,GAAG,KAAK,CACrC,CC1IA,SAASU,GAAyBC,EAAM,CACtC,MAAMC,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,MAAM,WAAa,MACxBA,EAAK,MAAM,WAAa,MACxBA,EAAK,MAAM,QAAU,MACrBA,EAAK,YAAcD,EACnB,SAAS,KAAK,YAAYC,CAAI,EAC9B,MAAMlkD,EAAQ,SAAS,cACvBA,EAAM,WAAWkkD,CAAI,EACrB,MAAMtyC,EAAY,OAAO,eACzBA,EAAU,gBAAe,EACzBA,EAAU,SAAS5R,CAAK,EACxB,GAAI,CACF,SAAS,YAAY,MAAM,CAC/B,QAAY,CACR,SAAS,KAAK,YAAYkkD,CAAI,CAC/B,CACH,CACA,SAASC,GAAgBF,EAAM,CACzB,UAAU,UACZ,UAAU,UAAU,UAAUA,CAAI,EAAE,MAAM,IAAM,CAC9CD,GAAyBC,CAAI,CACnC,CAAK,EAEDD,GAAyBC,CAAI,CAEjC,CACA,SAASG,GAAmB3zC,EAAS,OASnC,MAPI,IAAAnvB,EAAA,OAAO,iBAAP,MAAAA,EAAuB,YAOvBmvB,IAAYA,EAAQ,cAAgB,IAAMA,EAAQ,gBAAkB,GAAK,EAI/E,CAMO,MAAM4zC,GAAmB,CAACz1D,EAAQpP,IAAU,CACjD,MAAM8kE,EAA2B9kE,EAAM,iCACjCyjE,GAAwB,OAAOqB,GAA6B,SAAWA,GAAA,YAAAA,EAA0B,gBAAkBA,IAA6B,GAChJC,EAA6B/kE,EAAM,2BACnCglE,EAAa5oD,EAAiB,YAACrX,GAAS,CAM5C,GALI,GAAGA,EAAM,SAAWA,EAAM,UAAYA,EAAM,IAAI,YAAW,IAAO,KAAO,CAACA,EAAM,UAAY,CAACA,EAAM,SAKnG6/D,GAAmB7/D,EAAM,MAAM,EACjC,OAEF,IAAIkgE,EAAa,GAEjB,GADqB71D,EAAO,QAAQ,gBAAe,EAClC,KAAO,EACtB61D,EAAa71D,EAAO,QAAQ,aAAa,CACvC,eAAgB,GAChB,UAAW21D,EACX,mBAAoB,GACpB,eAAgB,EACxB,CAAO,MACI,CACL,MAAMt8B,EAAcjX,GAAsBpiB,CAAM,EAChD,GAAIq5B,EAAa,CACf,MAAM+6B,EAAap0D,EAAO,QAAQ,cAAcq5B,EAAY,GAAIA,EAAY,KAAK,EACjFw8B,EAAa1B,GAAmBC,EAAY,CAC1C,WAAY,CACV,UAAWuB,EACX,mBAAoB,GACpB,eAAgB,EACjB,EACD,qBAAAtB,CACV,CAAS,CACF,CACF,CACDwB,EAAa71D,EAAO,QAAQ,6BAA6B,gBAAiB61D,CAAU,EAChFA,IACFN,GAAgBM,CAAU,EAC1B71D,EAAO,QAAQ,aAAa,gBAAiB61D,CAAU,EAE1D,EAAE,CAAC71D,EAAQq0D,EAAsBsB,CAA0B,CAAC,EAC7DrvC,GAA2BtmB,EAAQA,EAAO,QAAQ,eAAgB,UAAW41D,CAAU,EACvFhzD,GAAwB5C,EAAQ,gBAAiBpP,EAAM,eAAe,CACxE,ECzFaklE,GAA6BjyD,GAASqI,EAAS,CAAA,EAAIrI,EAAO,CACrE,WAAY,CACV,KAAM,EACP,CACH,CAAC,EAMYkyD,GAAoB/1D,GAAU,CACzC,MAAMomB,EAASD,GAAcnmB,EAAQ,mBAAmB,EAKlDg2D,EAAiBhpD,EAAiB,YAACtD,GAAS,CAChD,MAAM+2B,EAAkBV,GAAuB//B,EAAO,QAAQ,KAAK,EAC7DgE,EAAW,CACf,KAAM,GACN,MAAA0F,CACN,GACyB1F,EAAS,OAASy8B,EAAgB,MAAQz8B,EAAS,QAAUy8B,EAAgB,SAEhGzgC,EAAO,QAAQ,SAAS6D,GAClBA,EAAM,WAAW,MAAQA,EAAM,WAAW,QAAU6F,EAC/C7F,GAETuiB,EAAO,MAAM,qBAAqB,EAC3Bla,EAAS,CAAE,EAAErI,EAAO,CACzB,WAAY,CACV,KAAM,GACN,MAAA6F,CACD,CACX,CAAS,EACF,EACD1J,EAAO,QAAQ,kBACfA,EAAO,QAAQ,cAErB,EAAK,CAACA,EAAQomB,CAAM,CAAC,EACb6vC,EAAiBjpD,EAAAA,YAAkB,IAAM,CAC7C,MAAMyzB,EAAkBV,GAAuB//B,EAAO,QAAQ,KAAK,EACnE,GAAIygC,EAAgB,MAAO,CACzB,MAAM9a,EAAerc,GAAyBtJ,CAAM,EAC9C8J,EAAwBH,GAAkC3J,CAAM,EAChEgyB,EAAgB5oB,GAAyBpJ,CAAM,EACrD,IAAIk2D,EAAez1B,EAAgB,MAQnC,GALK9a,EAAauwC,CAAY,IAC5BA,EAAelkC,EAAc,CAAC,GAI5BloB,EAAsBosD,CAAY,IAAM,GAAO,CAEjD,MAAMC,EAAuBnkC,EAAc,OAAOtoB,GAC5CA,IAAUwsD,EACL,GAEFpsD,EAAsBJ,CAAK,IAAM,EACzC,EACK0sD,EAAaD,EAAqB,QAAQD,CAAY,EAC5DA,EAAeC,EAAqBC,EAAa,CAAC,GAAKD,EAAqBC,EAAa,CAAC,CAC3F,CACDp2D,EAAO,QAAQ,qBAAqBk2D,CAAY,CACjD,CACD,MAAMlyD,EAAW,CACf,KAAM,GACN,MAAO,MACb,GACyBA,EAAS,OAASy8B,EAAgB,MAAQz8B,EAAS,QAAUy8B,EAAgB,SAEhGzgC,EAAO,QAAQ,SAAS6D,IACtBuiB,EAAO,MAAM,oBAAoB,EAC1Bla,EAAS,CAAE,EAAErI,EAAO,CACzB,WAAYG,CACtB,CAAS,EACF,EACDhE,EAAO,QAAQ,cAErB,EAAK,CAACA,EAAQomB,CAAM,CAAC,EACbiwC,EAAmBrpD,EAAiB,YAACtD,GAAS,CAClD0c,EAAO,MAAM,oBAAoB,EACjC,MAAMgsB,EAAarS,GAAuB//B,EAAO,QAAQ,KAAK,EAC1D,CAACoyC,EAAW,MAAQA,EAAW,QAAU1oC,EAC3CssD,EAAetsD,CAAK,EAEpBusD,GAEH,EAAE,CAACj2D,EAAQomB,EAAQ4vC,EAAgBC,CAAc,CAAC,EAMnDnwC,GAAiB9lB,EALK,CACpB,eAAAg2D,EACA,eAAAC,EACA,iBAAAI,CACJ,EAC0C,QAAQ,EAChD3zD,GAAuB1C,EAAQ,oBAAqBi2D,CAAc,EAClEvzD,GAAuB1C,EAAQ,uBAAwBA,EAAO,QAAQ,cAAc,EACpF0C,GAAuB1C,EAAQ,2BAA4BA,EAAO,QAAQ,cAAc,CAC1F,EC9Fas2D,GAA0B,CAACzyD,EAAOjT,EAAOoP,IAAW,WAC/D,MAAMqJ,EAAempB,GAAmB,CACtC,OAAAxyB,EACA,gBAAiBpP,EAAM,QACvB,cAAc8B,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,QAClC,sBAAuB9B,EAAM,yBAAyBqwB,GAAAxW,EAAA7Z,EAAM,eAAN,YAAA6Z,EAAoB,UAApB,YAAAwW,EAA6B,wBAAyB,CAAE,EAC9G,wBAAyB,EAC7B,CAAG,EACD,OAAO/U,EAAS,CAAE,EAAErI,EAAO,CACzB,QAASwF,EAGT,cAAexF,EAAM,eAAiBoF,EAC1C,CAAG,CACH,EAOO,SAASstD,GAAev2D,EAAQpP,EAAO,SAC5C,MAAMw1B,EAASD,GAAcnmB,EAAQ,gBAAgB,EAC/Cw2D,EAAsBr2D,EAAAA,OAAavP,EAAM,OAAO,EACtDoP,EAAO,QAAQ,qBAAqB,CAClC,QAAS,iBACT,UAAWpP,EAAM,sBACjB,aAAcA,EAAM,8BACpB,cAAe+Y,GACf,YAAa,6BACjB,CAAG,EACD,MAAM8sD,EAAsBzpD,EAAiB,YAAC3D,GAAgB,SAC5D+c,EAAO,MAAM,yBAAyB,EACtCpmB,EAAO,QAAQ,SAAS02D,GAAkBrtD,CAAY,CAAC,EACvDrJ,EAAO,QAAQ,aAAa,gBAAiBqJ,EAAa,aAAa,GACvEoB,GAAA/X,EAAAsN,EAAO,SAAQ,sBAAf,MAAAyK,EAAA,KAAA/X,GACAsN,EAAO,QAAQ,aACnB,EAAK,CAAComB,EAAQpmB,CAAM,CAAC,EAKb22D,EAAY3pD,cAAkBtD,GAASJ,GAAyBtJ,CAAM,EAAE0J,CAAK,EAAG,CAAC1J,CAAM,CAAC,EACxF42D,EAAgB5pD,EAAAA,YAAkB,IAAMzD,GAA8BvJ,CAAM,EAAG,CAACA,CAAM,CAAC,EACvF62D,EAAoB7pD,EAAAA,YAAkB,IAAMpD,GAAqC5J,CAAM,EAAG,CAACA,CAAM,CAAC,EAClG82D,EAAiB9pD,EAAiB,YAAC,CAACtD,EAAOqtD,EAAoB,MACnDA,EAAoBntD,GAAqC5J,CAAM,EAAIuJ,GAA8BvJ,CAAM,GACxG,UAAUsL,GAAOA,EAAI,QAAU5B,CAAK,EAClD,CAAC1J,CAAM,CAAC,EACLg3D,EAAoBhqD,EAAiB,YAACtD,GAAS,CACnD,MAAMyE,EAAQ2oD,EAAeptD,CAAK,EAClC,OAAOsB,GAA4BhL,CAAM,EAAEmO,CAAK,CACpD,EAAK,CAACnO,EAAQ82D,CAAc,CAAC,EACrBG,EAA2BjqD,EAAiB,YAAC9a,GAAS,SACrCyX,GAAkC3J,CAAM,IACxC9N,IACnB8N,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,QAAS2uB,GAAmB,CAC1B,OAAAxyB,EACA,gBAAiB,CAAE,EACnB,aAAc,OACd,sBAAuB9N,EACvB,wBAAyB,EACnC,CAAS,CACF,CAAA,CAAC,GACFuY,GAAA/X,EAAAsN,EAAO,SAAQ,sBAAf,MAAAyK,EAAA,KAAA/X,GACAsN,EAAO,QAAQ,cAErB,EAAK,CAACA,CAAM,CAAC,EACLk3D,EAAgBlqD,EAAiB,YAACnD,GAAW,CACjD,MAAMR,EAAempB,GAAmB,CACtC,OAAAxyB,EACA,gBAAiB6J,EACjB,aAAc,OACd,wBAAyB,EAC/B,CAAK,EACD4sD,EAAoBptD,CAAY,CACpC,EAAK,CAACrJ,EAAQy2D,CAAmB,CAAC,EAC1BU,EAAsBnqD,EAAAA,YAAkB,CAACtD,EAAOixC,IAAc,CAClE,MAAM7wC,EAAwBH,GAAkC3J,CAAM,EAChEo3D,EAAqBttD,EAAsBJ,CAAK,GAAK,GAC3D,GAAIixC,IAAcyc,EAAoB,CACpC,MAAMvc,EAAW3uC,EAAS,CAAE,EAAEpC,EAAuB,CACnD,CAACJ,CAAK,EAAGixC,CACjB,CAAO,EACD36C,EAAO,QAAQ,yBAAyB66C,CAAQ,CACjD,CACL,EAAK,CAAC76C,CAAM,CAAC,EACLq3D,EAAyCrqD,EAAiB,YAACtD,GAC5CN,GAAyBpJ,CAAM,EAChC,UAAUsL,GAAOA,IAAQ5B,CAAK,EAC/C,CAAC1J,CAAM,CAAC,EACLs3D,EAAiBtqD,EAAAA,YAAkB,CAACtD,EAAO6tD,IAAwB,CACvE,MAAMC,EAAapuD,GAAyBpJ,CAAM,EAC5Cy3D,EAAmBJ,EAAuC3tD,CAAK,EACrE,GAAI+tD,IAAqBF,EACvB,OAEFnxC,EAAO,MAAM,iBAAiB1c,CAAK,aAAa6tD,CAAmB,EAAE,EACrE,MAAMG,EAAiB,CAAC,GAAGF,CAAU,EAC/BG,EAAeD,EAAe,OAAOD,EAAkB,CAAC,EAAE,CAAC,EACjEC,EAAe,OAAOH,EAAqB,EAAGI,CAAY,EAC1DlB,EAAoBvqD,EAAS,GAAI/C,GAAyBnJ,EAAO,QAAQ,KAAK,EAAG,CAC/E,cAAe03D,CAChB,CAAA,CAAC,EACF,MAAMp1D,EAAS,CACb,OAAQtC,EAAO,QAAQ,UAAU0J,CAAK,EACtC,YAAa1J,EAAO,QAAQ,uCAAuC0J,CAAK,EACxE,SAAU+tD,CAChB,EACIz3D,EAAO,QAAQ,aAAa,oBAAqBsC,CAAM,CACxD,EAAE,CAACtC,EAAQomB,EAAQqwC,EAAqBY,CAAsC,CAAC,EAC1EO,EAAiB5qD,EAAAA,YAAkB,CAACtD,EAAOhL,IAAU,CACzD0nB,EAAO,MAAM,mBAAmB1c,CAAK,aAAahL,CAAK,EAAE,EACzD,MAAM2K,EAAeF,GAAyBnJ,EAAO,QAAQ,KAAK,EAC5D+J,EAASV,EAAa,OAAOK,CAAK,EAClCopB,EAAY5mB,EAAS,CAAE,EAAEnC,EAAQ,CACrC,MAAArL,EACA,eAAgB,EACtB,CAAK,EACD+3D,EAAoBplC,GAAoBnlB,EAAS,CAAA,EAAI7C,EAAc,CACjE,OAAQ6C,EAAS,GAAI7C,EAAa,OAAQ,CACxC,CAACK,CAAK,EAAGopB,CACjB,CAAO,CACF,CAAA,EAAG9yB,EAAO,QAAQ,kBAAiB,CAAE,CAAC,EACvCA,EAAO,QAAQ,aAAa,oBAAqB,CAC/C,QAASA,EAAO,QAAQ,uBAAuB0J,CAAK,EACpD,OAAQopB,EACR,MAAAp0B,CACN,CAAK,CACF,EAAE,CAACsB,EAAQomB,EAAQqwC,CAAmB,CAAC,EAClCoB,EAAY,CAChB,UAAAlB,EACA,cAAAC,EACA,eAAAE,EACA,kBAAAE,EACA,kBAAAH,EACA,uCAAAQ,EACA,cAAAH,EACA,yBAAAD,EACA,oBAAAE,EACA,eAAAS,CACJ,EACQE,EAAmB,CACvB,eAAAR,CACJ,EACExxC,GAAiB9lB,EAAQ63D,EAAW,QAAQ,EAC5C/xC,GAAiB9lB,EAAQ83D,EAAkBlnE,EAAM,YAAc4Q,GAAc,SAAW,UAAY,QAAQ,EAK5G,MAAMu2D,EAA2B/qD,EAAAA,YAAkB,CAACgrD,EAAWjH,IAAY,SACzE,MAAMkH,EAAuB,CAAA,EACvBC,EAAgCvuD,GAAkC3J,CAAM,GAG9E,CAAC+wD,EAAQ,uBAETngE,EAAM,uBAAyB,MAG/B,OAAO,OAAK6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,UAApB,YAAA+X,EAA6B,wBAAyB,CAAA,CAAE,EAAE,OAAS,GAE/E,OAAO,KAAKytD,CAA6B,EAAE,OAAS,KAElDD,EAAqB,sBAAwBC,GAE/CD,EAAqB,cAAgB7uD,GAAyBpJ,CAAM,EACpE,MAAM6J,EAAUN,GAA8BvJ,CAAM,EAC9CuxB,EAAa,CAAA,EACnB,OAAA1nB,EAAQ,QAAQyC,GAAU,CACxB,GAAIA,EAAO,eAAgB,CACzB,MAAM6rD,EAAmB,CAAA,EACzB5nC,GAA6B,QAAQ6nC,GAAgB,CACnD,IAAIjM,EAAgB7/C,EAAO8rD,CAAY,EACnCjM,IAAkB,MACpBA,EAAgB,IAElBgM,EAAiBC,CAAY,EAAIjM,CAC3C,CAAS,EACD56B,EAAWjlB,EAAO,KAAK,EAAI6rD,CAC5B,CACP,CAAK,EACG,OAAO,KAAK5mC,CAAU,EAAE,OAAS,IACnC0mC,EAAqB,WAAa1mC,GAE7BrlB,EAAS,CAAE,EAAE8rD,EAAW,CAC7B,QAASC,CACf,CAAK,CACL,EAAK,CAACj4D,EAAQpP,EAAM,uBAAuB8B,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,OAAO,CAAC,EAC/D2lE,EAA4BrrD,EAAAA,YAAkB,CAAC1K,EAAQyuD,IAAY,OACvE,MAAMuH,GAAgC5lE,EAAAq+D,EAAQ,eAAe,UAAvB,YAAAr+D,EAAgC,sBAChEq/B,EAAeg/B,EAAQ,eAAe,QAC5C,GAAIuH,GAAiC,MAAQvmC,GAAgB,KAC3D,OAAOzvB,EAET,MAAM+G,EAAempB,GAAmB,CACtC,OAAAxyB,EACA,gBAAiB,CAAE,EACnB,aAAA+xB,EACA,sBAAuBumC,EACvB,wBAAyB,EAC/B,CAAK,EACD,OAAAt4D,EAAO,QAAQ,SAAS02D,GAAkBrtD,CAAY,CAAC,EACnD0oB,GAAgB,MAClB/xB,EAAO,QAAQ,aAAa,gBAAiBqJ,EAAa,aAAa,EAElE/G,CACX,EAAK,CAACtC,CAAM,CAAC,EACLu4D,EAA+BvrD,EAAAA,YAAkB,CAACwrD,EAAcz5D,IAAU,OAC9E,GAAIA,IAAUskC,GAA0B,QAAS,CAC/C,MAAMo1B,EAAe7nE,EAAM,MAAM,aACjC,OAAoByc,EAAI,IAACorD,EAAcvsD,EAAS,CAAA,GAAIxZ,EAAA9B,EAAM,YAAN,YAAA8B,EAAiB,YAAY,CAAC,CACnF,CACD,OAAO8lE,CACX,EAAK,CAAC5nE,EAAM,MAAM,cAAc6Z,EAAA7Z,EAAM,YAAN,YAAA6Z,EAAiB,YAAY,CAAC,EACtDiuD,EAAqB1rD,EAAiB,YAAC2rD,GACvC/nE,EAAM,sBACD+nE,EAEF,CAAC,GAAGA,EAAiB,uBAAuB,EAClD,CAAC/nE,EAAM,qBAAqB,CAAC,EAChCugE,GAA6BnxD,EAAQ,aAAc04D,CAAkB,EACrEvH,GAA6BnxD,EAAQ,cAAe+3D,CAAwB,EAC5E5G,GAA6BnxD,EAAQ,eAAgBq4D,CAAyB,EAC9ElH,GAA6BnxD,EAAQ,kBAAmBu4D,CAA4B,EAMpF,MAAMK,EAAiBz4D,SAAa,IAAI,EAOxCuC,GAAuB1C,EAAQ,0BANF64D,GAAqB,CAC5CD,EAAe,UAAYC,EAAkB,QAC/CD,EAAe,QAAUC,EAAkB,MAC3CpC,EAAoBplC,GAAoBloB,GAAyBnJ,EAAO,QAAQ,KAAK,EAAGA,EAAO,QAAQ,kBAAiB,CAAE,CAAC,EAEjI,CACgF,EAK9E,MAAM84D,EAAiB9rD,EAAAA,YAAkB,IAAM,CAC7CoZ,EAAO,KAAK,gEAAgE,EAC5E,MAAM/c,EAAempB,GAAmB,CACtC,OAAAxyB,EACA,gBAAiB,CAAE,EACnB,aAAc,OACd,wBAAyB,EAC/B,CAAK,EACDy2D,EAAoBptD,CAAY,CACjC,EAAE,CAACrJ,EAAQomB,EAAQqwC,CAAmB,CAAC,EACxCnF,GAA2BtxD,EAAQ,iBAAkB84D,CAAc,EAOnE,MAAM5yC,EAAgB/lB,SAAa,EAAI,EACvCqC,EAAAA,UAAgB,IAAM,CACpB,GAAI0jB,EAAc,QAAS,CACzBA,EAAc,QAAU,GACxB,MACD,CAED,GADAE,EAAO,KAAK,wCAAwCx1B,EAAM,QAAQ,MAAM,EAAE,EACtE4lE,EAAoB,UAAY5lE,EAAM,QACxC,OAEF,MAAMyY,EAAempB,GAAmB,CACtC,OAAAxyB,EACA,aAAc,OAEd,gBAAiBpP,EAAM,QACvB,wBAAyB,EAC/B,CAAK,EACD4lE,EAAoB,QAAU5lE,EAAM,QACpC6lE,EAAoBptD,CAAY,CACpC,EAAK,CAAC+c,EAAQpmB,EAAQy2D,EAAqB7lE,EAAM,OAAO,CAAC,EACvD4R,EAAAA,UAAgB,IAAM,CAChB5R,EAAM,wBAA0B,QAClCoP,EAAO,QAAQ,yBAAyBpP,EAAM,qBAAqB,CAEtE,EAAE,CAACoP,EAAQomB,EAAQx1B,EAAM,qBAAqB,CAAC,CAClD,CACA,SAAS8lE,GAAkBrtD,EAAc,CACvC,OAAOxF,GAASqI,EAAS,CAAE,EAAErI,EAAO,CAClC,QAASwF,CACb,CAAG,CACH,CCvSO,MAAM0vD,GAA0B,CAACl1D,EAAOjT,IAAU,OAAA,OAAAsb,EAAS,CAAA,EAAIrI,EAAO,CAC3E,UAASnR,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,UAAW9B,EAAM,SAAW,UAC3D,CAAC,GACYooE,GAAiB,CAACh5D,EAAQpP,IAAU,OAC/C,MAAMw1B,EAASD,GAAcnmB,EAAQ,YAAY,EACjDA,EAAO,QAAQ,qBAAqB,CAClC,QAAS,UACT,UAAWpP,EAAM,QACjB,aAAcA,EAAM,gBACpB,cAAeiY,GACf,YAAa,eACjB,CAAG,EAWD,MAAMowD,EAAa,CACjB,WAXiB3jC,GAAiBstB,GAAc,CACzB/5C,GAAoB7I,EAAO,QAAQ,KAAK,IACxC4iD,IAGvBx8B,EAAO,MAAM,uBAAuBw8B,CAAU,EAAE,EAChD5iD,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,QAAS++C,CACV,CAAA,CAAC,EACN,CAAG,CAGH,EACE98B,GAAiB9lB,EAAQi5D,EAAY,QAAQ,EAC7C,MAAMlB,EAA2B/qD,EAAAA,YAAkB,CAACgrD,EAAWjH,IAAY,OACzE,MAAMmI,EAAkBrwD,GAAoB7I,EAAO,QAAQ,KAAK,EAQhE,MALA,CAAC+wD,EAAQ,uBAETngE,EAAM,SAAW,QAEjB8B,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,UAAW,KAIxBwZ,EAAS,CAAE,EAAE8rD,EAAW,CAC7B,QAASkB,CACf,CAAK,EAJQlB,CAKb,EAAK,CAACh4D,EAAQpP,EAAM,SAAS8B,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,OAAO,CAAC,EACjD2lE,EAA4BrrD,EAAAA,YAAkB,CAAC1K,EAAQyuD,IAAY,OACvE,MAAMoI,GAAkBzmE,EAAAq+D,EAAQ,iBAAR,MAAAr+D,EAAwB,QAAUq+D,EAAQ,eAAe,QAAUloD,GAAoB7I,EAAO,QAAQ,KAAK,EACnI,OAAAA,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,QAASs1D,CACV,CAAA,CAAC,EACK72D,CACX,EAAK,CAACtC,CAAM,CAAC,EACXmxD,GAA6BnxD,EAAQ,cAAe+3D,CAAwB,EAC5E5G,GAA6BnxD,EAAQ,eAAgBq4D,CAAyB,EAC9E71D,EAAAA,UAAgB,IAAM,CAChB5R,EAAM,SACRoP,EAAO,QAAQ,WAAWpP,EAAM,OAAO,CAE1C,EAAE,CAACoP,EAAQpP,EAAM,OAAO,CAAC,CAC5B,ECpDO,SAASwoE,GAASC,EAAMC,EAAY,MAAOC,EAAW,SAAS,OAAS,WAAY,CACzF,MAAMC,EAAW,GAAGD,CAAQ,IAAID,CAAS,GAIzC,GAAI,aAAc,kBAAkB,UAAW,CAE7C,MAAMG,EAAM,IAAI,gBAAgBJ,CAAI,EAG9BhhE,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOohE,EACTphE,EAAE,SAAWmhE,EAKbnhE,EAAE,MAAK,EAGP,WAAW,IAAM,CACf,IAAI,gBAAgBohE,CAAG,CAC7B,CAAK,EACD,MACD,CACD,MAAM,IAAI,MAAM,gCAAgC,CAClD,CClCO,MAAMC,GAAqB,CAAC,CACjC,OAAA15D,EACA,QAAA+B,CACF,IAAM,CACJ,MAAM8H,EAAUN,GAA8BvJ,CAAM,EACpD,OAAI+B,EAAQ,OACHA,EAAQ,OAAO,OAAO,CAACw4C,EAAgB7wC,IAAU,CACtD,MAAMK,EAASF,EAAQ,KAAKyB,GAAOA,EAAI,QAAU5B,CAAK,EACtD,OAAIK,GACFwwC,EAAe,KAAKxwC,CAAM,EAErBwwC,CACR,EAAE,CAAE,CAAA,GAEcx4C,EAAQ,WAAa8H,EAAUD,GAAqC5J,CAAM,GAC3E,OAAO+J,GAAU,CAACA,EAAO,aAAa,CAC5D,EACa4vD,GAAyB,CAAC,CACrC,OAAA35D,CACF,IAAM,SACJ,MAAM45D,EAAuB90C,GAAiC9kB,CAAM,EAC9D4jB,EAAUvI,GAAoBrb,CAAM,EACpCkjB,EAAeljB,EAAO,QAAQ,gBAAe,EAC7C65D,EAAWD,EAAqB,OAAOp6D,GAAMokB,EAAQpkB,CAAE,EAAE,OAAS,QAAQ,EAC1E2c,EAAaL,GAAuB9b,CAAM,EAC1C85D,IAAmBpnE,EAAAypB,GAAA,YAAAA,EAAY,MAAZ,YAAAzpB,EAAiB,IAAIic,GAAOA,EAAI,MAAO,GAC1DorD,IAAsBtvD,EAAA0R,GAAA,YAAAA,EAAY,SAAZ,YAAA1R,EAAoB,IAAIkE,GAAOA,EAAI,MAAO,GAGtE,OAFAkrD,EAAS,QAAQ,GAAGC,CAAgB,EACpCD,EAAS,KAAK,GAAGE,CAAmB,EAChC72C,EAAa,KAAO,EACf22C,EAAS,OAAOr6D,GAAM0jB,EAAa,IAAI1jB,CAAE,CAAC,EAE5Cq6D,CACT,ECpBaG,GAAmB,CAACh6D,EAAQpP,IAAU,CACjD,MAAMw1B,EAASD,GAAcnmB,EAAQ,kBAAkB,EACjD01D,EAA2B9kE,EAAM,iCACjCyjE,GAAwB,OAAOqB,GAA6B,SAAWA,GAAA,YAAAA,EAA0B,UAAYA,IAA6B,GAC1IuE,EAAejtD,EAAAA,YAAkB,CAACjL,EAAU,CAAA,IAAO,CACvDqkB,EAAO,MAAM,iBAAiB,EAC9B,MAAM8zC,EAAkBR,GAAmB,CACzC,OAAA15D,EACA,QAAA+B,CACN,CAAK,EAEKo4D,GADkBp4D,EAAQ,iBAAmB43D,IACZ,CACrC,OAAA35D,CACN,CAAK,EACD,OAAOw0D,GAAS,CACd,QAAS0F,EACT,OAAQC,EACR,WAAY,CACV,UAAWp4D,EAAQ,WAAa,IAChC,mBAAoBA,EAAQ,oBAAsB,GAClD,eAAgBA,EAAQ,gBAAkB,GAC1C,2BAA4BA,EAAQ,4BAA8B,GAClE,eAAgBA,EAAQ,gBAAkB,EAC3C,EACD,qBAAAsyD,EACA,OAAAr0D,CACN,CAAK,CACF,EAAE,CAAComB,EAAQpmB,EAAQq0D,CAAoB,CAAC,EACnC+F,EAAkBptD,EAAiB,YAACjL,GAAW,CACnDqkB,EAAO,MAAM,oBAAoB,EACjC,MAAMi0C,EAAMJ,EAAal4D,CAAO,EAC1Bs3D,EAAO,IAAI,KAAK,CAACt3D,GAAA,MAAAA,EAAS,YAAc,IAAI,WAAW,CAAC,IAAM,IAAM,GAAI,CAAC,EAAI,GAAIs4D,CAAG,EAAG,CAC3F,KAAM,UACZ,CAAK,EACDjB,GAASC,EAAM,MAAOt3D,GAAA,YAAAA,EAAS,QAAQ,CAC3C,EAAK,CAACqkB,EAAQ6zC,CAAY,CAAC,EAKzBn0C,GAAiB9lB,EAJI,CACnB,aAAAi6D,EACA,gBAAAG,CACJ,EACyC,QAAQ,EAK/C,MAAME,EAAuBttD,EAAAA,YAAkB,CAACwrD,EAAcz2D,IAAY,OACxE,OAAIrP,EAAAqP,EAAQ,aAAR,MAAArP,EAAoB,qBACf8lE,EAEF,CAAC,GAAGA,EAAc,CACvB,UAAwBnrD,EAAI,IAACy2C,GAAuB,CAClD,QAAS/hD,EAAQ,UACzB,CAAO,EACD,cAAe,WACrB,CAAK,CACF,EAAE,CAAE,CAAA,EACLovD,GAA6BnxD,EAAQ,aAAcs6D,CAAoB,CACzE,EClEaC,GAA4B,CAACC,EAAiBC,EAAWC,IAAwB,CAC5F,IAAIxyC,EAAkBsyC,EAAgB,gBACtC,MAAM19C,EAAW09C,EAAgB,SAC3BnzC,GAAWqzC,GAAA,YAAAA,EAAqB,WAAYxyC,EAAgB,SAC5DZ,GAAOozC,GAAA,YAAAA,EAAqB,OAAQxyC,EAAgB,KACpDT,EAAYL,GAAatK,EAAUuK,EAAUC,CAAI,EACnDozC,KAAwBA,GAAA,YAAAA,EAAqB,QAASxyC,EAAgB,OAAQwyC,GAAA,YAAAA,EAAqB,YAAaxyC,EAAgB,YAClIA,EAAkBwyC,GAEpB,MAAMC,EAAYnzC,GAAaU,EAAgB,KAAMT,CAAS,EAC9D,OAAIkzC,IAAczyC,EAAgB,OAChCA,EAAkBhc,EAAS,CAAE,EAAEgc,EAAiB,CAC9C,KAAMyyC,CACZ,CAAK,GAEHjzC,GAA+BQ,EAAgB,SAAUuyC,CAAS,EAC3DvyC,CACT,EAMa0yC,GAAyB,CAAC56D,EAAQpP,IAAU,SACvD,MAAMw1B,EAASD,GAAcnmB,EAAQ,wBAAwB,EACvD2zB,EAAgBnwB,EAAgBxD,EAAQ8I,EAAyB,EACjE+hD,EAAY,KAAK,MAAMj6D,EAAM,UAAY+iC,CAAa,EAC5D3zB,EAAO,QAAQ,qBAAqB,CAClC,QAAS,kBACT,UAAWpP,EAAM,gBACjB,aAAcA,EAAM,wBACpB,cAAei3B,GACf,YAAa,uBACjB,CAAG,EAKD,MAAMgzC,EAAU7tD,EAAiB,YAACsa,GAAQ,CACxC,MAAMszB,EAAe/yB,GAA4B7nB,CAAM,EACnDsnB,IAASszB,EAAa,OAG1Bx0B,EAAO,MAAM,mBAAmBkB,CAAI,EAAE,EACtCtnB,EAAO,QAAQ,mBAAmB,CAChC,KAAAsnB,EACA,SAAUszB,EAAa,QAC7B,CAAK,EACL,EAAK,CAAC56C,EAAQomB,CAAM,CAAC,EACb00C,EAAc9tD,EAAiB,YAACqa,GAAY,CAChD,MAAMuzB,EAAe/yB,GAA4B7nB,CAAM,EACnDqnB,IAAauzB,EAAa,WAG9Bx0B,EAAO,MAAM,wBAAwBiB,CAAQ,EAAE,EAC/CrnB,EAAO,QAAQ,mBAAmB,CAChC,SAAAqnB,EACA,KAAMuzB,EAAa,IACzB,CAAK,EACL,EAAK,CAAC56C,EAAQomB,CAAM,CAAC,EACb20C,EAAqB/tD,EAAiB,YAACkb,GAAmB,CAC9D,MAAM0yB,EAAe/yB,GAA4B7nB,CAAM,EACnDkoB,IAAoB0yB,IAGxBx0B,EAAO,MAAM,+BAAgC8B,CAAe,EAC5DloB,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,WAAYqI,EAAS,GAAIrI,EAAM,WAAY,CACzC,gBAAiB02D,GAA0B12D,EAAM,WAAYjT,EAAM,UAAWs3B,CAAe,CACrG,CAAO,CACF,CAAA,CAAC,EACH,EAAE,CAACloB,EAAQomB,EAAQx1B,EAAM,SAAS,CAAC,EAMpCk1B,GAAiB9lB,EALU,CACzB,QAAA66D,EACA,YAAAC,EACA,mBAAAC,CACJ,EAC+C,QAAQ,EAKrD,MAAMhD,EAA2B/qD,EAAAA,YAAkB,CAACgrD,EAAWjH,IAAY,SACzE,MAAM7oC,EAAkBL,GAA4B7nB,CAAM,EAU1D,MAPA,CAAC+wD,EAAQ,uBAETngE,EAAM,iBAAmB,QAEzB6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,aAApB,YAAA+X,EAAgC,kBAAmB,MAEnDyd,EAAgB,OAAS,GAAKA,EAAgB,WAAahB,GAAgBt2B,EAAM,YAAY,EAItFsb,EAAS,CAAE,EAAE8rD,EAAW,CAC7B,WAAY9rD,EAAS,GAAI8rD,EAAU,WAAY,CAC7C,gBAAA9vC,CACR,CAAO,CACP,CAAK,EANQ8vC,CAOV,EAAE,CAACh4D,EAAQpP,EAAM,iBAAiB6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,aAApB,YAAA+X,EAAgC,gBAAiB7Z,EAAM,YAAY,CAAC,EACjGynE,EAA4BrrD,EAAAA,YAAkB,CAAC1K,EAAQyuD,IAAY,SACvE,MAAM7oC,GAAkBx1B,EAAAq+D,EAAQ,eAAe,aAAvB,MAAAr+D,EAAmC,gBAAkBwZ,EAAS,CAAA,EAAIqb,GAA8B32B,EAAM,YAAY,GAAG6Z,EAAAsmD,EAAQ,eAAe,aAAvB,YAAAtmD,EAAmC,eAAe,EAAIod,GAA4B7nB,CAAM,EACrO,OAAAA,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,WAAYqI,EAAS,GAAIrI,EAAM,WAAY,CACzC,gBAAiB02D,GAA0B12D,EAAM,WAAYjT,EAAM,UAAWs3B,CAAe,CACrG,CAAO,CACF,CAAA,CAAC,EACK5lB,CACX,EAAK,CAACtC,EAAQpP,EAAM,aAAcA,EAAM,SAAS,CAAC,EAChDugE,GAA6BnxD,EAAQ,cAAe+3D,CAAwB,EAC5E5G,GAA6BnxD,EAAQ,eAAgBq4D,CAAyB,EAK9E,MAAM2C,EAA8B,IAAM,OACxC,MAAM9yC,EAAkBL,GAA4B7nB,CAAM,GACtDtN,EAAAsN,EAAO,QAAQ,qBAAf,MAAAtN,EAAmC,SACrCsN,EAAO,QAAQ,gBAAgB,CAC7B,SAAUkoB,EAAgB,KAAOA,EAAgB,QACzD,CAAO,CAEP,EACQ+yC,EAA2BjuD,EAAAA,YAAkB,IAAM,CACvD,GAAI,CAACpc,EAAM,aACT,OAEF,MAAM2gC,EAAavxB,EAAO,QAAQ,kBAAiB,EAC7Ck7D,EAAkC,KAAK,MAAM3pC,EAAW,kBAAkB,OAASs5B,CAAS,EAClG7qD,EAAO,QAAQ,YAAYk7D,CAA+B,CAC3D,EAAE,CAACl7D,EAAQpP,EAAM,aAAci6D,CAAS,CAAC,EACpCsQ,EAAuBnuD,EAAiB,YAACouD,GAAe,CAC5D,GAAIA,GAAe,KACjB,OAEF,MAAMlzC,EAAkBL,GAA4B7nB,CAAM,EACpDynB,EAAYW,GAAsBpoB,CAAM,EAC1CkoB,EAAgB,KAAOT,EAAY,GACrCznB,EAAO,QAAQ,QAAQ,KAAK,IAAI,EAAGynB,EAAY,CAAC,CAAC,CAEvD,EAAK,CAACznB,CAAM,CAAC,EACX0C,GAAuB1C,EAAQ,0BAA2Bi7D,CAAwB,EAClFv4D,GAAuB1C,EAAQ,wBAAyBg7D,CAA2B,EACnFt4D,GAAuB1C,EAAQ,iBAAkBm7D,CAAoB,EAKrE34D,EAAAA,UAAgB,IAAM,CACpBxC,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,WAAYqI,EAAS,GAAIrI,EAAM,WAAY,CACzC,gBAAiB02D,GAA0B12D,EAAM,WAAYjT,EAAM,UAAWA,EAAM,eAAe,CAC3G,CAAO,CACF,CAAA,CAAC,CACN,EAAK,CAACoP,EAAQpP,EAAM,gBAAiBA,EAAM,eAAgBA,EAAM,SAAS,CAAC,EACzE4R,EAAAA,UAAgBy4D,EAA0B,CAACA,CAAwB,CAAC,CACtE,ECpJA,SAASI,IAAM,CACN,OAAA,IAAI,QAAmBC,GAAA,CAC5B,sBAAsB,IAAM,CAClBA,GAAA,CACT,CAAA,CACF,CACH,CACA,SAASC,GAAiBtvB,EAAO,CACzB,MAAAuvB,EAAW,SAAS,cAAc,QAAQ,EAChD,OAAAA,EAAS,MAAM,SAAW,WAC1BA,EAAS,MAAM,MAAQ,MACvBA,EAAS,MAAM,OAAS,MACfA,EAAA,MAAQvvB,GAAS,SAAS,MAC5BuvB,CACT,CAQa,MAAAC,GAAqB,CAACz7D,EAAQpP,IAAU,CAC7C,MAAAw1B,EAASD,GAAcnmB,EAAQ,oBAAoB,EACnD4rC,EAAMzrC,SAAa,IAAI,EACvBu7D,EAAoBv7D,SAAa,IAAI,EACrCw7D,EAA2Bx7D,SAAa,CAAA,CAAE,EAC1Cy7D,EAAez7D,SAAa,CAAA,CAAE,EAC9B07D,EAA8B17D,EAAAA,SACpCqC,EAAAA,UAAgB,IAAM,CACpBopC,EAAI,QAAUC,GAAc7rC,EAAO,QAAQ,eAAe,OAAO,CAAA,EAChE,CAACA,CAAM,CAAC,EAIL,MAAA87D,EAA4B9uD,EAAkB,YAAA,CAAC+uD,EAAQvE,EAAYwE,IAAsB,IAAI,QAAmBV,GAAA,CACpH,MAAMW,EAAuBvC,GAAmB,CAC9C,OAAA15D,EACA,QAAS,CACP,OAAA+7D,EACA,WAAAvE,CACF,CACD,CAAA,EAAE,IAAIztD,GAAUA,EAAO,KAAK,EACvBF,EAAUN,GAA8BvJ,CAAM,EAC9Ck8D,EAA2B,CAAA,EACjCryD,EAAQ,QAAkBE,GAAA,CACxBmyD,EAAyBnyD,EAAO,KAAK,EAAIkyD,EAAqB,SAASlyD,EAAO,KAAK,CAAA,CACpF,EACGiyD,IACuBE,EAAAnyC,GAAgC,KAAK,EAAI,IAE7D/pB,EAAA,QAAQ,yBAAyBk8D,CAAwB,EACxDZ,GAAA,CACT,EAAG,CAACt7D,CAAM,CAAC,EACNm8D,EAAyBnvD,cAAqCovD,GAAA,CAIlE,MAAMC,EAHkBD,EAAgB,CACtC,OAAAp8D,CAAA,CACD,EAC+B,OAAO,CAACwL,EAAKhM,IAAO,CAClD,MAAMmP,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EAChC,OAACmP,EAAI0N,EAAqB,GAC5B7Q,EAAI,KAAKmD,CAAG,EAEPnD,CACT,EAAG,CAAE,CAAA,EACExL,EAAA,QAAQ,QAAQq8D,CAAO,CAAA,EAC7B,CAACr8D,CAAM,CAAC,EACLs8D,EAAwBtvD,EAAAA,YAAkB,CAACuvD,EAAax6D,IAAY,aACxE,MAAMy6D,EAAmBtwD,EAAS,CAChC,WAAY,GACZ,YAAa,GACb,WAAY,GACZ,kBAAmB,IAClBnK,CAAO,EACJ06D,EAAWF,EAAY,gBAC7B,GAAI,CAACE,EACH,OAEF,MAAMpkC,EAAWhC,GAAqBr2B,EAAO,QAAQ,KAAK,EACpD08D,EAAkB18D,EAAO,QAAQ,eAAe,QAChD28D,EAAYD,EAAgB,UAAU,EAAI,EAG1CE,EAAWD,EAAU,cAAc,IAAI57D,EAAY,IAAI,EAAE,EAC/D67D,EAAS,MAAM,SAAW,UAG1BD,EAAU,MAAM,QAAU,OACtB,IAAAE,IAA2BnqE,EAAAgqE,EAAgB,cAAc,IAAI37D,EAAY,gBAAgB,EAAE,IAAhE,YAAArO,EAAmE,eAAgB,EAC9GoqE,IAA0BryD,EAAAiyD,EAAgB,cAAc,IAAI37D,EAAY,eAAe,EAAE,IAA/D,YAAA0J,EAAkE,eAAgB,EAC5G+xD,EAAiB,eACnBv7C,EAAA07C,EAAU,cAAc,IAAI57D,EAAY,gBAAgB,EAAE,IAA1D,MAAAkgB,EAA6D,SAClC47C,EAAA,GAEzBL,EAAiB,cACnB/tC,EAAAkuC,EAAU,cAAc,IAAI57D,EAAY,eAAe,EAAE,IAAzD,MAAA0tB,EAA4D,SAClCquC,EAAA,GAI5B,MAAMC,EAAsB1kC,EAAS,uBAAyB3E,GAAqB1zB,EAAQpP,CAAK,EAAIisE,EAA2BC,EAI3H,GAHMH,EAAA,MAAM,OAAS,GAAGI,CAAmB,KAE/CJ,EAAU,MAAM,UAAY,cACxB,CAACH,EAAiB,WAAY,CAIhC,MAAMQ,EAAoBL,EAAU,cAAc,IAAI57D,EAAY,eAAe,EAAE,EACnFi8D,EAAkB,MAAM,SAAW,WACnCA,EAAkB,MAAM,MAAQ,OAChCA,EAAkB,MAAM,IAAM,GAAGD,EAAsBD,CAAuB,IAChF,CAIM,MAAA70B,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,YAAY00B,CAAS,EAEtBF,EAAA,KAAK,MAAM,UAAY,MACvBA,EAAA,KAAK,UAAYx0B,EAAU,UAC9B,MAAAg1B,EAAmB,OAAOT,EAAiB,WAAc,WAAaA,EAAiB,UAAA,EAAcA,EAAiB,UACxH,GAAA,OAAOS,GAAqB,SAAU,CAElC,MAAAC,EAAeT,EAAS,cAAc,OAAO,EACnDS,EAAa,YAAYT,EAAS,eAAeQ,CAAgB,CAAC,EACzDR,EAAA,KAAK,YAAYS,CAAY,CACxC,CACIV,EAAiB,eACVC,EAAA,KAAK,UAAU,IAAI,GAAGD,EAAiB,cAAc,MAAM,GAAG,CAAC,EAE1E,MAAMW,EAAyB,CAAA,EAC/B,GAAIX,EAAiB,WAAY,CACzB,MAAAY,EAAgBV,EAAgB,cAEhCW,GADOD,EAAc,YAAY,OAAS,aAAeA,EAAgBxxB,EAAI,SACpD,iBAAiB,+BAA+B,EAC/E,QAAS3xC,EAAI,EAAGA,EAAIojE,EAAkB,OAAQpjE,GAAK,EAAG,CAC9C,MAAAwU,EAAO4uD,EAAkBpjE,CAAC,EAC5B,GAAAwU,EAAK,UAAY,QAAS,CAC5B,MAAM6uD,EAAuBb,EAAS,cAAchuD,EAAK,OAAO,EAC1D8uD,EAAQ9uD,EAAK,MACnB,GAAI8uD,EAAO,CACT,IAAIC,EAAW,GAEf,QAAStjE,EAAI,EAAGA,EAAIqjE,EAAM,SAAS,OAAQrjE,GAAK,EAC1C,OAAOqjE,EAAM,SAASrjE,CAAC,EAAE,SAAY,WACvCsjE,GAAY,GAAGD,EAAM,SAASrjE,CAAC,EAAE,OAAO;AAAA,GAG5CojE,EAAqB,YAAYb,EAAS,eAAee,CAAQ,CAAC,EACzDf,EAAA,KAAK,YAAYa,CAAoB,CAChD,CACS,SAAA7uD,EAAK,aAAa,MAAM,EAAG,CAGpC,MAAM6uD,EAAuBb,EAAS,cAAchuD,EAAK,OAAO,EAChE,QAASvU,EAAI,EAAGA,EAAIuU,EAAK,WAAW,OAAQvU,GAAK,EAAG,CAC5C,MAAAujE,EAAOhvD,EAAK,WAAWvU,CAAC,EAC1BujE,GACFH,EAAqB,aAAaG,EAAK,SAAUA,EAAK,WAAa,EAAE,CAEzE,CACuBN,EAAA,KAAK,IAAI,QAAmB7B,GAAA,CACjDgC,EAAqB,iBAAiB,OAAQ,IAAMhC,EAAS,CAAA,CAC9D,CAAA,CAAC,EACOmB,EAAA,KAAK,YAAYa,CAAoB,CAChD,CACF,CACF,CAKE,QAAQ,IAAIH,CAAsB,EAAE,KAAK,IAAM,CAC7CZ,EAAY,cAAc,OAAM,CACjC,CAEF,EAAA,CAACv8D,EAAQ4rC,EAAKh7C,CAAK,CAAC,EACjB8sE,EAA8B1wD,cAAiCuvD,GAAA,SAE/D3wB,EAAA,QAAQ,KAAK,YAAY2wB,CAAW,EAGxCv8D,EAAO,QAAQ,aAAa07D,EAAkB,SAAW,CAAE,CAAA,GACtDjxD,GAAA/X,EAAAgpE,EAAkB,UAAlB,YAAAhpE,EAA2B,UAA3B,MAAA+X,EAAoC,uBAEhCzK,EAAA,QAAQ,yBAAyB27D,EAAyB,OAAO,EAE1E37D,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,GAAIrI,EAAO,CACnD,eAAgBg4D,EAA4B,OAC7C,CAAA,CAAC,EACK77D,EAAA,QAAQ,QAAQ47D,EAAa,OAAO,EAG3CF,EAAkB,QAAU,KAC5BC,EAAyB,QAAU,GACnCC,EAAa,QAAU,EAAC,EACvB,CAAC57D,CAAM,CAAC,EAsDL29D,EAAiB,CACrB,kBAtDwB3wD,cAAkB,MAAMjL,GAAW,CAE3D,GADAqkB,EAAO,MAAM,sBAAsB,EAC/B,CAACpmB,EAAO,QAAQ,eAAe,QAC3B,MAAA,IAAI,MAAM,wCAAwC,EAM1D,GAJkB07D,EAAA,QAAU17D,EAAO,QAAQ,YAAY,EAE9B27D,EAAA,QAAUhyD,GAAkC3J,CAAM,EAC9D47D,EAAA,QAAU57D,EAAO,QAAQ,cAAc,EAAE,OAAc2O,GAAA,CAACA,EAAI0N,EAAqB,CAAC,EAC3FzrB,EAAM,WAAY,CAEpB,MAAMs3B,EAAkB,CACtB,KAAM,EACN,SAHsB/C,GAA6BnlB,CAAM,CAG/C,EAEZA,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,GAAIrI,EAAO,CACnD,WAAYqI,EAAS,GAAIrI,EAAM,WAAY,CACzC,gBAAiB02D,GAA0B12D,EAAM,WAEjD,cAAeqkB,CAAe,CAAA,CAC/B,CACF,CAAA,CAAC,CACJ,CAC4B2zC,EAAA,QAAU77D,EAAO,QAAQ,MAAM,eAC3DA,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,GAAIrI,EAAO,CACnD,eAAgBqI,EAAS,GAAIrI,EAAM,eAAgB,CACjD,QAAS,GACT,kBAAmB,EAAA,CACpB,CACF,CAAA,CAAC,EACF,MAAMi4D,EAA0B/5D,GAAA,YAAAA,EAAS,OAAQA,GAAA,YAAAA,EAAS,WAAYA,GAAA,YAAAA,EAAS,iBAAiB,EACzEo6D,GAAAp6D,GAAA,YAAAA,EAAS,kBAAmB43D,EAAsB,EACzE,MAAM0B,GAAI,EACJ,MAAAkB,EAAchB,GAAiBx5D,GAAA,YAAAA,EAAS,QAAQ,EAOpDw6D,EAAY,OAAS,IAAM,CACzBD,EAAsBC,EAAax6D,CAAO,EACnBw6D,EAAY,cAAc,WAAW,OAAO,EACpD,iBAAiB,SAAiBqB,GAAA,CAC1BA,EAAI,UAAY,IAEnCF,EAA4BnB,CAAW,CACzC,CACD,CAAA,EAEC3wB,EAAA,QAAQ,KAAK,YAAY2wB,CAAW,CAC1C,EACC,CAAC3rE,EAAOw1B,EAAQpmB,EAAQs8D,EAAuBoB,EAA6B5B,EAA2BK,CAAsB,CAAC,CAE/H,EAEer2C,GAAA9lB,EAAQ29D,EAAgB,QAAQ,EAKjD,MAAMrD,EAAuBttD,EAAAA,YAAkB,CAACwrD,EAAcz2D,IAAY,OACpE,OAAArP,EAAAqP,EAAQ,eAAR,MAAArP,EAAsB,qBACjB8lE,EAEF,CAAC,GAAGA,EAAc,CACvB,gBAA6BzU,GAAyB,CACpD,QAAShiD,EAAQ,YAAA,CAClB,EACD,cAAe,aAAA,CAChB,CACH,EAAG,CAAE,CAAA,EACwBovD,GAAAnxD,EAAQ,aAAcs6D,CAAoB,CACzE,EC7QauD,GAAyB,CAACh6D,EAAOjT,EAAOoP,IAAW,SAC9D,MAAM8T,EAAcljB,EAAM,eAAe6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,SAApB,YAAA+X,EAA4B,cAAeyI,KACpF,OAAOhH,EAAS,CAAE,EAAErI,EAAO,CACzB,OAAQ,CACN,YAAa2P,GAAoBM,EAAaljB,EAAM,gCAAiCoP,CAAM,EAC3F,mBAAoB,CAAE,EACtB,8BAA+B,CAAE,CAClC,EACD,kBAAmB,CAAE,CACzB,CAAG,CACH,EACM89D,GAAuBx7D,GAEpBA,EAAO,mBAEhB,SAASy7D,GAA0B/9D,EAAQ6D,EAAO,CAChD,OAAO7D,EAAO,QAAQ,uBAAuB,4BAA6B,CACxE,KAAM6D,EAAM,KAAK,KACjB,mBAAoBA,EAAM,OAAO,kBACrC,CAAG,CACH,CACA,SAASm6D,IAAuB,CAC9B,OAAO74D,GAAe,OAAO,MAAM,CACrC,CAOO,MAAM84D,GAAgB,CAACj+D,EAAQpP,IAAU,WAC9C,MAAMw1B,EAASD,GAAcnmB,EAAQ,eAAe,EACpDA,EAAO,QAAQ,qBAAqB,CAClC,QAAS,SACT,UAAWpP,EAAM,YACjB,aAAcA,EAAM,oBACpB,cAAeqzB,GACf,YAAa,mBACjB,CAAG,EACD,MAAMi6C,EAAqBlxD,EAAAA,YAAkB,IAAM,CACjDhN,EAAO,QAAQ,SAAS6D,GAAS,CAC/B,MAAMiQ,EAAcmQ,GAAwBpgB,EAAO7D,EAAO,QAAQ,UAAU,EACtEkkB,EAAclkB,EAAO,QAAQ,eAAe8T,CAAW,EACvD9P,EAAWkI,EAAS,CAAE,EAAErI,EAAO,CACnC,OAAQqI,EAAS,CAAA,EAAIrI,EAAM,OAAQqgB,CAAW,CACtD,CAAO,EACKi6C,EAAyBJ,GAA0B/9D,EAAQgE,CAAQ,EACzE,OAAOkI,EAAS,CAAE,EAAElI,EAAU,CAC5B,kBAAmBm6D,CAC3B,CAAO,CACP,CAAK,EACDn+D,EAAO,QAAQ,aAAa,iBAAiB,CACjD,EAAK,CAACA,CAAM,CAAC,EACLo+D,EAAoBpxD,EAAAA,YAAkB,CAAC2rD,EAAiBrsD,IACxDA,GAAU,MAAQA,EAAO,aAAe,IAAS1b,EAAM,oBAClD+nE,EAEF,CAAC,GAAGA,EAAiB,sBAAsB,EACjD,CAAC/nE,EAAM,mBAAmB,CAAC,EAKxBytE,EAAerxD,EAAAA,YAAkB,IAAM,CAC3CkxD,IACAl+D,EAAO,QAAQ,aACnB,EAAK,CAACA,EAAQk+D,CAAkB,CAAC,EACzBI,EAAmBtxD,EAAiB,YAAC/U,GAAQ,CACjD,MAAM6b,EAAcmQ,GAAwBjkB,CAAM,EAC5C2T,EAAQ,CAAC,GAAGG,EAAY,KAAK,EAC7ByqD,EAAY5qD,EAAM,UAAUO,GAAcA,EAAW,KAAOjc,EAAK,EAAE,EACrEsmE,IAAc,GAChB5qD,EAAM,KAAK1b,CAAI,EAEf0b,EAAM4qD,CAAS,EAAItmE,EAErB+H,EAAO,QAAQ,eAAekM,EAAS,CAAA,EAAI4H,EAAa,CACtD,MAAAH,CACN,CAAK,EAAG,kBAAkB,CAC1B,EAAK,CAAC3T,CAAM,CAAC,EACLw+D,EAAoBxxD,EAAiB,YAAC2G,GAAS,CACnD,MAAMG,EAAcmQ,GAAwBjkB,CAAM,EAC5Cy+D,EAAgB,CAAC,GAAG3qD,EAAY,KAAK,EAC3CH,EAAM,QAAQ1b,GAAQ,CACpB,MAAMsmE,EAAYE,EAAc,UAAUvqD,GAAcA,EAAW,KAAOjc,EAAK,EAAE,EAC7EsmE,IAAc,GAChBE,EAAc,KAAKxmE,CAAI,EAEvBwmE,EAAcF,CAAS,EAAItmE,CAEnC,CAAK,EACD+H,EAAO,QAAQ,eAAekM,EAAS,CAAA,EAAI4H,EAAa,CACtD,MAAO2qD,CACb,CAAK,EAAG,mBAAmB,CAC3B,EAAK,CAACz+D,CAAM,CAAC,EACL0+D,EAAmB1xD,EAAiB,YAAC2xD,GAAgB,CACzD,MAAM7qD,EAAcmQ,GAAwBjkB,CAAM,EAC5C2T,EAAQG,EAAY,MAAM,OAAO7b,GAAQA,EAAK,KAAO0mE,EAAa,EAAE,EACtEhrD,EAAM,SAAWG,EAAY,MAAM,QAGvC9T,EAAO,QAAQ,eAAekM,EAAS,CAAA,EAAI4H,EAAa,CACtD,MAAAH,CACN,CAAK,EAAG,kBAAkB,CAC1B,EAAK,CAAC3T,CAAM,CAAC,EACL4+D,EAAkB5xD,EAAiB,YAAC,CAAC6xD,EAAmBtqB,EAAS5zB,IAAY,CAEjF,GADAyF,EAAO,MAAM,yBAAyB,EAClCy4C,EAAmB,CACrB,MAAM/qD,EAAcmQ,GAAwBjkB,CAAM,EAC5C8+D,EAAuBhrD,EAAY,MAAM,OAAO7b,GAAQ,OAC5D,GAAIA,EAAK,QAAU,OAGjB,MAAI,QAAM,QAAQA,EAAK,KAAK,GAAKA,EAAK,MAAM,SAAW,GAMzD,MAAMuc,GAAiB9hB,EADRsN,EAAO,QAAQ,UAAU/H,EAAK,KAAK,EACpB,kBAAP,YAAAvF,EAAwB,KAAK+hB,GAAYA,EAAS,QAAUxc,EAAK,UAMxF,MAL4B,SAAOuc,GAAA,YAAAA,EAAgB,qBAAwB,IAAc,GAAOA,GAAA,YAAAA,EAAgB,oBASxH,CAAO,EACD,IAAIuqD,EACJ,MAAMC,EAAqBF,EAAqB,KAAK7mE,GAAQA,EAAK,QAAU4mE,CAAiB,EACvFI,EAAej/D,EAAO,QAAQ,UAAU6+D,CAAiB,EAC3DG,EACFD,EAAiBD,EACRluE,EAAM,gCACfmuE,EAAiB,CAACzrD,GAAgB,CAChC,MAAOurD,EACP,SAAUI,EAAa,gBAAgB,CAAC,EAAE,KACpD,EAAWj/D,CAAM,CAAC,EAEV++D,EAAiB,CAAC,GAAGD,EAAsBxrD,GAAgB,CACzD,MAAOurD,EACP,SAAUI,EAAa,gBAAgB,CAAC,EAAE,KACpD,EAAWj/D,CAAM,CAAC,EAEZA,EAAO,QAAQ,eAAekM,EAAS,CAAA,EAAI4H,EAAa,CACtD,MAAOirD,CACR,CAAA,CAAC,CACH,CACD/+D,EAAO,QAAQ,gBAAgBqjC,GAA0B,QAASkR,EAAS5zB,CAAO,CACnF,EAAE,CAAC3gB,EAAQomB,EAAQx1B,EAAM,+BAA+B,CAAC,EACpDsuE,EAAkBlyD,EAAAA,YAAkB,IAAM,CAC9CoZ,EAAO,MAAM,qBAAqB,EAClCpmB,EAAO,QAAQ,iBACnB,EAAK,CAACA,EAAQomB,CAAM,CAAC,EACb+4C,EAAyBnyD,EAAiB,YAACkwC,GAAiB,CAChE,MAAMppC,EAAcmQ,GAAwBjkB,CAAM,EAC9C8T,EAAY,gBAAkBopC,GAGlCl9C,EAAO,QAAQ,eAAekM,EAAS,CAAA,EAAI4H,EAAa,CACtD,cAAAopC,CACN,CAAK,EAAG,qBAAqB,CAC7B,EAAK,CAACl9C,CAAM,CAAC,EACLo/D,EAAuBpyD,EAAiB,YAAC23C,GAAU,CACvD,MAAM7wC,EAAcmQ,GAAwBjkB,CAAM,EAC9CuR,GAAYuC,EAAY,kBAAmB6wC,CAAM,GAGrD3kD,EAAO,QAAQ,eAAekM,EAAS,CAAA,EAAI4H,EAAa,CACtD,kBAAmB,CAAC,GAAG6wC,CAAM,CAC9B,CAAA,CAAC,CACN,EAAK,CAAC3kD,CAAM,CAAC,EACLq/D,EAAiBryD,EAAAA,YAAkB,CAAC9a,EAAO27B,IAAW,CACrC5J,GAAwBjkB,CAAM,IAC9B9N,IACnBk0B,EAAO,MAAM,sBAAsB,EACnCpmB,EAAO,QAAQ,mBAAmB,SAAU6T,GAA0B3hB,EAAOtB,EAAM,gCAAiCoP,CAAM,EAAG6tB,CAAM,EACnI7tB,EAAO,QAAQ,wBAElB,EAAE,CAACA,EAAQomB,EAAQx1B,EAAM,+BAA+B,CAAC,EACpD0uE,EAAiBtyD,EAAiB,YAACuyD,GAAoB,CAC3D,MAAMzrD,EAAcN,GAAoB+rD,EAAkB3uE,EAAM,gCAAiCoP,CAAM,EACjGw/D,EAAuB5uE,EAAM,aAAe,SAAWmlB,GAA6BjC,EAAa9T,EAAQpP,EAAM,WAAW,EAAI,KAC9H6uE,EAAez/D,EAAO,QAAQ,uBAAuB,YAAa,CACtE,qBAAAw/D,EACA,YAAa1rD,GAAeZ,GAA2B,CAC7D,CAAK,EACD,OAAOhH,EAAS,CAAE,EAAEuzD,EAAc,CAChC,YAAA3rD,CACN,CAAK,CACL,EAAK,CAACljB,EAAM,gCAAiCA,EAAM,WAAYA,EAAM,YAAaoP,CAAM,CAAC,EACjF0/D,EAAY,CAChB,uBAAAP,EACA,sBAAuBd,EACvB,iBAAAK,EACA,iBAAAJ,EACA,kBAAAE,EACA,eAAAa,EACA,gBAAAT,EACA,gBAAAM,EACA,qBAAAE,EACA,iBAAkBxuE,EAAM,iBACxB,eAAA0uE,CACJ,EACEx5C,GAAiB9lB,EAAQ0/D,EAAW,QAAQ,EAK5C,MAAM3H,EAA2B/qD,EAAAA,YAAkB,CAACgrD,EAAWjH,IAAY,SACzE,MAAM4O,EAAsB17C,GAAwBjkB,CAAM,EAU1D,MAPA,CAAC+wD,EAAQ,uBAETngE,EAAM,aAAe,QAErB6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,SAApB,YAAA+X,EAA4B,cAAe,MAE3C,CAAC8G,GAAYouD,EAAqBzsD,GAAyB,CAAE,EAItDhH,EAAS,CAAE,EAAE8rD,EAAW,CAC7B,OAAQ,CACN,YAAa2H,CACd,CACP,CAAK,EANQ3H,CAOb,EAAK,CAACh4D,EAAQpP,EAAM,aAAa6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,SAApB,YAAA+X,EAA4B,WAAW,CAAC,EACjE4tD,EAA4BrrD,EAAAA,YAAkB,CAAC1K,EAAQyuD,IAAY,OACvE,MAAMj9C,GAAcphB,EAAAq+D,EAAQ,eAAe,SAAvB,YAAAr+D,EAA+B,YACnD,OAAIohB,GAAe,KACVxR,GAETtC,EAAO,QAAQ,mBAAmB,SAAU6T,GAA0BC,EAAaljB,EAAM,gCAAiCoP,CAAM,EAAG,cAAc,EAC1IkM,EAAS,CAAE,EAAE5J,EAAQ,CAC1B,UAAW,CAAC,GAAGA,EAAO,UAAWtC,EAAO,QAAQ,qBAAqB,CAC3E,CAAK,EACF,EAAE,CAACA,EAAQpP,EAAM,+BAA+B,CAAC,EAC5C2nE,EAA+BvrD,EAAAA,YAAkB,CAACwrD,EAAcz5D,IAAU,OAC9E,GAAIA,IAAUskC,GAA0B,QAAS,CAC/C,MAAMu8B,EAAchvE,EAAM,MAAM,YAChC,OAAoByc,EAAI,IAACuyD,EAAa1zD,EAAS,CAAA,GAAIxZ,EAAA9B,EAAM,YAAN,YAAA8B,EAAiB,WAAW,CAAC,CACjF,CACD,OAAO8lE,CACX,EAAK,CAAC5nE,EAAM,MAAM,aAAaqwB,EAAArwB,EAAM,YAAN,YAAAqwB,EAAiB,WAAW,CAAC,EACpD,CACJ,SAAAtE,CACD,EAAG/rB,EACEivE,EAAal8D,GAAWq6D,EAAoB,EAC5C8B,EAAsB9yD,EAAiB,YAAC1K,GAAU,CACtD,GAAI1R,EAAM,aAAe,UAAY,CAAC0R,EAAO,qBAC3C,MAAO,CACL,mBAAoB,CAAE,EACtB,8BAA+B,CAAE,CACzC,EAEI,MAAM0a,EAAyB7B,GAAuBnb,CAAM,EACtD6kB,EAAqB,CAAA,EACrB,CACJ,qBAAA26C,CACD,EAAGl9D,EACEy9D,EAAc,CAAA,EACd1rE,EAAS,CACb,mBAAoB,KACpB,yBAA0B,IAChC,EACU2mB,EAAO6kD,EAAW,QAAQ7/D,EAAO,QAAQ,MAAM,KAAK,sBAAsB,EAChF,QAAS/F,EAAI,EAAGA,EAAI+gB,EAAK,OAAQ/gB,GAAK,EAAG,CACvC,MAAM0U,EAAMqM,EAAK/gB,CAAC,EACZuF,EAAKmd,EAAWA,EAAShO,CAAG,EAAIA,EAAI,GAC1C6wD,EAAqB7wD,EAAK,OAAWta,CAAM,EAC3C,MAAM2rE,EAAe5pD,GAAgB,CAAC/hB,EAAO,kBAAkB,EAAG,CAACA,EAAO,wBAAwB,EAAGiO,EAAO,YAAatC,EAAQ+/D,CAAW,EAC5Il7C,EAAmBrlB,CAAE,EAAIwgE,CAC1B,CACD,MAAMC,EAAW,mCAEjB,OADejjD,EAAuBijD,CAAQ,IAE5Cp7C,EAAmBo7C,CAAQ,EAAI,IAE1B,CACL,mBAAAp7C,EACA,8BAA+B,CAAE,CACvC,CACA,EAAK,CAAC7kB,EAAQpP,EAAM,WAAY+rB,EAAUkjD,CAAU,CAAC,EACnD1O,GAA6BnxD,EAAQ,aAAco+D,CAAiB,EACpEjN,GAA6BnxD,EAAQ,cAAe+3D,CAAwB,EAC5E5G,GAA6BnxD,EAAQ,eAAgBq4D,CAAyB,EAC9ElH,GAA6BnxD,EAAQ,kBAAmBu4D,CAA4B,EACpFhH,GAAiCvxD,EAAQyxD,GAAuB,YAAaqO,CAAmB,EAChGvO,GAAiCvxD,EAAQyxD,GAAuB,4BAA6BqM,EAAoB,EAKjH,MAAMoC,EAAsBlzD,EAAAA,YAAkB,IAAM,CAClDoZ,EAAO,MAAM,sDAAsD,EACnE,MAAMtS,EAAcmQ,GAAwBjkB,CAAM,EAC5CwxB,EAAgBloB,GAAyBtJ,CAAM,EAC/C++D,EAAiBjrD,EAAY,MAAM,OAAO7b,GAAQA,EAAK,OAASu5B,EAAcv5B,EAAK,KAAK,CAAC,EAC3F8mE,EAAe,OAASjrD,EAAY,MAAM,QAC5C9T,EAAO,QAAQ,eAAekM,EAAS,CAAA,EAAI4H,EAAa,CACtD,MAAOirD,CACR,CAAA,CAAC,CAER,EAAK,CAAC/+D,EAAQomB,CAAM,CAAC,EACb+5C,EAAgCnzD,EAAiB,YAACuiD,GAAc,CAChEA,IAAe,aACjBvvD,EAAO,QAAQ,uBAErB,EAAK,CAACA,CAAM,CAAC,EACLogE,EAA+BpzD,EAAAA,YAAkB,IAAM,CAC3DhN,EAAO,QAAQ,SAAS6D,GACfqI,EAAS,CAAE,EAAErI,EAAO,CACzB,kBAAmBk6D,GAA0B/9D,EAAQ6D,CAAK,CAClE,CAAO,CACF,EACD7D,EAAO,QAAQ,aACnB,EAAK,CAACA,CAAM,CAAC,EAIX0C,GAAuB1C,EAAQ,UAAWk+D,CAAkB,EAC5Dx7D,GAAuB1C,EAAQ,gBAAiBkgE,CAAmB,EACnEx9D,GAAuB1C,EAAQ,gCAAiCmgE,CAA6B,EAC7Fz9D,GAAuB1C,EAAQ,qBAAsBogE,CAA4B,EACjF19D,GAAuB1C,EAAQ,8BAA+B,IAAM,CAClE,MAAM8T,EAAcmQ,GAAwBjkB,CAAM,EAC9C8T,EAAY,mBAAqBwB,GAAsCxB,CAAW,GAEpF9T,EAAO,QAAQ,uBAErB,CAAG,EAKD2mB,GAAe,IAAM,CACnB3mB,EAAO,QAAQ,uBACnB,CAAG,EAKDoN,GAAkB,IAAM,CAClBxc,EAAM,cAAgB,QACxBoP,EAAO,QAAQ,eAAepP,EAAM,WAAW,CAElD,EAAE,CAACoP,EAAQomB,EAAQx1B,EAAM,WAAW,CAAC,CACxC,ECrWayvE,GAAwBx8D,GAASqI,EAAS,CAAA,EAAIrI,EAAO,CAChE,MAAO,CACL,KAAM,KACN,aAAc,KACd,mBAAoB,KACpB,kBAAmB,IACpB,EACD,SAAU,CACR,KAAM,KACN,aAAc,KACd,mBAAoB,KACpB,kBAAmB,IACpB,CACH,CAAC,EAOYy8D,GAAe,CAACtgE,EAAQpP,IAAU,CAC7C,MAAMw1B,EAASD,GAAcnmB,EAAQ,cAAc,EAC7CugE,EAAkBpgE,SAAa,IAAI,EACnCqgE,EAAsBxzD,EAAAA,YAAkB,CAACk6B,EAAMvxC,IAAU,CACzDuxC,GAEElnC,EAAO,QAAQ,OAAOknC,EAAK,EAAE,GAC/BlnC,EAAO,QAAQ,aAAa,eAAgBA,EAAO,QAAQ,cAAcknC,EAAK,GAAIA,EAAK,KAAK,EAAGvxC,CAAK,CAG5G,EAAK,CAACqK,CAAM,CAAC,EACLygE,EAAezzD,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,CACpD,MAAM2vB,EAAcjX,GAAsBpiB,CAAM,GAC5Cq5B,GAAA,YAAAA,EAAa,MAAO75B,IAAM65B,GAAA,YAAAA,EAAa,SAAU3vB,IAGrD1J,EAAO,QAAQ,SAAS6D,IACtBuiB,EAAO,MAAM,4BAA4B5mB,CAAE,cAAckK,CAAK,EAAE,EACzDwC,EAAS,CAAE,EAAErI,EAAO,CACzB,SAAU,CACR,KAAM,CACJ,GAAArE,EACA,MAAAkK,CACD,EACD,aAAc,KACd,mBAAoB,KACpB,kBAAmB,IACpB,EACD,MAAO,CACL,KAAM,CACJ,GAAAlK,EACA,MAAAkK,CACD,EACD,aAAc,KACd,mBAAoB,KACpB,kBAAmB,IACpB,CACT,CAAO,EACF,EACD1J,EAAO,QAAQ,cAGVA,EAAO,QAAQ,OAAOR,CAAE,IAGzB65B,GAGFmnC,EAAoBnnC,EAAa,CAAA,CAAE,EAErCr5B,EAAO,QAAQ,aAAa,cAAeA,EAAO,QAAQ,cAAcR,EAAIkK,CAAK,CAAC,GACnF,EAAE,CAAC1J,EAAQomB,EAAQo6C,CAAmB,CAAC,EAClCE,EAAuB1zD,EAAiB,YAAC,CAACtD,EAAO/T,EAAQ,CAAA,IAAO,CACpE,MAAMuxC,EAAO9kB,GAAsBpiB,CAAM,EACzCwgE,EAAoBt5B,EAAMvxC,CAAK,EAC/BqK,EAAO,QAAQ,SAAS6D,IACtBuiB,EAAO,MAAM,2CAA2C1c,CAAK,EAAE,EACxDwC,EAAS,CAAE,EAAErI,EAAO,CACzB,SAAU,CACR,aAAc,CACZ,MAAA6F,CACD,EACD,mBAAoB,KACpB,KAAM,KACN,kBAAmB,IACpB,EACD,MAAO,CACL,aAAc,CACZ,MAAAA,CACD,EACD,mBAAoB,KACpB,KAAM,KACN,kBAAmB,IACpB,CACT,CAAO,EACF,EACD1J,EAAO,QAAQ,aAChB,EAAE,CAACA,EAAQomB,EAAQo6C,CAAmB,CAAC,EAClCG,EAA6B3zD,EAAiB,YAAC,CAACtD,EAAO/T,EAAQ,CAAA,IAAO,CAC1E,MAAMuxC,EAAO9kB,GAAsBpiB,CAAM,EACzCwgE,EAAoBt5B,EAAMvxC,CAAK,EAC/BqK,EAAO,QAAQ,SAAS6D,IACtBuiB,EAAO,MAAM,kDAAkD1c,CAAK,EAAE,EAC/DwC,EAAS,CAAE,EAAErI,EAAO,CACzB,SAAU,CACR,aAAc,KACd,mBAAoB,CAClB,MAAA6F,CACD,EACD,KAAM,KACN,kBAAmB,IACpB,EACD,MAAO,CACL,aAAc,KACd,mBAAoB,CAClB,MAAAA,CACD,EACD,KAAM,KACN,kBAAmB,IACpB,CACT,CAAO,EACF,EACD1J,EAAO,QAAQ,aAChB,EAAE,CAACA,EAAQomB,EAAQo6C,CAAmB,CAAC,EAClCI,EAA4B5zD,EAAAA,YAAkB,CAACtD,EAAOiS,EAAOhmB,EAAQ,KAAO,CAChF,MAAMuxC,EAAO9kB,GAAsBpiB,CAAM,EACrCknC,GACFlnC,EAAO,QAAQ,aAAa,eAAgBA,EAAO,QAAQ,cAAcknC,EAAK,GAAIA,EAAK,KAAK,EAAGvxC,CAAK,EAEtGqK,EAAO,QAAQ,SAAS6D,GACfqI,EAAS,CAAE,EAAErI,EAAO,CACzB,SAAU,CACR,kBAAmB,CACjB,MAAA6F,EACA,MAAAiS,CACD,EACD,aAAc,KACd,mBAAoB,KACpB,KAAM,IACP,EACD,MAAO,CACL,kBAAmB,CACjB,MAAAjS,EACA,MAAAiS,CACD,EACD,aAAc,KACd,mBAAoB,KACpB,KAAM,IACP,CACT,CAAO,CACF,EACD3b,EAAO,QAAQ,aACnB,EAAK,CAACA,CAAM,CAAC,EACL6gE,EAA4B7zD,EAAAA,YAAkB,IAAMwV,GAAmCxiB,CAAM,EAAG,CAACA,CAAM,CAAC,EACxG8gE,EAA0B9zD,EAAiB,YAAC,CAACxN,EAAIkK,EAAOkE,IAAc,CAC1E,IAAImzD,EAAqB/gE,EAAO,QAAQ,eAAe0J,CAAK,EAC5D,MAAMO,EAAiBL,GAAqC5J,CAAM,EAC5Du4B,EAAcvC,GAAeh2B,EAAQ,CACzC,WAAYpP,EAAM,WAClB,eAAgBA,EAAM,cAC5B,CAAK,EACKurB,EAAaL,GAAuB9b,CAAM,EAG1CghE,EAAkB,CAAA,EAAG,OAAO7kD,EAAW,KAAO,GAAIoc,EAAY,KAAMpc,EAAW,QAAU,CAAE,CAAA,EACjG,IAAI8kD,EAAkBD,EAAgB,UAAUryD,GAAOA,EAAI,KAAOnP,CAAE,EAChEoO,IAAc,QAChBmzD,GAAsB,EACbnzD,IAAc,OACvBmzD,GAAsB,EAEtBE,GAAmB,EAEjBF,GAAsB92D,EAAe,QAEvCg3D,GAAmB,EACfA,EAAkBD,EAAgB,SAEpCD,EAAqB,IAEdA,EAAqB,IAE9BE,GAAmB,EACfA,GAAmB,IAErBF,EAAqB92D,EAAe,OAAS,IAGjDg3D,EAAkBhwD,GAAMgwD,EAAiB,EAAGD,EAAgB,OAAS,CAAC,EACtE,MAAME,EAAaF,EAAgBC,CAAe,EAClD,GAAI,CAACC,EACH,OAEF,MAAMC,EAAcnhE,EAAO,QAAQ,4BAA4BkhE,EAAW,GAAIH,CAAkB,EAC5FI,GAAeA,EAAY,mBACzBvzD,IAAc,QAAUA,IAAc,QACxCmzD,EAAqBI,EAAY,qBACxBvzD,IAAc,UACvBmzD,EAAqBI,EAAY,wBAGrCJ,EAAqB9vD,GAAM8vD,EAAoB,EAAG92D,EAAe,OAAS,CAAC,EAC3E,MAAMm3D,EAAgBn3D,EAAe82D,CAAkB,EACvD/gE,EAAO,QAAQ,aAAakhE,EAAW,GAAIE,EAAc,KAAK,CAClE,EAAK,CAACphE,EAAQpP,EAAM,WAAYA,EAAM,cAAc,CAAC,EAC7CywE,EAAwBr0D,EAAAA,YAAkB,CAAC,CAC/C,GAAAxN,EACA,MAAAkK,CACJ,IAAQ,CACJ1J,EAAO,QAAQ,aAAaR,EAAIkK,CAAK,CACzC,EAAK,CAAC1J,CAAM,CAAC,EACLshE,EAAoBt0D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CAEzDA,EAAM,MAAQ,SAAWA,EAAM,MAAQ,OAASA,EAAM,MAAQ,SAAW+2B,GAAgB/2B,EAAM,GAAG,GAGtGqK,EAAO,QAAQ,aAAasC,EAAO,GAAIA,EAAO,KAAK,CACvD,EAAK,CAACtC,CAAM,CAAC,EACLuhE,EAA0Bv0D,EAAAA,YAAkB,CAAC,CACjD,MAAAtD,CACD,EAAE/T,IAAU,CACPA,EAAM,SAAWA,EAAM,eAG3BqK,EAAO,QAAQ,qBAAqB0J,EAAO/T,CAAK,CACpD,EAAK,CAACqK,CAAM,CAAC,EACLwhE,EAA+Bx0D,EAAAA,YAAkB,CAAC,CACtD,OAAA+uD,EACA,MAAApgD,CACD,EAAEhmB,IAAU,CACX,GAAIA,EAAM,SAAWA,EAAM,cACzB,OAEF,MAAM8rE,EAAqBj/C,GAAmCxiB,CAAM,EAChEyhE,IAAuB,MAAQA,EAAmB,QAAU9lD,GAASogD,EAAO,SAAS0F,EAAmB,KAAK,GAIjHzhE,EAAO,QAAQ,0BAA0B+7D,EAAO,CAAC,EAAGpgD,EAAOhmB,CAAK,CACpE,EAAK,CAACqK,CAAM,CAAC,EACL0hE,EAAa10D,EAAAA,YAAkB,CAAC/J,EAAGtN,IAAU,UAC7C8U,GAAA/X,EAAAiD,EAAM,gBAAN,YAAAjD,EAAqB,aAAa,WAAlC,MAAA+X,EAA4C,SAAS1J,EAAY,gBAGrEqlB,EAAO,MAAM,gBAAgB,EAC7BpmB,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,MAAO,CACL,KAAM,KACN,aAAc,KACd,mBAAoB,KACpB,kBAAmB,IACpB,CACF,CAAA,CAAC,EACN,EAAK,CAACuiB,EAAQpmB,CAAM,CAAC,EACb2hE,EAAsB30D,EAAiB,YAAC1K,GAAU,CACtDi+D,EAAgB,QAAUj+D,CAC3B,EAAE,CAAE,CAAA,EACCs/D,EAAsB50D,EAAiB,YAACrX,GAAS,CACrD,MAAMy+D,EAAamM,EAAgB,QACnCA,EAAgB,QAAU,KAC1B,MAAMlnC,EAAcjX,GAAsBpiB,CAAM,EAKhD,GAAI,CAJmBA,EAAO,QAAQ,6BAA6B,iBAAkB,GAAM,CACzF,MAAArK,EACA,KAAMy+D,CACZ,CAAK,EAEC,OAEF,GAAI,CAAC/6B,EAAa,CACZ+6B,GACFp0D,EAAO,QAAQ,aAAao0D,EAAW,GAAIA,EAAW,KAAK,EAE7D,MACD,CACD,IAAIA,GAAA,YAAAA,EAAY,MAAO/6B,EAAY,KAAM+6B,GAAA,YAAAA,EAAY,SAAU/6B,EAAY,MACzE,OAEF,MAAMwoC,EAAc7hE,EAAO,QAAQ,eAAeq5B,EAAY,GAAIA,EAAY,KAAK,EAC/EwoC,GAAA,MAAAA,EAAa,SAASlsE,EAAM,UAG5By+D,EACFp0D,EAAO,QAAQ,aAAao0D,EAAW,GAAIA,EAAW,KAAK,GAE3Dp0D,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,MAAO,CACL,KAAM,KACN,aAAc,KACd,mBAAoB,KACpB,kBAAmB,IACpB,CACF,CAAA,CAAC,EACF7D,EAAO,QAAQ,cAIfwgE,EAAoBnnC,EAAa1jC,CAAK,GAE5C,EAAK,CAACqK,EAAQwgE,CAAmB,CAAC,EAC1BsB,EAAuB90D,EAAiB,YAAC1K,GAAU,CACvD,GAAIA,EAAO,WAAa,OACtB,OAEF,MAAM4kC,EAAO9kB,GAAsBpiB,CAAM,IACrCknC,GAAA,YAAAA,EAAM,MAAO5kC,EAAO,KAAM4kC,GAAA,YAAAA,EAAM,SAAU5kC,EAAO,QACnDtC,EAAO,QAAQ,aAAasC,EAAO,GAAIA,EAAO,KAAK,CAEzD,EAAK,CAACtC,CAAM,CAAC,EACL+hE,EAAe/0D,EAAAA,YAAkB,IAAM,CAC3C,MAAMk6B,EAAO9kB,GAAsBpiB,CAAM,EAGrCknC,GAAQ,CAAClnC,EAAO,QAAQ,OAAOknC,EAAK,EAAE,GACxClnC,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,MAAO,CACL,KAAM,KACN,aAAc,KACd,mBAAoB,KACpB,kBAAmB,IACpB,CACF,CAAA,CAAC,CAER,EAAK,CAAC7D,CAAM,CAAC,EACLg7D,EAA8BgH,GAAiB,IAAM,CACzD,MAAMC,EAAqB7/C,GAAsBpiB,CAAM,EACvD,GAAI,CAACiiE,EACH,OAEF,MAAM1pC,EAAcvC,GAAeh2B,EAAQ,CACzC,WAAYpP,EAAM,WAClB,eAAgBA,EAAM,cAC5B,CAAK,EAED,GAD2B2nC,EAAY,KAAK,KAAK5pB,GAAOA,EAAI,KAAOszD,EAAmB,EAAE,EAEtF,OAEF,MAAMh4D,EAAiBL,GAAqC5J,CAAM,EAClEA,EAAO,QAAQ,SAAS6D,GACfqI,EAAS,CAAE,EAAErI,EAAO,CACzB,SAAU,CACR,KAAM,CACJ,GAAI00B,EAAY,KAAK,CAAC,EAAE,GACxB,MAAOtuB,EAAe,CAAC,EAAE,KAC1B,EACD,kBAAmB,KACnB,aAAc,KACd,mBAAoB,IACrB,CACT,CAAO,CACF,CACL,CAAG,EACKi4D,EAAW,CACf,aAAAzB,EACA,qBAAAC,EACA,2BAAAC,CACJ,EACQwB,EAAkB,CACtB,wBAAArB,EACA,0BAAAF,EACA,0BAAAC,CACJ,EACE/6C,GAAiB9lB,EAAQkiE,EAAU,QAAQ,EAC3Cp8C,GAAiB9lB,EAAQmiE,EAAiB,SAAS,EACnD3/D,EAAAA,UAAgB,IAAM,CACpB,MAAMopC,EAAMC,GAAc7rC,EAAO,QAAQ,eAAe,OAAO,EAC/D,OAAA4rC,EAAI,iBAAiB,UAAWg2B,CAAmB,EAC5C,IAAM,CACXh2B,EAAI,oBAAoB,UAAWg2B,CAAmB,CAC5D,CACA,EAAK,CAAC5hE,EAAQ4hE,CAAmB,CAAC,EAChCl/D,GAAuB1C,EAAQ,mBAAoB0hE,CAAU,EAC7Dh/D,GAAuB1C,EAAQ,kBAAmBqhE,CAAqB,EACvE3+D,GAAuB1C,EAAQ,gBAAiB2hE,CAAmB,EACnEj/D,GAAuB1C,EAAQ,cAAeshE,CAAiB,EAC/D5+D,GAAuB1C,EAAQ,iBAAkB8hE,CAAoB,EACrEp/D,GAAuB1C,EAAQ,oBAAqBuhE,CAAuB,EAC3E7+D,GAAuB1C,EAAQ,yBAA0BwhE,CAA4B,EACrF9+D,GAAuB1C,EAAQ,UAAW+hE,CAAY,EACtDr/D,GAAuB1C,EAAQ,wBAAyBg7D,CAA2B,CACrF,ECtXA,SAASoH,GAA6BpiE,EAAQgb,EAAM,CAClD,MAAMmB,EAAaL,GAAuB9b,CAAM,GAAK,CAAA,EACrD,MAAO,CAAC,GAAImc,EAAW,KAAO,GAAK,GAAGnB,EAAM,GAAImB,EAAW,QAAU,CAAA,CAAG,CAC1E,CACA,MAAMkmD,GAAqB,CAAC,CAC1B,gBAAA96B,EACA,cAAA+6B,EACA,aAAAC,EACA,UAAA30D,CACF,IAAM,CACJ,GAAIA,IAAc,OAChB,GAAI25B,EAAkBg7B,EACpB,OAAOh7B,EAAkB,UAElB35B,IAAc,OACnB25B,EAAkB+6B,EACpB,OAAO/6B,EAAkB,EAG7B,OAAO,IACT,EACMi7B,GAAsB,CAAC,CAC3B,gBAAAj7B,EACA,cAAA+6B,EACA,aAAAC,EACA,UAAA30D,CACF,IAAM,CACJ,GAAIA,IAAc,OAChB,GAAI25B,EAAkB+6B,EACpB,OAAO/6B,EAAkB,UAElB35B,IAAc,OACnB25B,EAAkBg7B,EACpB,OAAOh7B,EAAkB,EAG7B,OAAO,IACT,EAWak7B,GAA4B,CAACziE,EAAQpP,IAAU,CAC1D,MAAMw1B,EAASD,GAAcnmB,EAAQ,2BAA2B,EAC1D0iE,EAAyBzsC,GAAmBj2B,EAAQpP,CAAK,EAAE,KAC3DkE,EAAQokB,KACR8nD,EAAkB/gD,UAAc,IAAMmiD,GAA6BpiE,EAAQ0iE,CAAsB,EAAG,CAAC1iE,EAAQ0iE,CAAsB,CAAC,EACpIC,EAAyB/xE,EAAM,YAAc,YAAcA,EAAM,cAQjEgyE,EAAW51D,EAAAA,YAAkB,CAAC65B,EAAUxjB,EAAOw/C,EAAqB,SAAW,CACnF,MAAM59C,EAAoBV,GAAqCvkB,CAAM,EAC/D8iE,EAAsB9iE,EAAO,QAAQ,4BAA4BqjB,EAAOwjB,CAAQ,EAClFi8B,GAAuBA,EAAoB,mBACzCD,IAAuB,OACzBh8B,EAAWi8B,EAAoB,qBACtBD,IAAuB,UAChCh8B,EAAWi8B,EAAoB,wBAKnC,MAAMC,EAA4B99C,EAAkB,UAAUtW,GAAOA,EAAI,KAAO0U,CAAK,EACrF+C,EAAO,MAAM,0BAA0B28C,CAAyB,SAASl8B,CAAQ,EAAE,EACnF7mC,EAAO,QAAQ,gBAAgB,CAC7B,SAAA6mC,EACA,SAAUk8B,CAChB,CAAK,EACD,MAAMr5D,EAAQ1J,EAAO,QAAQ,kBAAiB,EAAG6mC,CAAQ,EAAE,MAC3D7mC,EAAO,QAAQ,aAAaqjB,EAAO3Z,CAAK,CAC5C,EAAK,CAAC1J,EAAQomB,CAAM,CAAC,EACb48C,EAAah2D,EAAAA,YAAkB,CAAC65B,EAAUlxC,IAAU,CACxDywB,EAAO,MAAM,4BAA4BygB,CAAQ,EAAE,EACnD7mC,EAAO,QAAQ,gBAAgB,CAC7B,SAAA6mC,CACN,CAAK,EACD,MAAMn9B,EAAQ1J,EAAO,QAAQ,kBAAiB,EAAG6mC,CAAQ,EAAE,MAC3D7mC,EAAO,QAAQ,qBAAqB0J,EAAO/T,CAAK,CACpD,EAAK,CAACqK,EAAQomB,CAAM,CAAC,EACb68C,EAAmBj2D,EAAAA,YAAkB,CAAC65B,EAAUlxC,IAAU,CAC9DywB,EAAO,MAAM,mCAAmCygB,CAAQ,EAAE,EAC1D7mC,EAAO,QAAQ,gBAAgB,CAC7B,SAAA6mC,CACN,CAAK,EACD,MAAMn9B,EAAQ1J,EAAO,QAAQ,kBAAiB,EAAG6mC,CAAQ,EAAE,MAC3D7mC,EAAO,QAAQ,2BAA2B0J,EAAO/T,CAAK,CAC1D,EAAK,CAACqK,EAAQomB,CAAM,CAAC,EACb88C,EAAkBl2D,EAAiB,YAAC,CAAC65B,EAAUlrB,EAAOhmB,IAAU,CACpEywB,EAAO,MAAM,4BAA4BygB,CAAQ,EAAE,EACnD7mC,EAAO,QAAQ,gBAAgB,CAC7B,SAAA6mC,CACN,CAAK,EACD,KAAM,CACJ,MAAAn9B,CACD,EAAG1J,EAAO,QAAQ,kBAAmB,EAAC6mC,CAAQ,EAC/C7mC,EAAO,QAAQ,0BAA0B0J,EAAOiS,EAAOhmB,CAAK,CAChE,EAAK,CAACqK,EAAQomB,CAAM,CAAC,EACb+8C,EAAoBn2D,EAAiB,YAACyuB,GAAY,OACtD,OAAO/oC,EAAAsuE,EAAgBvlC,CAAQ,IAAxB,YAAA/oC,EAA2B,EACtC,EAAK,CAACsuE,CAAe,CAAC,EACdoC,EAA4Bp2D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CACrE,MAAM0tE,EAAkB1tE,EAAM,cAAc,cAAc,IAAIoL,EAAY,iCAAiC,EAAE,EAE7G,GAD4B,CAAC,CAACsiE,GAAmBA,EAAgB,SAAS1tE,EAAM,MAAM,GAC3D2M,EAAO,QAAUynB,GAAgC,MAG1E,OAEF,MAAMu5C,EAAmBtjE,EAAO,QAAQ,oBAAmB,EACrDujE,EAAiBjhE,EAAO,MAAQtC,EAAO,QAAQ,eAAesC,EAAO,KAAK,EAAI,EAC9EkhE,EAAsBxC,EAAgB,OAAS,EAAI,EAAI,KACvDyC,EAAqBzC,EAAgB,OAAS,EAC9CsB,EAAgB,EAChBC,EAAe34D,GAAqC5J,CAAM,EAAE,OAAS,EACrE0jE,EAAsBpzC,GAAuCtwB,CAAM,EACzE,IAAI2jE,EAAuB,GAC3B,OAAQhuE,EAAM,IAAG,CACf,IAAK,YACH,CACM6tE,IAAwB,OACtBb,EACFM,EAAiBM,EAAgB5tE,CAAK,EAEtCitE,EAASW,EAAgBJ,EAAkBK,CAAmB,CAAC,GAGnE,KACD,CACH,IAAK,aACH,CACE,MAAMI,EAAgBpB,GAAoB,CACxC,gBAAiBe,EACjB,cAAAjB,EACA,aAAAC,EACA,UAAWztE,EAAM,SAC7B,CAAW,EACG8uE,IAAkB,MACpBZ,EAAWY,EAAejuE,CAAK,EAEjC,KACD,CACH,IAAK,YACH,CACE,MAAMkuE,EAAexB,GAAmB,CACtC,gBAAiBkB,EACjB,cAAAjB,EACA,aAAAC,EACA,UAAWztE,EAAM,SAC7B,CAAW,EACG+uE,IAAiB,MACnBb,EAAWa,EAAcluE,CAAK,EAEhC,KACD,CACH,IAAK,UACH,CACM+tE,EAAsB,GACxBR,EAAgBK,EAAgBG,EAAsB,EAAG/tE,CAAK,EAEhE,KACD,CACH,IAAK,WACH,CACM6tE,IAAwB,MAAQC,IAAuB,MACzDb,EAASW,EAAgBJ,EAAkB,KAAK,IAAIK,EAAsBF,EAAkBG,CAAkB,CAAC,CAAC,EAElH,KACD,CACH,IAAK,OACH,CACET,EAAWV,EAAe3sE,CAAK,EAC/B,KACD,CACH,IAAK,MACH,CACEqtE,EAAWT,EAAc5sE,CAAK,EAC9B,KACD,CACH,IAAK,QACH,EACMA,EAAM,SAAWA,EAAM,UACzBqK,EAAO,QAAQ,iBAAiBsC,EAAO,KAAK,EAE9C,KACD,CACH,IAAK,IAGD,MAEJ,QAEIqhE,EAAuB,EAE5B,CACGA,GACFhuE,EAAM,eAAc,CAEvB,EAAE,CAACqK,EAAQghE,EAAgB,OAAQ2B,EAAwBM,EAAkBL,EAAUO,EAAmBruE,EAAM,UAAWkuE,EAAYE,CAAe,CAAC,EAClJY,EAA4B92D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CACrE,MAAMouE,EAAYh0C,GAAqC/vB,CAAM,IAAMsC,EAAO,MACpE0hE,EAAmBh0C,GAAgChwB,CAAM,IAAMsC,EAAO,MAC5E,GAAIyhE,GAAaC,GAAoB,CAACt3C,GAAgB/2B,EAAM,GAAG,EAC7D,OAEF,MAAM2tE,EAAmBtjE,EAAO,QAAQ,oBAAmB,EACrDujE,EAAiBjhE,EAAO,MAAQtC,EAAO,QAAQ,eAAesC,EAAO,KAAK,EAAI,EAC9EkhE,EAAsB,EACtBC,EAAqBzC,EAAgB,OAAS,EAC9CsB,EAAgB,EAChBC,EAAe34D,GAAqC5J,CAAM,EAAE,OAAS,EAC3E,IAAI2jE,EAAuB,GAC3B,OAAQhuE,EAAM,IAAG,CACf,IAAK,YACH,CACE,MAAM0tB,EAAQ8/C,EAAkBK,CAAmB,EACfngD,GAAS,MAC3Cu/C,EAASW,EAAgBlgD,CAAK,EAEhC,KACD,CACH,IAAK,aACH,CACE,MAAMugD,EAAgBpB,GAAoB,CACxC,gBAAiBe,EACjB,cAAAjB,EACA,aAAAC,EACA,UAAWztE,EAAM,SAC7B,CAAW,EACG8uE,IAAkB,MACpBX,EAAiBW,EAAejuE,CAAK,EAEvC,KACD,CACH,IAAK,YACH,CACE,MAAMkuE,EAAexB,GAAmB,CACtC,gBAAiBkB,EACjB,cAAAjB,EACA,aAAAC,EACA,UAAWztE,EAAM,SAC7B,CAAW,EACG+uE,IAAiB,KACnBZ,EAAiBY,EAAcluE,CAAK,EAEpCqK,EAAO,QAAQ,2BAA2BsC,EAAO,MAAO3M,CAAK,EAE/D,KACD,CACH,IAAK,UACH,CACEqtE,EAAWO,EAAgB5tE,CAAK,EAChC,KACD,CACH,IAAK,WACH,CACsC8tE,IAAuB,MACzDb,EAASW,EAAgBJ,EAAkB,KAAK,IAAIK,EAAsBF,EAAkBG,CAAkB,CAAC,CAAC,EAElH,KACD,CACH,IAAK,OACH,CACER,EAAiBX,EAAe3sE,CAAK,EACrC,KACD,CACH,IAAK,MACH,CACEstE,EAAiBV,EAAc5sE,CAAK,EACpC,KACD,CACH,IAAK,IAGD,MAEJ,QAEIguE,EAAuB,EAE5B,CACGA,GACFhuE,EAAM,eAAc,CAEvB,EAAE,CAACqK,EAAQghE,EAAgB,OAAQiC,EAAkBnuE,EAAM,UAAWkuE,EAAYJ,EAAUO,CAAiB,CAAC,EACzGc,EAAiCj3D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CAC1E,MAAM8rE,EAAqBj/C,GAAmCxiB,CAAM,EACpE,GAAIyhE,IAAuB,KACzB,OAEF,KAAM,CACJ,MAAOyC,EACP,MAAOC,CACR,EAAG1C,EACE,CACJ,OAAA1F,EACA,MAAApgD,EACA,SAAAiY,CACD,EAAGtxB,EACEghE,EAAmBtjE,EAAO,QAAQ,oBAAmB,EACrDunC,EAAkBvnC,EAAO,QAAQ,eAAekkE,CAAY,EAC5DX,EAAiBW,EAAelkE,EAAO,QAAQ,eAAekkE,CAAY,EAAI,EAC9EV,EAAsB,EACtBC,EAAqBzC,EAAgB,OAAS,EAC9CsB,EAAgB,EAChBC,EAAe34D,GAAqC5J,CAAM,EAAE,OAAS,EAC3E,IAAI2jE,EAAuB,GAC3B,OAAQhuE,EAAM,IAAG,CACf,IAAK,YACH,CACMgmB,IAAUiY,EAAW,EACvBovC,EAAWz7B,EAAiB5xC,CAAK,EAEjCutE,EAAgB37B,EAAiB48B,EAAe,EAAGxuE,CAAK,EAE1D,KACD,CACH,IAAK,UACH,CACMgmB,EAAQ,GACVunD,EAAgB37B,EAAiB48B,EAAe,EAAGxuE,CAAK,EAE1D,KACD,CACH,IAAK,aACH,CACE,MAAMyuE,EAAwBrI,EAAO,OAASA,EAAO,QAAQmI,CAAY,EAAI,EACzE38B,EAAkB68B,EAAwB,GAAK7B,GACjDW,EAAgB37B,EAAkB68B,EAAwB,EAAGD,EAAcxuE,CAAK,EAElF,KACD,CACH,IAAK,YACH,CACE,MAAM0uE,EAAuBtI,EAAO,QAAQmI,CAAY,EACpD38B,EAAkB88B,EAAuB,GAAK/B,GAChDY,EAAgB37B,EAAkB88B,EAAuB,EAAGF,EAAcxuE,CAAK,EAEjF,KACD,CACH,IAAK,WACH,CACsC8tE,IAAuB,MACzDb,EAASW,EAAgBJ,EAAkB,KAAK,IAAIK,EAAsBF,EAAkBG,CAAkB,CAAC,CAAC,EAElH,KACD,CACH,IAAK,OACH,CACEP,EAAgBZ,EAAe6B,EAAcxuE,CAAK,EAClD,KACD,CACH,IAAK,MACH,CACEutE,EAAgBX,EAAc4B,EAAcxuE,CAAK,EACjD,KACD,CACH,IAAK,IAGD,MAEJ,QAEIguE,EAAuB,EAE5B,CACGA,GACFhuE,EAAM,eAAc,CAE1B,EAAK,CAACqK,EAAQghE,EAAgB,OAAQgC,EAAYE,EAAiBN,EAAUO,CAAiB,CAAC,EACvF7B,EAAoBt0D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CAE7D,GAAIywC,GAAsBzwC,CAAK,EAC7B,OAIF,MAAMy+D,EAAap0D,EAAO,QAAQ,cAAcsC,EAAO,GAAIA,EAAO,KAAK,EAWvE,GAVI8xD,EAAW,WAAa1hD,GAAc,MAAQ,CAACga,GAAgB/2B,EAAM,GAAG,GAOxE,CAJmBqK,EAAO,QAAQ,6BAA6B,iBAAkB,GAAM,CACzF,MAAArK,EACA,KAAMy+D,CACZ,CAAK,GAIG4M,EAAgB,SAAW,EAC7B,OAEF,MAAMpzD,EAAY9Y,EAAM,UAClBwuE,EAAmBtjE,EAAO,QAAQ,oBAAmB,EACrDujE,EAAiBjhE,EAAO,MAAQtC,EAAO,QAAQ,eAAesC,EAAO,KAAK,EAAI,EAC9EgiE,EAAiBtD,EAAgB,UAAUryD,GAAOA,EAAI,KAAOrM,EAAO,EAAE,EACtEkhE,EAAsB,EACtBC,EAAqBzC,EAAgB,OAAS,EAC9CsB,EAAgB,EAChBC,EAAe34D,GAAqC5J,CAAM,EAAE,OAAS,EAC3E,IAAI2jE,EAAuB,GAC3B,OAAQhuE,EAAM,IAAG,CACf,IAAK,YACH,CAEM2uE,EAAiBb,GACnBb,EAASW,EAAgBJ,EAAkBmB,EAAiB,CAAC,CAAC,EAEhE,KACD,CACH,IAAK,UACH,CACMA,EAAiBd,EACnBZ,EAASW,EAAgBJ,EAAkBmB,EAAiB,CAAC,CAAC,EACrD3B,EACTM,EAAiBM,EAAgB5tE,CAAK,EAEtCqtE,EAAWO,EAAgB5tE,CAAK,EAElC,KACD,CACH,IAAK,aACH,CACE,MAAMiuE,EAAgBpB,GAAoB,CACxC,gBAAiBe,EACjB,cAAAjB,EACA,aAAAC,EACA,UAAA30D,CACZ,CAAW,EACGg2D,IAAkB,MACpBhB,EAASgB,EAAeT,EAAkBmB,CAAc,EAAG12D,IAAc,MAAQ,OAAS,OAAO,EAEnG,KACD,CACH,IAAK,YACH,CACE,MAAMi2D,EAAexB,GAAmB,CACtC,gBAAiBkB,EACjB,cAAAjB,EACA,aAAAC,EACA,UAAA30D,CACZ,CAAW,EACGi2D,IAAiB,MACnBjB,EAASiB,EAAcV,EAAkBmB,CAAc,EAAG12D,IAAc,MAAQ,QAAU,MAAM,EAElG,KACD,CACH,IAAK,MACH,CAEMjY,EAAM,UAAY4tE,EAAiBjB,EACrCM,EAASW,EAAiB,EAAGJ,EAAkBmB,CAAc,EAAG,MAAM,EAC7D,CAAC3uE,EAAM,UAAY4tE,EAAiBhB,GAC7CK,EAASW,EAAiB,EAAGJ,EAAkBmB,CAAc,EAAG,OAAO,EAEzE,KACD,CACH,IAAK,IACH,CAEE,GADchiE,EAAO,QACPkoD,GACZ,MAEF,MAAMl+C,EAAShK,EAAO,OACtB,GAAIgK,GAEJA,EAAO,QAAU,sBACf,MAEE,CAAC3W,EAAM,UAAY2uE,EAAiBb,GACtCb,EAASW,EAAgBJ,EAAkB,KAAK,IAAImB,EAAiBhB,EAAkBG,CAAkB,CAAC,CAAC,EAE7G,KACD,CACH,IAAK,WACH,CACMa,EAAiBb,GACnBb,EAASW,EAAgBJ,EAAkB,KAAK,IAAImB,EAAiBhB,EAAkBG,CAAkB,CAAC,CAAC,EAE7G,KACD,CACH,IAAK,SACH,CAEE,MAAMc,EAAe,KAAK,IAAID,EAAiBhB,EAAkBE,CAAmB,EAChFe,IAAiBD,GAAkBC,GAAgBf,EACrDZ,EAASW,EAAgBJ,EAAkBoB,CAAY,CAAC,EAExDvB,EAAWO,EAAgB5tE,CAAK,EAElC,KACD,CACH,IAAK,OACH,CACMA,EAAM,SAAWA,EAAM,SAAWA,EAAM,SAC1CitE,EAASN,EAAea,EAAkBK,CAAmB,CAAC,EAE9DZ,EAASN,EAAea,EAAkBmB,CAAc,CAAC,EAE3D,KACD,CACH,IAAK,MACH,CACM3uE,EAAM,SAAWA,EAAM,SAAWA,EAAM,SAC1CitE,EAASL,EAAcY,EAAkBM,CAAkB,CAAC,EAE5Db,EAASL,EAAcY,EAAkBmB,CAAc,CAAC,EAE1D,KACD,CACH,QAEIX,EAAuB,EAE5B,CACGA,GACFhuE,EAAM,eAAc,CAEvB,EAAE,CAACqK,EAAQghE,EAAiBlsE,EAAM,UAAW8tE,EAAUO,EAAmBR,EAAwBM,EAAkBD,CAAU,CAAC,EAC1HwB,EAAyBx3D,cAAkB,CAACwrD,EAAc,CAC9D,MAAA7iE,CACJ,IACQA,EAAM,MAAQ,IAET,GAEF6iE,EACN,CAAE,CAAA,EACLrH,GAA6BnxD,EAAQ,kBAAmBwkE,CAAsB,EAC9E9hE,GAAuB1C,EAAQ,sBAAuBojE,CAAyB,EAC/E1gE,GAAuB1C,EAAQ,sBAAuB8jE,CAAyB,EAC/EphE,GAAuB1C,EAAQ,2BAA4BikE,CAA8B,EACzFvhE,GAAuB1C,EAAQ,cAAeshE,CAAiB,CACjE,EC3iBamD,GAAkB,CAACzkE,EAAQpP,IAAU,SAChD,MAAMw1B,EAASD,GAAcnmB,EAAQ,iBAAiB,EAChDuoB,EAA0B/kB,EAAgBxD,EAAQolB,EAAoC,EACtFs/C,EAAgBlhE,EAAgBxD,EAAQ+nB,EAA8B,EACtE48C,EAAiBnhE,EAAgBxD,EAAQgoB,EAA0B,EACnEE,EAAkB1kB,EAAgBxD,EAAQ6nB,EAA2B,EACrE+8C,EAAmBjhE,GAAW,IAAMkkB,GAA4B7nB,CAAM,EAAE,QAAQ,EACtFA,EAAO,QAAQ,qBAAqB,CAClC,QAAS,qBACT,UAAWpP,EAAM,SACjB,aAAcA,EAAM,iBACpB,cAAem3B,GACf,YAAa,gBACjB,CAAG,EAgBD,MAAM88C,EAAwB,CAC5B,YAZkB73D,EAAiB,YAACouD,GAAe,CAC/CsJ,IAAkBtJ,IAGtBh1C,EAAO,MAAM,wBAAyBg1C,CAAW,EACjDp7D,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,WAAYqI,EAAS,GAAIrI,EAAM,WAAY,CACzC,SAAUu3D,CAClB,CAAO,CACF,CAAA,CAAC,EACH,EAAE,CAACp7D,EAAQomB,EAAQs+C,CAAa,CAAC,CAGpC,EACE5+C,GAAiB9lB,EAAQ6kE,EAAuB,QAAQ,EAKxD,MAAM9M,EAA2B/qD,EAAAA,YAAkB,CAACgrD,EAAWjH,IAAY,SACzE,MAAM+T,EAAmB/8C,GAA+B/nB,CAAM,EAQ9D,MALA,CAAC+wD,EAAQ,uBAETngE,EAAM,UAAY,QAElB6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,aAApB,YAAA+X,EAAgC,WAAY,KAIrCyB,EAAS,CAAE,EAAE8rD,EAAW,CAC7B,WAAY9rD,EAAS,GAAI8rD,EAAU,WAAY,CAC7C,SAAU8M,CAClB,CAAO,CACP,CAAK,EANQ9M,CAOb,EAAK,CAACh4D,EAAQpP,EAAM,UAAU6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,aAApB,YAAA+X,EAAgC,QAAQ,CAAC,EAC/D4tD,EAA4BrrD,EAAAA,YAAkB,CAAC1K,EAAQyuD,IAAY,OACvE,MAAMgU,GAAmBryE,EAAAq+D,EAAQ,eAAe,aAAvB,MAAAr+D,EAAmC,SAAWq+D,EAAQ,eAAe,WAAW,SAAWhpC,GAA+B/nB,CAAM,EACzJ,OAAAA,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,WAAYqI,EAAS,GAAIrI,EAAM,WAAY,CACzC,SAAUkhE,CAClB,CAAO,CACF,CAAA,CAAC,EACKziE,CACX,EAAK,CAACtC,CAAM,CAAC,EACXmxD,GAA6BnxD,EAAQ,cAAe+3D,CAAwB,EAC5E5G,GAA6BnxD,EAAQ,eAAgBq4D,CAAyB,EAK9E,MAAM2C,EAA8BhuD,EAAiB,YAAC9a,GAAS,CACzDtB,EAAM,iBAAmB,UAAY,CAACg0E,EAAiB,SAGvD1yE,EAAM,WAAa0yE,EAAiB,UACtCA,EAAiB,QAAU1yE,EAAM,SAC7BwyE,IAAkB,IAEpB1kE,EAAO,QAAQ,QAAQ,CAAC,EAGhC,EAAK,CAACpP,EAAM,eAAgBg0E,EAAkBF,EAAe1kE,CAAM,CAAC,EAClE0C,GAAuB1C,EAAQ,wBAAyBg7D,CAA2B,EAKnFx4D,EAAAA,UAAgB,IAAM,CAChB5R,EAAM,iBAAmB,SAC3BoP,EAAO,QAAQ,YAAYuoB,CAAuB,EACzC33B,EAAM,UAAY,MAC3BoP,EAAO,QAAQ,YAAYpP,EAAM,QAAQ,CAE/C,EAAK,CAACoP,EAAQpP,EAAM,eAAgB23B,EAAyB33B,EAAM,QAAQ,CAAC,EAC1E,MAAMo0E,EAAaL,EAAe,cAAgB,GAClDniE,EAAAA,UAAgB,IAAM,CAChBwiE,GAAcN,IAAkB,IAClC1kE,EAAO,QAAQ,YAAYkoB,EAAgB,SAAWA,EAAgB,KAAOK,CAAuB,CAE1G,EAAK,CAACvoB,EAAQuoB,EAAyBy8C,EAAYN,EAAex8C,CAAe,CAAC,CAClF,ECtGa+8C,GAAwB,CAACjlE,EAAQpP,IAAU,SACtD,MAAMw1B,EAASD,GAAcnmB,EAAQ,uBAAuB,EACtD2kE,EAAiBnhE,EAAgBxD,EAAQgoB,EAA0B,EACzEhoB,EAAO,QAAQ,qBAAqB,CAClC,QAAS,iBACT,UAAWpP,EAAM,eACjB,aAAcA,EAAM,uBACpB,cAAeo3B,GACf,YAAa,sBACjB,CAAG,EAgBD,MAAMk9C,EAAoB,CACxB,kBAZwBl4D,EAAiB,YAACm4D,GAAqB,CAC3DR,IAAmBQ,IAGvB/+C,EAAO,MAAM,8BAA+B++C,CAAiB,EAC7DnlE,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,WAAYqI,EAAS,GAAIrI,EAAM,WAAY,CACzC,KAAMshE,CACd,CAAO,CACF,CAAA,CAAC,EACH,EAAE,CAACnlE,EAAQomB,EAAQu+C,CAAc,CAAC,CAGrC,EACE7+C,GAAiB9lB,EAAQklE,EAAmB,QAAQ,EAKpD,MAAMnN,EAA2B/qD,EAAAA,YAAkB,CAACgrD,EAAWjH,IAAY,SACzE,MAAMqU,EAAyBp9C,GAA2BhoB,CAAM,EAQhE,MALA,CAAC+wD,EAAQ,uBAETngE,EAAM,gBAAkB,QAExB6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,aAApB,YAAA+X,EAAgC,OAAQ,KAIjCyB,EAAS,CAAE,EAAE8rD,EAAW,CAC7B,WAAY9rD,EAAS,GAAI8rD,EAAU,WAAY,CAC7C,KAAMoN,CACd,CAAO,CACP,CAAK,EANQpN,CAOb,EAAK,CAACh4D,EAAQpP,EAAM,gBAAgB6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,aAApB,YAAA+X,EAAgC,IAAI,CAAC,EACjE4tD,EAA4BrrD,EAAAA,YAAkB,CAAC1K,EAAQyuD,IAAY,OACvE,MAAMsU,GAAyB3yE,EAAAq+D,EAAQ,eAAe,aAAvB,MAAAr+D,EAAmC,KAAOq+D,EAAQ,eAAe,WAAW,KAAO/oC,GAA2BhoB,CAAM,EACnJ,OAAAA,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,WAAYqI,EAAS,GAAIrI,EAAM,WAAY,CACzC,KAAMwhE,CACd,CAAO,CACF,CAAA,CAAC,EACK/iE,CACX,EAAK,CAACtC,CAAM,CAAC,EACXmxD,GAA6BnxD,EAAQ,cAAe+3D,CAAwB,EAC5E5G,GAA6BnxD,EAAQ,eAAgBq4D,CAAyB,EAK9E71D,EAAAA,UAAgB,IAAM,CAChB5R,EAAM,gBACRoP,EAAO,QAAQ,kBAAkBpP,EAAM,cAAc,CAExD,EAAE,CAACoP,EAAQpP,EAAM,cAAc,CAAC,CACnC,ECvEa00E,GAA6B,CAACzhE,EAAOjT,IAAU,iBAC1D,MAAMs3B,EAAkBhc,EAAS,CAAE,EAAEqb,GAA8B32B,EAAM,YAAY,EAAGA,EAAM,mBAAmB6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,aAApB,YAAA+X,EAAgC,gBAAe,EAChKid,GAA+BQ,EAAgB,SAAUt3B,EAAM,SAAS,EACxE,MAAMksB,EAAWlsB,EAAM,YAAY69B,GAAAxN,EAAArwB,EAAM,eAAN,YAAAqwB,EAAoB,aAApB,YAAAwN,EAAgC,UAC7DthB,EAAOvc,EAAM,kBAAkBsvD,GAAAxxB,EAAA99B,EAAM,eAAN,YAAA89B,EAAoB,aAApB,YAAAwxB,EAAgC,OAAQ,GAC7E,OAAOh0C,EAAS,CAAE,EAAErI,EAAO,CACzB,WAAY,CACV,gBAAAqkB,EACA,SAAApL,EACA,KAAA3P,CACD,CACL,CAAG,CACH,EAMao4D,GAAoB,CAACvlE,EAAQpP,IAAU,CAClDq0E,GAAsBjlE,EAAQpP,CAAK,EACnCgqE,GAAuB56D,EAAQpP,CAAK,EACpC6zE,GAAgBzkE,EAAQpP,CAAK,CAC/B,ECrBa40E,GAAkC,CAAC3hE,EAAOjT,IAAU,OAAA,OAAAsb,EAAS,CAAA,EAAIrI,EAAO,CACnF,kBAAiBnR,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,kBAAmB,CACtD,KAAM,EACP,CACH,CAAC,GAKY+yE,GAA0B,CAACzlE,EAAQpP,IAAU,OACxD,MAAMw1B,EAASD,GAAcnmB,EAAQ,yBAAyB,EACxD0lE,EAAcvlE,EAAAA,SACdwlE,EAAmBxlE,EAAAA,SAKnBylE,EAAkB54D,EAAAA,YAAkB,IAAM,CAC9CoZ,EAAO,MAAM,0BAA0B,EACvC,MAAMigC,EAAuBjjB,GAAiCpjC,EAAO,QAAQ,KAAK,EAC9EqmD,EAAqB,kBACvBrmD,EAAO,QAAQ,aAAa,uBAAwB,CAClD,iBAAkBqmD,EAAqB,gBAC/C,CAAO,EAEHrmD,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,gBAAiB,CACf,KAAM,EACP,CACF,CAAA,CAAC,EACF7D,EAAO,QAAQ,aACnB,EAAK,CAACA,EAAQomB,CAAM,CAAC,EAIby/C,EAAiB74D,EAAAA,YAAkB,IAAM,CAC7C24D,EAAiB,QAAU,WAAW,IAAM,aAAaD,EAAY,OAAO,EAAG,CAAC,CACjF,EAAE,CAAE,CAAA,EAICI,EAAyB94D,EAAAA,YAAkB,IAAM,CACrD04D,EAAY,QAAU,WAAWE,EAAiB,GAAG,CACzD,EAAK,CAACA,CAAe,CAAC,EACdG,EAAkB/4D,EAAiB,YAAC,CAACC,EAAUsnC,EAAS5zB,IAAY,CACxEyF,EAAO,MAAM,2BAA2B,EACxCy/C,IACA7lE,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,gBAAiBqI,EAAS,GAAIrI,EAAM,gBAAiB,CACnD,KAAM,GACN,iBAAkBoJ,EAClB,QAAAsnC,EACA,QAAA5zB,CACR,CAAO,CACF,CAAA,CAAC,EACF3gB,EAAO,QAAQ,aAAa,sBAAuB,CACjD,iBAAkBiN,CACxB,CAAK,EACDjN,EAAO,QAAQ,aAChB,EAAE,CAAComB,EAAQy/C,EAAgB7lE,CAAM,CAAC,EACnC8lB,GAAiB9lB,EAAQ,CACvB,gBAAA+lE,EACA,gBAAiBD,CAClB,EAAE,QAAQ,EAKX,MAAM/N,EAA2B/qD,EAAAA,YAAkB,CAACgrD,EAAWjH,IAAY,OACzE,MAAMiV,EAA0B5iC,GAAiCpjC,EAAO,QAAQ,KAAK,EAQrF,MALA,CAAC+wD,EAAQ,yBAETr+D,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,kBAAmB,MAEvCszE,EAAwB,KAIjB95D,EAAS,CAAE,EAAE8rD,EAAW,CAC7B,gBAAiBgO,CACvB,CAAK,EAJQhO,CAKV,EAAE,CAACh4D,GAAQtN,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,eAAe,CAAC,EAC1C2lE,EAA4BrrD,EAAAA,YAAkB,CAAC1K,EAAQyuD,IAAY,CACvE,MAAMzc,EAAkByc,EAAQ,eAAe,gBAC/C,OAAIzc,GAAmB,MACrBt0C,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,gBAAAywC,CACD,CAAA,CAAC,EAEGhyC,CACX,EAAK,CAACtC,CAAM,CAAC,EACXmxD,GAA6BnxD,EAAQ,cAAe+3D,CAAwB,EAC5E5G,GAA6BnxD,EAAQ,eAAgBq4D,CAAyB,EAK9E71D,EAAAA,UAAgB,IACP,IAAM,CACX,aAAakjE,EAAY,OAAO,EAChC,aAAaC,EAAiB,OAAO,CAC3C,EACK,CAAE,CAAA,CACP,EC5GMj6D,GAAY,CAAC,KAAM,OAAO,EAC9B2hB,GAAa,CAAC,KAAM,OAAO,EAYhB44C,GAAqB,CAACjmE,EAAQpP,IAAU,CACnD,KAAM,CAACs1E,EAAgBC,CAAiB,EAAIlkE,EAAM,SAAS,CAAE,CAAA,EACvDmkE,EAAoBjmE,SAAa+lE,CAAc,EAC/CG,EAAqBlmE,SAAa,CAAA,CAAE,EACpC,CACJ,iBAAAmmE,EACA,wBAAAC,EACA,eAAgBC,EAChB,uBAAAC,CACE,EAAA71E,EACE81E,EAAkC1xD,GAAA,IAAI7M,IAAS,CAC/CvX,EAAM,WAAa6hB,GAAc,MACnCuC,EAAS,GAAG7M,CAAI,CAClB,EAEIw+D,EAAqB35D,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,CAC1D,MAAMpH,EAAStC,EAAO,QAAQ,cAAcR,EAAIkK,CAAK,EACrD,GAAI,CAAC1J,EAAO,QAAQ,eAAesC,CAAM,EACvC,MAAM,IAAI,MAAM,2BAA2B9C,CAAE,cAAckK,CAAK,mBAAmB,CACrF,EACC,CAAC1J,CAAM,CAAC,EACL4mE,EAAmB55D,EAAM,YAAY,CAACxN,EAAIkK,EAAOzS,IAAS,CAC9D,GAAI+I,EAAO,QAAQ,YAAYR,EAAIkK,CAAK,IAAMzS,EACtC,MAAA,IAAI,MAAM,2BAA2BuI,CAAE,cAAckK,CAAK,cAAczS,CAAI,QAAQ,CAC5F,EACC,CAAC+I,CAAM,CAAC,EACLqhE,EAAwBr0D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CAI7D,GAHA,CAAC2M,EAAO,YAGRA,EAAO,WAAaoQ,GAAc,KACpC,OAEF,MAAMm0D,EAAY36D,EAAS,CAAC,EAAG5J,EAAQ,CACrC,OAAQuQ,GAAyB,eAAA,CAClC,EACD7S,EAAO,QAAQ,aAAa,gBAAiB6mE,EAAWlxE,CAAK,CAAA,EAC5D,CAACqK,CAAM,CAAC,EACL8mE,EAAqB95D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CAI1D,GAHA2M,EAAO,WAAaoQ,GAAc,MAGlC1S,EAAO,QAAQ,YAAYsC,EAAO,GAAIA,EAAO,KAAK,IAAMoQ,GAAc,KACxE,OAEF,MAAMm0D,EAAY36D,EAAS,CAAC,EAAG5J,EAAQ,CACrC,OAAQwQ,GAAwB,YAAA,CACjC,EACD9S,EAAO,QAAQ,aAAa,eAAgB6mE,EAAWlxE,CAAK,CAAA,EAC3D,CAACqK,CAAM,CAAC,EACLshE,EAAoBt0D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CACzD,GAAA2M,EAAO,WAAaoQ,GAAc,KAAM,CAGtC,GAAA/c,EAAM,QAAU,IAClB,OAEE,IAAAk4B,EASJ,GARIl4B,EAAM,MAAQ,SAChBk4B,EAAS/a,GAAwB,cACxBnd,EAAM,MAAQ,QACvBk4B,EAAS/a,GAAwB,aACxBnd,EAAM,MAAQ,QACvBk4B,EAASl4B,EAAM,SAAWmd,GAAwB,gBAAkBA,GAAwB,WAC5Fnd,EAAM,eAAe,GAEnBk4B,EAAQ,CACV,MAAMg5C,EAAY36D,EAAS,CAAC,EAAG5J,EAAQ,CACrC,OAAAurB,CAAA,CACD,EACD7tB,EAAO,QAAQ,aAAa,eAAgB6mE,EAAWlxE,CAAK,CAC9D,CAAA,SACS2M,EAAO,WAAY,CACxB,IAAAurB,EAMJ,GAAI,CALoB7tB,EAAO,QAAQ,6BAA6B,kBAAmB,GAAM,CAC3F,MAAArK,EACA,WAAY2M,EACZ,SAAU,MAAA,CACX,EAEC,OAWF,GATImqB,GAAe92B,CAAK,EACtBk4B,EAAShb,GAAyB,iBACzBga,GAAgBl3B,CAAK,EAC9Bk4B,EAAShb,GAAyB,aACzBld,EAAM,MAAQ,QACvBk4B,EAAShb,GAAyB,cACzBld,EAAM,MAAQ,aAAeA,EAAM,MAAQ,YACpDk4B,EAAShb,GAAyB,eAEhCgb,EAAQ,CACV,MAAMg5C,EAAY36D,EAAS,CAAC,EAAG5J,EAAQ,CACrC,OAAAurB,EACA,IAAKl4B,EAAM,GAAA,CACZ,EACDqK,EAAO,QAAQ,aAAa,gBAAiB6mE,EAAWlxE,CAAK,CAC/D,CACF,CAAA,EACC,CAACqK,CAAM,CAAC,EACL+mE,EAAsB/5D,cAA4B1K,GAAA,CAChD,KAAA,CACJ,GAAA9C,EACA,MAAAkK,EACA,OAAAmkB,CACE,EAAAvrB,EACE0kE,EAA0B,CAC9B,GAAAxnE,EACA,MAAAkK,CAAA,GAEEmkB,IAAWhb,GAAyB,kBAAoBgb,IAAWhb,GAAyB,eAAiBgb,IAAWhb,GAAyB,gBACnJm0D,EAAwB,YAAc,IAEjChnE,EAAA,QAAQ,kBAAkBgnE,CAAuB,CAAA,EACvD,CAAChnE,CAAM,CAAC,EACLinE,EAAqBj6D,cAA4B1K,GAAA,CAC/C,KAAA,CACJ,GAAA9C,EACA,MAAAkK,EACA,OAAAmkB,CACE,EAAAvrB,EACGtC,EAAA,QAAQ,gCAAgCR,EAAIkK,CAAK,EACpD,IAAAw9D,EACAr5C,IAAW/a,GAAwB,aAClBo0D,EAAA,QACVr5C,IAAW/a,GAAwB,WACzBo0D,EAAA,QACVr5C,IAAW/a,GAAwB,kBACzBo0D,EAAA,QAErB,MAAMC,EAAsBt5C,IAAW,gBACvC7tB,EAAO,QAAQ,iBAAiB,CAC9B,GAAAR,EACA,MAAAkK,EACA,oBAAAy9D,EACA,iBAAAD,CAAA,CACD,CAAA,EACA,CAAClnE,CAAM,CAAC,EACLonE,EAAiCpyD,GAAA,SAAU7M,IAAS,OACxD,GAAI6M,EAAU,CACN,KAAA,CACJ,GAAAxV,EACA,MAAAkK,CAAA,EACEvB,EAAK,CAAC,IAEazV,EADDsN,EAAO,QAAQ,MAAM,SACNR,CAAE,EAAEkK,CAAK,IAAvB,YAAAhX,EAA0B,QAE/CsiB,EAAS,GAAG7M,CAAI,CAEpB,CAAA,EAEFzF,GAAuB1C,EAAQ,kBAAmB0mE,EAAoBrF,CAAqB,CAAC,EAC5F3+D,GAAuB1C,EAAQ,eAAgB0mE,EAAoBI,CAAkB,CAAC,EACtFpkE,GAAuB1C,EAAQ,cAAe0mE,EAAoBpF,CAAiB,CAAC,EACpF5+D,GAAuB1C,EAAQ,gBAAiB0mE,EAAoBK,CAAmB,CAAC,EACxFrkE,GAAuB1C,EAAQ,eAAgB0mE,EAAoBO,CAAkB,CAAC,EAC9DrkE,GAAA5C,EAAQ,gBAAiBpP,EAAM,eAAe,EACtEgS,GAAwB5C,EAAQ,eAAgBonE,EAAmBx2E,EAAM,cAAc,CAAC,EACxF,MAAMy2E,EAAcr6D,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,CACnD,MAAM49D,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAE5D,OADWsnE,EAAa9nE,CAAE,GAAK8nE,EAAa9nE,CAAE,EAAEkK,CAAK,EACzCgJ,GAAc,KAAOA,GAAc,IAAA,EACrD,CAAC1S,CAAM,CAAC,EACLunE,EAAuBjyC,GAA6BulB,GAAA,CAClD,MAAA2sB,EAA8B3sB,IAAajqD,EAAM,eACnD61E,GAA0Be,GAC5Bf,EAAuB5rB,EAAU,CAC/B,IAAK76C,EAAO,OAAA,CACb,EAEC,EAAApP,EAAM,gBAAkB42E,KAG5BrB,EAAkBtrB,CAAQ,EAC1BurB,EAAkB,QAAUvrB,EACrB76C,EAAA,QAAQ,aAAa,uBAAwB66C,CAAQ,EAAA,CAC7D,EACK4sB,EAA8Bz6D,EAAM,YAAY,CAACxN,EAAIkK,EAAOg+D,IAAa,CAG7E,MAAM7sB,EAAW3uC,EAAS,CAAC,EAAGk6D,EAAkB,OAAO,EACvD,GAAIsB,IAAa,KACf7sB,EAASr7C,CAAE,EAAI0M,EAAS,CAAA,EAAI2uC,EAASr7C,CAAE,EAAG,CACxC,CAACkK,CAAK,EAAGwC,EAAS,GAAIw7D,CAAQ,CAAA,CAC/B,MACI,CACL,MAAMC,EAAe9sB,EAASr7C,CAAE,EAC9BooE,EAAcj7D,GAA8Bg7D,EAAc,CAACj+D,CAAK,EAAE,IAAIknD,EAAc,CAAC,EACvF/V,EAASr7C,CAAE,EAAIooE,EACX,OAAO,KAAK/sB,EAASr7C,CAAE,CAAC,EAAE,SAAW,GACvC,OAAOq7C,EAASr7C,CAAE,CAEtB,CACA+nE,EAAqB1sB,CAAQ,CAAA,EAC5B,CAAC0sB,CAAoB,CAAC,EACnBM,EAA2B76D,EAAM,YAAY,CAACxN,EAAIkK,EAAOg+D,IAAa,CACnE1nE,EAAA,QAAQ,SAAkB6D,GAAA,CAC/B,MAAMikE,EAAkB57D,EAAS,CAAC,EAAGrI,EAAM,QAAQ,EACnD,OAAI6jE,IAAa,KACfI,EAAgBtoE,CAAE,EAAI0M,EAAS,CAAA,EAAI47D,EAAgBtoE,CAAE,EAAG,CACtD,CAACkK,CAAK,EAAGwC,EAAS,GAAIw7D,CAAQ,CAAA,CAC/B,GAEM,OAAAI,EAAgBtoE,CAAE,EAAEkK,CAAK,EAC5B,OAAO,KAAKo+D,EAAgBtoE,CAAE,CAAC,EAAE,SAAW,GAC9C,OAAOsoE,EAAgBtoE,CAAE,GAGtB0M,EAAS,CAAC,EAAGrI,EAAO,CACzB,SAAUikE,CAAA,CACX,CAAA,CACF,EACD9nE,EAAO,QAAQ,aAAY,EAC1B,CAACA,CAAM,CAAC,EACL+nE,EAAoB/6D,cAA4B1K,GAAA,CAC9C,KAAA,CACF,GAAA9C,EACA,MAAAkK,CACE,EAAApH,EACJkF,EAAQmF,GAA8BrK,EAAQoJ,EAAS,EACzDi7D,EAAmBnnE,EAAIkK,CAAK,EACXk9D,EAAApnE,EAAIkK,EAAOgJ,GAAc,IAAI,EAClB+0D,EAAAjoE,EAAIkK,EAAOwC,EAAS,CAC9C,KAAMwG,GAAc,IAAA,EACnBlL,CAAK,CAAC,CACR,EAAA,CAACm/D,EAAoBC,EAAkBa,CAA2B,CAAC,EAChEO,EAAiC1yC,GAA2BhzB,GAAA,CAC1D,KAAA,CACJ,GAAA9C,EACA,MAAAkK,EACA,YAAAu+D,EACA,aAAAzP,CACE,EAAAl2D,EACJ,IAAI2K,EAAWjN,EAAO,QAAQ,aAAaR,EAAIkK,CAAK,EACpD,GAAIu+D,EAEF,OADkBjoE,EAAO,QAAQ,UAAU0J,CAAK,EAAE,KAC/B,CACjB,IAAK,UACQuD,EAAA,GACX,MACF,IAAK,OACL,IAAK,WACL,IAAK,SACQA,EAAA,OACX,MACF,IAAK,eACQA,EAAA,KACX,MACF,IAAK,SACL,QACaA,EAAA,GACX,KACJ,MACSurD,IACEvrD,EAAAurD,GAOYqP,EAAAroE,EAAIkK,EALZ,CACf,MAAOuD,EACP,MAAO,GACP,kBAAmB,EAAA,CAEuB,EACrCjN,EAAA,QAAQ,aAAaR,EAAIkK,CAAK,CAAA,CACtC,EACKw+D,EAAmBl7D,cAA4B1K,GAAA,CAC7C,KAAA,CACF,GAAA9C,EACA,MAAAkK,CACE,EAAApH,EACJkF,EAAQmF,GAA8BrK,EAAQ+qB,EAAU,EACzCu5C,EAAApnE,EAAIkK,EAAOgJ,GAAc,IAAI,EAClB+0D,EAAAjoE,EAAIkK,EAAOwC,EAAS,CAC9C,KAAMwG,GAAc,IAAA,EACnBlL,CAAK,CAAC,CAAA,EACR,CAACo/D,EAAkBa,CAA2B,CAAC,EAC5CU,EAAgC7yC,GAAiB,MAAMhzB,GAAU,CAC/D,KAAA,CACJ,GAAA9C,EACA,MAAAkK,EACA,oBAAAy9D,EACA,iBAAAD,EAAmB,MACjB,EAAA5kE,EACaskE,EAAApnE,EAAIkK,EAAOgJ,GAAc,IAAI,EACvC1S,EAAA,QAAQ,gCAAgCR,EAAIkK,CAAK,EACxD,MAAM0+D,EAAqB,IAAM,CACNP,EAAAroE,EAAIkK,EAAO,IAAI,EACZ+9D,EAAAjoE,EAAIkK,EAAO,IAAI,EACvCw9D,IAAqB,QACvBlnE,EAAO,QAAQ,wBAAwBR,EAAIkK,EAAOw9D,CAAgB,CACpE,EAEF,GAAIC,EAAqB,CACJiB,IACnB,MACF,CACA,MAAMd,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC7D,CACJ,MAAAxN,EACA,kBAAAia,CACE,EAAA66D,EAAa9nE,CAAE,EAAEkK,CAAK,EAC1B,GAAIlX,GAASia,EAAmB,CAG9B45D,EAAmB,QAAQ7mE,CAAE,EAAEkK,CAAK,EAAE,KAAOgJ,GAAc,KAE3D+0D,EAA4BjoE,EAAIkK,EAAO,CACrC,KAAMgJ,GAAc,IAAA,CACrB,EACD,MACF,CACA,MAAM21D,EAAYroE,EAAO,QAAQ,uCAAuCR,EAAIkK,CAAK,EACjF,GAAI48D,EAAkB,CACpB,MAAMgC,EAA6BC,GAAA,CACjClC,EAAmB,QAAQ7mE,CAAE,EAAEkK,CAAK,EAAE,KAAOgJ,GAAc,KAE3D+0D,EAA4BjoE,EAAIkK,EAAO,CACrC,KAAMgJ,GAAc,IAAA,CACrB,EACG6zD,GACFA,EAAwBgC,CAAW,CAGrC,EAEE,GAAA,CACF,MAAM55D,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EACpC,QAAQ,QAAQ8mE,EAAiB+B,EAAW15D,CAAG,CAAC,EAAE,KAAuB65D,GAAA,CACvExoE,EAAO,QAAQ,WAAW,CAACwoE,CAAc,CAAC,EACvBJ,GAAA,CACpB,EAAE,MAAME,CAAW,QACbC,EAAa,CACpBD,EAAYC,CAAW,CACzB,CAAA,MAEAvoE,EAAO,QAAQ,WAAW,CAACqoE,CAAS,CAAC,EAClBD,GACrB,CACD,EACKK,EAA8Bz7D,cAAkB,MAAM1K,GAAU,SAC9D,KAAA,CACJ,GAAA9C,EACA,MAAAkK,EACA,MAAA3K,EACA,WAAAyN,EACA,yBAA0Bk8D,CACxB,EAAApmE,EACJqkE,EAAmBnnE,EAAIkK,CAAK,EACXk9D,EAAApnE,EAAIkK,EAAOgJ,GAAc,IAAI,EAC9C,MAAM3I,EAAS/J,EAAO,QAAQ,UAAU0J,CAAK,EACvCiF,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EACpC,IAAI0N,EAAcnO,EACdgL,EAAO,aAAe,CAAC2+D,IACzBx7D,EAAcnD,EAAO,YAAYhL,EAAO4P,EAAK5E,EAAQ/J,CAAM,GAE7D,IAAIsnE,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC7D0nE,EAAWx7D,EAAS,CAAC,EAAGo7D,EAAa9nE,CAAE,EAAEkK,CAAK,EAAG,CACnD,MAAOwD,EACP,aAAcV,EAAa,4BAA8B,kBAAA,CAC1D,EACD,GAAIzC,EAAO,wBAAyB,CAClC,MAAM4+D,EAAa5pE,IAAUuoE,EAAa9nE,CAAE,EAAEkK,CAAK,EAAE,MAC1Cg+D,EAAAx7D,EAAS,CAAC,EAAGw7D,EAAU,CAChC,kBAAmB,EAAA,CACpB,EACwBG,EAAAroE,EAAIkK,EAAOg+D,CAAQ,EAC5CA,EAAW,MAAM,QAAQ,QAAQ39D,EAAO,wBAAwB,CAC9D,GAAAvK,EACA,IAAAmP,EACA,MAAO+4D,EACP,WAAAiB,CACD,CAAA,CAAC,CACJ,CAIA,OAAI3oE,EAAO,QAAQ,YAAYR,EAAIkK,CAAK,IAAMgJ,GAAc,KACnD,IAEM40D,EAAAnkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAClD0nE,EAAAx7D,EAAS,CAAC,EAAGw7D,EAAU,CAChC,kBAAmB,EAAA,CACpB,EAIQA,EAAA,MAAQ39D,EAAO,wBAA0Bu9D,EAAa9nE,CAAE,EAAEkK,CAAK,EAAE,MAAQwD,EACzD26D,EAAAroE,EAAIkK,EAAOg+D,CAAQ,EAC7BJ,EAAAnkC,GAA0BnjC,EAAO,QAAQ,KAAK,EACtD,GAACyK,GAAA/X,EAAA40E,EAAa9nE,CAAE,IAAf,YAAA9M,EAAmBgX,KAAnB,MAAAe,EAA2B,SAClC,CAACzK,EAAQ2mE,EAAoBC,EAAkBiB,CAAwB,CAAC,EACrEe,EAAyC57D,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,CAC9E,MAAMK,EAAS/J,EAAO,QAAQ,UAAU0J,CAAK,EACvC49D,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC7D2O,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EAChC,GAAA,CAAC8nE,EAAa9nE,CAAE,GAAK,CAAC8nE,EAAa9nE,CAAE,EAAEkK,CAAK,EACvC,OAAA1J,EAAO,QAAQ,OAAOR,CAAE,EAE3B,KAAA,CACJ,MAAAT,CACE,EAAAuoE,EAAa9nE,CAAE,EAAEkK,CAAK,EAC1B,OAAOK,EAAO,YAAcA,EAAO,YAAYhL,EAAO4P,EAAK5E,EAAQ/J,CAAM,EAAIkM,EAAS,CAAA,EAAIyC,EAAK,CAC7F,CAACjF,CAAK,EAAG3K,CAAA,CACV,CAAA,EACA,CAACiB,CAAM,CAAC,EACL6oE,EAAa,CACjB,YAAAxB,EACA,kBAAAU,EACA,iBAAAG,CAAA,EAEIY,EAAoB,CACxB,4BAAAL,EACA,uCAAAG,CAAA,EAEe9iD,GAAA9lB,EAAQ6oE,EAAY,QAAQ,EAC5B/iD,GAAA9lB,EAAQ8oE,EAAmB,SAAS,EACrDtmE,EAAAA,UAAgB,IAAM,CAChBgkE,GACFe,EAAqBf,CAAkB,CACzC,EACC,CAACA,EAAoBe,CAAoB,CAAC,EAG7Cn6D,GAAkB,IAAM,CAChB,MAAA27D,EAAe3tD,GAAoCpb,CAAM,EAGzDgpE,EAAsB3C,EAAmB,QAC5BA,EAAA,QAAUt0D,GAAUm0D,CAAc,EAE9C,OAAA,QAAQA,CAAc,EAAE,QAAQ,CAAC,CAAC1mE,EAAIu8D,CAAM,IAAM,CAChD,OAAA,QAAQA,CAAM,EAAE,QAAQ,CAAC,CAACryD,EAAOpH,CAAM,IAAM,SAClD,MAAM2mE,IAAWx+D,GAAA/X,EAAAs2E,EAAoBxpE,CAAE,IAAtB,YAAA9M,EAA0BgX,KAA1B,YAAAe,EAAkC,OAAQiI,GAAc,KACnEw2D,EAAaH,EAAavpE,CAAE,GAAKA,EACnC8C,EAAO,OAASoQ,GAAc,MAAQu2D,IAAav2D,GAAc,KACnEs1D,EAA+B97D,EAAS,CACtC,GAAIg9D,EACJ,MAAAx/D,CAAA,EACCpH,CAAM,CAAC,EACDA,EAAO,OAASoQ,GAAc,MAAQu2D,IAAav2D,GAAc,MAC1Ey1D,EAA8Bj8D,EAAS,CACrC,GAAIg9D,EACJ,MAAAx/D,CAAA,EACCpH,CAAM,CAAC,CACZ,CACD,CAAA,CACF,GACA,CAACtC,EAAQkmE,EAAgB8B,EAAgCG,CAA6B,CAAC,CAC5F,EC5cMz8D,GAAY,CAAC,IAAI,EACrB2hB,GAAa,CAAC,IAAI,EAcP87C,GAAoB,CAACnpE,EAAQpP,IAAU,CAClD,KAAM,CAACw4E,EAAeC,CAAgB,EAAIpnE,EAAM,SAAS,CAAE,CAAA,EACrDqnE,EAAmBnpE,SAAaipE,CAAa,EAC7CG,EAAoBppE,SAAa,CAAA,CAAE,EACnCqpE,EAAerpE,EAAAA,SACfspE,EAAkBtpE,SAAa,IAAI,EACnC,CACJ,iBAAAmmE,EACA,wBAAAC,EACA,cAAemD,EACf,sBAAAC,CACE,EAAA/4E,EACEg5E,EAAiC50D,GAAA,IAAI7M,IAAS,CAC9CvX,EAAM,WAAa6hB,GAAc,KACnCuC,EAAS,GAAG7M,CAAI,CAClB,EAEIw+D,EAAqB35D,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,CAC1D,MAAMpH,EAAStC,EAAO,QAAQ,cAAcR,EAAIkK,CAAK,EACrD,GAAI,CAAC1J,EAAO,QAAQ,eAAesC,CAAM,EACvC,MAAM,IAAI,MAAM,2BAA2B9C,CAAE,cAAckK,CAAK,mBAAmB,CACrF,EACC,CAAC1J,CAAM,CAAC,EACL4mE,EAAmB55D,EAAAA,YAAkB,CAACxN,EAAIvI,IAAS,CACvD,GAAI+I,EAAO,QAAQ,WAAWR,CAAE,IAAMvI,EACpC,MAAM,IAAI,MAAM,0BAA0BuI,CAAE,cAAcvI,CAAI,QAAQ,CACxE,EACC,CAAC+I,CAAM,CAAC,EACL6pE,EAAsB78D,cAA2BqW,GAAA,CACrD,MAAMikD,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC5D,OAAA,OAAO,OAAOsnE,EAAajkD,CAAK,CAAC,EAAE,KAAmBymD,GAAAA,EAAW,KAAK,CAAA,EAC5E,CAAC9pE,CAAM,CAAC,EACLqhE,EAAwBr0D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CAIjE,GAHI,CAAC2M,EAAO,YAGRtC,EAAO,QAAQ,WAAWsC,EAAO,EAAE,IAAMqQ,GAAa,KACxD,OAEF,MAAM25C,EAAYtsD,EAAO,QAAQ,aAAasC,EAAO,EAAE,EACjDukE,EAAY36D,EAAS,CAAC,EAAGogD,EAAW,CACxC,MAAOhqD,EAAO,MACd,OAAQyQ,GAAwB,eAAA,CACjC,EACD/S,EAAO,QAAQ,aAAa,eAAgB6mE,EAAWlxE,CAAK,CAAA,EAC3D,CAACqK,CAAM,CAAC,EACL+pE,EAAoB/8D,cAA4B1K,GAAA,CACpDmnE,EAAgB,QAAUnnE,CAC5B,EAAG,CAAE,CAAA,EACCwkE,EAAqB95D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CACzD2M,EAAO,YAGRtC,EAAO,QAAQ,WAAWsC,EAAO,EAAE,IAAMqQ,GAAa,OAQ1D82D,EAAgB,QAAU,KACbD,EAAA,QAAU,WAAW,IAAM,OACtC,KAAI92E,EAAA+2E,EAAgB,UAAhB,YAAA/2E,EAAyB,MAAO4P,EAAO,GAAI,CAUzC,GARA,CAACtC,EAAO,QAAQ,OAAOsC,EAAO,EAAE,GAKhCtC,EAAO,QAAQ,WAAWsC,EAAO,EAAE,IAAMqQ,GAAa,MAGtDk3D,EAAoBvnE,EAAO,EAAE,EAC/B,OAEF,MAAMgqD,EAAYtsD,EAAO,QAAQ,aAAasC,EAAO,EAAE,EACjDukE,EAAY36D,EAAS,CAAC,EAAGogD,EAAW,CACxC,MAAOhqD,EAAO,MACd,OAAQ0Q,GAAuB,WAAA,CAChC,EACDhT,EAAO,QAAQ,aAAa,cAAe6mE,EAAWlxE,CAAK,CAC7D,CAAA,CACD,EAAA,EACA,CAACqK,EAAQ6pE,CAAmB,CAAC,EAChCrnE,EAAAA,UAAgB,IACP,IAAM,CACX,aAAagnE,EAAa,OAAO,CAAA,EAElC,CAAE,CAAA,EACL,MAAMlI,EAAoBt0D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CACzD,GAAA2M,EAAO,WAAaqQ,GAAa,KAAM,CAGrC,GAAAhd,EAAM,QAAU,IAClB,OAEE,IAAAk4B,EACA,GAAAl4B,EAAM,MAAQ,SAChBk4B,EAAS7a,GAAuB,sBACvBrd,EAAM,MAAQ,QACvBk4B,EAAS7a,GAAuB,qBACvBrd,EAAM,MAAQ,MAAO,CAC9B,MAAM8f,EAAezL,GAAgChK,CAAM,EAAE,OAAgB0J,GAC5D1J,EAAO,QAAQ,UAAU0J,CAAK,EAClC,OAASkR,GACX,GAEF5a,EAAO,QAAQ,eAAeA,EAAO,QAAQ,cAAcsC,EAAO,GAAIoH,CAAK,CAAC,CACpF,EAcD,GAbI/T,EAAM,SACJ2M,EAAO,QAAUmT,EAAa,CAAC,IAEjCoY,EAAS7a,GAAuB,iBAEzB1Q,EAAO,QAAUmT,EAAaA,EAAa,OAAS,CAAC,IAE9DoY,EAAS7a,GAAuB,YAKlCrd,EAAM,eAAe,EACjB,CAACk4B,EAAQ,CACX,MAAM1f,EAAQsH,EAAa,UAAmB/L,GAAAA,IAAUpH,EAAO,KAAK,EAC9D0nE,EAAmBv0D,EAAa9f,EAAM,SAAWwY,EAAQ,EAAIA,EAAQ,CAAC,EAC5EnO,EAAO,QAAQ,aAAasC,EAAO,GAAI0nE,CAAgB,CACzD,CACF,CACA,GAAIn8C,EAAQ,CACV,GAAIA,IAAW7a,GAAuB,eAAiB62D,EAAoBvnE,EAAO,EAAE,EAClF,OAEI,MAAAukE,EAAY36D,EAAS,GAAIlM,EAAO,QAAQ,aAAasC,EAAO,EAAE,EAAG,CACrE,OAAAurB,EACA,MAAOvrB,EAAO,KAAA,CACf,EACDtC,EAAO,QAAQ,aAAa,cAAe6mE,EAAWlxE,CAAK,CAC7D,CAAA,SACS2M,EAAO,WAAY,CACxB,IAAAurB,EAMJ,GAAI,CALoB7tB,EAAO,QAAQ,6BAA6B,kBAAmB,GAAM,CAC3F,MAAArK,EACA,WAAY2M,EACZ,SAAU,KAAA,CACX,EAEC,OAWF,GATImqB,GAAe92B,CAAK,GAEbk3B,GAAgBl3B,CAAK,EAD9Bk4B,EAAS9a,GAAwB,iBAGxBpd,EAAM,MAAQ,QACvBk4B,EAAS9a,GAAwB,cACxBpd,EAAM,MAAQ,aAAeA,EAAM,MAAQ,YACpDk4B,EAAS9a,GAAwB,eAE/B8a,EAAQ,CACV,MAAMy+B,EAAYtsD,EAAO,QAAQ,aAAasC,EAAO,EAAE,EACjDukE,EAAY36D,EAAS,CAAC,EAAGogD,EAAW,CACxC,MAAOhqD,EAAO,MACd,OAAAurB,CAAA,CACD,EACD7tB,EAAO,QAAQ,aAAa,eAAgB6mE,EAAWlxE,CAAK,CAC9D,CACF,CAAA,EACC,CAACqK,EAAQ6pE,CAAmB,CAAC,EAC1BI,EAAqBj9D,cAA4B1K,GAAA,CAC/C,KAAA,CACJ,GAAA9C,EACA,MAAAkK,EACA,OAAAmkB,CACE,EAAAvrB,EACE4nE,EAAyB,CAC7B,GAAA1qE,EACA,aAAckK,CAAA,GAEZmkB,IAAW9a,GAAwB,kBAAoB8a,IAAW9a,GAAwB,iBACrEm3D,EAAA,YAAc,CAAC,CAACxgE,GAElC1J,EAAA,QAAQ,iBAAiBkqE,CAAsB,CAAA,EACrD,CAAClqE,CAAM,CAAC,EACLmqE,EAAoBn9D,cAA4B1K,GAAA,CAC9C,KAAA,CACJ,GAAA9C,EACA,OAAAquB,EACA,MAAAnkB,CACE,EAAApH,EACGtC,EAAA,QAAQ,gCAAgCR,CAAE,EAC7C,IAAA0nE,EACAr5C,IAAW7a,GAAuB,aACjBk0D,EAAA,QACVr5C,IAAW7a,GAAuB,WACxBk0D,EAAA,QACVr5C,IAAW7a,GAAuB,kBACxBk0D,EAAA,QAErB,MAAMC,EAAsBt5C,IAAW,gBACvC7tB,EAAO,QAAQ,gBAAgB,CAC7B,GAAAR,EACA,oBAAA2nE,EACA,MAAAz9D,EACA,iBAAAw9D,CAAA,CACD,CAAA,EACA,CAAClnE,CAAM,CAAC,EACX0C,GAAuB1C,EAAQ,kBAAmB4pE,EAAmBvI,CAAqB,CAAC,EAC3F3+D,GAAuB1C,EAAQ,cAAe4pE,EAAmBG,CAAiB,CAAC,EACnFrnE,GAAuB1C,EAAQ,eAAgB4pE,EAAmB9C,CAAkB,CAAC,EACrFpkE,GAAuB1C,EAAQ,cAAe4pE,EAAmBtI,CAAiB,CAAC,EACnF5+D,GAAuB1C,EAAQ,eAAgB4pE,EAAmBK,CAAkB,CAAC,EACrFvnE,GAAuB1C,EAAQ,cAAe4pE,EAAmBO,CAAiB,CAAC,EAC3DvnE,GAAA5C,EAAQ,eAAgBpP,EAAM,cAAc,EAC5CgS,GAAA5C,EAAQ,cAAepP,EAAM,aAAa,EAC5D,MAAAw5E,EAAap9D,cAAwBxN,GAAA,CACrC,GAAA5O,EAAM,WAAa6hB,GAAc,KACnC,OAAOE,GAAa,KAEtB,MAAM20D,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAE5D,OADWsnE,EAAa9nE,CAAE,GAAK,OAAO,KAAK8nE,EAAa9nE,CAAE,CAAC,EAAE,OAAS,EAC1DmT,GAAa,KAAOA,GAAa,IACnD,EAAA,CAAC3S,EAAQpP,EAAM,QAAQ,CAAC,EACrBy5E,EAAsB/0C,GAA6BulB,GAAA,CACjD,MAAA2sB,EAA8B3sB,IAAajqD,EAAM,cACnD+4E,GAAyBnC,GAC3BmC,EAAsB9uB,EAAU,CAC9B,IAAK76C,EAAO,OAAA,CACb,EAEC,EAAApP,EAAM,eAAiB42E,KAG3B6B,EAAiBxuB,CAAQ,EACzByuB,EAAiB,QAAUzuB,EACpB76C,EAAA,QAAQ,aAAa,sBAAuB66C,CAAQ,EAAA,CAC5D,EACKyvB,EAA2Bt9D,EAAAA,YAAkB,CAACxN,EAAIkoE,IAAa,CACnE,MAAM7sB,EAAW3uC,EAAS,CAAC,EAAGo9D,EAAiB,OAAO,EAClD5B,IAAa,KACf7sB,EAASr7C,CAAE,EAAI0M,EAAS,GAAIw7D,CAAQ,EAEpC,OAAO7sB,EAASr7C,CAAE,EAEpB6qE,EAAoBxvB,CAAQ,CAAA,EAC3B,CAACwvB,CAAmB,CAAC,EAClBE,EAAyBv9D,EAAAA,YAAkB,CAACxN,EAAIkoE,IAAa,CAC1D1nE,EAAA,QAAQ,SAAkB6D,GAAA,CAC/B,MAAMikE,EAAkB57D,EAAS,CAAC,EAAGrI,EAAM,QAAQ,EACnD,OAAI6jE,IAAa,KACfI,EAAgBtoE,CAAE,EAAIkoE,EAEtB,OAAOI,EAAgBtoE,CAAE,EAEpB0M,EAAS,CAAC,EAAGrI,EAAO,CACzB,SAAUikE,CAAA,CACX,CAAA,CACF,EACD9nE,EAAO,QAAQ,aAAY,EAC1B,CAACA,CAAM,CAAC,EACL6nE,EAA2B76D,EAAM,YAAY,CAACxN,EAAIkK,EAAOg+D,IAAa,CACnE1nE,EAAA,QAAQ,SAAkB6D,GAAA,CAC/B,MAAMikE,EAAkB57D,EAAS,CAAC,EAAGrI,EAAM,QAAQ,EACnD,OAAI6jE,IAAa,KACfI,EAAgBtoE,CAAE,EAAI0M,EAAS,CAAA,EAAI47D,EAAgBtoE,CAAE,EAAG,CACtD,CAACkK,CAAK,EAAGwC,EAAS,GAAIw7D,CAAQ,CAAA,CAC/B,GAEM,OAAAI,EAAgBtoE,CAAE,EAAEkK,CAAK,EAC5B,OAAO,KAAKo+D,EAAgBtoE,CAAE,CAAC,EAAE,SAAW,GAC9C,OAAOsoE,EAAgBtoE,CAAE,GAGtB0M,EAAS,CAAC,EAAGrI,EAAO,CACzB,SAAUikE,CAAA,CACX,CAAA,CACF,EACD9nE,EAAO,QAAQ,aAAY,EAC1B,CAACA,CAAM,CAAC,EACLwqE,EAAmBx9D,cAA4B1K,GAAA,CAC7C,KAAA,CACF,GAAA9C,CACE,EAAA8C,EACJkF,EAAQmF,GAA8BrK,EAAQoJ,EAAS,EACxCk7D,EAAApnE,EAAImT,GAAa,IAAI,EACtC23D,EAAyB9qE,EAAI0M,EAAS,CACpC,KAAMyG,GAAa,IAAA,EAClBnL,CAAK,CAAC,CAAA,EACR,CAACo/D,EAAkB0D,CAAwB,CAAC,EACzCG,EAAgCn1C,GAA2BhzB,GAAA,CACzD,KAAA,CACJ,GAAA9C,EACA,aAAA02D,EACA,YAAA+R,EACA,aAAAzP,CACE,EAAAl2D,EAEEolE,EADet+D,GAAyBpJ,CAAM,EACtB,OAAO,CAACwL,EAAK9B,IAAU,CAE/C,GAAA,CADe1J,EAAO,QAAQ,cAAcR,EAAIkK,CAAK,EACzC,WACP,OAAA8B,EAET,IAAIyB,EAAWjN,EAAO,QAAQ,aAAaR,EAAIkK,CAAK,EAChD,OAAAwsD,IAAiBxsD,IAAUu+D,GAAezP,KAC5CvrD,EAAWg7D,EAAc,GAAKzP,GAEhChtD,EAAI9B,CAAK,EAAI,CACX,MAAOuD,EACP,MAAO,GACP,kBAAmB,EAAA,EAEdzB,CACT,EAAG,CAAE,CAAA,EACL++D,EAAuB/qE,EAAIkoE,CAAQ,EAC/BxR,GACKl2D,EAAA,QAAQ,aAAaR,EAAI02D,CAAY,CAC9C,CACD,EACKwU,EAAkB19D,cAA4B1K,GAAA,CAC5C,KAAA,CACF,GAAA9C,CACE,EAAA8C,EACJkF,EAAQmF,GAA8BrK,EAAQ+qB,EAAU,EACzCu5C,EAAApnE,EAAImT,GAAa,IAAI,EACtC23D,EAAyB9qE,EAAI0M,EAAS,CACpC,KAAMyG,GAAa,IAAA,EAClBnL,CAAK,CAAC,CAAA,EACR,CAACo/D,EAAkB0D,CAAwB,CAAC,EACzCK,EAA+Br1C,GAA2BhzB,GAAA,CACxD,KAAA,CACJ,GAAA9C,EACA,oBAAA2nE,EACA,MAAOyD,EACP,iBAAA1D,EAAmB,MACjB,EAAA5kE,EACGtC,EAAA,QAAQ,gCAAgCR,CAAE,EACjD,MAAMqrE,EAAoB,IAAM,CAC1B3D,IAAqB,QAAU0D,GACjC5qE,EAAO,QAAQ,wBAAwBR,EAAIorE,EAAc1D,CAAgB,EAE3EqD,EAAuB/qE,EAAI,IAAI,EAC/B8qE,EAAyB9qE,EAAI,IAAI,CAAA,EAEnC,GAAI2nE,EAAqB,CACL0D,IAClB,MACF,CACA,MAAMvD,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC7D2O,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EAEpC,GADmC,OAAO,OAAO8nE,EAAa9nE,CAAE,CAAC,EAAE,KAAmBsqE,GAAAA,EAAW,iBAAiB,EAClF,CAC9BP,EAAkB,QAAQ/pE,CAAE,EAAE,KAAOmT,GAAa,KAClD,MACF,CACI,GAAAk3D,EAAoBrqE,CAAE,EAAG,CAC3B+pE,EAAkB,QAAQ/pE,CAAE,EAAE,KAAOmT,GAAa,KAElD23D,EAAyB9qE,EAAI,CAC3B,KAAMmT,GAAa,IAAA,CACpB,EACD,MACF,CACA,MAAM01D,EAAYroE,EAAO,QAAQ,sCAAsCR,CAAE,EACzE,GAAI8mE,EAAkB,CACpB,MAAMgC,EAA6BC,IAAA,CACjCgB,EAAkB,QAAQ/pE,CAAE,EAAE,KAAOmT,GAAa,KAElD23D,EAAyB9qE,EAAI,CAC3B,KAAMmT,GAAa,IAAA,CACpB,EACG4zD,GACFA,EAAwBgC,EAAW,CAGrC,EAEE,GAAA,CACF,QAAQ,QAAQjC,EAAiB+B,EAAW15D,CAAG,CAAC,EAAE,KAAuB65D,IAAA,CACvExoE,EAAO,QAAQ,WAAW,CAACwoE,EAAc,CAAC,EACxBqC,GAAA,CACnB,EAAE,MAAMvC,CAAW,QACbC,GAAa,CACpBD,EAAYC,EAAW,CACzB,CAAA,MAEAvoE,EAAO,QAAQ,WAAW,CAACqoE,CAAS,CAAC,EACnBwC,GACpB,CACD,EACKC,EAA6B99D,cAA4B1K,GAAA,CACvD,KAAA,CACJ,GAAA9C,EACA,MAAAkK,EACA,MAAA3K,EACA,WAAAyN,EACA,yBAA0Bk8D,CACxB,EAAApmE,EACJqkE,EAAmBnnE,EAAIkK,CAAK,EAC5B,MAAMK,EAAS/J,EAAO,QAAQ,UAAU0J,CAAK,EACvCiF,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EACpC,IAAI0N,EAAcnO,EACdgL,EAAO,aAAe,CAAC2+D,IACzBx7D,EAAcnD,EAAO,YAAYhL,EAAO4P,EAAK5E,EAAQ/J,CAAM,GAE7D,IAAIsnE,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC7D0nE,EAAWx7D,EAAS,CAAC,EAAGo7D,EAAa9nE,CAAE,EAAEkK,CAAK,EAAG,CACnD,MAAOwD,EACP,aAAcV,EAAa,4BAA8B,kBAAA,CAC1D,EACG,OAACzC,EAAO,yBACe89D,EAAAroE,EAAIkK,EAAOg+D,CAAQ,EAEvC,IAAI,QAAmBpM,IAAA,CAC5B,MAAMyP,GAAW,CAAA,EACjB,GAAIhhE,EAAO,wBAAyB,CAClC,MAAM4+D,GAAajB,EAAS,QAAUJ,EAAa9nE,CAAE,EAAEkK,CAAK,EAAE,MACnDg+D,EAAAx7D,EAAS,CAAC,EAAGw7D,EAAU,CAChC,kBAAmB,EAAA,CACpB,EACwBG,EAAAroE,EAAIkK,EAAOg+D,CAAQ,EAC5C,MAAMsD,GAAmB1D,EAAa9nE,CAAE,EACtCyrE,GAAmBt+D,GAA8Bq+D,GAAkB,CAACthE,CAAK,EAAE,IAAIknD,EAAc,CAAC,EAC1Fsa,GAAU,QAAQ,QAAQnhE,EAAO,wBAAwB,CAC7D,GAAAvK,EACA,IAAAmP,EACA,MAAO+4D,EACP,WAAAiB,GACA,iBAAAsC,EAAA,CACD,CAAC,EAAE,KAAuBE,IAAA,CAGzB,GAAInrE,EAAO,QAAQ,WAAWR,CAAE,IAAMmT,GAAa,KAAM,CACvD2oD,GAAQ,EAAK,EACb,MACF,CACegM,EAAAnkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC5CmrE,GAAAj/D,EAAS,CAAC,EAAGi/D,GAAgB,CAC5C,kBAAmB,EAAA,CACpB,EAIcA,GAAA,MAAQphE,EAAO,wBAA0Bu9D,EAAa9nE,CAAE,EAAEkK,CAAK,EAAE,MAAQwD,EAC/D26D,EAAAroE,EAAIkK,EAAOyhE,EAAc,CAAA,CACnD,EACDJ,GAAS,KAAKG,EAAO,CACvB,CACO,OAAA,QAAQ5D,EAAa9nE,CAAE,CAAC,EAAE,QAAQ,CAAC,CAAC4rE,GAAWtB,EAAU,IAAM,CACpE,GAAIsB,KAAc1hE,EAChB,OAEF,MAAM2hE,GAAcrrE,EAAO,QAAQ,UAAUorE,EAAS,EAClD,GAAA,CAACC,GAAY,wBACf,OAEWvB,GAAA59D,EAAS,CAAC,EAAG49D,GAAY,CACpC,kBAAmB,EAAA,CACpB,EACwBjC,EAAAroE,EAAI4rE,GAAWtB,EAAU,EACnCxC,EAAAnkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC7D,MAAMsrE,GAAoBhE,EAAa9nE,CAAE,EACvCyrE,GAAmBt+D,GAA8B2+D,GAAmB,CAACF,EAAS,EAAE,IAAIxa,EAAc,CAAC,EAC/Fsa,GAAU,QAAQ,QAAQG,GAAY,wBAAwB,CAClE,GAAA7rE,EACA,IAAAmP,EACA,MAAOm7D,GACP,WAAY,GACZ,iBAAAmB,EAAA,CACD,CAAC,EAAE,KAAuBE,IAAA,CAGzB,GAAInrE,EAAO,QAAQ,WAAWR,CAAE,IAAMmT,GAAa,KAAM,CACvD2oD,GAAQ,EAAK,EACb,MACF,CACiB6P,GAAAj/D,EAAS,CAAC,EAAGi/D,GAAgB,CAC5C,kBAAmB,EAAA,CACpB,EACwBtD,EAAAroE,EAAI4rE,GAAWD,EAAc,CAAA,CACvD,EACDJ,GAAS,KAAKG,EAAO,CAAA,CACtB,EACD,QAAQ,IAAIH,EAAQ,EAAE,KAAK,IAAM,CAC3B/qE,EAAO,QAAQ,WAAWR,CAAE,IAAMmT,GAAa,MAClC20D,EAAAnkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC7Ds7D,GAAQ,CAACgM,EAAa9nE,CAAE,EAAEkK,CAAK,EAAE,KAAK,GAEtC4xD,GAAQ,EAAK,CACf,CACD,CAAA,CACF,CACA,EAAA,CAACt7D,EAAQ2mE,EAAoBkB,CAAwB,CAAC,EACnD0D,EAAwCv+D,cAAwBxN,GAAA,CACpE,MAAM8nE,EAAenkC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC7D2O,EAAM3O,EAAO,QAAQ,OAAOR,CAAE,EAChC,GAAA,CAAC8nE,EAAa9nE,CAAE,EACX,OAAAQ,EAAO,QAAQ,OAAOR,CAAE,EAEjC,IAAI6oE,EAAYn8D,EAAS,CAAC,EAAGyC,CAAG,EACzB,cAAA,QAAQ24D,EAAa9nE,CAAE,CAAC,EAAE,QAAQ,CAAC,CAACkK,EAAOogE,CAAU,IAAM,CAChE,MAAM//D,EAAS/J,EAAO,QAAQ,UAAU0J,CAAK,EACzCK,EAAO,YACTs+D,EAAYt+D,EAAO,YAAY+/D,EAAW,MAAOzB,EAAWt+D,EAAQ/J,CAAM,EAEhEqoE,EAAA3+D,CAAK,EAAIogE,EAAW,KAChC,CACD,EACMzB,CAAA,EACN,CAACroE,CAAM,CAAC,EACL6oE,EAAa,CACjB,WAAAuB,EACA,iBAAAI,EACA,gBAAAE,CAAA,EAEI5B,EAAoB,CACxB,2BAAAgC,EACA,sCAAAS,CAAA,EAEezlD,GAAA9lB,EAAQ6oE,EAAY,QAAQ,EAC5B/iD,GAAA9lB,EAAQ8oE,EAAmB,SAAS,EACrDtmE,EAAAA,UAAgB,IAAM,CAChBknE,GACFW,EAAoBX,CAAiB,CACvC,EACC,CAACA,EAAmBW,CAAmB,CAAC,EAG3Cj9D,GAAkB,IAAM,CAChB,MAAA27D,EAAe3tD,GAAoCpb,CAAM,EAGzDwrE,EAA0BjC,EAAkB,QAChCA,EAAA,QAAUx3D,GAAUq3D,CAAa,EAEnD,MAAMqC,EAAM,IAAI,IAAI,CAAC,GAAG,OAAO,KAAKrC,CAAa,EAAG,GAAG,OAAO,KAAKoC,CAAuB,CAAC,CAAC,EAC5F,MAAM,KAAKC,CAAG,EAAE,QAAcjsE,GAAA,OACtB,MAAA8C,EAAS8mE,EAAc5pE,CAAE,GAAK,CAClC,KAAMmT,GAAa,IAAA,EAEfs2D,IAAWv2E,EAAA84E,EAAwBhsE,CAAE,IAA1B,YAAA9M,EAA6B,OAAQigB,GAAa,KAC7Du2D,EAAaH,EAAavpE,CAAE,GAAKA,EACnC8C,EAAO,OAASqQ,GAAa,MAAQs2D,IAAat2D,GAAa,KACjE83D,EAA8Bv+D,EAAS,CACrC,GAAIg9D,CAAA,EACH5mE,CAAM,CAAC,EACDA,EAAO,OAASqQ,GAAa,MAAQs2D,IAAat2D,GAAa,MACxEg4D,EAA6Bz+D,EAAS,CACpC,GAAIg9D,CAAA,EACH5mE,CAAM,CAAC,CACZ,CACD,GACA,CAACtC,EAAQopE,EAAeqB,EAA+BE,CAA4B,CAAC,CACzF,ECjjBae,GAA0B7nE,GAASqI,EAAS,CAAA,EAAIrI,EAAO,CAClE,SAAU,CAAE,CACd,CAAC,EACY8nE,GAAiB,CAAC3rE,EAAQpP,IAAU,CAC/Cq1E,GAAmBjmE,EAAQpP,CAAK,EAChCu4E,GAAkBnpE,EAAQpP,CAAK,EAC/B,MAAMg7E,EAAczrE,SAAa,CAAA,CAAE,EAC7B,CACJ,eAAgB0rE,CACjB,EAAGj7E,EACEk7E,EAAiB9+D,EAAiB,YAAC1K,GACnC4b,GAAuB5b,EAAO,OAAO,GAGrC,CAACA,EAAO,OAAO,UAGf,CAACA,EAAO,OAAO,eACV,GAELupE,EACKA,EAAmBvpE,CAAM,EAE3B,GACN,CAACupE,CAAkB,CAAC,EACjBE,EAAgB,CAACvsE,EAAIkK,EAAO8C,EAAYwI,IAAa,CACzD,GAAI,CAACxI,EAAY,CACfwI,IACA,MACD,CAID,GAHK42D,EAAY,QAAQpsE,CAAE,IACzBosE,EAAY,QAAQpsE,CAAE,EAAI,IAExBosE,EAAY,QAAQpsE,CAAE,EAAEkK,CAAK,EAAG,CAClC,KAAM,CAACvI,CAAO,EAAIyqE,EAAY,QAAQpsE,CAAE,EAAEkK,CAAK,EAC/C,aAAavI,CAAO,CACrB,CAGD,MAAM6qE,EAAiB,IAAM,CAC3B,KAAM,CAAC7qE,CAAO,EAAIyqE,EAAY,QAAQpsE,CAAE,EAAEkK,CAAK,EAC/C,aAAavI,CAAO,EACpB6T,IACA,OAAO42D,EAAY,QAAQpsE,CAAE,EAAEkK,CAAK,CAC1C,EACUvI,EAAU,WAAW,IAAM,CAC/B6T,IACA,OAAO42D,EAAY,QAAQpsE,CAAE,EAAEkK,CAAK,CACrC,EAAE8C,CAAU,EACbo/D,EAAY,QAAQpsE,CAAE,EAAEkK,CAAK,EAAI,CAACvI,EAAS6qE,CAAc,CAC7D,EACExpE,EAAAA,UAAgB,IAAM,CACpB,MAAMypE,EAAYL,EAAY,QAC9B,MAAO,IAAM,CACX,OAAO,QAAQK,CAAS,EAAE,QAAQ,CAAC,CAACzsE,EAAIu8D,CAAM,IAAM,CAClD,OAAO,KAAKA,CAAM,EAAE,QAAQryD,GAAS,CACnC,KAAM,CAACvI,CAAO,EAAI8qE,EAAUzsE,CAAE,EAAEkK,CAAK,EACrC,aAAavI,CAAO,EACpB,OAAO8qE,EAAUzsE,CAAE,EAAEkK,CAAK,CACpC,CAAS,CACT,CAAO,CACP,CACG,EAAE,CAAE,CAAA,EACL,MAAMwiE,EAAkCl/D,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,CACvE,GAAKkiE,EAAY,QAAQpsE,CAAE,GAG3B,GAAI,CAACkK,EACH,OAAO,KAAKkiE,EAAY,QAAQpsE,CAAE,CAAC,EAAE,QAAQ2sE,GAAkB,CAC7D,KAAM,CAAA,CAAGC,CAAW,EAAIR,EAAY,QAAQpsE,CAAE,EAAE2sE,CAAc,EAC9DC,GACR,CAAO,UACQR,EAAY,QAAQpsE,CAAE,EAAEkK,CAAK,EAAG,CACzC,KAAM,CAAA,CAAG0iE,CAAW,EAAIR,EAAY,QAAQpsE,CAAE,EAAEkK,CAAK,EACrD0iE,GACD,EACF,EAAE,CAAE,CAAA,EACCC,EAAmBr/D,EAAiB,YAAC1K,GAAU,CACnD,KAAM,CACJ,GAAA9C,EACA,MAAAkK,EACA,WAAA8C,CACD,EAAGlK,EACJ,OAAO,IAAI,QAAQg5D,GAAW,CAC5ByQ,EAAcvsE,EAAIkK,EAAO8C,EAAY,SAAY,CAC/C,MAAM8/D,EAAyB17E,EAAM,WAAa6hB,GAAc,IAAMzS,EAAO,QAAQ,2BAA6BA,EAAO,QAAQ,4BAIjI,GAAIA,EAAO,QAAQ,YAAYR,EAAIkK,CAAK,IAAMgJ,GAAc,KAAM,CAChE,MAAMre,EAAS,MAAMi4E,EAAuBhqE,CAAM,EAClDg5D,EAAQjnE,CAAM,CACf,CACT,CAAO,CACP,CAAK,CACF,EAAE,CAAC2L,EAAQpP,EAAM,QAAQ,CAAC,EACrB27E,EAA0Bv/D,EAAAA,YAAkB,CAACxN,EAAIkK,IAC9C9Y,EAAM,WAAa6hB,GAAc,KAAOzS,EAAO,QAAQ,uCAAuCR,EAAIkK,CAAK,EAAI1J,EAAO,QAAQ,sCAAsCR,CAAE,EACxK,CAACQ,EAAQpP,EAAM,QAAQ,CAAC,EACrB47E,EAAkBx/D,EAAAA,YAAkB,CAACxN,EAAIkK,IAAU,OAEvD,QAAOhX,EADcywC,GAA0BnjC,EAAO,QAAQ,KAAK,EAC/CR,CAAE,IAAf,YAAA9M,EAAmBgX,KAAU,IACxC,EAAK,CAAC1J,CAAM,CAAC,EACLysE,EAAmB,CACvB,eAAAX,EACA,iBAAAO,EACA,wBAAAE,EACA,yBAA0BC,CAC9B,EACQE,EAA0B,CAC9B,gCAAAR,CACJ,EACEpmD,GAAiB9lB,EAAQysE,EAAkB,QAAQ,EACnD3mD,GAAiB9lB,EAAQ0sE,EAAyB,SAAS,CAC7D,EC9GaC,GAAuB,CAAC9oE,EAAOjT,EAAOoP,IAAW,CACtD,MAAA4sE,EAAwB,CAAC,CAACh8E,EAAM,oBAC/B,OAAAoP,EAAA,QAAQ,OAAO,KAAO4c,GAAwB,CACnD,KAAMgwD,EAAwB,GAAKh8E,EAAM,KACzC,SAAUA,EAAM,SAChB,QAASA,EAAM,QACf,SAAUA,EAAM,QAAA,CACjB,EACMsb,EAAS,CAAC,EAAGrI,EAAO,CACzB,KAAMyZ,GAAsB,CAC1B,OAAAtd,EACA,aAAcpP,EAAM,SACpB,YAAag8E,EAAwB,GAAOh8E,EAAM,QAClD,aAAc,KACd,mBAAoB,IAAA,CACrB,CAAA,CACF,CACH,EACai8E,GAAc,CAAC7sE,EAAQpP,IAAU,CAStC,MAAAw1B,EAASD,GAAcnmB,EAAQ,aAAa,EAC5Cu4B,EAActC,GAAmBj2B,EAAQpP,CAAK,EAC9Ck8E,EAAe3sE,EAAa,OAAA,KAAK,IAAK,CAAA,EACtC4sE,EAAe5sE,EAAAA,OAAavP,EAAM,QAAQ,EAC1CuQ,EAAUiP,KACV48D,EAAShgE,cAAwBxN,GAAA,CACrC,MAAMtN,EAAQipB,GAAuBnb,CAAM,EAAER,CAAE,EAC/C,GAAItN,EACK,OAAAA,EAET,MAAMuc,EAAOzO,EAAO,QAAQ,WAAWR,CAAE,EACrC,OAAAiP,GAAQyP,GAAuBzP,CAAI,EAC9B,CACL,CAAC4N,EAAqB,EAAG7c,CAAA,EAGtB,IAAA,EACN,CAACQ,CAAM,CAAC,EACLitE,EAAer8E,EAAM,SACrB+rB,EAAW3P,cAAyB2B,GACpC0N,MAAyB1N,EACpBA,EAAI0N,EAAqB,EAE9B4wD,EACKA,EAAat+D,CAAG,EAElBA,EAAI,GACV,CAACs+D,CAAY,CAAC,EACXxjE,EAASwW,EAAAA,QAAc,IAAMsY,EAAY,KAAK,OAAO,CAAC/sB,EAAK,CAC/D,GAAAhM,GACC2O,KACD3C,EAAIhM,CAAE,EAAI2O,EACH3C,GACN,CAAE,CAAA,EAAG,CAAC+sB,EAAY,IAAI,CAAC,EACpB20C,EAAsBlgE,EAAAA,YAAkB,CAAC,CAC7C,MAAArH,EACA,SAAAwnE,CAAA,IACI,CACJ,MAAMC,EAAM,IAAM,CACHN,EAAA,QAAU,KAAK,MAC5B9sE,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,GAAIrI,EAAO,CACnD,KAAMyZ,GAAsB,CAC1B,OAAAtd,EACA,aAAcpP,EAAM,SACpB,YAAaA,EAAM,QACnB,aAAcyqB,GAAoBrb,CAAM,EACxC,mBAAoBwb,GAA0Bxb,CAAM,EACpD,sBAAuBsb,GAA6Btb,CAAM,CAAA,CAC3D,CACF,CAAA,CAAC,EACKA,EAAA,QAAQ,aAAa,SAAS,EACrCA,EAAO,QAAQ,aAAY,EAI7B,GAFAmB,EAAQ,MAAM,EACPnB,EAAA,QAAQ,OAAO,KAAO2F,EACzB,CAACwnE,EAAU,CACTC,IACJ,MACF,CACA,MAAMC,EAA0Bz8E,EAAM,gBAAkB,KAAK,MAAQk8E,EAAa,SAClF,GAAIO,EAA0B,EAAG,CACvBlsE,EAAA,MAAMksE,EAAyBD,CAAG,EAC1C,MACF,CACIA,GAAA,EACH,CAACx8E,EAAM,eAAgBA,EAAM,SAAUA,EAAM,QAASoP,EAAQmB,CAAO,CAAC,EAKnEmsE,EAAUtgE,cAA0BgO,GAAA,CACxCoL,EAAO,MAAM,iCAAiCpL,EAAK,MAAM,EAAE,EAC3D,MAAMrV,EAAQiX,GAAwB,CACpC,KAAA5B,EACA,SAAUpqB,EAAM,SAChB,QAASA,EAAM,QACf,SAAUA,EAAM,QAAA,CACjB,EACK28E,EAAYvtE,EAAO,QAAQ,OAAO,KACxC2F,EAAM,yBAA2B4nE,EAAU,yBACvBL,EAAA,CAClB,MAAAvnE,EACA,SAAU,EAAA,CACX,CACH,EAAG,CAACygB,EAAQx1B,EAAM,SAAUA,EAAM,QAASA,EAAM,SAAUs8E,EAAqBltE,CAAM,CAAC,EACjFwtE,EAAaxgE,cAA6B+P,GAAA,CAC9C,GAAInsB,EAAM,YAAc4Q,GAAc,UAAYub,EAAQ,OAAS,EAC3D,MAAA,IAAI,MAAM,CAAC,gGAAiG,yFAAyF,EAAE,KAAK;AAAA,CAAI,CAAC,EAEzN,MAAM6C,EAAuBD,GAAmB3f,EAAQ+c,EAASnsB,EAAM,QAAQ,EACzE+U,EAAQ+Y,GAAuB,CACnC,QAASkB,EACT,SAAUhvB,EAAM,SAChB,cAAeoP,EAAO,QAAQ,OAAO,IAAA,CACtC,EACmBktE,EAAA,CAClB,MAAAvnE,EACA,SAAU,EAAA,CACX,CAAA,EACA,CAAC/U,EAAM,UAAWA,EAAM,SAAUs8E,EAAqBltE,CAAM,CAAC,EAC3DytE,EAAmBzgE,EAAAA,YAAkB,CAAC+P,EAAS6B,IAAc,CACjE,MAAMgB,EAAuBD,GAAmB3f,EAAQ+c,EAASnsB,EAAM,QAAQ,EACzE+U,EAAQ+Y,GAAuB,CACnC,QAASkB,EACT,SAAUhvB,EAAM,SAChB,cAAeoP,EAAO,QAAQ,OAAO,KACrC,UAAW4e,GAAa,CAAC,CAAA,CAC1B,EACmBsuD,EAAA,CAClB,MAAAvnE,EACA,SAAU,EAAA,CACX,GACA,CAAC/U,EAAM,SAAUs8E,EAAqBltE,CAAM,CAAC,EAC1C0tE,EAAa1gE,cAA6B6P,GAAA,CAC1CA,IAAYjsB,EAAM,UAGfw1B,EAAA,MAAM,sBAAsBvJ,CAAO,EAAE,EAC5C7c,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,GAAIrI,EAAO,CACnD,KAAMqI,EAAS,GAAIrI,EAAM,KAAM,CAC7B,QAAAgZ,CAAA,CACD,CACF,CAAA,CAAC,EACK7c,EAAA,QAAQ,OAAO,KAAK,gCAAkC6c,IAC5D,CAACjsB,EAAM,QAASoP,EAAQomB,CAAM,CAAC,EAC5BunD,EAAe3gE,EAAAA,YAAkB,IAAM,CACrC,MAAA4gE,EAAWhyD,GAAuB5b,CAAM,EACxC2jB,EAAexI,GAAuBnb,CAAM,EAClD,OAAO,IAAI,IAAI4tE,EAAS,IAAUpuE,GAAA,CAACA,EAAImkB,EAAankB,CAAE,GAAK,CAAE,CAAA,CAAC,CAAC,CAAA,EAC9D,CAACQ,CAAM,CAAC,EACL6tE,EAAe7gE,EAAAA,YAAkB,IAAM+N,GAAqB/a,CAAM,EAAG,CAACA,CAAM,CAAC,EAC7E8tE,EAAe9gE,EAAAA,YAAkB,IAAM4O,GAAuB5b,CAAM,EAAG,CAACA,CAAM,CAAC,EAC/E+tE,EAAmC/gE,EAAkB,YAAAxN,GAAMiK,EAAOjK,CAAE,EAAG,CAACiK,CAAM,CAAC,EAC/EukE,EAA0BhhE,EAAAA,YAAkB,CAACxN,EAAIyuE,IAAe,CACpE,MAAMC,EAAcluE,EAAO,QAAQ,WAAWR,CAAE,EAChD,GAAI,CAAC0uE,EACH,MAAM,IAAI,MAAM,0BAA0B1uE,CAAE,SAAS,EAEnD,GAAA0uE,EAAY,OAAS,QACjB,MAAA,IAAI,MAAM,uDAAuD,EAEzE,MAAMC,EAAUjiE,EAAS,CAAC,EAAGgiE,EAAa,CACxC,iBAAkBD,CAAA,CACnB,EACMjuE,EAAA,QAAQ,SAAkB6D,GACxBqI,EAAS,CAAC,EAAGrI,EAAO,CACzB,KAAMqI,EAAS,GAAIrI,EAAM,KAAM,CAC7B,KAAMqI,EAAS,CAAA,EAAIrI,EAAM,KAAK,KAAM,CAClC,CAACrE,CAAE,EAAG2uE,CAAA,CACP,CAAA,CACF,CAAA,CACF,CACF,EACDnuE,EAAO,QAAQ,cACRA,EAAA,QAAQ,aAAa,qBAAsBmuE,CAAO,CAAA,EACxD,CAACnuE,CAAM,CAAC,EACLouE,EAAaphE,EAAAA,YAAkBxN,GAAM6b,GAAoBrb,CAAM,EAAER,CAAE,GAAK,KAAM,CAACQ,CAAM,CAAC,EACtFquE,EAAsBrhE,EAAAA,YAAkB,CAAC,CAC7C,sBAAAsR,EAAwB,GACxB,QAAAgwD,EACA,aAAAC,EACA,eAAAC,CAAA,IACI,CACE,MAAArxD,EAAO9B,GAAoBrb,CAAM,EACnC,IAAA/K,EACJ,GAAIs5E,EAAc,CACV,MAAAE,EAAYtxD,EAAKmxD,CAAO,EAC9B,GAAI,CAACG,EACH,MAAO,GAEH,MAAAC,EAAenrD,GAAyBvjB,CAAM,EACpD/K,EAAW,CAAA,EACX,MAAM05E,EAAaD,EAAa,UAAgBlvE,GAAAA,IAAO8uE,CAAO,EAAI,EAClE,QAASngE,EAAQwgE,EAAYxgE,EAAQugE,EAAa,QAAUvxD,EAAKuxD,EAAavgE,CAAK,CAAC,EAAE,MAAQsgE,EAAU,MAAOtgE,GAAS,EAAG,CACnH,MAAA3O,EAAKkvE,EAAavgE,CAAK,GACzB,CAACmQ,GAAyB,CAACJ,GAAuBf,EAAK3d,CAAE,CAAC,IAC5DvK,EAAS,KAAKuK,CAAE,CAEpB,CAAA,MAEWvK,EAAAmpB,GAAuBjB,EAAMmxD,EAAShwD,CAAqB,EAExE,GAAIkwD,EAAgB,CACZ,MAAA3pD,EAAqBR,GAA+BrkB,CAAM,EAChE/K,EAAWA,EAAS,OAAO25E,GAAW/pD,EAAmB+pD,CAAO,IAAM,EAAK,CAC7E,CACO,OAAA35E,CAAA,EACN,CAAC+K,CAAM,CAAC,EACL6uE,EAAc7hE,EAAAA,YAAkB,CAACqW,EAAOyrD,IAAgB,CAC5D,MAAMrgE,EAAOzO,EAAO,QAAQ,WAAWqjB,CAAK,EAC5C,GAAI,CAAC5U,EACH,MAAM,IAAI,MAAM,0BAA0B4U,CAAK,SAAS,EAEtD,GAAA5U,EAAK,SAAW2N,GACZ,MAAA,IAAI,MAAM,0EAA0E,EAExF,GAAA3N,EAAK,OAAS,OACV,MAAA,IAAI,MAAM,iFAAiF,EAE5FzO,EAAA,QAAQ,SAAkB6D,GAAA,CAC/B,MAAM0sD,EAAQl1C,GAAoBxX,EAAO7D,EAAO,QAAQ,UAAU,EAAEoc,EAAkB,EAChF2yD,EAAUxe,EAAM,SAChBye,EAAWD,EAAQ,UAAUpgE,GAAOA,IAAQ0U,CAAK,EACnD,GAAA2rD,IAAa,IAAMA,IAAaF,EAC3B,OAAAjrE,EAETuiB,EAAO,MAAM,cAAc/C,CAAK,aAAayrD,CAAW,EAAE,EACpD,MAAAG,EAAc,CAAC,GAAGF,CAAO,EACnB,OAAAE,EAAA,OAAOH,EAAa,EAAGG,EAAY,OAAOD,EAAU,CAAC,EAAE,CAAC,CAAC,EAC9D9iE,EAAS,CAAC,EAAGrI,EAAO,CACzB,KAAMqI,EAAS,GAAIrI,EAAM,KAAM,CAC7B,KAAMqI,EAAS,CAAA,EAAIrI,EAAM,KAAK,KAAM,CAClC,CAACuY,EAAkB,EAAGlQ,EAAS,GAAIqkD,EAAO,CACxC,SAAU0e,CAAA,CACX,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CACF,EACMjvE,EAAA,QAAQ,aAAa,SAAS,CAAA,EACpC,CAACA,EAAQomB,CAAM,CAAC,EACb8oD,EAAcliE,EAAAA,YAAkB,CAACqmB,EAAkBgpC,IAAY,CACnE,GAAIzrE,EAAM,YAAc4Q,GAAc,UAAY66D,EAAQ,OAAS,EAC3D,MAAA,IAAI,MAAM,CAAC,8FAA+F,yFAAyF,EAAE,KAAK;AAAA,CAAI,CAAC,EAEnN,GAAAA,EAAQ,SAAW,EACrB,OAGF,GADkB5gD,GAAgCzb,CAAM,EACxC,EACR,MAAA,IAAI,MAAM,yFAAyF,EAE3G,MAAMmd,EAAOjR,EAAS,CAAA,EAAImP,GAAoBrb,CAAM,CAAC,EAC/Cgd,EAAyB9Q,EAAS,CAAA,EAAIiP,GAAuBnb,CAAM,CAAC,EACpEid,EAAsB/Q,EAAS,CAAA,EAAIkP,GAAoCpb,CAAM,CAAC,EAC9EmvE,EAAYhyD,EAAKf,EAAkB,EACnCgzD,EAAoB,CAAC,GAAGD,EAAU,QAAQ,EAC1CE,MAAc,IACpB,QAASp1E,EAAI,EAAGA,EAAIoiE,EAAQ,OAAQpiE,GAAK,EAAG,CACpC,MAAAyiB,EAAW2/C,EAAQpiE,CAAC,EACpBopB,EAAQ5G,GAAqBC,EAAU9rB,EAAM,SAAU,2DAA2D,EAClH,CAAC0+E,EAAY,EAAIF,EAAkB,OAAO/7C,EAAmBp5B,EAAG,EAAGopB,CAAK,EACzEgsD,EAAQ,IAAIC,EAAY,IAC3B,OAAOtyD,EAAuBsyD,EAAY,EAC1C,OAAOryD,EAAoBqyD,EAAY,EACvC,OAAOnyD,EAAKmyD,EAAY,GAE1B,MAAMC,GAAoB,CACxB,GAAIlsD,EACJ,MAAO,EACP,OAAQjH,GACR,KAAM,OACN,YAAa,IAAA,EAEfY,EAAuBqG,CAAK,EAAI3G,EAChCO,EAAoBoG,CAAK,EAAIA,EAC7BlG,EAAKkG,CAAK,EAAIksD,GACdF,EAAQ,IAAIhsD,CAAK,CACnB,CACAlG,EAAKf,EAAkB,EAAIlQ,EAAS,CAAA,EAAIijE,EAAW,CACjD,SAAUC,CAAA,CACX,EAGK,MAAAI,EAAaJ,EAAkB,OAAOR,UAAW,QAAAl8E,EAAAyqB,EAAKyxD,CAAO,IAAZ,YAAAl8E,EAAe,QAAS,OAAM,EAC9EsN,EAAA,QAAQ,OAAO,KAAK,uBAAyBgd,EAC7Chd,EAAA,QAAQ,OAAO,KAAK,oBAAsBid,EACjDjd,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,GAAIrI,EAAO,CACnD,KAAMqI,EAAS,GAAIrI,EAAM,KAAM,CAC7B,uBAAAmZ,EACA,oBAAAC,EACA,WAAAuyD,EACA,KAAAryD,CAAA,CACD,CACF,CAAA,CAAC,EACKnd,EAAA,QAAQ,aAAa,SAAS,CAAA,EACpC,CAACA,EAAQpP,EAAM,UAAWA,EAAM,QAAQ,CAAC,EACtC6+E,EAAS,CACb,OAAAzC,EACA,WAAAU,EACA,SAAA/wD,EACA,aAAAgxD,EACA,aAAAE,EACA,aAAAC,EACA,QAAAR,EACA,WAAAE,EACA,WAAAY,EACA,iCAAAL,EACA,qBAAsBmB,CAAA,EAElBQ,EAAY,CAChB,YAAAb,EACA,wBAAAb,EACA,oBAAAK,CAAA,EAEIsB,EAAmB,CACvB,iBAAAlC,CAAA,EAMImC,EAAY5iE,EAAAA,YAAkB,IAAM,CACxCoZ,EAAO,KAAK,qEAAqE,EAC7E,IAAAzgB,EACA3F,EAAO,QAAQ,OAAO,KAAK,2BAA6BpP,EAAM,KAGhE+U,EAAQuG,EAAS,CAAC,EAAGlM,EAAO,QAAQ,OAAO,KAAM,CAC/C,QAAS,CACP,KAAM,OACN,KAAM4b,GAAuB5b,CAAM,CACrC,CAAA,CACD,EAKD2F,EAAQiX,GAAwB,CAC9B,KAAMhsB,EAAM,KACZ,SAAUA,EAAM,SAChB,QAASA,EAAM,QACf,SAAUA,EAAM,QAAA,CACjB,EAEiBs8E,EAAA,CAClB,MAAAvnE,EACA,SAAU,EAAA,CACX,CACA,EAAA,CAACygB,EAAQpmB,EAAQpP,EAAM,KAAMA,EAAM,SAAUA,EAAM,QAASA,EAAM,SAAUs8E,CAAmB,CAAC,EAC7F/M,EAAgCnzD,cAAgCuiD,GAAA,CAChEA,IAAe,mBACPqgB,GACZ,EACC,CAACA,CAAS,CAAC,EACRC,EAA+B7iE,EAAAA,YAAkB,IAAM,CAGvDhN,EAAO,QAAQ,kBAAkB,SAAS,IAAMub,GAA4Bvb,CAAM,GAC1E4vE,GACZ,EACC,CAAC5vE,EAAQ4vE,CAAS,CAAC,EACCltE,GAAA1C,EAAQ,gCAAiCmgE,CAA6B,EACtEz9D,GAAA1C,EAAQ,6BAA8B6vE,CAA4B,EAKnF,MAAAC,EAA4B9iE,EAAAA,YAAkB,IAAM,CACjDhN,EAAA,QAAQ,SAAkB6D,GAAA,CAC/B,MAAMqyB,EAAWl2B,EAAO,QAAQ,6BAA6B,cAAe,CAC1E,KAAMqb,GAAoBxX,EAAO7D,EAAO,QAAQ,UAAU,EAC1D,WAAYwb,GAA0B3X,EAAO7D,EAAO,QAAQ,UAAU,EACtE,WAAY4b,GAAuB/X,EAAO7D,EAAO,QAAQ,UAAU,EACnE,uBAAwBmb,GAAuBtX,EAAO7D,EAAO,QAAQ,UAAU,EAC/E,oBAAqBob,GAAoCvX,EAAO7D,EAAO,QAAQ,UAAU,CAAA,CAC1F,EACM,OAAAkM,EAAS,CAAC,EAAGrI,EAAO,CACzB,KAAMqI,EAAS,CAAA,EAAIrI,EAAM,KAAMqyB,EAAU,CACvC,sBAAuBhZ,GAAoB,CACzC,KAAMgZ,EAAS,KACf,aAActlC,EAAM,QAAA,CACrB,CAAA,CACF,CAAA,CACF,CAAA,CACF,EACMoP,EAAA,QAAQ,aAAa,SAAS,EACrCA,EAAO,QAAQ,aACd,EAAA,CAACA,EAAQpP,EAAM,QAAQ,CAAC,EACA0gE,GAAAtxD,EAAQ,cAAe8vE,CAAyB,EAC1DhqD,GAAA9lB,EAAQyvE,EAAQ,QAAQ,EACzC3pD,GAAiB9lB,EAAQ0vE,EAAW9+E,EAAM,YAAc4Q,GAAc,SAAW,UAAY,QAAQ,EACpFskB,GAAA9lB,EAAQ2vE,EAAkB,SAAS,EAI9C,MAAAzpD,EAAgB/lB,SAAa,EAAI,EACvCqC,EAAAA,UAAgB,IAAM,OACpB,GAAI0jB,EAAc,QAAS,CACzBA,EAAc,QAAU,GACxB,MACF,CACA,IAAI6pD,EAAwB,GACxBn/E,EAAM,WAAam8E,EAAa,UACVgD,EAAA,GACxBhD,EAAa,QAAUn8E,EAAM,UAE/B,MAAMo/E,EAA2BhwE,EAAO,QAAQ,OAAO,KAAK,2BAA6BpP,EAAM,KACzFq/E,EAA6BjwE,EAAO,QAAQ,OAAO,KAAK,kCAAoCpP,EAAM,QAClGs/E,EAA8BlwE,EAAO,QAAQ,OAAO,KAAK,mCAAqCpP,EAAM,SAGtGo/E,IAEGC,IACHjwE,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,GAAIrI,EAAO,CACnD,KAAMqI,EAAS,GAAIrI,EAAM,KAAM,CAC7B,QAASjT,EAAM,OAAA,CAChB,CACF,CAAA,CAAC,EACFoP,EAAO,QAAQ,OAAO,KAAK,gCAAkCpP,EAAM,QACnEoP,EAAO,QAAQ,eAEZkwE,IACHlwE,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,GAAIrI,EAAO,CACnD,KAAMqI,EAAS,GAAIrI,EAAM,KAAM,CAC7B,cAAe,KAAK,IAAIjT,EAAM,UAAY,EAAGiT,EAAM,KAAK,aAAa,EACrE,sBAAuB,KAAK,IAAIjT,EAAM,UAAY,EAAGiT,EAAM,KAAK,qBAAqB,CAAA,CACtF,CACF,CAAA,CAAC,EACF7D,EAAO,QAAQ,OAAO,KAAK,iCAAmCpP,EAAM,SACpEoP,EAAO,QAAQ,eAEb,CAAC+vE,KAIP3pD,EAAO,MAAM,kCAAiC1zB,EAAA9B,EAAM,OAAN,YAAA8B,EAAY,MAAM,EAAE,EAC9Cw6E,EAAA,CAClB,MAAOtwD,GAAwB,CAC7B,KAAMhsB,EAAM,KACZ,SAAUA,EAAM,SAChB,QAASA,EAAM,QACf,SAAUA,EAAM,QAAA,CACjB,EACD,SAAU,EAAA,CACX,EACA,EAAA,CAACA,EAAM,KAAMA,EAAM,SAAUA,EAAM,SAAUA,EAAM,QAASw1B,EAAQ8mD,EAAqBltE,CAAM,CAAC,CACrG,EChdMmwE,GAAoBn1D,GAAQ,CAChC,MAAMmC,EAAO,CACX,CAACf,EAAkB,EAAGlQ,EAAS,CAAE,EAAEoQ,GAAc,EAAI,CACnD,SAAUtB,CAChB,CAAK,CACL,EACE,QAAS/gB,EAAI,EAAGA,EAAI+gB,EAAK,OAAQ/gB,GAAK,EAAG,CACvC,MAAMopB,EAAQrI,EAAK/gB,CAAC,EACpBkjB,EAAKkG,CAAK,EAAI,CACZ,GAAIA,EACJ,MAAO,EACP,OAAQjH,GACR,KAAM,OACN,YAAa,IACnB,CACG,CACD,MAAO,CACL,aAAcq1C,GACd,KAAAt0C,EACA,WAAY,CACV,EAAGnC,EAAK,MACT,EACD,WAAYA,CAChB,CACA,EACMo1D,GAAoB,CAAC,CACzB,aAAA5yD,EACA,QAAA6yD,CACF,IAAM,CACJ,MAAMlzD,EAAOjR,EAAS,CAAE,EAAEsR,CAAY,EAChC8yD,EAA2B,CAAA,EACjC,QAASr2E,EAAI,EAAGA,EAAIo2E,EAAQ,OAAO,OAAQp2E,GAAK,EAAG,CACjD,MAAMs2E,EAAaF,EAAQ,OAAOp2E,CAAC,EACnCq2E,EAAyBC,CAAU,EAAI,GACvC,OAAOpzD,EAAKozD,CAAU,CACvB,CACD,QAASt2E,EAAI,EAAGA,EAAIo2E,EAAQ,OAAO,OAAQp2E,GAAK,EAAG,CACjD,MAAMu2E,EAAaH,EAAQ,OAAOp2E,CAAC,EACnCkjB,EAAKqzD,CAAU,EAAI,CACjB,GAAIA,EACJ,MAAO,EACP,OAAQp0D,GACR,KAAM,OACN,YAAa,IACnB,CACG,CAID,MAAM+yD,EAAYhyD,EAAKf,EAAkB,EACzC,IAAIgzD,EAAoB,CAAC,GAAGD,EAAU,SAAU,GAAGkB,EAAQ,MAAM,EACjE,OAAI,OAAO,OAAOC,CAAwB,EAAE,SAC1ClB,EAAoBA,EAAkB,OAAO5vE,GAAM,CAAC8wE,EAAyB9wE,CAAE,CAAC,GAElF2d,EAAKf,EAAkB,EAAIlQ,EAAS,CAAA,EAAIijE,EAAW,CACjD,SAAUC,CACd,CAAG,EACM,CACL,aAAc3d,GACd,KAAAt0C,EACA,WAAY,CACV,EAAGiyD,EAAkB,MACtB,EACD,WAAYA,CAChB,CACA,EACMqB,GAA4BnuE,GAC5BA,EAAO,QAAQ,OAAS,OACnB6tE,GAAkB7tE,EAAO,QAAQ,IAAI,EAEvC8tE,GAAkB,CACvB,aAAc9tE,EAAO,aACrB,QAASA,EAAO,QAAQ,OAC5B,CAAG,EAEUouE,GAA2B1wE,GAAU,CAChDuxD,GAAiCvxD,EAAQyxD,GAAuB,kBAAmBgf,EAAyB,CAC9G,EC9DME,GAA6B,CAACC,EAAoBC,IAClDD,GAAsB,MAGtB,MAAM,QAAQA,CAAkB,EAC3BA,EAELC,GAAsBA,EAAmB,CAAC,IAAMD,EAC3CC,EAEF,CAACD,CAAkB,EAEfE,GAA+B,CAACjtE,EAAOjT,IAAUsb,EAAS,CAAA,EAAIrI,EAAO,CAChF,aAAcjT,EAAM,aAAe+/E,GAA2B//E,EAAM,iBAAiB,GAAK,CAAA,EAAK,CAAE,CACnG,CAAC,EAQYmgF,GAAsB,CAAC/wE,EAAQpP,IAAU,CACpD,MAAMw1B,EAASD,GAAcnmB,EAAQ,kBAAkB,EACjDgxE,EAA6Bh8D,GAAY,IAAI7M,IAAS,CACtDvX,EAAM,cACRokB,EAAS,GAAG7M,CAAI,CAEtB,EACQ8oE,EAAwBhxD,EAAAA,QAAc,IACnC0wD,GAA2B//E,EAAM,kBAAmBkyB,GAA8B9iB,EAAO,QAAQ,KAAK,CAAC,EAC7G,CAACA,EAAQpP,EAAM,iBAAiB,CAAC,EAC9BsgF,EAAiB/wE,SAAa,IAAI,EACxCH,EAAO,QAAQ,qBAAqB,CAClC,QAAS,eACT,UAAWixE,EACX,aAAcrgF,EAAM,0BACpB,cAAekyB,GACf,YAAa,oBACjB,CAAG,EACD,KAAM,CACJ,kBAAAquD,EACA,2BAAAC,EACA,gBAAiBC,CAClB,EAAGzgF,EACE0gF,EAA2BpvD,GAA8BtxB,CAAK,EAC9D2iC,EAAc0C,GAAmBj2B,EAAQpP,CAAK,EAC9C2gF,EAA+BvkE,EAAiB,YAACxN,GAAM,CAC3D,IAAIgyE,EAAQhyE,EACZ,MAAMiyE,EAAUP,EAAe,SAAW1xE,EACpCq8B,EAAa77B,EAAO,QAAQ,cAAcR,CAAE,EAClD,GAAIq8B,EAAY,CACd,MAAMvS,EAAgB5E,GAAiC1kB,CAAM,EACvD2uE,EAAarlD,EAAc,UAAUjG,GAASA,IAAUouD,CAAO,EAC/DC,EAAWpoD,EAAc,UAAUjG,GAASA,IAAUmuD,CAAK,EACjE,GAAI7C,IAAe+C,EACjB,OAEE/C,EAAa+C,EACfF,EAAQloD,EAAcooD,EAAW,CAAC,EAElCF,EAAQloD,EAAcooD,EAAW,CAAC,CAErC,CACDR,EAAe,QAAU1xE,EACzBQ,EAAO,QAAQ,eAAe,CAC5B,QAAAyxE,EACA,MAAAD,CACN,EAAO,CAAC31C,CAAU,CAClB,EAAK,CAAC77B,CAAM,CAAC,EAKL2xE,EAAuB3kE,EAAiB,YAAC9a,GAAS,CACtD,GAAItB,EAAM,YAAc4Q,GAAc,UAAY,CAAC8vE,GAA4B,MAAM,QAAQp/E,CAAK,GAAKA,EAAM,OAAS,EACpH,MAAM,IAAI,MAAM,CAAC,kEAAmE,+FAA+F,EAAE,KAAK;AAAA,CAAI,CAAC,EAE5K4wB,GAA8B9iB,EAAO,QAAQ,KAAK,IAClD9N,IACnBk0B,EAAO,MAAM,yBAAyB,EACtCpmB,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,aAAcjT,EAAM,aAAesB,EAAQ,CAAE,CAC9C,CAAA,CAAC,EACF8N,EAAO,QAAQ,cAErB,EAAK,CAACA,EAAQomB,EAAQx1B,EAAM,aAAcA,EAAM,UAAW0gF,CAAwB,CAAC,EAC5EM,EAAgB5kE,EAAiB,YAACxN,GAAMsjB,GAA8B9iB,EAAO,QAAQ,KAAK,EAAE,SAASR,CAAE,EAAG,CAACQ,CAAM,CAAC,EAClH6xE,EAAkB7kE,EAAiB,YAACxN,GAAM,CAC9C,GAAI6xE,GAAuB,CAACA,EAAoBrxE,EAAO,QAAQ,aAAaR,CAAE,CAAC,EAC7E,MAAO,GAET,MAAM2e,EAAUne,EAAO,QAAQ,WAAWR,CAAE,EAC5C,MAAI,GAAA2e,GAAA,YAAAA,EAAS,QAAS,WAAYA,GAAA,YAAAA,EAAS,QAAS,YAIxD,EAAK,CAACne,EAAQqxE,CAAmB,CAAC,EAC1BS,EAAkB9kE,EAAAA,YAAkB,IAAMiW,GAAyBjjB,CAAM,EAAG,CAACA,CAAM,CAAC,EACpF+xE,EAAY/kE,EAAAA,YAAkB,CAACxN,EAAIq8B,EAAa,GAAMm2C,EAAiB,KAAU,CACrF,GAAKhyE,EAAO,QAAQ,gBAAgBR,CAAE,EAItC,GADA0xE,EAAe,QAAU1xE,EACrBwyE,EACF5rD,EAAO,MAAM,6BAA6B5mB,CAAE,EAAE,EAC9CQ,EAAO,QAAQ,qBAAqB67B,EAAa,CAACr8B,CAAE,EAAI,CAAA,CAAE,MACrD,CACL4mB,EAAO,MAAM,8BAA8B5mB,CAAE,EAAE,EAE/C,MAAMyyE,EADYnvD,GAA8B9iB,EAAO,QAAQ,KAAK,EACrC,OAAO0O,GAAMA,IAAOlP,CAAE,EACjDq8B,GACFo2C,EAAa,KAAKzyE,CAAE,GAEGyyE,EAAa,OAAS,GAAKX,IAElDtxE,EAAO,QAAQ,qBAAqBiyE,CAAY,CAEnD,CACF,EAAE,CAACjyE,EAAQomB,EAAQkrD,CAAwB,CAAC,EACvCY,EAAallE,EAAAA,YAAkB,CAACy+D,EAAK5vC,EAAa,GAAMm2C,EAAiB,KAAU,CACvF5rD,EAAO,MAAM,oCAAoC,EACjD,MAAM+rD,EAAgB1G,EAAI,OAAOjsE,GAAMQ,EAAO,QAAQ,gBAAgBR,CAAE,CAAC,EACzE,IAAIyyE,EACJ,GAAID,EACFC,EAAep2C,EAAas2C,EAAgB,OACvC,CAEL,MAAMnoD,EAAkB9d,EAAS,CAAA,EAAIkX,GAA0BpjB,CAAM,CAAC,EACtEmyE,EAAc,QAAQ3yE,GAAM,CACtBq8B,EACF7R,EAAgBxqB,CAAE,EAAIA,EAEtB,OAAOwqB,EAAgBxqB,CAAE,CAEnC,CAAO,EACDyyE,EAAe,OAAO,OAAOjoD,CAAe,CAC7C,EACwBioD,EAAa,OAAS,GAAKX,IAElDtxE,EAAO,QAAQ,qBAAqBiyE,CAAY,CAEnD,EAAE,CAACjyE,EAAQomB,EAAQkrD,CAAwB,CAAC,EACvCc,EAAiBplE,EAAAA,YAAkB,CAAC,CACxC,QAAAykE,EACA,MAAAD,CACD,EAAE31C,EAAa,GAAMm2C,EAAiB,KAAU,CAC/C,GAAI,CAAChyE,EAAO,QAAQ,OAAOyxE,CAAO,GAAK,CAACzxE,EAAO,QAAQ,OAAOwxE,CAAK,EACjE,OAEFprD,EAAO,MAAM,gCAAgCqrD,CAAO,WAAWD,CAAK,EAAE,EAGtE,MAAMa,EAAiB3tD,GAAiC1kB,CAAM,EACxD2uE,EAAa0D,EAAe,QAAQZ,CAAO,EAC3CC,EAAWW,EAAe,QAAQb,CAAK,EACvC,CAACz+E,EAAOC,CAAG,EAAI27E,EAAa+C,EAAW,CAACA,EAAU/C,CAAU,EAAI,CAACA,EAAY+C,CAAQ,EACrFY,EAAyBD,EAAe,MAAMt/E,EAAOC,EAAM,CAAC,EAClEgN,EAAO,QAAQ,WAAWsyE,EAAwBz2C,EAAYm2C,CAAc,CAChF,EAAK,CAAChyE,EAAQomB,CAAM,CAAC,EACbmsD,EAAqB,CACzB,UAAAR,EACA,qBAAAJ,EACA,gBAAAG,EACA,cAAAF,EACA,gBAAAC,CACJ,EACQW,EAAsB,CAC1B,WAAAN,EACA,eAAAE,CACJ,EACEtsD,GAAiB9lB,EAAQuyE,EAAoB,QAAQ,EACrDzsD,GAAiB9lB,EAAQwyE,EAAqB5hF,EAAM,YAAc4Q,GAAc,SAAW,UAAY,QAAQ,EAK/G,MAAMixE,EAA0BzlE,EAAAA,YAAkB,IAAM,CACtD,GAAIpc,EAAM,4BACR,OAEF,MAAM8hF,EAAmB5vD,GAA8B9iB,EAAO,QAAQ,KAAK,EACrEmjB,EAAahI,GAAuBnb,CAAM,EAG1CgqB,EAAkB9d,EAAS,CAAA,EAAIkX,GAA0BpjB,CAAM,CAAC,EACtE,IAAI2oE,EAAa,GACjB+J,EAAiB,QAAQlzE,GAAM,CACxB2jB,EAAW3jB,CAAE,IAChB,OAAOwqB,EAAgBxqB,CAAE,EACzBmpE,EAAa,GAErB,CAAK,EACGA,GACF3oE,EAAO,QAAQ,qBAAqB,OAAO,OAAOgqB,CAAe,CAAC,CAErE,EAAE,CAAChqB,EAAQpP,EAAM,2BAA2B,CAAC,EACxC+hF,EAA2B3lE,EAAAA,YAAkB,CAACxN,EAAI7J,IAAU,CAChE,MAAMi9E,EAAaj9E,EAAM,SAAWA,EAAM,QAOpCk9E,EAA8B,CAAC1B,GAAqB,CAACyB,GAAc,CAACjmD,GAAgBh3B,CAAK,EACzFq8E,EAAiB,CAACV,GAA4BuB,EAC9Ch3C,EAAa77B,EAAO,QAAQ,cAAcR,CAAE,EAC9CwyE,EACFhyE,EAAO,QAAQ,UAAUR,EAAKqzE,EAA4C,GAAd,CAACh3C,EAAmB,EAAI,EAEpF77B,EAAO,QAAQ,UAAUR,EAAI,CAACq8B,EAAY,EAAK,CAElD,EAAE,CAAC77B,EAAQsxE,EAA0BH,CAAiB,CAAC,EAClD2B,EAAiB9lE,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,OAC1D,GAAIy7E,EACF,OAEF,MAAM1nE,GAAQhX,EAAAiD,EAAM,OAAO,QAAQ,IAAIoL,EAAY,IAAI,EAAE,IAA3C,YAAArO,EAA8C,aAAa,cAKzE,GAJIgX,IAAUqgB,GAAgC,OAI1CrgB,IAAU8gD,GAEZ,OAEF,GAAI9gD,EAAO,CACT,MAAMK,EAAS/J,EAAO,QAAQ,UAAU0J,CAAK,EAC7C,IAAIK,GAAA,YAAAA,EAAQ,QAAS6Q,GACnB,MAEH,CACe5a,EAAO,QAAQ,WAAWsC,EAAO,EAAE,EACvC,OAAS,cAGjB3M,EAAM,UAAY27E,EACpBC,EAA6BjvE,EAAO,EAAE,EAEtCqwE,EAAyBrwE,EAAO,GAAI3M,CAAK,EAE/C,EAAK,CAACy7E,EAA4BE,EAA0BtxE,EAAQuxE,EAA8BoB,CAAwB,CAAC,EACnHI,EAA0B/lE,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,OAC/D27E,GAA4B37E,EAAM,YACpCjD,EAAA,OAAO,iBAAP,MAAAA,EAAuB,kBAE7B,EAAK,CAAC4+E,CAAwB,CAAC,EACvB0B,EAAmChmE,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CACxE27E,GAA4B37E,EAAM,YAAY,SAChD47E,EAA6BjvE,EAAO,EAAE,EAEtCtC,EAAO,QAAQ,UAAUsC,EAAO,GAAIA,EAAO,MAAO,CAACgvE,CAAwB,CAE9E,EAAE,CAACtxE,EAAQuxE,EAA8BD,CAAwB,CAAC,EAC7D2B,EAAsCjmE,EAAiB,YAAC1K,GAAU,CAEtE,MAAM4wE,EADoCtiF,EAAM,8BAAgCA,EAAM,WACzBq4B,GAA6CjpB,CAAM,EAAI0kB,GAAiC1kB,CAAM,EACrJ8T,EAAcmQ,GAAwBjkB,CAAM,EAClDA,EAAO,QAAQ,WAAWkzE,EAAkB5wE,EAAO,OAAOwR,GAAA,YAAAA,EAAa,MAAM,QAAS,CAAC,CAC3F,EAAK,CAAC9T,EAAQpP,EAAM,6BAA8BA,EAAM,UAAU,CAAC,EAC3D0wE,EAAoBt0D,EAAAA,YAAkB,CAAC1K,EAAQ3M,IAAU,CAE7D,GAAIqK,EAAO,QAAQ,YAAYsC,EAAO,GAAIA,EAAO,KAAK,IAAMoQ,GAAc,MAMtE,CAAA0zB,GAAsBzwC,CAAK,EAG/B,IAAI+2B,GAAgB/2B,EAAM,GAAG,GAAKA,EAAM,SAAU,CAEhD,MAAMw9E,EAAY/wD,GAAsBpiB,CAAM,EAC9C,GAAImzE,GAAaA,EAAU,KAAO7wE,EAAO,GAAI,CAC3C3M,EAAM,eAAc,EACpB,MAAMy9E,EAAoBpzE,EAAO,QAAQ,cAAcmzE,EAAU,EAAE,EACnE,GAAI,CAAC7B,EAA0B,CAC7BtxE,EAAO,QAAQ,UAAUmzE,EAAU,GAAI,CAACC,EAAmB,EAAI,EAC/D,MACD,CACD,MAAMC,EAAcrzE,EAAO,QAAQ,iCAAiCmzE,EAAU,EAAE,EAC1EG,EAAmBtzE,EAAO,QAAQ,iCAAiCsC,EAAO,EAAE,EAClF,IAAIvP,EACAC,EACAqgF,EAAcC,EACZF,GAEFrgF,EAAQugF,EACRtgF,EAAMqgF,EAAc,IAGpBtgF,EAAQugF,EACRtgF,EAAMqgF,GAIJD,GAEFrgF,EAAQsgF,EAAc,EACtBrgF,EAAMsgF,IAGNvgF,EAAQsgF,EACRrgF,EAAMsgF,GAGV,MAAMhB,EAAyB/+C,EAAY,KAAK,MAAMxgC,EAAOC,EAAM,CAAC,EAAE,IAAI2b,GAAOA,EAAI,EAAE,EACvF3O,EAAO,QAAQ,WAAWsyE,EAAwB,CAACc,CAAiB,EACpE,MACD,CACF,CACD,GAAIz9E,EAAM,MAAQ,KAAOA,EAAM,SAAU,CACvCA,EAAM,eAAc,EACpBg9E,EAAyBrwE,EAAO,GAAI3M,CAAK,EACzC,MACD,CACGA,EAAM,MAAQ,MAAQA,EAAM,SAAWA,EAAM,WAC/CA,EAAM,eAAc,EACpBu8E,EAAWlyE,EAAO,QAAQ,aAAc,EAAE,EAAI,GAEpD,EAAK,CAACA,EAAQ2yE,EAA0BT,EAAY3+C,EAAY,KAAM+9C,CAAwB,CAAC,EAC7F5uE,GAAuB1C,EAAQ,gBAAiBgxE,EAA2ByB,CAAuB,CAAC,EACnG/vE,GAAuB1C,EAAQ,WAAYgxE,EAA2B8B,CAAc,CAAC,EACrFpwE,GAAuB1C,EAAQ,6BAA8BgxE,EAA2BgC,CAAgC,CAAC,EACzHtwE,GAAuB1C,EAAQ,gCAAiCizE,CAAmC,EACnGvwE,GAAuB1C,EAAQ,gBAAiBgxE,EAA2B+B,CAAuB,CAAC,EACnGrwE,GAAuB1C,EAAQ,cAAegxE,EAA2B1P,CAAiB,CAAC,EAK3F9+D,EAAAA,UAAgB,IAAM,CAChByuE,IAA0B,QAC5BjxE,EAAO,QAAQ,qBAAqBixE,CAAqB,CAE5D,EAAE,CAACjxE,EAAQixE,EAAuBrgF,EAAM,YAAY,CAAC,EACtD4R,EAAAA,UAAgB,IAAM,CACf5R,EAAM,cACToP,EAAO,QAAQ,qBAAqB,CAAA,CAAE,CAEzC,EAAE,CAACA,EAAQpP,EAAM,YAAY,CAAC,EAC/B,MAAM2iF,EAAoBtC,GAAyB,KACnDzuE,EAAAA,UAAgB,IAAM,CACpB,GAAI+wE,GAAqB,CAAC3iF,EAAM,aAC9B,OAIF,MAAM8hF,EAAmB5vD,GAA8B9iB,EAAO,QAAQ,KAAK,EAC3E,GAAI6xE,EAAiB,CACnB,MAAMI,EAAeS,EAAiB,OAAOlzE,GAAMqyE,EAAgBryE,CAAE,CAAC,EAClEyyE,EAAa,OAASS,EAAiB,QACzC1yE,EAAO,QAAQ,qBAAqBiyE,CAAY,CAEnD,CACL,EAAK,CAACjyE,EAAQ6xE,EAAiB0B,EAAmB3iF,EAAM,YAAY,CAAC,EACnE4R,EAAAA,UAAgB,IAAM,CACpB,GAAI,CAAC5R,EAAM,cAAgB2iF,EACzB,OAEF,MAAMb,EAAmB5vD,GAA8B9iB,EAAO,QAAQ,KAAK,EACvE,CAACsxE,GAA4BoB,EAAiB,OAAS,GAEzD1yE,EAAO,QAAQ,qBAAqB,CAAA,CAAE,CAE5C,EAAK,CAACA,EAAQsxE,EAA0BH,EAAmBoC,EAAmB3iF,EAAM,YAAY,CAAC,CACjG,EC5XM+a,GAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAxW,CACD,EAAGwW,EACJ,OAAOqU,EAAa,QAAC,IAKZpU,GAJO,CACZ,aAAc,CAAC,cAAc,EAC7B,qBAAsB,CAAC,sBAAsB,CACnD,EACiCjL,GAAyBxL,CAAO,EAC5D,CAACA,CAAO,CAAC,CACd,EACao+E,GAAmC,CAACxzE,EAAQpP,IAAU,CACjE,MAAMgb,EAAa,CACjB,QAAShb,EAAM,OACnB,EACQwE,EAAUuW,GAAkBC,CAAU,EACtC6nE,EAAwBzmE,EAAiB,YAAC3D,GAAgB,CAC9D,MAAMqqE,EAAkBxnE,EAAS,CAAE,EAAE6d,GAAiC,CACpE,cAAe30B,EAAQ,aACvB,gBAAiBA,EAAQ,qBACzB,WAAY4K,EAAO,QAAQ,cAAc,6BAA6B,CAC5E,CAAK,EACK2zE,EAA4B/iF,EAAM,kBAClCgjF,EAAsBvqE,EAAa,OAAOygB,EAA6B,GAAK,KAClF,OAAI6pD,GAA6B,CAACC,GAChCvqE,EAAa,OAAOygB,EAA6B,EAAI4pD,EACrDrqE,EAAa,cAAgB,CAACygB,GAA+B,GAAGzgB,EAAa,aAAa,GACjF,CAACsqE,GAA6BC,GACvC,OAAOvqE,EAAa,OAAOygB,EAA6B,EACxDzgB,EAAa,cAAgBA,EAAa,cAAc,OAAOK,GAASA,IAAUogB,EAA6B,GACtG6pD,GAA6BC,IACtCvqE,EAAa,OAAOygB,EAA6B,EAAI5d,EAAS,CAAA,EAAIwnE,EAAiBrqE,EAAa,OAAOygB,EAA6B,CAAC,GAEhIzgB,CACR,EAAE,CAACrJ,EAAQ5K,EAASxE,EAAM,iBAAiB,CAAC,EAC7CugE,GAA6BnxD,EAAQ,iBAAkByzE,CAAqB,CAC9E,EC7BaI,GAA0B,CAAChwE,EAAOjT,IAAU,SACvD,MAAM8c,EAAY9c,EAAM,aAAa6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,UAApB,YAAA+X,EAA6B,YAAa,GAC/E,OAAOyB,EAAS,CAAE,EAAErI,EAAO,CACzB,QAAS,CACP,UAAW0J,GAAkBG,EAAW9c,EAAM,6BAA6B,EAC3E,WAAY,CAAE,CACf,CACL,CAAG,CACH,EAMakjF,GAAiB,CAAC9zE,EAAQpP,IAAU,SAC/C,MAAMw1B,EAASD,GAAcnmB,EAAQ,gBAAgB,EACrDA,EAAO,QAAQ,qBAAqB,CAClC,QAAS,YACT,UAAWpP,EAAM,UACjB,aAAcA,EAAM,kBACpB,cAAeizB,GACf,YAAa,iBACjB,CAAG,EACD,MAAMkwD,EAAkB/mE,EAAAA,YAAkB,CAACtD,EAAOoE,IAAa,CAC7D,MAAMJ,EAAYmW,GAAsB7jB,CAAM,EACxCg0E,EAActmE,EAAU,UAAUpG,GAAKA,EAAE,QAAUoC,CAAK,EAC9D,IAAIuqE,EAAe,CAAC,GAAGvmE,CAAS,EAChC,OAAIsmE,EAAc,IACZlmE,GAAA,YAAAA,EAAU,OAAQ,KACpBmmE,EAAa,OAAOD,EAAa,CAAC,EAElCC,EAAa,OAAOD,EAAa,EAAGlmE,CAAQ,EAG9CmmE,EAAe,CAAC,GAAGvmE,EAAWI,CAAQ,EAEjCmmE,CACX,EAAK,CAACj0E,CAAM,CAAC,EACLk0E,EAAiBlnE,EAAAA,YAAkB,CAAC1B,EAAK6oE,IAAsB,CAEnE,MAAMC,EADYvwD,GAAsB7jB,CAAM,EACnB,KAAKsH,GAAKA,EAAE,QAAUgE,EAAI,KAAK,EAC1D,GAAI8oE,EAAU,CACZ,MAAMC,EAAWF,IAAsB,OAAYvlE,GAAyBtD,EAAI,cAAgB1a,EAAM,aAAcwjF,EAAS,IAAI,EAAID,EACrI,OAAOE,IAAa,OAAY,OAAYnoE,EAAS,CAAA,EAAIkoE,EAAU,CACjE,KAAMC,CACd,CAAO,CACF,CACD,MAAO,CACL,MAAO/oE,EAAI,MACX,KAAM6oE,IAAsB,OAAYvlE,GAAyBtD,EAAI,cAAgB1a,EAAM,YAAY,EAAIujF,CACjH,CACG,EAAE,CAACn0E,EAAQpP,EAAM,YAAY,CAAC,EACzBwtE,EAAoBpxD,EAAAA,YAAkB,CAAC2rD,EAAiBrsD,IACxDA,GAAU,MAAQA,EAAO,WAAa,IAAS1b,EAAM,qBAChD+nE,GAEYrsD,EAAO,cAAgB1b,EAAM,cACjC,KAAKqH,GAAQ,CAAC,CAACA,CAAI,EAC3B,CAAC,GAAG0gE,EAAiB,oBAAoB,EAE3CA,EACN,CAAC/nE,EAAM,aAAcA,EAAM,oBAAoB,CAAC,EAK7C29E,EAAevhE,EAAAA,YAAkB,IAAM,CAC3ChN,EAAO,QAAQ,SAAS6D,GAAS,CAC/B,GAAIjT,EAAM,cAAgB,SACxB,OAAAw1B,EAAO,MAAM,+CAA+C,EACrDla,EAAS,CAAE,EAAErI,EAAO,CACzB,QAASqI,EAAS,GAAIrI,EAAM,QAAS,CACnC,WAAYua,GAAuB/C,GAAoBrb,CAAM,EAAGoc,GAAoB,EAAK,CACrG,CAAW,CACX,CAAS,EAEH,MAAM1O,EAAYmW,GAAsBhgB,EAAO7D,EAAO,QAAQ,UAAU,EAClEs0E,EAAchmE,GAA8BZ,EAAW1N,CAAM,EAC7DykB,EAAazkB,EAAO,QAAQ,uBAAuB,UAAW,CAClE,YAAAs0E,CACR,CAAO,EACD,OAAOpoE,EAAS,CAAE,EAAErI,EAAO,CACzB,QAASqI,EAAS,GAAIrI,EAAM,QAAS,CACnC,WAAA4gB,CACV,CAAS,CACT,CAAO,CACP,CAAK,EACDzkB,EAAO,QAAQ,aAAa,eAAe,EAC3CA,EAAO,QAAQ,aAChB,EAAE,CAACA,EAAQomB,EAAQx1B,EAAM,WAAW,CAAC,EAChC2jF,EAAevnE,EAAiB,YAAC9a,GAAS,CACzB2xB,GAAsB7jB,CAAM,IAC5B9N,IACnBk0B,EAAO,MAAM,oBAAoB,EACjCpmB,EAAO,QAAQ,SAASyN,GAAwBvb,EAAOtB,EAAM,6BAA6B,CAAC,EAC3FoP,EAAO,QAAQ,cACfA,EAAO,QAAQ,eAElB,EAAE,CAACA,EAAQomB,EAAQx1B,EAAM,6BAA6B,CAAC,EAClD4jF,EAAaxnE,EAAiB,YAAC,CAACtD,EAAOkE,EAAW6mE,IAAyB,CAC/E,MAAM1qE,EAAS/J,EAAO,QAAQ,UAAU0J,CAAK,EACvCoE,EAAWomE,EAAenqE,EAAQ6D,CAAS,EACjD,IAAIF,EACA,CAAC+mE,GAAwB7jF,EAAM,8BACjC8c,GAAYI,GAAA,YAAAA,EAAU,OAAQ,KAAO,CAAE,EAAG,CAACA,CAAQ,EAEnDJ,EAAYqmE,EAAgBhqE,EAAO,MAAO+D,CAAQ,EAEpD9N,EAAO,QAAQ,aAAa0N,CAAS,CACzC,EAAK,CAAC1N,EAAQ+zE,EAAiBG,EAAgBtjF,EAAM,6BAA6B,CAAC,EAC3E8jF,EAAe1nE,EAAAA,YAAkB,IAAM6W,GAAsB7jB,CAAM,EAAG,CAACA,CAAM,CAAC,EAC9E20E,EAAgB3nE,EAAAA,YAAkB,IACnByW,GAA6BzjB,CAAM,EACpC,IAAI2O,GAAOA,EAAI,KAAK,EACrC,CAAC3O,CAAM,CAAC,EACL40E,EAAkB5nE,EAAAA,YAAkB,IAAMuW,GAAyBvjB,CAAM,EAAG,CAACA,CAAM,CAAC,EACpF60E,EAAuB7nE,EAAAA,YAAkBmB,GAASnO,EAAO,QAAQ,gBAAe,EAAGmO,CAAK,EAAG,CAACnO,CAAM,CAAC,EAUzG8lB,GAAiB9lB,EATD,CACd,aAAA00E,EACA,cAAAC,EACA,gBAAAC,EACA,qBAAAC,EACA,aAAAN,EACA,WAAAC,EACA,aAAAjG,CACJ,EACoC,QAAQ,EAK1C,MAAMxW,EAA2B/qD,EAAAA,YAAkB,CAACgrD,EAAWjH,IAAY,SACzE,MAAM+jB,EAAoBjxD,GAAsB7jB,CAAM,EAUtD,MAPA,CAAC+wD,EAAQ,uBAETngE,EAAM,WAAa,QAEnB6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,UAApB,YAAA+X,EAA6B,YAAa,MAE1CqqE,EAAkB,OAAS,EAIpB5oE,EAAS,CAAE,EAAE8rD,EAAW,CAC7B,QAAS,CACP,UAAW8c,CACZ,CACP,CAAK,EANQ9c,CAOb,EAAK,CAACh4D,EAAQpP,EAAM,WAAW6Z,GAAA/X,EAAA9B,EAAM,eAAN,YAAA8B,EAAoB,UAApB,YAAA+X,EAA6B,SAAS,CAAC,EAC9D4tD,EAA4BrrD,EAAAA,YAAkB,CAAC1K,EAAQyuD,IAAY,OACvE,MAAMrjD,GAAYhb,EAAAq+D,EAAQ,eAAe,UAAvB,YAAAr+D,EAAgC,UAClD,OAAIgb,GAAa,KACRpL,GAETtC,EAAO,QAAQ,SAASyN,GAAwBC,EAAW9c,EAAM,6BAA6B,CAAC,EACxFsb,EAAS,CAAE,EAAE5J,EAAQ,CAC1B,UAAW,CAAC,GAAGA,EAAO,UAAWtC,EAAO,QAAQ,YAAY,CAClE,CAAK,EACF,EAAE,CAACA,EAAQpP,EAAM,6BAA6B,CAAC,EAC1CmkF,EAAoB/nE,EAAiB,YAAC1K,GAAU,CACpD,MAAMshB,EAAUvI,GAAoBrb,CAAM,EACpCqd,EAAgBuG,EAAQxH,EAAkB,EAC1C44D,EAAiB1yE,EAAO,YAAcA,EAAO,YAAY+a,EAAc,SAAS,IAAIuxD,GAAWhrD,EAAQgrD,CAAO,CAAC,CAAC,EAAI,CAAC,GAAGvxD,EAAc,QAAQ,EACpJ,OAAIA,EAAc,UAAY,MAC5B23D,EAAe,KAAK33D,EAAc,QAAQ,EAErC23D,CACX,EAAK,CAACh1E,CAAM,CAAC,EACXmxD,GAA6BnxD,EAAQ,cAAe+3D,CAAwB,EAC5E5G,GAA6BnxD,EAAQ,eAAgBq4D,CAAyB,EAC9E9G,GAAiCvxD,EAAQyxD,GAAuB,UAAWsjB,CAAiB,EAK5F,MAAME,EAA0BjoE,EAAAA,YAAkB,CAAC,CACjD,MAAAtD,EACA,OAAA4C,CACD,EAAE3W,IAAU,CACX,GAAI,CAAC2W,EAAO,UAAY1b,EAAM,qBAC5B,OAEF,MAAM6jF,EAAuB9+E,EAAM,UAAYA,EAAM,SAAWA,EAAM,QACtE6+E,EAAW9qE,EAAO,OAAW+qE,CAAoB,CAClD,EAAE,CAACD,EAAY5jF,EAAM,oBAAoB,CAAC,EACrCwyE,EAA4Bp2D,EAAAA,YAAkB,CAAC,CACnD,MAAAtD,EACA,OAAA4C,CACD,EAAE3W,IAAU,CACP,CAAC2W,EAAO,UAAY1b,EAAM,sBAI1B+E,EAAM,MAAQ,SAAW,CAACA,EAAM,SAAW,CAACA,EAAM,SACpD6+E,EAAW9qE,EAAO,OAAW/T,EAAM,QAAQ,CAE9C,EAAE,CAAC6+E,EAAY5jF,EAAM,oBAAoB,CAAC,EACrCsvE,EAAsBlzD,EAAAA,YAAkB,IAAM,CAElD,MAAMU,EAAYmW,GAAsB7jB,CAAM,EACxCk1E,EAAgB5rE,GAAyBtJ,CAAM,EACrD,GAAI0N,EAAU,OAAS,EAAG,CACxB,MAAMmtC,EAAWntC,EAAU,OAAOI,GAAYonE,EAAcpnE,EAAS,KAAK,CAAC,EACvE+sC,EAAS,OAASntC,EAAU,QAC9B1N,EAAO,QAAQ,aAAa66C,CAAQ,CAEvC,CACL,EAAK,CAAC76C,CAAM,CAAC,EACLmgE,EAAgCnzD,EAAiB,YAACuiD,GAAc,CAChEA,IAAe,WACjBvvD,EAAO,QAAQ,cAErB,EAAK,CAACA,CAAM,CAAC,EACXmxD,GAA6BnxD,EAAQ,aAAco+D,CAAiB,EACpE17D,GAAuB1C,EAAQ,oBAAqBi1E,CAAuB,EAC3EvyE,GAAuB1C,EAAQ,sBAAuBojE,CAAyB,EAC/E1gE,GAAuB1C,EAAQ,UAAWA,EAAO,QAAQ,YAAY,EACrE0C,GAAuB1C,EAAQ,gBAAiBkgE,CAAmB,EACnEx9D,GAAuB1C,EAAQ,gCAAiCmgE,CAA6B,EAK7Fx5C,GAAe,IAAM,CACnB3mB,EAAO,QAAQ,cACnB,CAAG,EAKDoN,GAAkB,IAAM,CAClBxc,EAAM,YAAc,QACtBoP,EAAO,QAAQ,aAAapP,EAAM,SAAS,CAE9C,EAAE,CAACoP,EAAQpP,EAAM,SAAS,CAAC,CAC9B,EC7OA,SAASukF,GAAe5jD,EAAY,CAClC,KAAM,CACJ,aAAA6jD,EACA,UAAA16C,EACA,aAAA26C,EACA,UAAAvyC,CACD,EAAGvR,EACE+jD,EAAgBxyC,EAAYuyC,EAGlC,GAAIA,EAAeD,EACjB,OAAOtyC,EAET,GAAIwyC,EAAgBF,EAAe16C,EACjC,OAAO46C,EAAgBF,EAEzB,GAAItyC,EAAYpI,EACd,OAAOoI,CAGX,CAUO,MAAMyyC,GAAgB,CAACv1E,EAAQpP,IAAU,CAC9C,MAAMkE,EAAQokB,KACRkN,EAASD,GAAcnmB,EAAQ,eAAe,EAC9Cw1E,EAASx1E,EAAO,QAAQ,0BACxButD,EAAqBvtD,EAAO,QAAQ,mBACpCilB,EAAoBzhB,EAAgBxD,EAAQukB,EAAoC,EAChFkxD,EAAkBzoE,EAAiB,YAAC1K,GAAU,OAClD,MAAMivB,EAAattB,GAAuBjE,EAAO,QAAQ,KAAK,EACxDwlB,EAAgBzK,GAAqB/a,CAAM,EAC3CiK,EAAiBL,GAAqC5J,CAAM,EAElE,GAAI,EADmBsC,EAAO,UAAY,OACnBkjB,IAAkB,GAAKvb,EAAe,SAAW,EACtE,MAAO,GAETmc,EAAO,MAAM,4BAA4B9jB,EAAO,QAAQ,UAAUA,EAAO,QAAQ,GAAG,EACpF,IAAIozE,EAAoB,CAAA,EACxB,GAAIpzE,EAAO,WAAa,OAAW,CACjC,MAAMi5B,EAAkBvwB,GAA4BhL,CAAM,EAC1D,IAAI21E,EACJ,GAAI,OAAOrzE,EAAO,SAAa,IAAa,CAC1C,MAAM+gB,GAAQ3wB,EAAAuyB,EAAkB3iB,EAAO,QAAQ,IAAjC,YAAA5P,EAAoC,GAC5C+gC,EAAkBzzB,EAAO,QAAQ,4BAA4BqjB,EAAO/gB,EAAO,QAAQ,EACrFmxB,GAAmB,CAACA,EAAgB,mBACtCkiD,EAAYliD,EAAgB,UAAU,MAEzC,CACG,OAAOkiD,EAAc,MACvBA,EAAY1rE,EAAe3H,EAAO,QAAQ,EAAE,eAG9CozE,EAAkB,KAAOP,GAAe,CACtC,aAAc5jD,EAAW,kBAAkB,MAC3C,UAAW,KAAK,IAAIg8B,EAAmB,QAAQ,UAAU,EACzD,aAAcooB,EACd,UAAWp6C,EAAgBj5B,EAAO,QAAQ,CAClD,CAAO,CACF,CACD,GAAIA,EAAO,WAAa,OAAW,CACjC,MAAM+1B,EAAWhC,GAAqBr2B,EAAO,QAAQ,KAAK,EACpDsnB,EAAOW,GAAiBjoB,CAAM,EAC9BqnB,EAAWc,GAAqBnoB,CAAM,EACtC41E,EAAgBhlF,EAAM,WAA+B0R,EAAO,SAAWglB,EAAOD,EAA3C/kB,EAAO,SAC1CuzE,EAAqBx9C,EAAS,UAAUu9C,EAAe,CAAC,EAAIv9C,EAAS,UAAUu9C,EAAe,CAAC,EAAIv9C,EAAS,UAAUu9C,CAAY,EAAIv9C,EAAS,uBAAyBA,EAAS,UAAUu9C,CAAY,EAC7MF,EAAkB,IAAMP,GAAe,CACrC,aAAc5jD,EAAW,kBAAkB,OAC3C,UAAWg8B,EAAmB,QAAQ,UACtC,aAAcsoB,EACd,UAAWx9C,EAAS,UAAUu9C,CAAY,CAClD,CAAO,CACF,CAED,OADAF,EAAoB11E,EAAO,QAAQ,6BAA6B,kBAAmB01E,EAAmBpzE,CAAM,EACxG,OAAOozE,EAAkB,OAAS,QAAa,OAAOA,EAAkB,MAAQ,QAClF11E,EAAO,QAAQ,OAAO01E,CAAiB,EAChC,IAEF,EACX,EAAK,CAACtvD,EAAQpmB,EAAQutD,EAAoB38D,EAAM,WAAYq0B,CAAiB,CAAC,EACtE6wD,EAAS9oE,EAAiB,YAAC1K,GAAU,CACzC,GAAIirD,EAAmB,SAAWjrD,EAAO,OAAS,QAAakzE,EAAO,QAAS,CAC7E,MAAM5nE,EAAY9Y,EAAM,YAAc,MAAQ,GAAK,EACnD0gF,EAAO,QAAQ,WAAalzE,EAAO,KACnCirD,EAAmB,QAAQ,WAAa3/C,EAAYtL,EAAO,KAC3D8jB,EAAO,MAAM,mBAAmB9jB,EAAO,IAAI,EAAE,CAC9C,CACGirD,EAAmB,SAAWjrD,EAAO,MAAQ,SAC/CirD,EAAmB,QAAQ,UAAYjrD,EAAO,IAC9C8jB,EAAO,MAAM,kBAAkB9jB,EAAO,GAAG,EAAE,GAE7C8jB,EAAO,MAAM,6CAA6C,CAC9D,EAAK,CAACmnC,EAAoBz4D,EAAM,UAAW0gF,EAAQpvD,CAAM,CAAC,EAClD2vD,EAAoB/oE,EAAAA,YAAkB,IACrCugD,GAAA,MAAAA,EAAoB,QAMlB,CACL,IAAKA,EAAmB,QAAQ,UAChC,KAAMA,EAAmB,QAAQ,UACvC,EARa,CACL,IAAK,EACL,KAAM,CACd,EAMK,CAACA,CAAkB,CAAC,EAMvBznC,GAAiB9lB,EALC,CAChB,OAAA81E,EACA,gBAAAL,EACA,kBAAAM,CACJ,EACsC,QAAQ,CAC9C,EC/HO,SAASC,GAAch2E,EAAQpP,EAAO,CAC3CgS,GAAwB5C,EAAQ,oBAAqBpP,EAAM,mBAAmB,EAC9EgS,GAAwB5C,EAAQ,0BAA2BpP,EAAM,yBAAyB,EAC1FgS,GAAwB5C,EAAQ,mBAAoBpP,EAAM,kBAAkB,EAC5EgS,GAAwB5C,EAAQ,kBAAmBpP,EAAM,iBAAiB,EAC1EgS,GAAwB5C,EAAQ,oBAAqBpP,EAAM,mBAAmB,EAC9EgS,GAAwB5C,EAAQ,oBAAqBpP,EAAM,mBAAmB,EAC9EgS,GAAwB5C,EAAQ,YAAapP,EAAM,WAAW,EAC9DgS,GAAwB5C,EAAQ,kBAAmBpP,EAAM,iBAAiB,EAC1EgS,GAAwB5C,EAAQ,cAAepP,EAAM,aAAa,EAClEgS,GAAwB5C,EAAQ,uBAAwBpP,EAAM,sBAAsB,EACpFgS,GAAwB5C,EAAQ,sBAAuBpP,EAAM,qBAAqB,EAClFgS,GAAwB5C,EAAQ,WAAYpP,EAAM,UAAU,EAC5DgS,GAAwB5C,EAAQ,YAAapP,EAAM,WAAW,EAC9DgS,GAAwB5C,EAAQ,iBAAkBpP,EAAM,gBAAgB,EACxEgS,GAAwB5C,EAAQ,WAAYpP,EAAM,UAAU,EAC5DgS,GAAwB5C,EAAQ,cAAepP,EAAM,aAAa,CACpE,CCtBO,SAASu8E,GAAS/nE,EAAM6wE,EAAO,IAAK,CACzC,IAAI90E,EACA+0E,EACJ,MAAMC,EAAQ,IAAM,CAClBh1E,EAAU,OACViE,EAAK,GAAG8wE,CAAQ,CACpB,EACE,SAASE,KAAajuE,EAAM,CAC1B+tE,EAAW/tE,EACPhH,IAAY,SACdA,EAAU,WAAWg1E,EAAOF,CAAI,EAEnC,CACD,OAAAG,EAAU,MAAQ,IAAM,CACtB,aAAaj1E,CAAO,EACpBA,EAAU,MACd,EACSi1E,CACT,CCFA,MAAMC,GAAa,CACjB,MAAO,EACP,OAAQ,CACV,EACMC,GAAmB,CACvB,QAAS,GACT,KAAMD,GACN,kBAAmBA,GACnB,kBAAmBA,GACnB,YAAaA,GACb,YAAaA,GACb,WAAY,GACZ,WAAY,GACZ,cAAe,EACf,aAAc,EACd,mBAAoB,EACpB,SAAU,EACV,UAAW,EACX,kBAAmB,EACnB,gBAAiB,EACjB,iBAAkB,EAClB,mBAAoB,EACpB,mBAAoB,EACpB,sBAAuB,CACzB,EACaE,GAA6B1yE,GAEjCqI,EAAS,CAAE,EAAErI,EAAO,CACzB,WAFiByyE,EAGrB,CAAG,EAEI,SAASE,GAAkBx2E,EAAQpP,EAAO,CAC/C,MAAMw1B,EAASD,GAAcnmB,EAAQ,oBAAoB,EACnDy2E,EAAat2E,SAAa,EAAK,EAC/Bu2E,EAAoBv2E,SAAak2E,EAAU,EAC3CM,EAAkBnzE,EAAgBxD,EAAQiE,EAAsB,EAChEo0B,EAAW70B,EAAgBxD,EAAQq2B,EAAoB,EACvD9rB,EAAgB/G,EAAgBxD,EAAQmK,EAA0C,EAClFwpB,EAAgBnwB,EAAgBxD,EAAQ8I,EAAyB,EACjE+hD,EAAY,KAAK,MAAMj6D,EAAM,UAAY+iC,CAAa,EACtDsB,EAAe,KAAK,MAAMrkC,EAAM,mBAAqB+iC,CAAa,EAClEijD,EAAqB,KAAK,OAAOhmF,EAAM,oBAAsBA,EAAM,oBAAsB+iC,CAAa,EACtGa,EAAoBqiD,GAAqB1rE,GAA8BnL,CAAM,EAAG,CAAC,EACjF82E,EAAqBpjD,GAAqB1zB,EAAQpP,CAAK,EACvD2xC,EAAkBh4B,EAAc,KAAK,OAAO,CAACwsE,EAAGzrE,IAAQyrE,EAAIzrE,EAAI,cAAe,CAAC,EAChFk3B,EAAmBj4B,EAAc,MAAM,OAAO,CAACwsE,EAAGzrE,IAAQyrE,EAAIzrE,EAAI,cAAe,CAAC,EAClF,CAAC0rE,EAAWC,CAAY,EAAIh1E,EAAc,SAAA,EAC1Ci1E,EAAwBj3D,EAAAA,QAAc,IAAMktD,GAAS8J,EAAcrmF,EAAM,gBAAgB,EAAG,CAACA,EAAM,gBAAgB,CAAC,EACpHumF,EAAeh3E,EAAAA,SACfi3E,EAAoB,IAAMp3E,EAAO,QAAQ,MAAM,WAC/Cq3E,EAAgB/hD,GAAiB/D,GAAc,CACnDvxB,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,WAAA0tB,CACD,CAAA,CAAC,CACN,CAAG,EACK+lD,EAAStqE,EAAAA,YAAkB,IAAM,CACrC,MAAM6U,EAAU7hB,EAAO,QAAQ,eAAe,QAC9C,GAAI,CAAC6hB,EACH,OAEF,MAAM01D,EAAgBC,GAAY31D,CAAO,EAAE,iBAAiBA,CAAO,EAC7D41D,EAAU,CACd,MAAO,WAAWF,EAAc,KAAK,GAAK,EAC1C,OAAQ,WAAWA,EAAc,MAAM,GAAK,CAClD,GACQ,CAACJ,EAAa,SAAW,CAACO,GAAqBP,EAAa,QAASM,CAAO,KAC9Ez3E,EAAO,QAAQ,aAAa,SAAUy3E,CAAO,EAC7CN,EAAa,QAAUM,EAE7B,EAAK,CAACz3E,CAAM,CAAC,EACL23E,EAAsB3qE,EAAAA,YAAkB,IAAM,CAClD,MAAMukB,EAAattB,GAAuBjE,EAAO,QAAQ,KAAK,EAC9D,GAAI,CAACuxB,EAAW,QACd,MAAO,GAET,MAAMgH,EAAcvC,GAAeh2B,EAAQ,CACzC,WAAYpP,EAAM,WAClB,eAAgBA,EAAM,cAC5B,CAAK,EAID,GAAIA,EAAM,aAAc,CACtB,MAAMqoC,EAAgBxC,GAA0Bz2B,CAAM,EAChDsjE,EAAmBrqC,EAAc,aAAeA,EAAc,cACpE,OAAO,KAAK,IAAIqqC,EAAmB,EAAG/qC,EAAY,KAAK,MAAM,CAC9D,CACD,MAAM2iC,EAAkC,KAAK,MAAM3pC,EAAW,kBAAkB,OAASs5B,CAAS,EAClG,OAAO,KAAK,IAAIqQ,EAAiC3iC,EAAY,KAAK,MAAM,CAC5E,EAAK,CAACv4B,EAAQpP,EAAM,WAAYA,EAAM,eAAgBA,EAAM,aAAci6D,CAAS,CAAC,EAC5E+sB,EAAmB5qE,EAAAA,YAAkB,IAAM,UAC/C,MAAM0+C,EAAc1rD,EAAO,QAAQ,eAAe,QAC5C63E,EAAmBt4D,GAA0Bvf,CAAM,EACnDsiC,EAAgBw1C,GAAqBpsB,EAAal3B,EAAmB5jC,EAAM,aAAa,EACxFmnF,EAAqBjB,EAAqBe,EAAiB,IAC3DG,EAAwBH,EAAiB,OAEzCl7C,EAAc,CAClB,MAFiCnI,EAAoB+N,EAAkBC,EAGvE,OAAQnK,EAAS,sBACvB,EACI,IAAI6J,EACA22B,EACAz2B,EAAa,GACbC,EAAa,GACjB,GAAIzxC,EAAM,WACRyxC,EAAa,GACbD,EAAa,KAAK,MAAM5N,CAAiB,EAAI,KAAK,MAAMkiD,EAAkB,QAAQ,KAAK,EACvFx0C,EAAoB,CAClB,MAAOw0C,EAAkB,QAAQ,MACjC,OAAQqB,EAAqBC,EAAwBr7C,EAAY,MACzE,EACMk8B,EAAoB,CAClB,MAAO,KAAK,IAAI,EAAG32B,EAAkB,OAASG,EAAaC,EAAgB,EAAE,EAC7E,OAAQ,KAAK,IAAI,EAAGJ,EAAkB,QAAUE,EAAaE,EAAgB,EAAE,CACvF,MACW,CACLJ,EAAoB,CAClB,MAAOw0C,EAAkB,QAAQ,MACjC,OAAQA,EAAkB,QAAQ,MAC1C,EACM7d,EAAoB,CAClB,MAAO,KAAK,IAAI,EAAG32B,EAAkB,MAAQK,EAAkBC,CAAgB,EAC/E,OAAQ,KAAK,IAAI,EAAGN,EAAkB,OAAS61C,EAAqBC,CAAqB,CACjG,EACM,MAAMC,GAAUt7C,EACVsL,GAAY4wB,EACZqf,GAA2BD,GAAQ,MAAQhwC,GAAU,MACrDkwC,GAA2BF,GAAQ,OAAShwC,GAAU,QACxDiwC,IAA4BC,MAC9B91C,EAAa81C,GACb/1C,EAAa61C,GAAQ,OAAS51C,EAAaC,EAAgB,GAAK2F,GAAU,MAGtE7F,IACFC,EAAa41C,GAAQ,OAAS31C,EAAgB2F,GAAU,SAGxD5F,IACFw2B,EAAkB,OAASv2B,GAEzBF,IACFy2B,EAAkB,QAAUv2B,EAE/B,CACD,MAAM81C,EAAW,KAAK,IAAIl2C,EAAkB,MAAO1N,GAAqB6N,EAAaC,EAAgB,EAAE,EACjGH,EAAc,CAClB,MAAO3N,EACP,OAAQujD,EAAqBp7C,EAAY,OAASq7C,CACxD,EACUK,EAAgB,CACpB,QAAS,GACT,KAAM3B,EAAkB,QACxB,kBAAAx0C,EACA,kBAAA22B,EACA,YAAAl8B,EACA,YAAAwF,EACA,WAAAC,EACA,WAAAC,EACA,cAAAC,EACA,aAAArN,EACA,mBAAA2hD,EACA,SAAAwB,EACA,UAAAvtB,EACA,kBAAAr2B,EACA,gBAAA+N,EACA,iBAAAC,EACA,mBAAAs0C,EACA,mBAAAiB,EACA,sBAAAC,CACN,EACUM,EAAiBt4E,EAAO,QAAQ,MAAM,WAC5Cq3E,EAAcgB,CAAa,EACtBX,GAAqBW,EAAc,kBAAmBC,EAAe,iBAAiB,GACzFt4E,EAAO,QAAQ,aAAa,0BAA2Bq4E,EAAc,iBAAiB,GAExF5tE,IAAA/X,EAAAsN,EAAO,SAAQ,sBAAf,MAAAyK,GAAA,KAAA/X,EACJ,EAAK,CAACsN,EAAQq3E,EAAezmF,EAAM,cAAeA,EAAM,WAAYynC,EAAS,uBAAwBwyB,EAAW51B,EAAc2hD,EAAoBpiD,EAAmBsiD,EAAoBv0C,EAAiBC,CAAgB,CAAC,EACnN+1C,EAAY,CAChB,OAAAjB,EACA,kBAAAF,CACJ,EACQoB,EAAa,CACjB,iBAAAZ,EACA,oBAAAD,CACJ,EACE7xD,GAAiB9lB,EAAQu4E,EAAW,QAAQ,EAC5CzyD,GAAiB9lB,EAAQw4E,EAAY,SAAS,EAC9CprE,GAAkB,IAAM,CAClB4pE,IACFY,IACA53E,EAAO,QAAQ,aAAa,kBAAmB02E,EAAkB,OAAO,EAE3E,EAAE,CAAC12E,EAAQg3E,EAAWY,CAAgB,CAAC,EACxC,MAAM9xC,EAAO9lC,EAAO,QAAQ,eAAe,QAC3CoN,GAAkB,IAAM,CACtB,GAAI,CAAC04B,EACH,OAEF,MAAM2yC,EAAM,CAAC3kF,EAAGI,IAAM4xC,EAAK,MAAM,YAAYhyC,EAAGI,CAAC,EACjDukF,EAAI,mBAAoB,GAAG9B,EAAgB,kBAAkB,KAAK,IAAI,EACtE8B,EAAI,wBAAyB,GAAG,OAAO9B,EAAgB,UAAU,CAAC,EAAE,EACpE8B,EAAI,wBAAyB,GAAG,OAAO9B,EAAgB,UAAU,CAAC,EAAE,EACpE8B,EAAI,2BAA4B,GAAG9B,EAAgB,aAAa,IAAI,EACpE8B,EAAI,sBAAuB,GAAG9B,EAAgB,QAAQ,IAAI,EAC1D8B,EAAI,+BAAgC,GAAG9B,EAAgB,iBAAiB,IAAI,EAC5E8B,EAAI,6BAA8B,GAAG9B,EAAgB,eAAe,IAAI,EACxE8B,EAAI,8BAA+B,GAAG9B,EAAgB,gBAAgB,IAAI,EAC1E8B,EAAI,0BAA2B,GAAG9B,EAAgB,YAAY,IAAI,EAClE8B,EAAI,gCAAiC,GAAG9B,EAAgB,kBAAkB,IAAI,EAC9E8B,EAAI,gCAAiC,GAAG9B,EAAgB,kBAAkB,IAAI,EAC9E8B,EAAI,mCAAoC,GAAG9B,EAAgB,qBAAqB,IAAI,EACpF8B,EAAI,WAAY,GAAG9B,EAAgB,SAAS,IAAI,CACpD,EAAK,CAAC7wC,EAAM6wC,CAAe,CAAC,EAC1B,MAAM+B,EAAgBv4E,SAAa,EAAI,EACjCw4E,EAAe3rE,EAAiB,YAACkF,GAAQ,CAC7CwkE,EAAkB,QAAUxkE,EAG5B,MAAM0lB,EAAU,QAAQ,KAAK,OAAO,UAAU,SAAS,EASvD,GARI1lB,EAAK,SAAW,GAAK,CAACukE,EAAW,SAAW,CAAC7lF,EAAM,YAAc,CAACgnC,IACpExR,EAAO,MAAM,CAAC,+DAAgE,8DAA+D,0CAA2C,GAAI,4DAA4D,EAAE,KAAK;AAAA,CAAI,CAAC,EACpQqwD,EAAW,QAAU,IAEnBvkE,EAAK,QAAU,GAAK,CAACukE,EAAW,SAAW,CAAC7+C,IAC9CxR,EAAO,MAAM,CAAC,8DAA+D,6DAA8D,yCAA0C,GAAI,4DAA4D,EAAE,KAAK;AAAA,CAAI,CAAC,EACjQqwD,EAAW,QAAU,IAEnBiC,EAAc,QAAS,CAEzBzB,EAAa/kE,CAAI,EACjBwmE,EAAc,QAAU,GACxB,MACD,CACDxB,EAAsBhlE,CAAI,CAC3B,EAAE,CAACthB,EAAM,WAAYsmF,EAAuB9wD,CAAM,CAAC,EACpDhZ,GAAkBwqE,EAAkB,CAACA,CAAgB,CAAC,EACtDh1E,GAAwB5C,EAAQ,gBAAiB43E,CAAgB,EACjEh1E,GAAwB5C,EAAQ,wBAAyB43E,CAAgB,EACzEh1E,GAAwB5C,EAAQ,gBAAiB43E,CAAgB,EACjEl1E,GAAuB1C,EAAQ,SAAU24E,CAAY,EACrD/1E,GAAwB5C,EAAQ,kBAAmBpP,EAAM,QAAQ,CACnE,CACA,SAASknF,GAAqBpsB,EAAal3B,EAAmB8N,EAAe,CAC3E,GAAIA,IAAkB,OACpB,OAAOA,EAET,GAAIopB,IAAgB,MAAQl3B,IAAsB,EAChD,MAAO,GAGT,MAAMokD,EADM/sC,GAAc6f,CAAW,EACf,cAAc,KAAK,EACzCktB,EAAU,MAAM,MAAQ,OACxBA,EAAU,MAAM,OAAS,OACzBA,EAAU,MAAM,SAAW,WAC3BA,EAAU,MAAM,SAAW,SAC3BA,EAAU,UAAY,YACtBltB,EAAY,YAAYktB,CAAS,EACjC,MAAM1mE,EAAO0mE,EAAU,YAAcA,EAAU,YAC/C,OAAAltB,EAAY,YAAYktB,CAAS,EAC1B1mE,CACT,CAIA,SAAS2kE,GAAqB93E,EAAO85E,EAAU,CAC7C,OAAO,KAAK,MAAM95E,EAAQ,IAAM85E,CAAQ,EAAI,IAAMA,CACpD,CACA,SAASnB,GAAqBr/E,EAAG/E,EAAG,CAClC,OAAO+E,EAAE,QAAU/E,EAAE,OAAS+E,EAAE,SAAW/E,EAAE,MAC/C,CClRA,MAAMqY,GAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAxW,EACA,YAAA0jF,EACA,WAAAnmC,EACA,aAAAkV,EACA,eAAAne,EACA,gBAAAC,EACA,QAAA2kC,EACA,eAAAvlC,CACD,EAAGn9B,EAOJ,OAAOC,GANO,CACZ,KAAM,CAAC,eAAgBitE,IAAgB,QAAU,0BAA2BA,IAAgB,UAAY,4BAA6BA,IAAgB,SAAW,2BAA4BnmC,GAAc,uBAAwBhJ,GAAmB,gCAAiCD,GAAkB,+BAAgC,kBAAmB4kC,IAAY,KAAO,2BAA6B,4BAA6BvlC,IAAmB,QAAU,2BAA4BA,IAAmB,SAAW,4BAA6B8e,GAAgB,oBAAoB,EAChkB,mBAAoB,CAAC,gCAAgC,EACrD,eAAgB,CAAC,6BAA8B,iBAAiB,EAChE,sBAAuB,CAAC,mCAAmC,CAC/D,EAC+BjnD,GAAyBxL,CAAO,CAC/D,EACA,SAAS2jF,GAAsBnoF,EAAO,OACpC,KAAM,CACJ,QAAA09E,EACA,MAAA5vE,EACA,MAAAid,EACA,SAAAiY,EACA,OAAAmoC,EACA,OAAAp8B,EACA,SAAAkH,EACA,SAAAt6B,EACA,SAAAsD,EACA,aAAAg4C,EACA,eAAA9e,EACA,MAAA7T,EACA,eAAA8T,EACA,cAAAC,EACA,cAAAE,CACD,EAAGv4C,EACEyb,EAAYhM,IACZoyC,EAAgBtyC,SAAa,IAAI,EACjCH,EAASD,KACTi5E,EAAqBx1E,EAAgBxD,EAAQowB,EAA8B,EAC3EmgC,EAAQ+d,EAAU0K,EAAmB1K,CAAO,EAAI,CAAA,EAChD,CACJ,WAAA2K,EAAa3K,GAAW,GACxB,YAAA9vE,EAAc,GACd,YAAAs6E,EAAc,MACf,EAAGvoB,EACJ,IAAIre,EACJ,MAAMgnC,EAAS5K,KAAW57E,EAAAsmF,EAAmB1K,CAAO,IAA1B,YAAA57E,EAA6B,mBACjDymF,EAAel5D,EAAAA,QAAc,KAAO,CACxC,QAAAquD,EACA,WAAA2K,EACA,YAAAz6E,EACA,MAAAmd,EACA,SAAAiY,EACA,OAAAmoC,EACA,SAAAl1B,EACA,aAAAghB,CACD,GAAG,CAACymB,EAAS2K,EAAYz6E,EAAamd,EAAOiY,EAAUmoC,EAAQl1B,EAAUghB,CAAY,CAAC,EACnFymB,GAAW4K,IACbhnC,EAAkBgnC,EAAOC,CAAY,GAEvC,MAAMzvC,EAAiBL,GAAyBN,EAAgBC,CAAc,EACxEW,EAAkBb,GAA0BC,EAAgBC,EAAgBC,EAAe58B,EAAU,uBAAwB88B,CAAa,EAC1Iv9B,EAAaM,EAAS,CAAE,EAAEtb,EAAO,CACrC,QAASyb,EAAU,QACnB,eAAAq9B,EACA,gBAAAC,EACA,YAAAmvC,EACA,MAAAn9D,EACA,WAAY,EAChB,CAAG,EACKqF,EAAQi4D,GAAc3K,EACtB9uE,EAAKiR,KACL2oE,EAAY9K,IAAY,KAAO,oBAAoB9uE,CAAE,GAAK8uE,EAC1Dl5E,EAAUuW,GAAkBC,CAAU,EAC5C4N,EAAAA,gBAAsB,IAAM,CAC1B,GAAIjN,EAAU,CAEZ,MAAMw/B,EADmB0G,EAAc,QAAQ,cAAc,gBAAgB,GAClCA,EAAc,QACzD1G,GAAA,MAAAA,EAAgB,OACjB,CACL,EAAK,CAAC/rC,EAAQuM,CAAQ,CAAC,EACrB,MAAMk/B,EAAUz+B,EAAAA,YAAkBnL,GAAalM,GAAS,CAGlDywC,GAAsBzwC,CAAK,GAG/BqK,EAAO,QAAQ,aAAa6B,EAAWs3E,EAAcxjF,CAAK,CAC3D,EAGD,CAACqK,EAAQm5E,CAAY,CAAC,EAChB5lC,EAAsBtzB,EAAAA,QAAc,KAAO,CAC/C,UAAWwrB,EAAQ,0BAA0B,EAC7C,QAASA,EAAQ,wBAAwB,EACzC,OAAQA,EAAQ,uBAAuB,CAC3C,GAAM,CAACA,CAAO,CAAC,EACP6G,EAAkB,OAAOie,EAAM,iBAAoB,WAAaA,EAAM,gBAAgB4oB,CAAY,EAAI5oB,EAAM,gBAClH,OAAoBljD,EAAI,IAACwkC,GAA6B3lC,EAAS,CAC7D,IAAKumC,EACL,QAASr9C,EACT,eAAgB,GAChB,SAAUyxC,EACV,OAAQlH,EACR,WAAY,GACZ,cAAe,KACf,SAAU,GACV,SAAU9vB,EACV,YAAa,GACb,gBAAiBqiC,EACjB,gBAAiBI,EACjB,YAAa9zC,EACb,UAAW46E,EACX,MAAO16E,EACP,qBAAsB,KACtB,uBAAwB,KACxB,UAAW,GACX,MAAOsiB,EACP,eAAgB+6C,EAAO,OAGvB,cAAe,KAAKA,EAAO,KAAK,KAAK,CAAC,KACtC,MAAO7mC,CACX,EAAKqe,CAAmB,CAAC,CACzB,CCrHO,MAAM8lC,GAAsBttE,GAAO,MAAO,CAC/C,KAAM,cACN,KAAM,kBACN,kBAAmB,CAAC9I,EAAGgJ,IAAWA,EAAO,eAC3C,CAAC,EAAE,CACD,QAAS,MACX,CAAC,EACYqtE,GAAuB1oF,GAAS,CAC3C,KAAM,CACJ,eAAAqZ,EACA,iBAAAi2B,EACA,mBAAAD,EACA,0BAAAE,EACA,+BAAAE,EACA,kBAAAC,EACA,uBAAAC,EACA,uBAAAC,EACA,gBAAAC,EACA,iBAAAC,EACA,4BAAAC,EACA,6BAAAC,CACD,EAAGhwC,EACE,CAAC2oF,EAASC,CAAU,EAAIv3E,EAAc,SAAC,EAAE,EACzC,CAACw3E,EAAWC,CAAY,EAAIz3E,EAAc,SAAC,EAAE,EAC7CjC,EAAS+1B,KACTjhC,EAAQokB,KACR7M,EAAYhM,IACZkxB,EAAa/tB,EAAgBxD,EAAQiE,EAAsB,EAC3D01E,EAAoBn2E,EAAgBxD,EAAQw2B,EAAuC,EACnFojD,EAAoBp2E,EAAgBxD,EAAQkwB,EAAsC,EAClFqL,EAAkB/3B,EAAgBxD,EAAQgL,EAA2B,EACrEiuB,EAAgBz1B,EAAgBxD,EAAQ02B,EAAgC,EACxEnsB,EAAgB/G,EAAgBxD,EAAQmK,EAA0C,EAClFgS,EAAa3Y,EAAgBxD,EAAQ8b,EAAsB,EAC3DugB,EAAaC,GAAkBf,EAAiBtC,EAAenkC,EAAM,UAAWyV,EAAc,KAAK,MAAM,EACzG4+B,EAAgB5X,EAAW,kBAAoBA,EAAW,kBAAkB,MAClF/uB,EAAAA,UAAgB,IAAM,CACpBxC,EAAO,QAAQ,0BAA0B,QAAQ,WAAa,CAClE,EAAK,CAACA,CAAM,CAAC,EACX,MAAM65E,EAA0B7sE,EAAiB,YAAC1K,GAAUo3E,EAAap3E,EAAO,KAAK,EAAG,CAAA,CAAE,EACpFw3E,EAAyB9sE,EAAAA,YAAkB,IAAM0sE,EAAa,EAAE,EAAG,CAAA,CAAE,EACrEK,EAA2B/sE,EAAiB,YAAC1K,GAAUk3E,EAAWl3E,EAAO,KAAK,EAAG,CAAA,CAAE,EACnF03E,EAA0BhtE,EAAAA,YAAkB,IAAMwsE,EAAW,EAAE,EAAG,CAAA,CAAE,EACpES,EAAoBh6D,EAAAA,QAAc,IAC/B1V,EAAc,KAAK,OAAS,CACjC,iBAAkB,EAClB,gBAAiBA,EAAc,KAAK,MACrC,EAAG,KACH,CAACA,EAAc,KAAK,MAAM,CAAC,EACxB2vE,EAAqBj6D,EAAAA,QAAc,IAChC1V,EAAc,MAAM,OAAS,CAClC,iBAAkBN,EAAe,OAASM,EAAc,MAAM,OAC9D,gBAAiBN,EAAe,MACjC,EAAG,KACH,CAACM,EAAc,MAAM,OAAQN,EAAe,MAAM,CAAC,EACtDvH,GAAuB1C,EAAQ,oBAAqB65E,CAAuB,EAC3En3E,GAAuB1C,EAAQ,mBAAoB85E,CAAsB,EACzEp3E,GAAuB1C,EAAQ,wBAAyB+5E,CAAwB,EAChFr3E,GAAuB1C,EAAQ,sBAAuBg6E,CAAuB,EAG7E,MAAMG,EAAqB73E,GAAU,CACnC,KAAM,CACJ,cAAe83E,EAAiBnhD,EAEhC,cAAA0C,EAAgB1xB,EAAe,MACrC,EAAQ3H,GAAU,CAAA,EACR8wB,EAAuBumD,EAAwBS,EAAe,iBAAnB,EAC3Cv8C,GAAsB87C,EAAoCS,EAAe,gBAA/Bz+C,EAEhD,MAAO,CACL,gBAFsB1xB,EAAe,MAAMmpB,EAAqByK,EAAkB,EAGlF,oBAAAzK,EACA,mBAAAyK,EACN,CACA,EACQw8C,EAAa,CAAC/3E,EAAQrN,EAAUqlF,EAAc1zB,EAAY,KAAU,CACxE,MAAMe,IAAgBrlD,GAAA,YAAAA,EAAQ,YAAa0G,GAAyB,MAC9DuxE,IAAcj4E,GAAA,YAAAA,EAAQ,YAAa,OACnC8lD,GAAqB79C,EAAc,MAAM,OAAS,GAAKo9C,IAAiBp9C,EAAc,MAAM,SAAW,GAAKgwE,GAC5GC,GAAkBn+C,EAAai+C,EACrC,OAAoB//D,EAAAA,KAAMk5B,EAAAA,SAAgB,CACxC,SAAU,CAAC8mC,IAA4BltE,EAAI,IAAC,MAAO,CACjD,KAAM,eACN,MAAO,CACL,MAAOmtE,EACR,CACF,CAAA,EAAGvlF,EAAUslF,IAA4BltE,EAAAA,IAAK,MAAO,CACpD,KAAM,eACN,UAAW8K,GAAKpX,EAAY,OAAQ6lD,GAAa7lD,EAAY,mBAAmB,CAAC,CACzF,CAAO,EAAGqnD,IAAmC/6C,EAAI,IAAC6/C,GAAiB,CAC3D,OAAQ,GACR,UAAWtG,EACX,YAAae,EACrB,CAAO,CAAC,CACR,CAAK,CACL,EACQ8yB,EAAqB,CAAC,CAC1B,eAAA1xC,EACA,YAAA9B,EACA,cAAA7V,CACJ,IAAQ,CACJ,IAAI8D,EACJ,GAAI6T,IAAmB,QAAUA,IAAmB,QAAS,CAC3D,MAAMqB,GAAeoc,GAAoBzd,EAAgB3X,EAAe6V,EAAa1L,EAAiBhK,CAAU,EAC5GwX,IAAmB,SACrB7T,EAAQ,CACN,KAAMkV,EAChB,GAEUrB,IAAmB,UACrB7T,EAAQ,CACN,MAAOkV,EACjB,EAEK,CACD,OAAOlV,CACX,EACQwlD,EAAmB,CAACp4E,EAAQkF,EAAQ,CAAA,IAAO,CAC/C,KAAM,CACJ,gBAAAmzE,EACA,oBAAAvnD,CACN,EAAQ+mD,EAAmB73E,CAAM,EACvBuH,GAAU,CAAA,EAChB,QAAS5P,GAAI,EAAGA,GAAI0gF,EAAgB,OAAQ1gF,IAAK,EAAG,CAClD,MAAMqS,GAASquE,EAAgB1gF,EAAC,EAC1BgtC,GAAc7T,EAAsBn5B,GACpC2gF,GAAgB3zC,KAAgB,EAChCp3B,GAAWswB,IAA8B,MAAQA,EAA0B,QAAU7zB,GAAO,OAASsuE,IAAiB,CAACh6C,EAA+B,EAAI,GAC1Jr0B,GAAW+zB,IAAsB,MAAQA,EAAkB,QAAUh0B,GAAO,MAC5EmL,GAAOgpB,EAAgB,MAAQA,EAAgB,QAAUn0B,GAAO,MAChEy8B,GAAiBzmC,GAAA,YAAAA,EAAQ,SACzB4yB,GAAQulD,EAAmB,CAC/B,eAAA1xC,GACA,YAAA9B,GACA,cAAe36B,GAAO,aAC9B,CAAO,EACDzC,GAAQ,KAAmBwD,EAAI,IAAC2lC,GAAsB9mC,EAAS,CAAA,EAAIg0B,EAAiB5zB,GAAO,KAAK,EAAG,CACjG,eAAgBmL,GAChB,mBAAoBwoB,EAAmB3zB,GAAO,KAAK,GAAK2zB,EAAmB3zB,GAAO,KAAK,EAAE,OACzF,aAAcilB,EAAW,aACzB,WAAYjlB,GAAO,QAAUitE,EAC7B,OAAQjtE,GACR,SAAU26B,GACV,WAAYwyC,IAAcntE,GAAO,MACjC,OAAQ26B,KAAgB1L,EAAgB,OAAS,EACjD,SAAUhvB,GACV,SAAUsD,GACV,eAAgBk5B,GAChB,MAAO7T,GACP,eAAgBj7B,GAChB,cAAe0gF,EAAgB,OAC/B,cAAexxC,CAChB,EAAE3hC,CAAK,EAAG8E,GAAO,KAAK,CAAC,CACzB,CACD,OAAO+tE,EAAW/3E,EAAQuH,GAAS,CAAC,CACxC,EACQgxE,EAAsB,IACNtgE,EAAAA,KAAM8+D,GAAqB,CAC7C,KAAM,MACN,gBAAiB74C,EAAyB,EAC1C,WAAYn0B,EACZ,UAAW8P,EAAW,IAAI,SAAW,EAAIpb,EAAY,mBAAmB,EAAI,OAC5E,SAAU,CAACk5E,GAAqBS,EAAiB,CAC/C,SAAU1xE,GAAyB,KACnC,cAAeixE,EACf,eAAgBA,EAAkB,iBAClC,cAAeA,EAAkB,eACzC,EAAS,CACD,eAAgB,EACjB,CAAA,EAAGS,EAAiB,CACnB,cAAAzhD,EACA,eAAgB1uB,EAAc,KAAK,OACnC,cAAeN,EAAe,OAASM,EAAc,MAAM,MACnE,CAAO,EAAG2vE,GAAsBQ,EAAiB,CACzC,SAAU1xE,GAAyB,MACnC,cAAekxE,EACf,eAAgBA,EAAmB,iBACnC,cAAeA,EAAmB,eAC1C,EAAS,CACD,eAAgB,GAChB,cAAe5oC,GAA+B,IACtD,CAAO,CAAC,CACR,CAAK,EAEGwpC,EAAwB,CAAC,CAC7B,MAAAn/D,EACA,OAAArZ,CACJ,IAAQ,WACJ,MAAMy4E,EAAkBZ,EAAmB73E,CAAM,EACjD,GAAIy4E,EAAgB,gBAAgB,SAAW,EAC7C,OAAO,KAET,KAAM,CACJ,gBAAAJ,EACA,oBAAAvnD,GACA,mBAAAyK,EACD,EAAGk9C,EACEC,GAAer6C,EAA4BhlB,CAAK,EAChDs/D,GAA2BhxE,EAAempB,EAAmB,EAAE,MAC/D8nD,KAAqBxoF,GAAAknF,EAAkBqB,EAAwB,IAA1C,YAAAvoF,GAA8CipB,KAAU,KAC7Ew/D,GAAkBH,GAAa,UAAU,CAAC,CAC9C,QAAA1M,GACA,aAAA74D,EACN,IAAU64D,KAAY4M,IAAsBzlE,GAAa,SAASwlE,EAAwB,CAAC,EACjFG,GAA0BnxE,EAAe4zB,GAAqB,CAAC,EAAE,MACjEw9C,KAAoB5wE,GAAAmvE,EAAkBwB,EAAuB,IAAzC,YAAA3wE,GAA6CkR,KAAU,KAC3E2/D,GAAiBN,GAAa,UAAU,CAAC,CAC7C,QAAA1M,GACA,aAAA74D,EACN,IAAU64D,KAAY+M,IAAqB5lE,GAAa,SAAS2lE,EAAuB,CAAC,EAC/EG,GAA2BP,GAAa,MAAMG,GAAiBG,GAAiB,CAAC,EAAE,IAAIE,IACpFtvE,EAAS,CAAE,EAAEsvE,GAAgB,CAClC,aAAcA,GAAe,aAAa,OAAO9xE,IAASg3B,EAAiBh3B,EAAK,IAAM,EAAK,CACnG,CAAO,CACF,EAAE,OAAO8xE,IAAkBA,GAAe,aAAa,OAAS,CAAC,EAC5DC,GAA0BF,GAAyB,CAAC,EAAE,aAAa,QAAQN,EAAwB,EAEnGX,GADqBiB,GAAyB,CAAC,EAAE,aAAa,MAAM,EAAGE,EAAuB,EAC5D,OAAO,CAACjwE,GAAK9B,KAAU,CAC7D,MAAMK,GAAS/J,EAAO,QAAQ,UAAU0J,EAAK,EAC7C,OAAO8B,IAAOzB,GAAO,eAAiB,EACvC,EAAE,CAAC,EACJ,IAAIk9B,GAAc7T,GAClB,MAAMn+B,GAAWsmF,GAAyB,IAAI,CAAC,CAC7C,QAAAjN,GACA,aAAA74D,EACD,EAAEtH,KAAU,CACX,MAAM5B,GAAWg0B,IAA2B,MAAQA,EAAuB,QAAU5kB,GAASlG,GAAa,SAAS8qB,EAAuB,KAAK,EAC1I1wB,GAAWwwB,IAAmC,MAAQA,EAA+B,QAAU1kB,GAASlG,GAAa,SAAS4qB,EAA+B,KAAK,EAAI,EAAI,GAC1Kq7C,GAAa,CACjB,QAAApN,GACA,MAAO74D,GAAa,OAAO,CAACjK,GAAK9B,KAAU8B,GAAMxL,EAAO,QAAQ,UAAU0J,EAAK,EAAE,cAAe,CAAC,EACjG,OAAQ+L,GACR,SAAUwxB,GACV,SAAA16B,GACA,SAAAsD,EACR,EACYk5B,GAAiBzmC,EAAO,SACxB4yB,GAAQulD,EAAmB,CAC/B,eAAA1xC,GACA,YAAA9B,GACA,cAAey0C,GAAW,KAClC,CAAO,EACDz0C,IAAexxB,GAAa,OAC5B,IAAIuzB,GAAiB76B,GACrB,OAAI46B,KAAmB,SAErBC,GAAiB/B,GAAc,GAEb55B,EAAAA,IAAK0rE,GAAuB,CAC9C,QAASzK,GACT,MAAOoN,GAAW,MAClB,OAAQA,GAAW,OACnB,SAAUA,GAAW,SACrB,MAAO//D,EACP,aAAc+/D,GAAW,WAAazxE,EAAe,OAASyxE,GAAW,OAAO,OAChF,SAAUl7C,EACV,OAAQjP,EAAW,aACnB,SAAUhlB,GACV,SAAUsD,GACV,eAAgBk5B,GAChB,MAAO7T,GACP,eAAgB8T,GAChB,cAAe2xC,EAAgB,OAC/B,cAAexxC,CAChB,EAAEh7B,EAAK,CACd,CAAK,EACD,OAAOksE,EAAW/3E,EAAQrN,GAAUqlF,EAAY,CACpD,EAqCE,MAAO,CACL,cAAArhD,EACA,kBAAAghD,EACA,mBAAAC,EACA,cAAA3vE,EACA,eAAAN,EACA,mBAAAwwE,EACA,WAAAJ,EACA,oBAAAQ,EACA,mBAAAV,EACA,0BA9CgC,IAAM,CACtC,GAAI35C,IAA2B,EAC7B,OAAO,KAET,MAAMm0B,EAAa,CAAA,EACnB,QAASh5C,EAAQ,EAAGA,EAAQ6kB,EAAwB7kB,GAAS,EAC3Dg5C,EAAW,KAAmBp6C,EAAK,KAAC8+D,GAAqB,CACvD,KAAM,MACN,gBAAiB19D,EAAQ,EACzB,WAAYtP,EACZ,SAAU,CAAC4tE,GAAqBa,EAAsB,CACpD,MAAAn/D,EACA,OAAQ,CACN,SAAU3S,GAAyB,KACnC,cAAeixE,EACf,eAAgBA,EAAkB,iBAClC,cAAeA,EAAkB,eAClC,CACF,CAAA,EAAGa,EAAsB,CACxB,MAAAn/D,EACA,OAAQ,CACN,cAAAsd,CACD,CACX,CAAS,EAAGihD,GAAsBY,EAAsB,CAC9C,MAAAn/D,EACA,OAAQ,CACN,SAAU3S,GAAyB,MACnC,cAAekxE,EACf,eAAgBA,EAAmB,iBACnC,cAAeA,EAAmB,eACnC,CACX,CAAS,CAAC,CACV,EAASv+D,CAAK,CAAC,EAEX,OAAOg5C,CACX,EAYI,WAAY,CAAC,CAAC4kB,EACd,cAAe,KAAO,CACpB,KAAM,UACZ,EACA,CACA,ECpVM7tE,GAAY,CAAC,WAAW,EAQxBC,GAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAxW,CACD,EAAGwW,EAIJ,OAAOC,GAHO,CACZ,KAAM,CAAC,eAAe,CAC1B,EAC+BjL,GAAyBxL,CAAO,CAC/D,EACMumF,GAAwB5vE,GAAO,MAAO,CAC1C,KAAM,cACN,KAAM,gBACN,kBAAmB,CAACnb,EAAOqb,IAAWA,EAAO,aAC/C,CAAC,EAAE,CACD,QAAS,OACT,cAAe,SACf,oBAAqB,kCACrB,qBAAsB,iCACxB,CAAC,EACY2vE,GAAqCxvE,EAAAA,WAAiB,SAA2Bxb,EAAO6F,EAAK,CACxG,KAAM,CACF,UAAAohB,CACN,EAAQjnB,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZjL,EAAUuW,GAAkBU,CAAS,EAC3C,OAAoBgB,EAAI,IAACsuE,GAAuBzvE,EAAS,CACvD,IAAKzV,EACL,UAAW0hB,GAAKN,EAAWziB,EAAQ,IAAI,EACvC,WAAYiX,CACb,EAAE7E,EAAO,CACR,KAAM,cACP,CAAA,CAAC,CACJ,CAAC,ECzCKkE,GAAY,CAAC,YAAa,iBAAkB,mBAAoB,qBAAsB,4BAA6B,iCAAkC,oBAAqB,yBAA0B,yBAA0B,kBAAmB,mBAAoB,8BAA+B,8BAA8B,EAOlUmwE,GAAuCzvE,EAAAA,WAAW,SAA2Bxb,EAAO6F,EAAK,CACvF,KAAA,CACF,eAAAwT,EACA,iBAAAi2B,EACA,mBAAAD,EACA,0BAAAE,EACA,+BAAAE,EACA,kBAAAC,EACA,uBAAAC,EACA,uBAAAC,EACA,gBAAAC,EACA,iBAAAC,EACA,4BAAAC,EACA,6BAAAC,CACE,EAAAhwC,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClD,CACJ,cAAAowE,EACA,oBAAAjB,EACA,0BAAAkB,GACEzC,GAAqB,CACvB,eAAArvE,EACA,iBAAAi2B,EACA,mBAAAD,EACA,0BAAAE,EACA,+BAAAE,EACA,kBAAAC,EACA,uBAAAC,EACA,uBAAAC,EACA,gBAAAC,EACA,iBAAAC,EACA,4BAAAC,EACA,6BAAAC,CAAA,CACD,EACmB,OAAArmB,EAAA,KAAMqhE,GAAuB1vE,EAAS,CACxD,IAAAzV,CAAA,EACC+Q,EAAOs0E,IAAiB,CACzB,SAAU,CAACC,IAA6BlB,GAAqB,CAC9D,CAAA,CAAC,CACJ,CAAC,EAmCKmB,GAA4BhoD,GAAS6nD,EAAiB,EClFrD,SAASI,GAAiBh5E,EAAG,CAClC,OAAO,IACT,CCFO,SAASi5E,GAAej5E,EAAG,CAChC,OAAO,IACT,CCEO,MAAMk5E,GAAoC/vE,EAAAA,WAAiB,SAA8Bxb,EAAO6F,EAAK,CAE1G,MAAM2lF,EADSr8E,KACsB,QAAQ,cAAc,uBAAuB,EAClF,OAAoBsN,EAAI,IAAC8iC,GAAajkC,EAAS,CAC7C,IAAKzV,CACN,EAAE7F,EAAO,CACR,SAAUwrF,CACX,CAAA,CAAC,CACJ,CAAC,ECXK1wE,GAAY,CAAC,cAAc,EAIpB2wE,GAAsCl8D,EAAU,KAAC,SAAkCvvB,EAAO,CACrG,KAAM,CACF,aAAAie,CACN,EAAQje,EACJ4W,EAAQmF,GAA8B/b,EAAO8a,EAAS,EAClDW,EAAYhM,IACZ,CAACi8E,CAAiB,EAAIztE,EACtBmR,EAAOs8D,IAAsB,MAAQjwE,EAAU,MAAM,0BAA4BA,EAAU,MAAM,2BACvG,OAAO2T,EAAoB3S,EAAI,IAAC2S,EAAM9T,EAAS,CAAA,EAAI1E,CAAK,CAAC,EAAI,IAC/D,CAAC,ECbKkE,GAAY,CAAC,QAAQ,EAIZ,SAAS6wE,GAAgB/uD,EAAM,CAC5C,GAAI,CACA,OAAAgvD,CACN,EAAQhvD,EACJ58B,EAAQ+b,GAA8B6gB,EAAM9hB,EAAS,EACvD,OAAI8wE,EACkBnvE,EAAAA,IAAK,SAAUnB,EAAS,CAAA,EAAItb,CAAK,CAAC,EAEpCyc,EAAAA,IAAKovE,GAAavwE,EAAS,CAAA,EAAItb,CAAK,CAAC,CAC3D,CCAA,MAAM8rF,GAAY,CAChB,oBAAqB1mC,GACrB,qBAAsBN,GACtB,eAAgBD,GAChB,qBAAsBV,GACtB,sBAAuBW,GACvB,mBAAoBV,GACpB,mBAAoBI,GACpB,mBAAoBinC,GACpB,0BAA2B3nC,GAC3B,2BAA4BE,GAC5B,iBAAkBS,GAClB,mBAAoBC,GACpB,oBAAqBC,GACrB,uBAAwBC,GACxB,WAAYO,GACZ,gBAAiBE,GACjB,qBAAsBnB,GACtB,mBAAoBD,GACpB,6BAA8BC,GAC9B,2BAA4BD,GAC5B,sBAAuBc,GACvB,wBAAyBC,GACzB,eAAgBE,GAChB,gBAAiBb,GACjB,qBAAsBS,GACtB,mBAAoBQ,GACpB,4BAA6BxB,GAC7B,6BAA8BE,GAC9B,qBAAsBI,GACtB,4BAA6BmB,GAC7B,oBAAqBC,GACrB,SAAUP,GACV,mBAAoBF,GACpB,yBAA0BW,GAC1B,kBAAmBR,EACrB,EACM6mC,GAAgBzwE,EAAS,CAAE,EAAEwwE,GAAW,CAC5C,aAAcE,GACd,cAAeC,GACf,gBAAiBC,GACjB,WAAYC,GACZ,WAAYC,GACZ,eAAgBC,GAChB,mBAAoBC,GACpB,YAAaC,GACb,WAAYC,GACZ,eAAgBC,GAChB,iBAAkBd,GAClB,SAAUe,EACZ,CAAC,ECrDYC,GAAqCrxE,EAAS,CAAE,EAAEywE,GAAe,CAC5E,KAAM5yC,GACN,aAAcuD,GACd,6BAA8B8G,GAC9B,qBAAsBD,GACtB,WAAY6E,GACZ,cAAe6iC,GACf,aAAcI,GACd,OAAQl2B,GACR,eAAgBsE,GAChB,QAAS,KACT,WAAY6xB,GACZ,eAAgBtzB,GAChB,iBAAkBuzB,GAClB,cAAenzB,GACf,WAAYS,GACZ,YAAalJ,GACb,aAAc7E,GACd,kBAAmBhC,GACnB,MAAOoC,GACP,IAAK4O,EACP,CAAC,EChCM,SAAS8yB,GAAa,CAC3B,aAAA7mC,EACA,MAAAtiB,CACF,EAAG,CACD,MAAMopD,EAAYppD,EAClB,GAAI,CAACopD,GAAa,OAAO,KAAKA,CAAS,EAAE,SAAW,EAClD,OAAO9mC,EAET,MAAMtiD,EAAS6X,EAAS,CAAE,EAAEyqC,CAAY,EACxC,cAAO,KAAK8mC,CAAS,EAAE,QAAQrmF,GAAO,CACpC,MAAMtD,EAAIsD,EACNqmF,EAAU3pF,CAAC,IAAM,SACnBO,EAAOP,CAAC,EAAI2pF,EAAU3pF,CAAC,EAE7B,CAAG,EACMO,CACT,CCdA,SAASqpF,GAAoB9sF,EAAO,CAClC,MAAM8gB,EAAO,OAAO,KAAK9gB,CAAK,EAC9B,GAAI,CAAC8gB,EAAK,KAAKta,GAAOA,EAAI,WAAW,OAAO,GAAKA,EAAI,WAAW,OAAO,CAAC,EACtE,OAAOxG,EAET,MAAM82E,EAAW,CAAA,EACXiW,EAAiB/sF,EAAM,gBAAkB,GAC/C,QAASqJ,EAAI,EAAGA,EAAIyX,EAAK,OAAQzX,GAAK,EAAG,CACvC,MAAM7C,EAAMsa,EAAKzX,CAAC,EACd7C,EAAI,WAAW,OAAO,GAAKA,EAAI,WAAW,OAAO,EACnDumF,EAAevmF,CAAG,EAAIxG,EAAMwG,CAAG,EAE/BswE,EAAStwE,CAAG,EAAIxG,EAAMwG,CAAG,CAE5B,CACD,OAAAswE,EAAS,eAAiBiW,EACnBjW,CACT,CACO,SAASkW,GAASC,EAAU,CACjC,OAAO59D,EAAAA,QAAc,IAAMy9D,GAAoBG,CAAQ,EAAG,CAACA,CAAQ,CAAC,CACtE,CChBA,MAAMC,GAAyB,CAC7B,gCAAiC,GACjC,8BAA+B,GAC/B,eAAgB,OAChB,mBAAoB,GACpB,WAAY,GACZ,6BAA8B,GAC9B,qBAAsB,GACtB,mCAAoC,GACpC,UAAW,UACb,EAKaC,GAAiC,CAC5C,WAAY,GACZ,aAAc,GACd,gBAAiB,GACjB,kBAAmB,GACnB,6BAA8B,GAC9B,2BAA4B,IAC5B,eAAgB,IAChB,mBAAoB,GACpB,gBAAiB,GACjB,oBAAqB,GACrB,kBAAmB,GACnB,qBAAsB,GACtB,oBAAqB,GACrB,sBAAuB,GACvB,qBAAsB,GACtB,uBAAwB,GACxB,YAAa,GACb,gCAAiC,GACjC,8BAA+B,GAC/B,4BAA6B,GAC7B,2BAA4B,GAC5B,sBAAuB,GACvB,SAAUtrE,GAAc,KACxB,iBAAkB,IAClB,WAAY,SACZ,WAAY,GACZ,qBAAsB,GACtB,mBAAoB,GACpB,2BAA4B,GAC5B,iBAAkB,GAClB,iCAAkC,GAClC,mCAAoC,GACpC,4BAA6B,GAC7B,QAAS,GACT,OAAQ,QACR,SAAkD,QAClD,gBAAiB,CAAC,GAAI,GAAI,GAAG,EAC7B,WAAY,GACZ,eAAgB,SAChB,iBAAkB,GAClB,YAAa,IACb,UAAW,GACX,uBAAwB,IACxB,KAAM,CAAC,EACP,aAAc,GACd,eAAgB,SAChB,uBAAwB,GACxB,yBAA0B,GAC1B,YAAa,SACb,aAAc,CAAC,MAAO,OAAQ,IAAI,EAClC,eAAgB,CAClB,EACMkkC,GAAe4mC,GACRS,GAA8BC,GAAA,CACzC,MAAMC,EAAcN,GAEpBO,GAAc,CACZ,MAAOF,EACP,KAAM,aAAA,CACP,CAAA,EACKG,EAAan+D,EAAAA,QAAc,IAAM/T,EAAS,CAAA,EAAI1L,GAA0B09E,EAAY,UAAU,EAAG,CAACA,EAAY,UAAU,CAAC,EACzH7pD,EAAQpU,UAAc,IAAMu9D,GAAa,CAC7C,aAAA7mC,GACA,MAAOunC,EAAY,KACpB,CAAA,EAAG,CAACA,EAAY,KAAK,CAAC,EACjBG,EAAqBp+D,EAAAA,QAAc,IAChC,OAAO,KAAK89D,EAA8B,EAAE,OAAO,CAACvyE,EAAKpU,KAE9DoU,EAAIpU,CAAG,EAAI8mF,EAAY9mF,CAAG,GAAK2mF,GAA+B3mF,CAAG,EAC1DoU,GACN,CAAE,CAAA,EACJ,CAAC0yE,CAAW,CAAC,EAChB,OAAOj+D,EAAc,QAAA,IAAM/T,EAAS,CAAA,EAAIgyE,EAAaG,EAAoB,CACvE,WAAAD,EACA,MAAA/pD,CAAA,EACCypD,EAAsB,EAAG,CAACI,EAAaE,EAAY/pD,EAAOgqD,CAAkB,CAAC,CAClF,ECnFaC,GAA2Bz6E,GAASqI,EAAS,CAAA,EAAIrI,EAAO,CACnE,SAAU,CACR,uBAAwB,EACxB,UAAW,CAAC,CACd,CACF,CAAC,EAEK06E,GAAoB,CAACC,EAAeC,EAAkBC,IACtD,OAAOF,GAAkB,UAAYA,EAAgB,EAChDA,EAMFC,EASIE,GAAkB,CAAC3+E,EAAQpP,IAAU,CAC1C,KAAA,CACJ,aAAcguF,EACd,cAAAC,EACA,sBAAAC,CACE,EAAAluF,EACEmuF,EAAmB5+E,EAAAA,OAAoB,OAAA,OAAO,IAAI,CAAC,EAGnD6+E,EAAuB7+E,EAAAA,OAAa,EAAE,EACtCi9B,EAAuBj9B,SAAa,EAAK,EACzCwzB,EAAgBnwB,EAAgBxD,EAAQ8I,EAAyB,EACjEgL,EAActQ,EAAgBxD,EAAQikB,EAAuB,EAC7Du2C,EAAkBh3D,EAAgBxD,EAAQ4nB,EAAsB,EAChEla,EAAYlK,EAAgBxD,EAAQ6jB,EAAqB,EACzD0U,EAActC,GAAmBj2B,EAAQpP,CAAK,EAC9CurB,EAAa3Y,EAAgBxD,EAAQ8b,EAAsB,EAC3DmjE,EAAiBV,GAAkB3tF,EAAM,UAAWmtF,GAA+B,SAA2B,EAC9GlzB,EAAY,KAAK,MAAMo0B,EAAiBtrD,CAAa,EACrDurD,EAAkBlyE,EAAAA,YAAkB,IAAM,SAC9CowB,EAAqB,QAAU,GAC/B,MAAM+hD,EAAoCxwE,GAAA,CACnCowE,EAAiB,QAAQpwE,EAAI,EAAE,IACjBowE,EAAA,QAAQpwE,EAAI,EAAE,EAAI,CACjC,MAAO,CACL,WAAYk8C,CACd,EACA,UAAW,GACX,WAAY,GACZ,sBAAuB,EAAA,GAGrB,KAAA,CACJ,UAAAu0B,EACA,sBAAAC,EACA,MAAAtzB,CACE,EAAAgzB,EAAiB,QAAQpwE,EAAI,EAAE,EACnC,IAAIitB,EAAgB,OAAOivB,GAAc,UAAYA,EAAY,EAAIA,EAAY,GACjF,MAAMy0B,EAAwBvzB,EAAM,WACpC,GAAIqzB,EAEcxjD,EAAA0jD,UACPV,EAAkB,CAC3B,MAAMW,EAAoBX,EAAiB1yE,EAAS,CAAA,EAAIyC,EAAK,CAC3D,cAAAglB,CACD,CAAA,CAAC,EACE4rD,IAAsB,QACpBF,EAMFzjD,GAL2BkjD,EAAwBA,EAAsB5yE,EAAS,CAAA,EAAIyC,EAAK,CACzF,cAAAglB,CAAA,CACD,CAAC,EAAIk3B,IAGgCA,EAEtBjvB,EAAA0jD,EAElBliD,EAAqB,QAAU,GAC/B2hD,EAAiB,QAAQpwE,EAAI,EAAE,EAAE,WAAa,KAG9BitB,EAAA2iD,GAAkBgB,EAAmB10B,CAA8B,EACnFk0B,EAAiB,QAAQpwE,EAAI,EAAE,EAAE,sBAAwB,GACzDowE,EAAiB,QAAQpwE,EAAI,EAAE,EAAE,WAAa,GAChD,MAEAowE,EAAiB,QAAQpwE,EAAI,EAAE,EAAE,sBAAwB,GAE3D,MAAM6wE,EAAiB,CACrB,WAAY5jD,CAAA,EAEd,GAAIijD,EAAe,CACjB,MAAMxyB,EAA6BrsD,EAAO,QAAQ,iCAAiC2O,EAAI,EAAE,EACnF8wE,EAAUZ,EAAc3yE,EAAS,CAAA,EAAIyC,EAAK,CAC9C,eAAgB09C,IAA+B,EAC/C,cAAeA,IAA+B9zB,EAAY,KAAK,OAAS,EACxE,2BAAA8zB,CACD,CAAA,CAAC,EACamzB,EAAA,WAAaC,EAAQ,KAAO,EAC5BD,EAAA,cAAgBC,EAAQ,QAAU,CACnD,CACA,MAAMC,EAAiB1/E,EAAO,QAAQ,6BAA6B,YAAaw/E,EAAgB7wE,CAAG,EACnG,OAAAowE,EAAiB,QAAQpwE,EAAI,EAAE,EAAE,MAAQ+wE,EAClCA,CAAA,EAEHz0E,EAAY,CAAA,EACZ00E,EAAyBpnD,EAAY,KAAK,OAAO,CAAC/sB,EAAKmD,IAAQ,CACnE1D,EAAU,KAAKO,CAAG,EAClB,IAAIo0E,EAAa,EACX,MAAAF,EAAiBP,EAA2BxwE,CAAG,EAErD,UAAWvX,KAAOsoF,EAAgB,CAC1B,MAAA3gF,EAAQ2gF,EAAetoF,CAAG,EAC5BA,IAAQ,eACIwoF,GAAA7gF,EAElB,CACO,OAAAyM,EAAMk0E,EAAe,WAAaE,GACxC,CAAC,GACQltF,EAAAypB,GAAA,YAAAA,EAAA,MAAA,MAAAzpB,EAAK,QAAeic,GAAA,CAC9BwwE,EAA2BxwE,CAAG,CAAA,IAEpBlE,EAAA0R,GAAA,YAAAA,EAAA,SAAA,MAAA1R,EAAQ,QAAekE,GAAA,CACjCwwE,EAA2BxwE,CAAG,CAAA,GAEzB3O,EAAA,QAAQ,SAAkB6D,GACxBqI,EAAS,CAAC,EAAGrI,EAAO,CACzB,SAAU,CACR,uBAAA87E,EACA,UAAA10E,CACF,CAAA,CACD,CACF,EACImyB,EAAqB,UAExB4hD,EAAqB,QAAU,KAEjCh/E,EAAO,QAAQ,aACjB,EAAG,CAACA,EAAQu4B,EAAY,KAAMsyB,EAAW+zB,EAAkBC,EAAeC,EAAuB3iE,EAAYwX,CAAa,CAAC,EACrHksD,EAAe7yE,cAA2BqW,GAAA,CACxC,MAAAsc,EAASo/C,EAAiB,QAAQ17D,CAAK,EACtC,OAAAsc,EAASA,EAAO,MAAM,WAAakrB,CAAA,EACzC,CAACA,CAAS,CAAC,EACRi1B,EAAsBz8D,GAAS,OAAA,OAAA3wB,EAAAqsF,EAAiB,QAAQ17D,CAAK,IAA9B,YAAA3wB,EAAiC,OAChEqtF,EAAe/yE,EAAAA,YAAkB,CAACxN,EAAImgC,IAAW,CACrDo/C,EAAiB,QAAQv/E,CAAE,EAAE,MAAM,WAAamgC,EAC/Bo/C,EAAA,QAAQv/E,CAAE,EAAE,UAAY,GACxBu/E,EAAA,QAAQv/E,CAAE,EAAE,sBAAwB,GACrC0/E,GAAA,EACf,CAACA,CAAe,CAAC,EACdc,EAA2B//D,EAAAA,QAAc,IAAMolC,GAAS65B,EAAiBtuF,EAAM,sBAAsB,EAAG,CAACsuF,EAAiBtuF,EAAM,sBAAsB,CAAC,EACvJqvF,EAAyBjzE,EAAAA,YAAkB,CAACxN,EAAImgC,IAAW,CAC3D,GAAA,CAACo/C,EAAiB,QAAQv/E,CAAE,GAAK,CAACu/E,EAAiB,QAAQv/E,CAAE,EAAE,WACjE,OAIF,MAAM0gF,EAAiBnB,EAAiB,QAAQv/E,CAAE,EAAE,MAAM,aAAemgC,EACxDo/C,EAAA,QAAQv/E,CAAE,EAAE,sBAAwB,GACrDu/E,EAAiB,QAAQv/E,CAAE,EAAE,MAAM,WAAamgC,EAC5CugD,GACuBF,GAC3B,EACC,CAACA,CAAwB,CAAC,EACvBG,EAAmBnzE,cAAwBxN,GAAA,OAC/C,QAAO9M,EAAAqsF,EAAiB,QAAQv/E,CAAE,IAA3B,YAAA9M,EAA8B,aAAc,EACrD,EAAG,CAAE,CAAA,EACC0tF,EAA0BpzE,EAAAA,YAAkB,IACzCgyE,EAAqB,QAC3B,CAAE,CAAA,EACCqB,EAA0BrzE,cAA2BmB,GAAA,CACrDivB,EAAqB,SAAWjvB,EAAQ6wE,EAAqB,UAC/DA,EAAqB,QAAU7wE,EAEnC,EAAG,CAAE,CAAA,EACCmyE,EAAkBtzE,EAAAA,YAAkB,IAAM,CAC9C+xE,EAAiB,QAAU,GACXG,GAAA,EACf,CAACA,CAAe,CAAC,EAIpB18E,EAAAA,UAAgB,IAAM,CACJ08E,GAAA,EACf,CAACr0B,EAAW/2C,EAAa0mD,EAAiB9sD,EAAWwxE,CAAe,CAAC,EAC7C5tB,GAAAtxD,EAAQ,YAAak/E,CAAe,EAC/D,MAAMqB,EAAc,CAClB,iCAAkCF,EAClC,sBAAuBR,EACvB,6BAA8BC,EAC9B,sBAAuBC,EACvB,mCAAoCE,EACpC,gBAAAK,CAAA,EAEIE,EAAqB,CACzB,wBAAAJ,EACA,iBAAAD,CAAA,EAEer6D,GAAA9lB,EAAQugF,EAAa,QAAQ,EAC7Bz6D,GAAA9lB,EAAQwgF,EAAoB,SAAS,CACxD,EC1NaC,GAA0BzgF,GAAU,CAC/C,MAAM0gF,EAAc1zE,EAAAA,YAAkB,CAAC1K,EAAS,CAAA,IACxBtC,EAAO,QAAQ,6BAA6B,cAAe,CAAA,EAAIsC,CAAM,EAE1F,CAACtC,CAAM,CAAC,EACL2gF,EAAe3zE,EAAiB,YAAC4zE,GAAkB,CACtC5gF,EAAO,QAAQ,6BAA6B,eAAgB,CAC3E,UAAW,CAAE,CACnB,EAAO,CACD,eAAA4gF,CACN,CAAK,EACQ,UAAU,QAAQ5rE,GAAY,CACrCA,GACN,CAAK,EACDhV,EAAO,QAAQ,aACnB,EAAK,CAACA,CAAM,CAAC,EAKX8lB,GAAiB9lB,EAJW,CAC1B,YAAA0gF,EACA,aAAAC,CACJ,EACgD,QAAQ,CACxD,EChBaE,GAAwB7gF,GAAU,CAC7C,MAAMyJ,EAAStJ,SAAa,CAAA,CAAE,EACxB2gF,EAAqB,CAACz9D,EAAO4jB,IAAgB,OACjD,OAAOv0C,EAAA+W,EAAO,QAAQ4Z,CAAK,IAApB,YAAA3wB,EAAwBu0C,EACnC,EACQ85C,EAAe,IAAM,CACzBt3E,EAAO,QAAU,EACrB,EAGQu3E,EAAmBh0E,EAAAA,YAAkB,CAAC,CAC1C,MAAAqW,EACA,eAAAqY,EACA,cAAAC,EACA,QAAA9xB,CACJ,IAAQ,CACJ,QAAS5P,EAAIyhC,EAAgBzhC,EAAI0hC,EAAe1hC,GAAK,EAAG,CACtD,MAAMgnF,EAAYC,GAAqB,CACrC,OAAAlhF,EACA,OAAQyJ,EAAO,QACf,YAAaxP,EACb,MAAAopB,EACA,oBAAqBqY,EACrB,mBAAoBC,EACpB,QAAA9xB,CACR,CAAO,EACGo3E,EAAU,QAAU,IACtBhnF,GAAKgnF,EAAU,QAAU,EAE5B,CACL,EAAK,CAACjhF,CAAM,CAAC,EACLmhF,EAA0B,CAC9B,4BAA6BL,CACjC,EACQM,EAA2B,CAC/B,aAAAL,EACA,iBAAAC,CACJ,EACEl7D,GAAiB9lB,EAAQmhF,EAAyB,QAAQ,EAC1Dr7D,GAAiB9lB,EAAQohF,EAA0B,SAAS,EAC5D1+E,GAAuB1C,EAAQ,oBAAqB+gF,CAAY,CAClE,EACA,SAASG,GAAqB5+E,EAAQ,CACpC,KAAM,CACJ,OAAAtC,EACA,OAAAyJ,EACA,YAAAw9B,EACA,MAAA5jB,EACA,oBAAAg+D,EACA,mBAAAC,EACA,QAAAz3E,CACD,EAAGvH,EACEi/E,EAAgB13E,EAAQ,OACxBE,EAASF,EAAQo9B,CAAW,EAC5Bt4B,EAAM3O,EAAO,QAAQ,OAAOqjB,CAAK,EACjCtkB,EAAQiB,EAAO,QAAQ,YAAY2O,EAAK5E,CAAM,EAC9CmgC,EAAU,OAAOngC,EAAO,SAAY,WAAaA,EAAO,QAAQhL,EAAO4P,EAAK5E,EAAQ/J,CAAM,EAAI+J,EAAO,QAC3G,GAAI,CAACmgC,GAAWA,IAAY,EAC1B,OAAAs3C,GAAmB/3E,EAAQ4Z,EAAO4jB,EAAa,CAC7C,iBAAkB,GAClB,UAAW,CACT,QAAS,EACT,MAAOl9B,EAAO,aACf,CACP,CAAK,EACM,CACL,QAAS,CACf,EAEE,IAAIrL,EAAQqL,EAAO,cACnB,QAAS7P,EAAI,EAAGA,EAAIgwC,EAAShwC,GAAK,EAAG,CACnC,MAAMunF,EAAkBx6C,EAAc/sC,EAEtC,GAAIunF,GAAmBJ,GAAuBI,EAAkBH,EAAoB,CAClF,MAAMI,EAAa73E,EAAQ43E,CAAe,EAC1C/iF,GAASgjF,EAAW,cACpBF,GAAmB/3E,EAAQ4Z,EAAO4jB,EAAc/sC,EAAG,CACjD,iBAAkB,GAClB,sBAAuB,KAAK,IAAI+sC,EAAciD,EAASq3C,EAAgB,CAAC,EACxE,qBAAsBt6C,CAC9B,CAAO,CACF,CACDu6C,GAAmB/3E,EAAQ4Z,EAAO4jB,EAAa,CAC7C,iBAAkB,GAClB,UAAW,CACT,QAAAiD,EACA,MAAAxrC,CACD,CACP,CAAK,CACF,CACD,MAAO,CACL,QAAAwrC,CACJ,CACA,CACA,SAASs3C,GAAmB/3E,EAAQ4Z,EAAO4jB,EAAaxT,EAAiB,CAClEhqB,EAAO4Z,CAAK,IACf5Z,EAAO4Z,CAAK,EAAI,IAElB5Z,EAAO4Z,CAAK,EAAE4jB,CAAW,EAAIxT,CAC/B,CCvGA,MAAMkuD,GAAqC,CAACC,EAAiBC,EAASC,IAAqC,CACzG,GAAI7uE,GAAO2uE,CAAe,EAAG,CAC3B,GAAIE,EAAiCF,EAAgB,KAAK,IAAM,OAC9D,MAAM,IAAI,MAAM,CAAC,uDAAwD,gBAAgBA,EAAgB,KAAK,2CAA4C,KAAKE,EAAiCF,EAAgB,KAAK,EAAE,KAAK,KAAK,CAAC,GAAI,KAAKC,EAAQ,KAAK,KAAK,CAAC,EAAE,EAAE,KAAK;AAAA,CAAI,CAAC,EAE9QC,EAAiCF,EAAgB,KAAK,EAAIC,EAC1D,MACD,CACD,KAAM,CACJ,QAAAvT,EACA,SAAAr5E,CACD,EAAG2sF,EACJ3sF,EAAS,QAAQupB,GAAS,CACxBmjE,GAAmCnjE,EAAO,CAAC,GAAGqjE,EAASvT,CAAO,EAAGwT,CAAgC,CACrG,CAAG,CACH,EAQaC,GAA4BC,GAAuB,CAC9D,GAAI,CAACA,EACH,MAAO,GAET,MAAMC,EAAmB,CAAA,EACzB,OAAAD,EAAoB,QAAQJ,GAAmB,CAC7CD,GAAmCC,EAAiB,GAAIK,CAAgB,CAC5E,CAAG,EACMA,CACT,EACaC,GAAiC,CAACC,EAAgBC,EAAwBC,IAAiB,CACtG,MAAMC,EAAa54E,GAAS04E,EAAuB14E,CAAK,GAAK,CAAA,EACvD64E,EAA0B,CAAA,EAC1B3uD,EAAW,KAAK,IAAI,GAAGuuD,EAAe,IAAIz4E,GAAS44E,EAAW54E,CAAK,EAAE,MAAM,CAAC,EAC5E84E,EAAkB,CAACC,EAAQC,EAAQ/mE,IAAUpK,GAAY+wE,EAAWG,CAAM,EAAE,MAAM,EAAG9mE,EAAQ,CAAC,EAAG2mE,EAAWI,CAAM,EAAE,MAAM,EAAG/mE,EAAQ,CAAC,CAAC,EACvIgnE,EAA0B,CAACF,EAAQC,IACnC,GAAAL,GAAA,MAAAA,EAAc,MAAQA,EAAa,KAAK,SAASI,CAAM,GAAK,CAACJ,EAAa,KAAK,SAASK,CAAM,GAG9FL,GAAA,MAAAA,EAAc,OAAS,CAACA,EAAa,MAAM,SAASI,CAAM,GAAKJ,EAAa,MAAM,SAASK,CAAM,GAKvG,QAAS/mE,EAAQ,EAAGA,EAAQiY,EAAUjY,GAAS,EAAG,CAChD,MAAMinE,EAAiBT,EAAe,OAAO,CAACU,EAAWC,IAAa,CACpE,MAAMxU,EAAUgU,EAAWQ,CAAQ,EAAEnnE,CAAK,GAAK,KAC/C,GAAIknE,EAAU,SAAW,EACvB,MAAO,CAAC,CACN,aAAc,CAACC,CAAQ,EACvB,QAAAxU,CACV,CAAS,EAEH,MAAMyU,EAAYF,EAAUA,EAAU,OAAS,CAAC,EAC1CG,EAAYD,EAAU,aAAaA,EAAU,aAAa,OAAS,CAAC,EAE1E,OADoBA,EAAU,UACVzU,GAAW,CAACkU,EAAgBQ,EAAWF,EAAUnnE,CAAK,GAE1EgnE,EAAwBK,EAAWF,CAAQ,EAElC,CAAC,GAAGD,EAAW,CACpB,aAAc,CAACC,CAAQ,EACvB,QAAAxU,CACV,CAAS,EAII,CAAC,GAAGuU,EAAU,MAAM,EAAGA,EAAU,OAAS,CAAC,EAAG,CACnD,aAAc,CAAC,GAAGE,EAAU,aAAcD,CAAQ,EAClD,QAAAxU,CACR,CAAO,CACF,EAAE,CAAE,CAAA,EACLiU,EAAwB,KAAKK,CAAc,CAC5C,CACD,OAAOL,CACT,EC/EM72E,GAAY,CAAC,UAAW,UAAU,EAQlCu3E,GAA2CjB,GAAA,CAC/C,IAAIkB,EAAc,CAAA,EAClB,OAAAlB,EAAoB,QAAgBvzE,GAAA,CAC9B,GAAAwE,GAAOxE,CAAI,EACb,OAEI,KAAA,CACF,QAAA6/D,EACA,SAAAr5E,CACE,EAAAwZ,EACJjH,EAAQmF,GAA8B8B,EAAM/C,EAAS,EACvD,GAAI,CAAC4iE,EACG,MAAA,IAAI,MAAM,yFAAyF,EAO3G,MAAM6U,EAAaj3E,EAAS,CAAC,EAAG1E,EAAO,CACrC,QAAA8mE,CAAA,CACD,EACK8U,EAAgBH,GAAkBhuF,CAAQ,EAChD,GAAImuF,EAAc9U,CAAO,IAAM,QAAa4U,EAAY5U,CAAO,IAAM,OACnE,MAAM,IAAI,MAAM,sBAAsBA,CAAO,qDAAqD,EAEpG4U,EAAch3E,EAAS,GAAIg3E,EAAaE,EAAe,CACrD,CAAC9U,CAAO,EAAG6U,CAAA,CACZ,CAAA,CACF,EACMj3E,EAAS,GAAIg3E,CAAW,CACjC,EACaG,GAA+B,CAACx/E,EAAOjT,EAAOoP,IAAW,CAChE,GAAA,CAACpP,EAAM,oBACF,OAAAiT,EAEH,MAAA4R,EAAerM,GAAyBpJ,CAAM,EAC9CoK,EAAsBJ,GAAgChK,CAAM,EAC5DkjF,EAAcD,GAAkBryF,EAAM,qBAAuB,CAAE,CAAA,EAC/DwxF,EAAyBL,GAA0BnxF,EAAM,qBAAuB,CAAE,CAAA,EAClF+vC,EAA8BuhD,GAA+BzsE,EAAc2sE,EAAwBpiF,EAAO,QAAQ,MAAM,eAAiB,CAAA,CAAE,EAC3I4zB,EAAWxpB,EAAoB,SAAW,EAAI,EAAI,KAAK,IAAI,GAAGA,EAAoB,cAAa,QAAA1X,EAAA0vF,EAAuB14E,CAAK,IAA5B,YAAAhX,EAA+B,SAAU,EAAC,CAAC,EACzI,OAAAwZ,EAAS,CAAC,EAAGrI,EAAO,CACzB,eAAgB,CACd,OAAQq/E,EACR,uBAAAd,EACA,gBAAiBzhD,EACjB,SAAA/M,CACF,CAAA,CACD,CACH,EAMa0vD,GAAwB,CAACtjF,EAAQpP,IAAU,CAIhD,MAAA2yF,EAAqBv2E,cAA2BtD,GACrBwmB,GAAuClwB,CAAM,EAC9C0J,CAAK,GAAK,GACvC,CAAC1J,CAAM,CAAC,EACLwjF,EAAqBx2E,EAAAA,YAAkB,IACjBojB,GAA+BpwB,CAAM,EAE9D,CAACA,CAAM,CAAC,EAKM8lB,GAAA9lB,EAJS,CACxB,mBAAAujF,EACA,mBAAAC,CAAA,EAE0C,QAAQ,EAC9C,MAAAC,EAA0Bz2E,EAAAA,YAAkB,IAAM,CACtD,MAAMo1E,EAAyBL,GAA0BnxF,EAAM,qBAAuB,CAAE,CAAA,EACjFoP,EAAA,QAAQ,SAAkB6D,GAAA,OAC/B,MAAMmuB,IAAgBt/B,EAAAmR,EAAM,UAAN,YAAAnR,EAAe,gBAAiB,CAAA,EAChD6X,EAAgB1G,EAAM,eAAiB,GACvC88B,EAA8BuhD,GAA+BlwD,EAAeowD,EAAwB73E,CAAa,EAChH,OAAA2B,EAAS,CAAC,EAAGrI,EAAO,CACzB,eAAgBqI,EAAS,GAAIrI,EAAM,eAAgB,CACjD,gBAAiB88B,CAAA,CAClB,CAAA,CACF,CAAA,CACF,CACA,EAAA,CAAC3gC,EAAQpP,EAAM,mBAAmB,CAAC,EAChC8yF,EAA4B12E,cAAyCg1E,GAAA,SAEzE,MAAMz3E,IAAgBE,GAAA/X,EAAAsN,EAAO,SAAQ,mBAAf,YAAAyK,EAAA,KAAA/X,KAAuC,CAAA,EACvD+iB,EAAerM,GAAyBpJ,CAAM,EAC9CoK,EAAsBJ,GAAgChK,CAAM,EAC5DkjF,EAAcD,GAAkBjB,GAAuB,CAAE,CAAA,EACzDI,EAAyBL,GAA0BC,GAAuB,CAAE,CAAA,EAC5ErhD,EAA8BuhD,GAA+BzsE,EAAc2sE,EAAwB73E,CAAa,EAChHqpB,EAAWxpB,EAAoB,SAAW,EAAI,EAAI,KAAK,IAAI,GAAGA,EAAoB,cAAa,QAAA1X,EAAA0vF,EAAuB14E,CAAK,IAA5B,YAAAhX,EAA+B,SAAU,EAAC,CAAC,EACzIsN,EAAA,QAAQ,SAAkB6D,GACxBqI,EAAS,CAAC,EAAGrI,EAAO,CACzB,eAAgB,CACd,OAAQq/E,EACR,uBAAAd,EACA,gBAAiBzhD,EACjB,SAAA/M,CACF,CAAA,CACD,CACF,CAAA,EACA,CAAC5zB,CAAM,CAAC,EACY0C,GAAA1C,EAAQ,oBAAqByjF,CAAuB,EACpD/gF,GAAA1C,EAAQ,gBAAiB,IAAM,CACpD0jF,EAA0B9yF,EAAM,mBAAmB,CAAA,CACpD,EACsB8R,GAAA1C,EAAQ,8BAA+B,IAAM,CAClE0jF,EAA0B9yF,EAAM,mBAAmB,CAAA,CACpD,EAKD4R,EAAAA,UAAgB,IAAM,CACpBkhF,EAA0B9yF,EAAM,mBAAmB,CAClD,EAAA,CAAC8yF,EAA2B9yF,EAAM,mBAAmB,CAAC,CAC3D,EClIO,SAAS+yF,IAA4B,CAC1C,IAAIroB,EACAsoB,EACJ,MAAM1Y,EAAU,IAAI,QAAQ,CAAC2Y,EAAUC,IAAY,CACjDxoB,EAAUuoB,EACVD,EAASE,CACb,CAAG,EACD,OAAA5Y,EAAQ,QAAU5P,EAClB4P,EAAQ,OAAS0Y,EACV1Y,CACT,CCKA,SAAS6Y,GAAYpuF,EAAOquF,EAAgB,CAC1C,GAAIA,IAAmB,QAAaruF,EAAM,eAAgB,CACxD,QAASsE,EAAI,EAAGA,EAAItE,EAAM,eAAe,OAAQsE,GAAK,EAAG,CACvD,MAAMgqF,EAAQtuF,EAAM,eAAesE,CAAC,EACpC,GAAIgqF,EAAM,aAAeD,EACvB,MAAO,CACL,EAAGC,EAAM,QACT,EAAGA,EAAM,OACnB,CAEK,CACD,MAAO,EACR,CACD,MAAO,CACL,EAAGtuF,EAAM,QACT,EAAGA,EAAM,OACb,CACA,CACA,SAASuuF,GAAgBC,EAA0BC,EAAQC,EAAcC,EAAiB,CACxF,IAAIC,EAAWJ,EACf,OAAIG,IAAoB,QACtBC,GAAYH,EAASC,EAAa,KAElCE,GAAYF,EAAa,MAAQD,EAE5BG,CACT,CACA,SAASC,GAAyBJ,EAAQC,EAAcC,EAAiB,CACvE,OAAIA,IAAoB,OACfF,EAASC,EAAa,KAExBA,EAAa,MAAQD,CAC9B,CACA,SAASK,GAAoBhzC,EAAM,CACjC,OAAIA,IAAS,QACJ,OAEF,OACT,CACA,SAASizC,GAAmBC,EAAW/2E,EAAW,CAChD,MAAM6jC,EAAOkzC,EAAU,UAAU,SAAS5jF,EAAY,4BAA4B,CAAC,EAAI,QAAU,OACjG,OAAI6M,IAAc,MAET62E,GAAoBhzC,CAAI,EAE1BA,CACT,CACA,SAASmzC,GAAajvF,EAAO,CAC3BA,EAAM,eAAc,EACpBA,EAAM,yBAAwB,CAChC,CAMA,SAASkvF,GAAgC7kF,EAAQ,CAC/C,MAAMkrE,EAAU/qE,EAAAA,SACVgD,EAAW,IAAMqzB,GAAwCx2B,CAAM,EAC/DjB,EAAQyE,EAAgBxD,EAAQmD,CAAQ,EAC9CX,OAAAA,EAAAA,UAAgB,IAAM,CAChB0oE,EAAQ,SAAWnsE,IAAU,KAC/BmsE,EAAQ,QAAQ,UAChBA,EAAQ,QAAU,OAExB,CAAG,EACkB,IAAM,CACvB,GAAI,CAACA,EAAQ,QAAS,CACpB,GAAI/nE,EAAU,IAAK,GACjB,OAAO,QAAQ,UAEjB+nE,EAAQ,QAAUyY,IACnB,CACD,OAAOzY,EAAQ,OACnB,CAEA,CAMA,SAAS4Z,GAAgBC,EAAaC,EAAQ,CAC5C,GAAID,EAAY,OAAS,EACvB,OAAOA,EAET,MAAMpgC,EAASogC,EAAY,QAC3BpgC,EAAO,KAAK,CAAC,EAAGrxD,IAAM,EAAIA,CAAC,EAC3B,MAAM2xF,EAAKtgC,EAAO,KAAK,MAAMA,EAAO,OAAS,GAAI,CAAC,EAC5CugC,EAAKvgC,EAAO,KAAK,MAAMA,EAAO,OAAS,GAAI,EAAI,CAAC,EAChDwgC,EAAMD,EAAKD,EAOXG,EAAYD,EAAM,EAAI,EAAIA,EAAMH,EACtC,OAAOrgC,EAAO,OAAOzwD,GAAKA,EAAI+wF,EAAKG,GAAalxF,EAAIgxF,EAAKE,CAAS,CACpE,CACA,SAASC,GAAoBrlF,EAAQ+B,EAAS8H,EAAS,CACrD,MAAMy7E,EAAe,CAAA,EACfx/C,EAAO9lC,EAAO,QAAQ,eAAe,QAC3C,OAAA8lC,EAAK,UAAU,IAAI/kC,EAAY,UAAU,EACzC8I,EAAQ,QAAQE,GAAU,CAExB,MAAMw7E,EADQv9C,GAAchoC,EAAO,QAAS+J,EAAO,KAAK,EACnC,IAAIm9B,GAChBA,EAAK,wBAAwB,OAAS,CAC9C,EACKs+C,EAAiBzjF,EAAQ,gBAAkBwjF,EAAST,GAAgBS,EAAQxjF,EAAQ,cAAc,EACxG,GAAIA,EAAQ,eAAgB,CAC1B,MAAM4kD,EAAS5e,GAAe/nC,EAAO,QAAS+J,EAAO,KAAK,EAC1D,GAAI48C,EAAQ,CACV,MAAM1a,EAAQ0a,EAAO,cAAc,IAAI5lD,EAAY,iBAAiB,EAAE,EAChEk3E,EAAUtxB,EAAO,cAAc,IAAI5lD,EAAY,iCAAiC,EAAE,EAClF0kF,EAAgB9+B,EAAO,cAAc,IAAI5lD,EAAY,mBAAmB,EAAE,EAC1E2kF,EAAgB/+B,EAAO,cAAc,IAAI5lD,EAAY,QAAQ,EAAE,EAC/D8gB,EAAUoqB,GAASgsC,EACnB/iD,EAAQ,OAAO,iBAAiByxB,EAAQ,IAAI,EAC5Cg/B,EAAe,SAASzwD,EAAM,YAAa,EAAE,EAAI,SAASA,EAAM,aAAc,EAAE,EAEhFx2B,EADemjB,EAAQ,YAAc,EACd8jE,IAAgBF,GAAA,YAAAA,EAAe,cAAe,KAAMC,GAAA,YAAAA,EAAe,cAAe,GAC/GF,EAAe,KAAK9mF,CAAK,CAC1B,CACF,CACD,MAAMknF,EAAe77E,EAAO,WAAa,MAAaA,EAAO,WAAa,OACpE87E,EAAe97E,EAAO,WAAa,KAAYA,EAAO,WAAa,OACnEmH,EAAM00E,EAAe77E,EAAO,SAAW,EACvCoH,EAAM00E,EAAe97E,EAAO,SAAW,IACvC+7E,EAAaN,EAAe,SAAW,EAAI,EAAI,KAAK,IAAI,GAAGA,CAAc,EAC/EF,EAAav7E,EAAO,KAAK,EAAIkH,GAAM60E,EAAY50E,EAAKC,CAAG,CAC3D,CAAG,EACD20B,EAAK,UAAU,OAAO/kC,EAAY,UAAU,EACrCukF,CACT,CACO,MAAMS,GAA+BliF,GAASqI,EAAS,CAAA,EAAIrI,EAAO,CACvE,aAAc,CACZ,oBAAqB,EACtB,CACH,CAAC,EACD,SAASmiF,IAAmB,CAC1B,MAAO,CACL,OAAQ,OACR,gBAAiB,EACjB,kBAAmB,EACnB,wBAAyB,OACzB,oBAAqB,OACrB,oBAAqB,OACrB,oBAAqB,CAAE,EACvB,aAAc,CAAE,EAChB,qBAAsB,CAAE,EACxB,uBAAwB,CAAE,EAC1B,WAAY,OACZ,YAAa,OACb,uBAAwB,CAAE,EAC1B,yBAA0B,CAAE,CAChC,CACA,CAMO,MAAMC,GAAsB,CAACjmF,EAAQpP,IAAU,CACpD,MAAMkE,EAAQokB,KACRkN,EAASD,GAAcnmB,EAAQ,qBAAqB,EACpD0D,EAAOC,GAAWqiF,EAAgB,EAAE,QAKpC7B,EAA2BhkF,EAAAA,SAC3BmkF,EAAkBnkF,EAAAA,SAClB+lF,EAAyB91E,KACzB+1E,EAAUhmF,EAAAA,SACVimF,EAAc7B,GAAY,SAC9Bn+D,EAAO,MAAM,qBAAqBm+D,CAAQ,YAAY7gF,EAAK,OAAO,KAAK,EAAE,EACzE,MAAM2iF,EAAY3iF,EAAK,oBAAoB,YACrC4iF,EAAY/B,EAAW8B,EACvBE,EAAkBhC,EAAW7gF,EAAK,gBAClC8iF,EAAgB9iF,EAAK,kBAAoB6iF,GAC/C97E,GAAA/X,EAAAsN,EAAO,QAAQ,iBAAf,YAAAtN,EAA+B,UAA/B,MAAA+X,EAAwC,MAAM,YAAY,sBAAuB,GAAG+7E,CAAa,MACjG9iF,EAAK,OAAO,cAAgB6gF,EAC5B7gF,EAAK,OAAO,MAAQ6gF,EACpB7gF,EAAK,OAAO,KAAO,EACnBA,EAAK,oBAAoB,MAAM,MAAQ,GAAG6gF,CAAQ,KAClD7gF,EAAK,oBAAoB,MAAM,SAAW,GAAG6gF,CAAQ,KACrD7gF,EAAK,oBAAoB,MAAM,SAAW,GAAG6gF,CAAQ,KACrD,MAAMkC,EAAsB/iF,EAAK,oBAC7B+iF,IACFA,EAAoB,MAAM,MAAQ,GAAGlC,CAAQ,KAC7CkC,EAAoB,MAAM,SAAW,GAAGlC,CAAQ,KAChDkC,EAAoB,MAAM,SAAW,GAAGlC,CAAQ,MAElD7gF,EAAK,oBAAoB,QAAQme,GAAW,CAC1C,MAAM6kE,EAAM7kE,EACZ,IAAI8kE,EACAD,EAAI,aAAa,cAAc,IAAM,IACvCC,EAAa,GAAGpC,CAAQ,KAIxBoC,EAAa,GAAGD,EAAI,YAAcJ,CAAS,KAE7CI,EAAI,MAAM,MAAQC,EAClBD,EAAI,MAAM,SAAWC,EACrBD,EAAI,MAAM,SAAWC,CAC3B,CAAK,EACDjjF,EAAK,aAAa,QAAQme,GAAW,CACnC,MAAM6kE,EAAM7kE,EACZ,IAAI8kE,EACAD,EAAI,aAAa,cAAc,IAAM,IACvCC,EAAa,GAAGpC,CAAQ,KAIxBoC,EAAa,GAAGD,EAAI,YAAcJ,CAAS,KAE7CI,EAAI,MAAM,YAAY,UAAWC,CAAU,CACjD,CAAK,EACD,MAAM59C,EAAiB/oC,EAAO,QAAQ,6BAA6B,iBAAkB,GAAO0D,EAAK,OAAO,KAAK,EACzGqlC,IAAmB//B,GAAyB,OAC9C49E,GAAeljF,EAAK,WAAY,QAAS4iF,CAAS,EAClD5iF,EAAK,qBAAqB,QAAQwjC,GAAQ,CACxC0/C,GAAe1/C,EAAM,OAAQo/C,CAAS,CAC9C,CAAO,EACD5iF,EAAK,uBAAuB,QAAQijD,GAAU,CAC5CigC,GAAejgC,EAAQ,OAAQ2/B,CAAS,CAChD,CAAO,GAECv9C,IAAmB//B,GAAyB,QAC9C49E,GAAeljF,EAAK,YAAa,QAAS4iF,CAAS,EACnD5iF,EAAK,uBAAuB,QAAQwjC,GAAQ,CAC1C0/C,GAAe1/C,EAAM,QAASo/C,CAAS,CAC/C,CAAO,EACD5iF,EAAK,yBAAyB,QAAQijD,GAAU,CAC9CigC,GAAejgC,EAAQ,QAAS2/B,CAAS,CACjD,CAAO,EAEP,EACQO,EAAeC,GAAe,CAKlC,GAHAC,IAGIrjF,EAAK,wBAAyB,CAChC,MAAMsjF,EAAYtjF,EAAK,wBACjBujF,EAAgBD,EAAU,UAC1BE,EAAcF,EAAU,QACxBG,EAAcH,EAAU,QAG9B,GAAIF,EAAY,UAAYG,EAAgB,KAAOH,EAAY,UAAYI,GAAeJ,EAAY,UAAYK,EAAa,CAC7HzjF,EAAK,wBAA0B,OAC/B1D,EAAO,QAAQ,aAAa,mBAAoB,KAAM8mF,CAAW,EACjE,MACD,CACF,CACD,GAAIpjF,EAAK,OAAQ,CACf1D,EAAO,QAAQ,eAAe0D,EAAK,OAAO,MAAOA,EAAK,OAAO,KAAK,EAClE0iB,EAAO,MAAM,gBAAgB1iB,EAAK,OAAO,KAAK,oBAAoBA,EAAK,OAAO,KAAK,EAAE,EAKrF,MAAM2F,EAAeF,GAAyBnJ,EAAO,QAAQ,KAAK,EAClE0D,EAAK,oBAAoB,QAAQme,GAAW,CAC1C,MAAMk6C,EAASv1B,GAA6B3kB,CAAO,EAC7C6kE,EAAM7kE,EAON8kE,EAAa,GANF5qB,EAAO,OAAO,CAACvwD,EAAK9B,IAC/BL,EAAa,sBAAsBK,CAAK,IAAM,GACzC8B,EAAMnC,EAAa,OAAOK,CAAK,EAAE,cAEnC8B,EACN,CAAC,CAC0B,KAC9Bk7E,EAAI,MAAM,MAAQC,EAClBD,EAAI,MAAM,SAAWC,EACrBD,EAAI,MAAM,SAAWC,CAC7B,CAAO,CACF,CACDT,EAAuB,MAAM,EAAG,IAAM,CACpClmF,EAAO,QAAQ,aAAa,mBAAoB,KAAM8mF,CAAW,CACvE,CAAK,CACL,EACQM,EAAkB,CAAC96E,EAAQq4E,EAAW0C,IAAW,OACrD,MAAMvhD,EAAO9lC,EAAO,QAAQ,eAAe,QAC3C0D,EAAK,gBAAkB4I,EAAO,cAC9B5I,EAAK,kBAAoB1D,EAAO,QAAQ,kBAAiB,EAAG,SAC5D0D,EAAK,OAAS4I,EACd5I,EAAK,oBAAsB6iC,GAA2BvmC,EAAO,QAAQ,0BAA0B,QAASsM,EAAO,KAAK,EACpH,MAAMm6E,EAAsB3gD,EAAK,cAAc,IAAI/kC,EAAY,eAAe,iBAAiB4kC,GAA+Br5B,EAAO,KAAK,CAAC,IAAI,EAC3Im6E,IACF/iF,EAAK,oBAAsB+iF,GAE7B/iF,EAAK,oBAAsB+iC,IAAiC/zC,EAAAsN,EAAO,QAAQ,4BAAf,YAAAtN,EAA0C,QAAS4Z,EAAO,KAAK,EAC3H5I,EAAK,aAAegjC,GAA4BhjC,EAAK,oBAAqB1D,EAAO,OAAO,EACxF0D,EAAK,WAAayjC,GAAgBnnC,EAAO,QAAS,oBAAoB,EACtE0D,EAAK,YAAcyjC,GAAgBnnC,EAAO,QAAS,qBAAqB,EACxE,MAAM+oC,EAAiB/oC,EAAO,QAAQ,6BAA6B,iBAAkB,GAAO0D,EAAK,OAAO,KAAK,EAC7GA,EAAK,qBAAuBqlC,IAAmB//B,GAAyB,KAAO,CAAA,EAAKy+B,GAA4BznC,EAAO,QAAS0D,EAAK,mBAAmB,EACxJA,EAAK,uBAAyBqlC,IAAmB//B,GAAyB,MAAQ,CAAA,EAAK0+B,GAA8B1nC,EAAO,QAAS0D,EAAK,mBAAmB,EAC7JA,EAAK,uBAAyBqlC,IAAmB//B,GAAyB,KAAO,CAAA,EAAK6+B,GAA8B7nC,EAAO,QAAS0D,EAAK,mBAAmB,EAC5JA,EAAK,yBAA2BqlC,IAAmB//B,GAAyB,MAAQ,CAAA,EAAK8+B,GAAgC9nC,EAAO,QAAS0D,EAAK,mBAAmB,EACjK4gF,EAAgB,QAAUI,GAAmBC,EAAW7vF,EAAM,SAAS,EACvEqvF,EAAyB,QAAUK,GAAyB6C,EAAQ3jF,EAAK,oBAAoB,sBAAuB,EAAE4gF,EAAgB,OAAO,CACjJ,EACQgD,EAAsBhyD,GAAiBuxD,CAAY,EACnDU,EAAwBjyD,GAAiBwxD,GAAe,CAE5D,GAAIA,EAAY,UAAY,EAAG,CAC7BQ,EAAoBR,CAAW,EAC/B,MACD,CACD,IAAIvC,EAAWL,GAAgBC,EAAyB,QAAS2C,EAAY,QAASpjF,EAAK,oBAAoB,sBAAqB,EAAI4gF,EAAgB,OAAO,EAC/JC,EAAWtzE,GAAMszE,EAAU7gF,EAAK,OAAO,SAAUA,EAAK,OAAO,QAAQ,EACrE0iF,EAAY7B,CAAQ,EACpB,MAAMjiF,EAAS,CACb,QAASoB,EAAK,oBACd,OAAQA,EAAK,OACb,MAAO6gF,CACb,EACIvkF,EAAO,QAAQ,aAAa,eAAgBsC,EAAQwkF,CAAW,CACnE,CAAG,EACKU,EAAiBlyD,GAAiBwxD,GAAe,CACtC/C,GAAY+C,EAAaX,EAAQ,OAAO,GAIvDU,EAAaC,CAAW,CAC5B,CAAG,EACKjsD,EAAkBvF,GAAiBwxD,GAAe,CACtD,MAAMW,EAAS1D,GAAY+C,EAAaX,EAAQ,OAAO,EACvD,GAAI,CAACsB,EACH,OAIF,GAAIX,EAAY,OAAS,aAAeA,EAAY,UAAY,EAAG,CACjEU,EAAeV,CAAW,EAC1B,MACD,CACD,IAAIvC,EAAWL,GAAgBC,EAAyB,QAASsD,EAAO,EAAG/jF,EAAK,oBAAoB,sBAAqB,EAAI4gF,EAAgB,OAAO,EACpJC,EAAWtzE,GAAMszE,EAAU7gF,EAAK,OAAO,SAAUA,EAAK,OAAO,QAAQ,EACrE0iF,EAAY7B,CAAQ,EACpB,MAAMjiF,EAAS,CACb,QAASoB,EAAK,oBACd,OAAQA,EAAK,OACb,MAAO6gF,CACb,EACIvkF,EAAO,QAAQ,aAAa,eAAgBsC,EAAQwkF,CAAW,CACnE,CAAG,EACKY,EAAmBpyD,GAAiB3/B,GAAS,CACjD,MAAMgyF,EAAgBliD,GAA+B9vC,EAAM,OAAQoL,EAAY,4BAA4B,CAAC,EAE5G,GAAI,CAAC4mF,EACH,OAEF,MAAM1D,EAAQtuF,EAAM,eAAe,CAAC,EAChCsuF,GAAS,OAEXkC,EAAQ,QAAUlC,EAAM,YAE1B,MAAM2D,EAAsBniD,GAA+B9vC,EAAM,OAAQoL,EAAY,YAAY,EAC3F2I,EAAQ28B,GAAuBuhD,CAAmB,EAClDt7E,EAAStM,EAAO,QAAQ,UAAU0J,CAAK,EAC7C0c,EAAO,MAAM,uBAAuB9Z,EAAO,KAAK,EAAE,EAClDtM,EAAO,QAAQ,aAAa,oBAAqB,CAC/C,MAAA0J,CACD,EAAE/T,CAAK,EACRyxF,EAAgB96E,EAAQq7E,EAAe1D,EAAM,OAAO,EACpD,MAAMr4C,EAAMC,GAAcl2C,EAAM,aAAa,EAC7Ci2C,EAAI,iBAAiB,YAAa/Q,CAAe,EACjD+Q,EAAI,iBAAiB,WAAY47C,CAAc,CACnD,CAAG,EACKT,EAAgB/5E,EAAAA,YAAkB,IAAM,CAC5C,MAAM4+B,EAAMC,GAAc7rC,EAAO,QAAQ,eAAe,OAAO,EAC/D4rC,EAAI,KAAK,MAAM,eAAe,QAAQ,EACtCA,EAAI,oBAAoB,YAAa27C,CAAqB,EAC1D37C,EAAI,oBAAoB,UAAW07C,CAAmB,EACtD17C,EAAI,oBAAoB,YAAa/Q,CAAe,EACpD+Q,EAAI,oBAAoB,WAAY47C,CAAc,EAGlD,WAAW,IAAM,CACf57C,EAAI,oBAAoB,QAASg5C,GAAc,EAAI,CACpD,EAAE,GAAG,EACFlhF,EAAK,sBACPA,EAAK,oBAAoB,MAAM,cAAgB,QAErD,EAAK,CAAC1D,EAAQ0D,EAAM6jF,EAAuBD,EAAqBzsD,EAAiB2sD,CAAc,CAAC,EACxFK,EAAoB76E,EAAAA,YAAkB,CAAC,CAC3C,MAAAtD,CACJ,IAAQ,CACJ1J,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,aAAcqI,EAAS,GAAIrI,EAAM,aAAc,CAC7C,oBAAqB6F,CAC7B,CAAO,CACF,CAAA,CAAC,EACF1J,EAAO,QAAQ,aACnB,EAAK,CAACA,CAAM,CAAC,EACL8nF,EAAmB96E,EAAAA,YAAkB,IAAM,CAC/ChN,EAAO,QAAQ,SAAS6D,GAASqI,EAAS,CAAE,EAAErI,EAAO,CACnD,aAAcqI,EAAS,GAAIrI,EAAM,aAAc,CAC7C,oBAAqB,EAC7B,CAAO,CACF,CAAA,CAAC,EACF7D,EAAO,QAAQ,aACnB,EAAK,CAACA,CAAM,CAAC,EACL+nF,EAA8BzyD,GAAiB,CAAC,CACpD,OAAAhpB,CACD,EAAE3W,IAAU,CAOX,GALIA,EAAM,SAAW,GAKjB,CAACA,EAAM,cAAc,UAAU,SAASoL,EAAY,4BAA4B,CAAC,EACnF,OAIFpL,EAAM,eAAc,EACpBywB,EAAO,MAAM,uBAAuB9Z,EAAO,KAAK,EAAE,EAClDtM,EAAO,QAAQ,aAAa,oBAAqB,CAC/C,MAAOsM,EAAO,KACf,EAAE3W,CAAK,EACRyxF,EAAgB96E,EAAQ3W,EAAM,cAAeA,EAAM,OAAO,EAC1D,MAAMi2C,EAAMC,GAAc7rC,EAAO,QAAQ,eAAe,OAAO,EAC/D4rC,EAAI,KAAK,MAAM,OAAS,aACxBloC,EAAK,wBAA0B/N,EAAM,YACrCi2C,EAAI,iBAAiB,YAAa27C,CAAqB,EACvD37C,EAAI,iBAAiB,UAAW07C,CAAmB,EAInD17C,EAAI,iBAAiB,QAASg5C,GAAc,EAAI,CACpD,CAAG,EACKoD,EAAmC1yD,GAAiB,CAAChzB,EAAQ3M,IAAU,CAM3E,GALI/E,EAAM,iBAKN+E,EAAM,SAAW,EACnB,OAEF,MAAMoU,EAAS/J,EAAO,QAAQ,MAAM,QAAQ,OAAOsC,EAAO,KAAK,EAC3DyH,EAAO,YAAc,IAGzB/J,EAAO,QAAQ,gBAAgBkM,EAAS,CAAE,EAAEtb,EAAM,gBAAiB,CACjE,QAAS,CAACmZ,EAAO,KAAK,CACvB,CAAA,CAAC,CACN,CAAG,EAMKk+E,EAA+BpD,GAAgC7kF,CAAM,EACrEkoF,EAAkB/nF,SAAa,EAAK,EACpCgoF,EAAkBn7E,cAAkB,MAAMo7E,GAAe,OAK7D,GAHI,GADS11F,EAAAsN,EAAO,QAAQ,iBAAf,YAAAtN,EAA+B,UAIxCw1F,EAAgB,QAClB,OAEFA,EAAgB,QAAU,GAC1B,MAAMrkF,EAAQsF,GAAyBnJ,EAAO,QAAQ,KAAK,EACrD+B,EAAUmK,EAAS,GAAIg3B,GAA+BklD,EAAa,CACvE,SAASA,GAAA,YAAAA,EAAa,UAAWvkF,EAAM,aAC7C,CAAK,EACD9B,EAAQ,QAAUA,EAAQ,QAAQ,OAAOuF,GAAKzD,EAAM,sBAAsByD,CAAC,IAAM,EAAK,EACtF,MAAMuC,EAAU9H,EAAQ,QAAQ,IAAIuF,GAAKtH,EAAO,QAAQ,MAAM,QAAQ,OAAOsH,CAAC,CAAC,EAC/E,GAAI,CACFtH,EAAO,QAAQ,iCAAiC,EAAK,EACrD,MAAMioF,EAA4B,EAClC,MAAM3C,EAAeD,GAAoBrlF,EAAQ+B,EAAS8H,CAAO,EAC3Dw+E,EAAax+E,EAAQ,IAAIE,GAAUmC,EAAS,CAAE,EAAEnC,EAAQ,CAC5D,MAAOu7E,EAAav7E,EAAO,KAAK,EAChC,cAAeu7E,EAAav7E,EAAO,KAAK,CACzC,CAAA,CAAC,EACF,GAAIhI,EAAQ,OAAQ,CAElB,MAAMqlD,EADiBvjD,EAAM,cAAc,IAAI6F,GAAS7F,EAAM,OAAO6F,CAAK,CAAC,EAAE,OAAOpC,GAAKzD,EAAM,sBAAsByD,EAAE,KAAK,IAAM,EAAK,EACrG,OAAO,CAACghF,EAAOv+E,IAAWu+E,GAAShD,EAAav7E,EAAO,KAAK,GAAKA,EAAO,eAAiBA,EAAO,OAAQ,CAAC,EAErIw+E,EADiBvoF,EAAO,QAAQ,kBAAmB,EAAC,kBAAkB,MACpConD,EACxC,GAAImhC,EAAiB,EAAG,CACtB,MAAMC,EAAiBD,GAAkBF,EAAW,QAAU,GAC9DA,EAAW,QAAQt+E,GAAU,CAC3BA,EAAO,OAASy+E,EAChBz+E,EAAO,eAAiBy+E,CACpC,CAAW,CACF,CACF,CACDxoF,EAAO,QAAQ,cAAcqoF,CAAU,EACvCA,EAAW,QAAQ,CAACv1D,EAAW3kB,IAAU,CACvC,GAAI2kB,EAAU,QAAUjpB,EAAQsE,CAAK,EAAE,MAAO,CAC5C,MAAMzP,EAAQo0B,EAAU,MACxB9yB,EAAO,QAAQ,aAAa,oBAAqB,CAC/C,QAASA,EAAO,QAAQ,uBAAuB8yB,EAAU,KAAK,EAC9D,OAAQA,EACR,MAAAp0B,CACZ,CAAW,CACF,CACT,CAAO,CACP,QAAc,CACRsB,EAAO,QAAQ,iCAAiC,EAAI,EACpDkoF,EAAgB,QAAU,EAC3B,CACL,EAAK,CAACloF,EAAQioF,CAA4B,CAAC,EAMzCzlF,EAAAA,UAAgB,IAAMukF,EAAe,CAACA,CAAa,CAAC,EACpDhjF,GAAW,IAAM,CACXnT,EAAM,iBACR,QAAQ,UAAU,KAAK,IAAM,CAC3BoP,EAAO,QAAQ,gBAAgBpP,EAAM,eAAe,CAC5D,CAAO,CAEP,CAAG,EACD01B,GAA2BtmB,EAAQ,IAAA,OAAM,OAAAtN,EAAAsN,EAAO,QAAQ,4BAAf,YAAAtN,EAA0C,SAAS,aAAcg1F,EAAkB,CAC1H,QAAS,EACb,CAAG,EACD5hE,GAAiB9lB,EAAQ,CACvB,gBAAAmoF,CACD,EAAE,QAAQ,EACXzlF,GAAuB1C,EAAQ,mBAAoB8nF,CAAgB,EACnEplF,GAAuB1C,EAAQ,oBAAqB6nF,CAAiB,EACrEnlF,GAAuB1C,EAAQ,2BAA4B+nF,CAA2B,EACtFrlF,GAAuB1C,EAAQ,6BAA8BgoF,CAAgC,EAC7FplF,GAAwB5C,EAAQ,eAAgBpP,EAAM,cAAc,EACpEgS,GAAwB5C,EAAQ,oBAAqBpP,EAAM,mBAAmB,CAChF,EACA,SAASg2F,GAAe/kE,EAASqqC,EAAU3D,EAAO,CAC3C1mC,IAGLA,EAAQ,MAAMqqC,CAAQ,EAAI,GAAG,SAASrqC,EAAQ,MAAMqqC,CAAQ,EAAG,EAAE,EAAI3D,CAAK,KAC5E,CCphBO,MAAMkgC,GAAuB,CAAC54B,EAAaj/D,IAAU,CAC1D,MAAMoP,EAAS2zD,GAAsB9D,EAAaj/D,CAAK,EAKvD,OAAA4iF,GAAiCxzE,EAAQpP,CAAK,EAC9C8/E,GAAyB1wE,CAAM,EAK/B4zD,GAAuB2iB,GAA4Bv2E,EAAQpP,CAAK,EAChEgjE,GAAuBkd,GAA8B9wE,EAAQpP,CAAK,EAClEgjE,GAAuB0C,GAAyBt2D,EAAQpP,CAAK,EAC7DgjE,GAAuB+Y,GAAsB3sE,EAAQpP,CAAK,EAC1DgjE,GAAuB8X,GAAyB1rE,EAAQpP,CAAK,EAC7DgjE,GAAuByM,GAAuBrgE,EAAQpP,CAAK,EAC3DgjE,GAAuBigB,GAAyB7zE,EAAQpP,CAAK,EAC7DgjE,GAAuB4R,GAAiCxlE,EAAQpP,CAAK,EACrEgjE,GAAuBiK,GAAwB79D,EAAQpP,CAAK,EAC5DgjE,GAAuBmF,GAAyB/4D,EAAQpP,CAAK,EAC7DgjE,GAAuBmyB,GAA8B/lF,EAAQpP,CAAK,EAClEgjE,GAAuB0R,GAA4BtlE,EAAQpP,CAAK,EAChEgjE,GAAuB0qB,GAA0Bt+E,EAAQpP,CAAK,EAC9DgjE,GAAuBkC,GAA4B91D,EAAQpP,CAAK,EAChEgjE,GAAuByvB,GAA8BrjF,EAAQpP,CAAK,EAClEgjE,GAAuB98B,GAAgC92B,EAAQpP,CAAK,EACpE6xE,GAA0BziE,EAAQpP,CAAK,EACvCmgF,GAAoB/wE,EAAQpP,CAAK,EACjC2lE,GAAev2D,EAAQpP,CAAK,EAC5Bi8E,GAAY7sE,EAAQpP,CAAK,EACzBu3C,GAAiBnoC,CAAM,EACvB6gF,GAAsB7gF,CAAM,EAC5BsjF,GAAsBtjF,EAAQpP,CAAK,EACnC+6E,GAAe3rE,EAAQpP,CAAK,EAC5B0vE,GAAatgE,EAAQpP,CAAK,EAC1B60E,GAAwBzlE,EAAQpP,CAAK,EACrCqtE,GAAcj+D,EAAQpP,CAAK,EAC3BkjF,GAAe9zE,EAAQpP,CAAK,EAC5BooE,GAAeh5D,EAAQpP,CAAK,EAC5Bq1F,GAAoBjmF,EAAQpP,CAAK,EACjC20E,GAAkBvlE,EAAQpP,CAAK,EAC/B+tF,GAAgB3+E,EAAQpP,CAAK,EAC7B2kF,GAAcv1E,EAAQpP,CAAK,EAC3BmlE,GAAkB/1D,CAAM,EACxBg6D,GAAiBh6D,EAAQpP,CAAK,EAC9B6qE,GAAmBz7D,EAAQpP,CAAK,EAChC6kE,GAAiBz1D,EAAQpP,CAAK,EAC9B4lF,GAAkBx2E,EAAQpP,CAAK,EAC/BolF,GAAch2E,EAAQpP,CAAK,EAC3B6vF,GAAwBzgF,CAAM,EAC9Bg3B,GAAsBh3B,EAAQpP,CAAK,EAC5BoP,CACT,EClEM0oF,GAAiCt8E,EAAAA,WAAW,SAAkB6xE,EAASxnF,EAAK,CAC1E,MAAA7F,EAAQotF,GAAiBC,CAAO,EAChCl4D,EAAgB0iE,GAAqB73F,EAAM,OAAQA,CAAK,EAI9D,aAAyBw8D,GAAqB,CAC5C,cAAArnC,EACA,MAAAn1B,EACA,SAA6B2pB,EAAAA,KAAAq1B,GAAU1jC,EAAS,CAC9C,UAAWtb,EAAM,UACjB,MAAOA,EAAM,MACb,GAAIA,EAAM,GACV,IAAA6F,CAAA,EACC7F,EAAM,eAAgB,CACvB,SAAU,CAAcyc,EAAAA,IAAKk5C,GAAY,CAAE,CAAA,EAAgBl5C,EAAAA,IAAKs7E,GAAU,CAAE,CAAA,EAAgBt7E,EAAAA,IAAKg4B,GAAuB,CAAE,CAAA,CAAC,CAAA,CAC5H,CAAC,CAAA,CACH,CACH,CAAC,EAQYujD,GAA8BzoE,EAAAA,KAAKuoE,EAAW,EAC3DA,GAAY,UAAY,CAQtB,OAAQG,EAAU,MAAM,CACtB,QAASA,EAAU,OAAO,UAAA,CAC3B,EAID,aAAcA,EAAU,OAIxB,kBAAmBA,EAAU,OAK7B,WAAYA,EAAU,KAKtB,aAAcA,EAAU,KAKxB,gBAAiBA,EAAU,KAI3B,gBAAiBA,EAAU,MAAM,CAC/B,QAASA,EAAU,QAAQA,EAAU,MAAM,EAC3C,OAAQA,EAAU,KAClB,eAAgBA,EAAU,KAC1B,gBAAiBA,EAAU,KAC3B,eAAgBA,EAAU,MAAA,CAC3B,EAID,eAAgBA,EAAU,OAK1B,kBAAmBA,EAAU,KAI7B,QAASA,EAAU,OAKnB,2BAA4BA,EAAU,OAKtC,eAAgBA,EAAU,OAC1B,oBAAqBA,EAAU,QAAQA,EAAU,MAAM,EAKvD,mBAAoBA,EAAU,OAI9B,QAASA,EAAU,QAAQA,EAAU,MAAM,EAAE,WAK7C,sBAAuBA,EAAU,OAKjC,QAASA,EAAU,MAAM,CAAC,cAAe,UAAW,UAAU,CAAC,EAK/D,gBAAiBA,EAAU,KAK3B,oBAAqBA,EAAU,KAK/B,kBAAmBA,EAAU,KAK7B,oBAAqBA,EAAU,KAK/B,sBAAuBA,EAAU,KAKjC,qBAAsBA,EAAU,KAKhC,uBAAwBA,EAAU,KAKlC,YAAaA,EAAU,KAMvB,4BAA6BA,EAAU,KAKvC,2BAA4BA,EAAU,KAKtC,sBAAuBA,EAAU,KAKjC,SAAUA,EAAU,MAAM,CAAC,OAAQ,KAAK,CAAC,EAMzC,kBAAmBA,EAAU,OAK7B,qBAAsBA,EAAU,MAAM,CACpC,4BAA6BA,EAAU,IAAA,CACxC,EAKD,iBAAkBA,EAAU,OAM5B,WAAYA,EAAU,MAAM,CAAC,SAAU,QAAQ,CAAC,EAIhD,YAAaA,EAAU,MAAM,CAC3B,MAAOA,EAAU,QAAQA,EAAU,MAAM,CACvC,MAAOA,EAAU,OAAO,WACxB,GAAIA,EAAU,UAAU,CAACA,EAAU,OAAQA,EAAU,MAAM,CAAC,EAC5D,SAAUA,EAAU,OAAO,WAC3B,MAAOA,EAAU,GAClB,CAAA,CAAC,EAAE,WACJ,cAAeA,EAAU,MAAM,CAAC,MAAO,IAAI,CAAC,EAC5C,gCAAiCA,EAAU,KAC3C,yBAA0BA,EAAU,MAAM,CAAC,MAAO,IAAI,CAAC,EACvD,kBAAmBA,EAAU,KAAA,CAC9B,EAKD,eAAgBA,EAAU,OAM1B,iBAAkBA,EAAU,KAM5B,sBAAuBA,EAAU,KAQjC,sBAAuBA,EAAU,KAMjC,gBAAiBA,EAAU,KAM3B,aAAcA,EAAU,KAIxB,SAAUA,EAAU,KAMpB,cAAeA,EAAU,KAKzB,WAAYA,EAAU,KAKtB,qBAAsBA,EAAU,KAKhC,2BAA4BA,EAAU,KAMtC,iBAAkBA,EAAU,KAM5B,iCAAkCA,EAAU,UAAU,CAACA,EAAU,MAAM,CACrE,gBAAiBA,EAAU,KAC3B,UAAWA,EAAU,IAAA,CACtB,EAAGA,EAAU,IAAI,CAAC,EAMnB,aAAcA,EAAU,OAMxB,eAAgBA,EAAU,KAM1B,gBAAiBA,EAAU,KAO3B,4BAA6BA,EAAU,KAKvC,QAASA,EAAU,KAKnB,WAAYA,EAAU,OAKtB,OAAQA,EAAU,MAAM,CACtB,MAAOA,EAAU,KAAK,WACtB,MAAOA,EAAU,KAAK,WACtB,KAAMA,EAAU,KAAK,WACrB,KAAMA,EAAU,KAAK,UAAA,CACtB,EAKD,SAAUA,EAAU,MAAM,CAAC,QAAS,QAAS,OAAQ,OAAQ,EAAK,CAAC,EAInE,MAAOA,EAAU,OAOjB,YAAaA,EAAU,KAOvB,kBAAmBA,EAAU,KAM7B,gBAAiBA,EAAU,KAM3B,eAAgBA,EAAU,KAO1B,cAAeA,EAAU,KAMzB,uBAAwBA,EAAU,KAKlC,gBAAiBA,EAAU,KAO3B,oBAAqBA,EAAU,KAO/B,0BAA2BA,EAAU,KAOrC,oBAAqBA,EAAU,KAO/B,oBAAqBA,EAAU,KAO/B,kBAAmBA,EAAU,KAO7B,mBAAoBA,EAAU,KAO9B,oBAAqBA,EAAU,KAO/B,eAAgBA,EAAU,KAM1B,8BAA+BA,EAAU,KAOzC,oBAAqBA,EAAU,KAK/B,gBAAiBA,EAAU,KAM3B,oBAAqBA,EAAU,KAO/B,YAAaA,EAAU,KAOvB,WAAYA,EAAU,KAKtB,uBAAwBA,EAAU,KAMlC,wBAAyBA,EAAU,KAOnC,uBAAwBA,EAAU,KAOlC,sBAAuBA,EAAU,KAKjC,wBAAyBA,EAAU,KAOnC,SAAUA,EAAU,KAQpB,WAAYA,EAAU,KAKtB,iBAAkBA,EAAU,KAO5B,iBAAkBA,EAAU,KAM5B,eAAgBA,EAAU,KAM1B,cAAeA,EAAU,KAMzB,sBAAuBA,EAAU,KAMjC,0BAA2BA,EAAU,KAMrC,kBAAmBA,EAAU,KAQ7B,cAAeA,EAAU,KAKzB,gBAAiBA,EAAU,QAAQA,EAAU,UAAU,CAACA,EAAU,OAAQA,EAAU,MAAM,CACxF,MAAOA,EAAU,OAAO,WACxB,MAAOA,EAAU,OAAO,UAAA,CACzB,CAAC,CAAC,EAAE,UAAU,EACf,WAAYA,EAAU,MAAM,CAAC,EAAI,CAAC,EAKlC,eAAgBA,EAAU,MAAM,CAC9B,YAAaA,EAAU,IAAA,CACxB,EAOD,eAAgBA,EAAU,MAAM,CAAC,SAAU,QAAQ,CAAC,EAIpD,gBAAiBA,EAAU,MAAM,CAC/B,KAAMA,EAAU,OAAO,WACvB,SAAUA,EAAU,OAAO,UAAA,CAC5B,EAQD,iBAAkBA,EAAU,KAK5B,iBAAkBA,EAAU,OAK5B,YAAaA,EAAU,OAMvB,SAAUA,EAAU,OAKpB,UAAWA,EAAU,OAIrB,cAAeA,EAAU,OAOzB,uBAAwBA,EAAU,OAKlC,KAAMA,EAAU,QAAQA,EAAU,MAAM,EAKxC,aAAcA,EAAU,KAIxB,kBAAmBA,EAAU,UAAU,CAACA,EAAU,QAAQA,EAAU,UAAU,CAACA,EAAU,OAAQA,EAAU,MAAM,CAAC,EAAE,UAAU,EAAGA,EAAU,OAAQA,EAAU,MAAM,CAAC,EAKpK,eAAgBA,EAAU,MAAM,CAAC,SAAU,QAAQ,CAAC,EAIpD,cAAeA,EAAU,OAKzB,uBAAwBA,EAAU,KAKlC,yBAA0BA,EAAU,KAIpC,UAAWA,EAAU,OAIrB,MAAOA,EAAU,OAOjB,YAAaA,EAAU,MAAM,CAAC,SAAU,QAAQ,CAAC,EAKjD,aAAcA,EAAU,QAAQA,EAAU,MAAM,CAAC,MAAO,MAAM,CAAC,CAAC,EAIhE,UAAWA,EAAU,QAAQA,EAAU,MAAM,CAC3C,MAAOA,EAAU,OAAO,WACxB,KAAMA,EAAU,MAAM,CAAC,MAAO,MAAM,CAAC,CAAA,CACtC,CAAC,EAIF,GAAIA,EAAU,UAAU,CAACA,EAAU,QAAQA,EAAU,UAAU,CAACA,EAAU,KAAMA,EAAU,OAAQA,EAAU,IAAI,CAAC,CAAC,EAAGA,EAAU,KAAMA,EAAU,MAAM,CAAC,CACxJ,ECztBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mhOCCA,IAAIl1F,GAAmBC,GAAQA,EAAK,kBAAqB,OAAO,OAAU,SAASC,EAAG+B,EAAG9B,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,IAAIE,EAAO,OAAO,yBAAyB4B,EAAG9B,CAAC,GAC3C,CAACE,IAAS,QAASA,EAAO,CAAC4B,EAAE,WAAa5B,EAAK,UAAYA,EAAK,iBAClEA,EAAO,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAO4B,EAAE9B,CAAC,CAAE,IAE3D,OAAO,eAAeD,EAAGE,EAAIC,CAAI,CACrC,EAAM,SAASH,EAAG+B,EAAG9B,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BD,EAAEE,CAAE,EAAI6B,EAAE9B,CAAC,CACf,GACIG,GAAsBL,GAAQA,EAAK,qBAAwB,OAAO,OAAU,SAASC,EAAGK,EAAG,CAC3F,OAAO,eAAeL,EAAG,UAAW,CAAE,WAAY,GAAM,MAAOK,CAAC,CAAE,CACtE,EAAK,SAASL,EAAGK,EAAG,CAChBL,EAAE,QAAaK,CACnB,GACIC,GAAgBP,GAAQA,EAAK,cAAiB,SAAUQ,EAAK,CAC7D,GAAIA,GAAOA,EAAI,WAAY,OAAOA,EAClC,IAAIC,EAAS,CAAA,EACb,GAAID,GAAO,KAAM,QAASN,KAAKM,EAASN,IAAM,WAAa,OAAO,UAAU,eAAe,KAAKM,EAAKN,CAAC,GAAGH,GAAgBU,EAAQD,EAAKN,CAAC,EACvI,OAAAG,GAAmBI,EAAQD,CAAG,EACvBC,CACX,EACIwB,GAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe00F,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAGC,GAClB,MAAMj3F,GAAUqC,GAAa5D,CAAgB,EACvCkE,GAAQhD,GACRu3F,GAAgBr3F,GAChB4C,GAAaG,GAEb3C,GAAS6C,GACT0J,GAAczI,GAAgBM,EAAsB,EACpD3B,GAAO6B,GACPxB,MAAgBJ,GAAM,YAAU,EAAIK,IAAU,CAChD,OAAQ,CACJ,aAAcA,EAAM,QAAQ,CAAC,CAChC,EACD,KAAM,CACF,WAAY,SACZ,SAAU,SACV,aAAc,UACjB,CACL,EAAE,EACF,SAASi0F,GAAgB,CAAE,MAAAhqF,EAAO,OAAApE,EAAQ,KAAA8D,CAAI,EAAK,CAC/C,KAAM,CAAE,QAAArJ,GAAYP,KACd,CAACo0F,EAASC,CAAU,KAAQp3F,GAAQ,UAAU,EAAK,EACnD4f,EAAO,OAAO,KAAK3S,EAAM,CAAC,CAAC,EAAE,OAC7BoqF,EAAY,IAAI,IAAIz3E,CAAI,EAExBsJ,EAAO,OAAO,QAAQjc,CAAK,EAAE,IAAI,CAAC,CAACjL,EAAGuD,CAAG,IAAM,CACjD,KAAM,CAAE,GAAAmI,EAAI,GAAG4pF,CAAI,EAAK/xF,EACxB,MAAO,CACH,GAAIvD,EACJ,WAAY0L,EACZ,GAAG4pF,CACf,CACA,CAAK,EACD,UAAW/xF,KAAO0H,EACd,UAAWjL,KAAK,OAAO,KAAKuD,CAAG,EAC3B8xF,EAAU,IAAIr1F,CAAC,EAKvB,IAAIu1F,EACAF,EAAU,IAAI,IAAI,GAClBA,EAAU,OAAO,IAAI,EACrBE,EAAW,CAAC,aAAc,GAAGF,CAAS,GAGtCE,EAAW,CAAC,GAAGF,CAAS,EAE5B,MAAM5D,EAAS8D,EAAS,IAAI91F,MAASxB,GAAO,kBAAkBipB,EAAK,IAAIlkB,GAAKA,EAAEvD,CAAC,CAAC,CAAC,CAAC,EAClF,OAAI41F,EAAU,KAAOz3E,EAAK,OAAS,EACvB5f,GAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,MAAQ,EACtEtD,GAAQ,QAAQ,cAAcwM,GAAY,QAAS,CAAE,OAAQ3D,EAAQ,KAAM8D,EAAM,EACjF3M,GAAQ,QAAQ,cAAcyC,GAAW,iBAAkB,CAAE,QAASzC,GAAQ,QAAQ,cAAcyC,GAAW,SAAU,CAAE,QAAS00F,EAAS,SAAUtzF,GAASuzF,EAAWvzF,EAAM,OAAO,OAAO,CAAG,CAAA,EAAG,MAAO7D,GAAQ,QAAQ,cAAcyC,GAAW,WAAY,CAAE,QAAS,OAAS,EAAE,cAAc,EAAG,EACxSzC,GAAQ,QAAQ,cAAck3F,GAAc,SAAU,CAAE,WAAY,GAAM,2BAA4B,GAAM,KAAMhuE,EAAM,UAAW,GAAI,mBAAoB,GAAI,WAAYA,EAAK,OAAS,GAAI,MAAO,CAC5L,QAASiuE,EAAUD,GAAc,YAAc,IAClD,EAAE,UAAW,CACV,QAAS,CACL,aAAc,CACV,qBAAsB,EACzB,CACJ,CACJ,EAAE,QAASK,EAAS,IAAI,CAAChyF,EAAK8W,KAAW,CACtC,MAAO9W,EACP,WAAYiL,GAAU,CAClB,MAAMvD,EAAQuD,EAAO,MACrB,OAAQxQ,GAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,IAAM,EACpEtD,GAAQ,QAAQ,cAAc0C,GAAK,cAAe,CAAE,QAAUzC,GAAO,QAAQgN,GAAS,EAAE,CAAC,CAAE,CAAC,CACnG,EACD,MAAOwmF,EAAOp3E,CAAK,CACvC,EAAkB,CAAG,CAAA,CAAC,EAEX,IACX,iDCnGA,IAAItY,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAek1F,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAGC,EAClB,MAAMz3F,EAAU+D,EAAgBtF,CAAgB,EAC1CuO,EAAcjJ,EAAgBpE,EAAoB,EAClDgD,EAAQ9C,GAER63F,EAAe3zF,EAAgBnB,GAAA,CAAuB,EACtD4J,EAAczI,EAAgBjB,EAAsB,EACpDgK,EAAe/I,EAAgBM,EAAuB,EACtDtB,KAAgBJ,EAAM,YAAU,EAAIK,IAAU,CAChD,MAAO,CACH,QAAS,OACT,SAAU,MACb,EACD,cAAe,CACX,UAAW,aACX,UAAW,IACX,QAASA,EAAM,QAAQ,EAAG,EAC1B,OAAQ,aAAaA,EAAM,QAAQ,OAAO,QAAQ,GAClD,UAAW,aACX,SAAU,MACb,CACJ,EAAC,EACF,SAASy0F,EAAW,CAAE,KAAA9qF,EAAM,MAAAM,EAAO,YAAAP,EAAa,OAAA7D,EAAS,CAAA,GAAO,CAC5D,KAAM,CAAE,QAAAvF,GAAYP,IACpB,OAAIkK,EAAM,SAAW,KACND,EAAY,SAASC,EAAM,CAAC,CAAC,EAAKjN,EAAQ,QAAQ,cAAc03F,EAAa,QAAS,CAAE,WAAYzqF,EAAM,CAAC,EAAG,OAAQ,CAAC,GAAGpE,EAAQ8D,CAAI,CAAG,CAAA,EAAM3M,EAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,KAAO,EACvNtD,EAAQ,QAAQ,cAAcwM,EAAY,QAAS,CAAE,OAAQ3D,EAAQ,YAAa6D,EAAa,KAAMC,CAAI,CAAE,EAC3G3M,EAAQ,QAAQ,cAAc8M,EAAa,QAAS,CAAE,MAAOG,EAAM,CAAC,CAAG,CAAA,CAAC,EAEvEA,EAAM,MAAM1H,MAAWyH,EAAY,SAASzH,CAAG,CAAC,EAC7CvF,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAAMiN,EAAM,IAAI,CAAC1H,EAAK4C,IAAOnI,EAAQ,QAAQ,cAAc03F,EAAa,QAAS,CAAE,IAAK,KAAK,UAAUnyF,CAAG,EAAI,IAAM4C,EAAG,WAAY5C,EAAK,OAAQ,CAAC,GAAGsD,EAAQ8D,EAAO,IAAMxE,CAAC,CAAG,CAAA,CAAE,CAAC,EAGxOnI,EAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,KAAO,EACrEtD,EAAQ,QAAQ,cAAcwM,EAAY,QAAS,CAAE,OAAQ3D,EAAQ,YAAa6D,EAAa,KAAMC,CAAI,CAAE,EAC3GM,EAAM,IAAI,CAAC1H,EAAK4C,IAAOnI,EAAQ,QAAQ,cAAc,MAAO,CAAE,IAAK,KAAK,UAAUuF,CAAG,EAAI,IAAM4C,EAAG,UAAW7E,EAAQ,aAAe,EAChItD,EAAQ,QAAQ,cAAc8M,EAAa,QAAS,CAAE,MAAOvH,CAAK,CAAA,CAAC,CAAE,CAAC,CAEtF,qBC1CIxB,GAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAeq1F,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAGC,GAClB,MAAM53F,GAAU+D,GAAgBtF,CAAgB,EAC1C+N,GAAczI,GAAgBpE,EAAsB,EACpDgD,GAAQ9C,GACRiN,GAAe/I,GAAgBnB,EAAuB,EACtDG,MAAgBJ,GAAM,cAAc,CACtC,MAAO,CACH,QAAS,OACT,SAAU,MACb,CACL,CAAC,EACD,SAASi1F,GAAS,CAAE,MAAA3qF,EAAO,OAAApE,EAAQ,KAAA8D,CAAI,EAAK,CACxC,KAAM,CAAE,QAAArJ,GAAYP,KACd,CAAE,IAAA80F,EAAK,QAAAC,EAAU,EAAE,EAAK7qF,EAC9B,IAAI8qF,EACJ,GAAI,CACAA,EAAO,IAAI,IAAIF,EAAKC,CAAO,EAAE,IAChC,MACS,CACNC,EAAOF,CACV,CACD,OAAQ73F,GAAQ,QAAQ,cAAc,MAAO,CAAE,UAAWsD,EAAQ,KAAO,EACrEtD,GAAQ,QAAQ,cAAcwM,GAAY,QAAS,CAAE,OAAQ3D,EAAQ,KAAM8D,EAAM,EACjF3M,GAAQ,QAAQ,cAAc8M,GAAa,QAAS,CAAE,MAAOirF,CAAM,CAAA,CAAC,CAC5E,2CC5BA,IAAIh0F,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAeo1F,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC7CA,GAAA,QAAGM,EAClB,MAAMh4F,EAAU+D,EAAgBtF,CAAgB,EAC1CuO,EAAcjJ,EAAgBpE,EAAoB,EAElDM,EAASJ,GACTuK,EAASxH,GACTo0F,EAAoBjzF,EAAgBjB,EAA4B,EAChE00F,EAAezzF,EAAgBM,GAAA,CAAuB,EACtDszF,EAAa5zF,EAAgBQ,EAAqB,EAClD4I,EAAgBpJ,EAAgBS,EAAwB,EACxDyzF,EAAuB,IAEvBC,EAAa,CACf,eACA,SACA,WACA,cACA,WACA,aACA,WACA,aACA,UACJ,EACA,SAASF,EAAWl5F,EAAO,CACvB,KAAM,CAAE,WAAAq5F,EAAY,KAAAC,EAAO,CAAE,EAAE,gBAAAC,EAAkB,CAAE,EAAE,aAAAC,EAAc,UAAAC,EAAYhzF,GAAOA,EAAK,SAAAizF,EAAU,OAAA3vF,EAAS,CAAE,CAAA,EAAM/J,EAChH25F,EAAQ,IAAI,IAAI,CAAC,GAAGL,EAAM,GAAGF,EAAY,GAAGG,CAAe,CAAC,EAC5D,CAAE,aAAAK,EAAc,GAAGpB,CAAI,EAAKa,EAC5BQ,EAAsB,CAAE,GAAGrB,EAAM,GAAGoB,CAAY,EAChDE,KAAoB34F,EAAO,kBAAkB,OAAO,QAAQ04F,CAAmB,EAAE,OAAO,CAAC,CAAC32F,EAAGI,CAAC,IAAMA,IAAM,QAAa,CAACq2F,EAAM,IAAIz2F,CAAC,CAAC,EAAG6G,CAAM,EACnJ,OAAQ7I,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAAM,OAAO,QAAQ24F,CAAmB,EACnG,OAAO,CAAC,CAAC32F,EAAGI,CAAC,IAAMA,IAAM,QAAa,CAACq2F,EAAM,IAAIz2F,CAAC,CAAC,EACnD,IAAI,CAAC,CAACsD,EAAK2H,CAAK,IAAM,CACvB,MAAMP,KAAkBzM,EAAO,cAAc,CAAC,GAAG4I,EAAQvD,CAAG,EAAGgzF,CAAY,EAC3E,GAAI,MAAM,QAAQrrF,CAAK,EAGnB,OAAOA,EAAM,OAAS,GAAKA,EAAM,MAAM1H,MAAWyH,EAAY,SAASzH,CAAG,CAAC,EAAKvF,EAAQ,QAAQ,cAAcg3F,EAAkB,QAAS,CAAE,IAAK1xF,EAAK,KAAMA,EAAK,OAAQuD,EAAQ,MAAOoE,CAAO,CAAA,EAAMjN,EAAQ,QAAQ,cAAcw3F,EAAa,QAAS,CAAE,IAAKlyF,EAAK,KAAMA,EAAK,MAAO2H,EAAO,YAAaP,EAAa,OAAQ7D,CAAQ,CAAA,EAEtU,MAAQmE,EAAY,SAASC,CAAK,EAAG,CACtC,KAAM,CAAE,gBAAAorF,EAAiB,GAAGf,CAAI,EAAKx4F,EACrC,SAAWsL,EAAO,eAAe6C,CAAK,EAAKurF,EAAW,KAAQx4F,EAAQ,QAAQ,cAAc23F,EAAW,QAAS,CAAE,IAAKryF,EAAK,KAAMA,EAAK,OAAQuD,EAAQ,MAAOoE,CAAO,CAAA,EAAOjN,EAAQ,QAAQ,cAAcg4F,EAAY,CAAE,IAAK1yF,EAAK,GAAGgyF,EAAM,WAAYrqF,EAAO,aAAcqrF,EAAc,OAAQ,CAAC,GAAGzvF,EAAQvD,CAAG,CAAG,CAAA,CACvT,KAEG,QAAQtF,EAAQ,QAAQ,cAAcmN,EAAc,QAAS,CAAE,IAAK7H,EAAK,KAAMA,EAAK,MAAOizF,EAAUtrF,EAAO3H,CAAG,EAAG,YAAaoH,EAAa,OAAQ7D,EAAQ,MAAO,KAAK,IAAI+vF,EAAeX,CAAoB,CAAG,CAAA,CAEzN,CAAA,CAAC,CACN,wBClDA,IAAIp2F,EAAmBC,GAAQA,EAAK,kBAAqB,OAAO,OAAU,SAASC,EAAG+B,EAAG9B,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,IAAIE,EAAO,OAAO,yBAAyB4B,EAAG9B,CAAC,GAC3C,CAACE,IAAS,QAASA,EAAO,CAAC4B,EAAE,WAAa5B,EAAK,UAAYA,EAAK,iBAClEA,EAAO,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAO4B,EAAE9B,CAAC,CAAE,IAE3D,OAAO,eAAeD,EAAGE,EAAIC,CAAI,CACpC,EAAK,SAASH,EAAG+B,EAAG9B,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BD,EAAEE,CAAE,EAAI6B,EAAE9B,CAAC,CACd,GACGG,EAAsBL,GAAQA,EAAK,qBAAwB,OAAO,OAAU,SAASC,EAAGK,EAAG,CAC3F,OAAO,eAAeL,EAAG,UAAW,CAAE,WAAY,GAAM,MAAOK,CAAC,CAAE,CACtE,EAAK,SAASL,EAAGK,EAAG,CAChBL,EAAE,QAAaK,CACnB,GACIC,EAAgBP,GAAQA,EAAK,cAAiB,SAAUQ,EAAK,CAC7D,GAAIA,GAAOA,EAAI,WAAY,OAAOA,EAClC,IAAIC,EAAS,CAAA,EACb,GAAID,GAAO,KAAM,QAASN,KAAKM,EAASN,IAAM,WAAa,OAAO,UAAU,eAAe,KAAKM,EAAKN,CAAC,GAAGH,EAAgBU,EAAQD,EAAKN,CAAC,EACvI,OAAAG,EAAmBI,EAAQD,CAAG,EACvBC,CACX,EACIwB,EAAmBjC,GAAQA,EAAK,iBAAoB,SAAUQ,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAciK,EAAU,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5DA,EAAA,WAAqBA,EAAyB,eAAAA,EAAA,gBAA0B,OACxEA,EAAA,SAAmBssF,EACnBtsF,EAAA,eAAyBusF,EAEzB,MAAM94F,EAAUqC,EAAa5D,CAAgB,EACvCs6F,EAAyBp5F,GACzB8C,EAAa5C,GACb8C,EAAQC,GACRC,EAAeC,GAEfk2F,EAAej1F,EAAgBM,EAAyC,EAExEpE,EAASsE,GACT7B,EAAO8B,GACPoH,EAA2B7H,EAAgBuH,EAAoC,EAC/E6B,EAAgBpJ,EAAgBk1F,EAAwB,EACxDvB,EAAe3zF,EAAgBm1F,GAAA,CAAuB,EACtD9uF,EAAS+uF,GAETC,EAAc,CAChB,OACA,QACA,MACA,SACA,UACA,cACA,MACJ,EACMr2F,KAAgBJ,EAAM,YAAU,EAAIK,GAAS,CAC/C,IAAIpC,EACJ,MAAQ,CACJ,sBAAuB,CACnB,QAAS,QACT,QAASoC,EAAM,QAAQ,CAAC,CAC3B,EACD,WAAY,CACR,QAASpC,EAAKoC,EAAM,QAAQ,YAAc,MAAQpC,IAAO,OAAS,OAASA,EAAG,eAAiB,MAClG,CACT,CACA,CAAC,EACD,SAASi4F,EAAS,CAAE,SAAA11F,EAAU,MAAAg3C,EAAO,gBAAAk/C,EAAkB,EAAI,EAAK,CAC5D,KAAM,CAAE,QAAA/1F,GAAYP,IACd,CAACu2F,EAAUC,CAAW,KAAQv5F,EAAQ,UAAUq5F,CAAe,EACrE,OAAQr5F,EAAQ,QAAQ,cAAcyC,EAAW,UAAW,CAAE,SAAU62F,EAAU,SAAU,IAAMC,EAAY/vF,GAAK,CAACA,CAAC,EAAG,gBAAiB,CAAE,cAAe,GAAM,QAAS,IAAO,EAC5KxJ,EAAQ,QAAQ,cAAcyC,EAAW,iBAAkB,CAAE,WAAYzC,EAAQ,QAAQ,cAAcg5F,EAAa,QAAS,CAAE,UAAW11F,EAAQ,UAAU,CAAE,CAAG,EAC7JtD,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,CAAE,QAAS,UAAY03C,CAAK,CAAC,EACtFn6C,EAAQ,QAAQ,cAAcyC,EAAW,iBAAkB,CAAE,UAAWa,EAAQ,uBAAyBH,CAAQ,CAAC,CACzH,CACD,SAASq2F,EAAS16F,EAAO,CACrB,KAAM,CAAE,QAAAuB,CAAS,EAAGvB,EACd0J,EAASnI,EAAQ,OACjBo5F,EAAY,CACd,KAAM,IACN,EAAK,GACL,EAAK,GACb,EACUlyF,EAAMkyF,EAAUjxF,CAAM,EAAI,IAAIixF,EAAUjxF,CAAM,CAAC,IAAM,GACrDkxF,KAAUz5F,EAAO,mBAAmBI,CAAO,EACjD,OAAOL,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAAM,GAAG05F,CAAG,IAAInyF,CAAG,EAAE,CACvF,CACD,SAASoyF,EAAY76F,EAAO,CACxB,KAAM,CAAE,QAAAuB,CAAS,EAAGvB,EACd2O,EAAMpN,EAENu5F,EAAgB,CAAE,GAAGnsF,EAAK,GAAGA,EAAI,YAAY,EAC7C,CAAE,MAAAxM,EAAO,IAAAC,CAAK,EAAG04F,EACjBC,EAAmB,CACrB,GAAGD,EACH,UAAY35F,EAAO,UAAUiB,EAAMD,CAAK,CAChD,EACU64F,EAAsB,CACxB,YAAa,cACb,KAAM,OACN,OAAQ,SACR,KAAM,MACd,EACI,OAAQ95F,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAC5DA,EAAQ,QAAQ,cAAcmN,EAAc,QAAS,CAAE,KAAM,WAAY,MAAOnN,EAAQ,QAAQ,cAAcw5F,EAAU,CAAE,GAAG16F,EAAO,QAAS86F,CAAe,CAAA,EAAG,EAC/J,OAAO,QAAQE,CAAmB,EAC7B,IAAI,CAAC,CAACx0F,EAAKqH,CAAI,IAAM,CAACA,EAAMktF,EAAiBv0F,CAAG,CAAC,CAAC,EAClD,OAAO,CAAC,CAAG,CAAA2H,CAAK,IAAMA,GAAS,IAAI,EACnC,IAAI,CAAC,CAACN,EAAMM,CAAK,IAAOjN,EAAQ,QAAQ,cAAcmN,EAAc,QAAS,CAAE,IAAKR,EAAM,KAAMA,EAAM,MAAOM,CAAO,CAAA,CAAE,CAAC,CACnI,CACD,MAAM8sF,EAAmBj7F,GAAU,CAC/B,KAAM,CAAE,MAAAq7C,EAAQ,cAAgB,EAAGr7C,EACnC,OAAQkB,EAAQ,QAAQ,cAAc64F,EAAU,CAAE,GAAG/5F,EAAO,MAAOq7C,CAAO,EACtEn6C,EAAQ,QAAQ,cAAc25F,EAAa,CAAE,GAAG76F,CAAO,CAAA,CAAC,CAChE,EACAyN,EAAA,gBAA0BwtF,EAC1B,MAAMC,EAAkBl7F,GAAU,CAC9B,KAAM,CAAE,QAAAuB,CAAS,EAAGvB,EACpB,OAAQkB,EAAQ,QAAQ,cAAc64F,EAAU,CAAE,GAAG/5F,EAAO,MAAO,YAAc,EAC7EkB,EAAQ,QAAQ,cAAc03F,EAAa,QAAS,CAAE,GAAG54F,EAAO,WAAYuB,CAAS,CAAA,CAAC,CAC9F,EACAkM,EAAA,eAAyBytF,EACzB,SAASlB,EAAeh6F,EAAO,CAC3B,KAAM,CAAE,KAAAs5F,EAAO,CAAA,EAAI,MAAAh4F,EAAO,QAAAC,EAAS,MAAAwpB,EAAQ,CAAG,EAAG/qB,EAC3C,CAAE,SAAAgjC,CAAU,EAAG1hC,EACf,CAAE,KAAA65F,EAAM,KAAAttF,EAAO,GAAI,GAAAe,EAAK,GAAI,KAAAC,EAAO,GAAI,YAAAzC,EAAa,SAAAgvF,CAAQ,EAAK75F,EACjE85F,KAASl6F,EAAO,QAAQG,CAAK,EAAE,cAC/Bg6F,KAAcn6F,EAAO,YAAYG,CAAK,EACtCi6F,EAAaF,EAAG,uBAAuB,yBAA0B,KAAM,CACzE,QAAAC,EACA,QAAA/5F,EACA,MAAAD,CACR,CAAK,EACD,OAAQJ,EAAQ,QAAQ,cAAc64F,EAAU,CAAE,SAAWzuF,EAAO,eAAeuC,EAAMe,EAAIC,CAAI,CAAG,EAChG3N,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,cAAc,EACzEzC,EAAQ,QAAQ,cAAc25F,EAAa,CAAE,GAAG76F,CAAK,CAAE,EACvDm7F,EAAQj6F,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAC5DA,EAAQ,QAAQ,cAAcyC,EAAW,QAAS,IAAI,EACtDzC,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,cAAc,EACzEzC,EAAQ,QAAQ,cAAc25F,EAAa,CAAE,GAAG76F,EAAO,QAAS,CACxD,GAAGm7F,EAEH,MAAOA,EAAK,MAEZ,IAAKA,EAAK,IAEV,QAASA,EAAK,QACd,SAAUC,EAAW,OACzC,CAAmB,CAAA,CAAC,EAAK,KACjBl6F,EAAQ,QAAQ,cAAcyC,EAAW,QAAS,IAAI,EACtDzC,EAAQ,QAAQ,cAAcyC,EAAW,WAAY,KAAM,YAAY,EACvEzC,EAAQ,QAAQ,cAAc03F,EAAa,QAAS,CAAE,WAAYr3F,EAAS,GAAGvB,EAAO,KAAMs5F,EAAM,gBAAiBgB,CAAW,CAAE,EAC/Hp5F,EAAQ,QAAQ,cAAc+4F,EAAuB,cAAe,CAAE,kBAAmBt3F,GAAKzB,EAAQ,QAAQ,cAAc0C,EAAK,aAAc,CAAE,MAAOjB,EAAE,KAAK,CAAE,CAAG,EAChKzB,EAAQ,QAAQ,cAAc4L,EAAyB,QAAS,CAAE,GAAG9M,CAAK,CAAE,CAAC,EACjFu7F,EAAcr6F,EAAQ,QAAQ,cAAcA,EAAQ,QAAQ,SAAU,KAClEA,EAAQ,QAAQ,cAAcyC,EAAW,QAAS,IAAI,EACtDzC,EAAQ,QAAQ,cAAc64F,EAAU,CAAE,MAAOwB,EAAW,IAAM,EAC9Dr6F,EAAQ,QAAQ,cAAcq6F,EAAW,UAAW,CAAE,GAAGv7F,CAAK,CAAE,CAAC,CAAC,EAAK,KAC/E+qB,EAAQiY,IAAa52B,GAAgB,MAA0CA,EAAY,QAAWlL,EAAQ,QAAQ,cAAc64F,EAAU,CAAE,MAAO,cAAe,gBAAiBhvE,EAAQ,CAAG,EAAE3e,EAAY,IAAI,CAAClF,EAAK2C,IAAS3I,EAAQ,QAAQ,cAAc84F,EAAgB,CAAE,IAAK,KAAK,UAAU9yF,CAAG,EAAG,QAAS,CAAE,GAAGA,EAAK,SAAU,GAAGk0F,CAAQ,IAAIvxF,CAAG,IAAM,MAAOvI,EAAO,MAAOypB,EAAQ,CAAC,CAAE,CAAE,CAAC,EAAK,IAAI,CACrZ,CACD,MAAMywE,KAAwBz3F,EAAa,UAAU,SAAU,CAAE,MAAAzC,CAAK,EAAI,CACtE,KAAM,CAAE,MAAAM,EAAO,YAAA65F,CAAa,EAAGn6F,EAC/B,GAAIM,EACA,OAAOV,EAAQ,QAAQ,cAAc0C,EAAK,aAAc,CAAE,MAAOhC,CAAK,CAAE,EAE5E,GAAI,CAAC65F,EACD,OAAO,KAMX,MAAMC,EAAI,KAAK,MAAM,KAAK,UAAUD,EAAa,CAACppF,EAAG/O,IAAOA,IAAM,OAAY,KAAOA,CAAE,CAAC,EACxF,SAAWgI,EAAO,SAASowF,CAAC,EAAI,KAAOx6F,EAAQ,QAAQ,cAAc84F,EAAgB,CAAE,MAAO14F,EAAO,QAASo6F,CAAC,CAAE,CACrH,CAAC,EACDjuF,EAAA,QAAkB+tF,EAClB,IAAIG,EAAevB,KACnB,OAAO,eAAe3sF,EAAS,aAAc,CAAE,WAAY,GAAM,IAAK,UAAY,CAAE,OAAOxI,EAAgB02F,CAAY,EAAE,OAAQ,CAAI,CAAA,oCC5K/H13F,GAAY23F,GAAU,EAAG,CAC3B,aAAc,CACV,WAAY,cACZ,SAAU,YACb,EACD,cAAe,CACX,WAAY,YACZ,OAAQ,EACR,SAAU,MACb,CACL,CAAC,EACc,SAASC,GAAiB,CAAE,IAAApzF,GAAO,CAC9C,KAAM,CAAE,QAAAjE,GAAYP,KACd,CAAC63F,EAAQC,CAAS,EAAIC,EAAQ,SAAC,EAAK,EACpC,CAACC,EAAUC,CAAW,EAAIF,EAAQ,SAAC,EAAK,EACxC,CAACG,EAAWC,CAAY,EAAIJ,EAAQ,SAAC,EAAK,EAC1CK,EAAO5zF,EACR,IAAI,CAAC,CAAC6zF,EAAIC,CAAE,IAAM,CAACD,EAAIL,EAAWM,EAAKA,EAAG,WAAW,IAAK,EAAE,CAAC,CAAC,EAC9D,OAAOzyF,GAAMqyF,EAAY,GAAO,CAAC,CAACryF,EAAE,CAAC,CAAE,EACvC,IAAI,CAAC,CAACwyF,EAAIC,CAAE,IAAM,IAAID,CAAE;AAAA,EAAKL,EAAWM,EAAKA,EAAG,WAAW,IAAK,EAAE,CAAC,EAAE,EACrE,KAAK;AAAA,CAAI,EACd,OAAQC,GAAM,cAAcA,GAAM,SAAU,KACxCA,GAAM,cAAcC,GAAQ,CAAE,MAAO,UAAW,QAAS,YAAa,QAAS,IAAM,CAC7EC,GAAKL,CAAI,EACTN,EAAU,EAAI,EACd,WAAW,IAAMA,EAAU,EAAK,EAAG,GAAG,CACtD,GAAiBD,EAAS,UAAY,mBAAmB,EACjDU,GAAM,cAAcG,GAAW,CAAE,MAAO,YAAa,QAASV,EAAU,SAAU,IAAMC,EAAY,CAACD,CAAQ,CAAC,CAAE,EAChHO,GAAM,cAAcG,GAAW,CAAE,MAAO,aAAc,QAASR,EAAW,SAAU,IAAMC,EAAa,CAACD,CAAS,CAAC,CAAE,EACpHK,GAAM,cAAc9oC,GAAW,CAAE,QAAS,WAAY,UAAW,GAAM,UAAWlvD,EAAQ,cAAe,QAAS,EAAG,QAAS,GAAI,UAAW,GAAM,MAAO63F,EAAM,WAAY,CACpK,SAAU,GACV,QAAS,CACL,MAAO73F,EAAQ,YAClB,CACJ,CAAA,CAAE,CAAC,CAChB","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266]}