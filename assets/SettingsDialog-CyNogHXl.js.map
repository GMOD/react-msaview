{"version":3,"file":"SettingsDialog-CyNogHXl.js","sources":["../../../lib/dist/components/dialogs/SettingsDialog.js"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, MenuItem, Slider, TextField, Typography, } from '@mui/material';\nimport colorSchemes from '../../colorSchemes';\nconst useStyles = makeStyles()(theme => ({\n    field: {\n        margin: theme.spacing(4),\n    },\n    flex: {\n        display: 'flex',\n    },\n}));\nfunction FormControlLabel2(rest) {\n    return (React.createElement(\"div\", null,\n        React.createElement(FormControlLabel, { ...rest })));\n}\nconst SettingsContent = observer(function ({ model }) {\n    const { classes } = useStyles();\n    const { bgColor, colWidth, colorSchemeName, drawTree, drawNodeBubbles, labelsAlignRight, noTree, rowHeight, showBranchLen, treeWidthMatchesArea, treeWidth, } = model;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", null,\n            React.createElement(Button, { onClick: () => model.clearHidden() }, \"Clear hidden\"),\n            React.createElement(\"h1\", null, \"Tree options\"),\n            React.createElement(FormControlLabel2, { control: React.createElement(Checkbox, { checked: showBranchLen, onChange: () => model.setShowBranchLen(!showBranchLen) }), label: \"Show branch length?\" }),\n            React.createElement(FormControlLabel2, { control: React.createElement(Checkbox, { checked: drawNodeBubbles, onChange: () => model.setDrawNodeBubbles(!drawNodeBubbles) }), label: \"Draw clickable bubbles on tree branches?\" }),\n            React.createElement(FormControlLabel2, { control: React.createElement(Checkbox, { checked: drawTree, onChange: () => model.setDrawTree(!drawTree) }), label: \"Show tree?\" }),\n            React.createElement(FormControlLabel2, { control: React.createElement(Checkbox, { checked: labelsAlignRight, onChange: () => model.setLabelsAlignRight(!labelsAlignRight) }), label: \"Tree labels align right?\" }),\n            !noTree ? (React.createElement(\"div\", null,\n                React.createElement(FormControlLabel2, { control: React.createElement(Checkbox, { checked: treeWidthMatchesArea, onChange: () => model.setTreeWidthMatchesArea(!treeWidthMatchesArea) }), label: \"Make tree width fit to tree area?\" }),\n                !treeWidthMatchesArea ? (React.createElement(\"div\", { className: classes.flex },\n                    React.createElement(Typography, null,\n                        \"Tree width (\",\n                        treeWidth,\n                        \"px)\"),\n                    React.createElement(Slider, { className: classes.field, min: 50, max: 600, value: treeWidth, onChange: (_, val) => model.setTreeWidth(val) }))) : null)) : null),\n        React.createElement(\"div\", null,\n            React.createElement(\"h1\", null, \"MSA options\"),\n            React.createElement(FormControlLabel2, { control: React.createElement(Checkbox, { checked: bgColor, onChange: () => model.setBgColor(!bgColor) }), label: \"Color background tiles of MSA?\" }),\n            React.createElement(\"div\", { className: classes.flex },\n                React.createElement(Typography, null,\n                    \"Column width (\",\n                    colWidth,\n                    \"px)\"),\n                React.createElement(Slider, { className: classes.field, min: 1, max: 50, value: colWidth, onChange: (_, val) => model.setColWidth(val) })),\n            React.createElement(\"div\", { className: classes.flex },\n                React.createElement(Typography, null,\n                    \"Row height (\",\n                    rowHeight,\n                    \"px)\"),\n                React.createElement(Slider, { className: classes.field, min: 1, max: 50, value: rowHeight, onChange: (_, val) => model.setRowHeight(val) })),\n            React.createElement(TextField, { select: true, label: \"Color scheme\", value: colorSchemeName, onChange: event => model.setColorSchemeName(event.target.value) }, Object.keys(colorSchemes).map(option => (React.createElement(MenuItem, { key: option, value: option }, option)))))));\n});\nconst SettingsDialog = observer(function ({ model, onClose, }) {\n    return (React.createElement(Dialog, { open: true, onClose: () => onClose(), title: \"Settings\" },\n        React.createElement(DialogContent, null,\n            React.createElement(SettingsContent, { model: model }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { onClick: () => onClose(), variant: \"contained\", color: \"primary\" }, \"Submit\")))));\n});\nexport default SettingsDialog;\n//# sourceMappingURL=SettingsDialog.js.map"],"names":["useStyles","makeStyles","theme","FormControlLabel2","rest","React","FormControlLabel","SettingsContent","observer","model","classes","bgColor","colWidth","colorSchemeName","drawTree","drawNodeBubbles","labelsAlignRight","noTree","rowHeight","showBranchLen","treeWidthMatchesArea","treeWidth","Button","Checkbox","Typography","Slider","_","val","TextField","event","colorSchemes","option","MenuItem","SettingsDialog","onClose","Dialog","DialogContent","DialogActions"],"mappings":"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"}