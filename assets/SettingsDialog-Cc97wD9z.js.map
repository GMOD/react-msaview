{"version":3,"file":"SettingsDialog-Cc97wD9z.js","sources":["../../../lib/dist/components/dialogs/SettingsDialog.js"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, MenuItem, Slider, TextField, Typography, } from '@mui/material';\nimport colorSchemes from '../../colorSchemes';\nimport Checkbox2 from '../Checkbox2';\nconst useStyles = makeStyles()(theme => ({\n    field: {\n        margin: theme.spacing(4),\n    },\n    flex: {\n        display: 'flex',\n    },\n}));\nconst SettingsContent = observer(function ({ model }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TreeSettings, { model: model }),\n        React.createElement(MSASettings, { model: model })));\n});\nconst TreeSettings = observer(function TreeSettings({ model, }) {\n    const { classes } = useStyles();\n    const { drawTree, drawLabels, drawNodeBubbles, labelsAlignRight, noTree, showBranchLen, treeWidthMatchesArea, treeWidth, } = model;\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Tree options\"),\n        React.createElement(Checkbox2, { checked: showBranchLen, onChange: () => model.setShowBranchLen(!showBranchLen), label: \"Show branch length?\" }),\n        React.createElement(Checkbox2, { checked: drawNodeBubbles, onChange: () => model.setDrawNodeBubbles(!drawNodeBubbles), label: \"Draw clickable bubbles on tree branches?\" }),\n        React.createElement(Checkbox2, { checked: drawTree, onChange: () => model.setDrawTree(!drawTree), label: \"Show tree?\" }),\n        React.createElement(Checkbox2, { checked: labelsAlignRight, onChange: () => model.setLabelsAlignRight(!labelsAlignRight), label: \"Tree labels align right?\" }),\n        React.createElement(Checkbox2, { checked: drawLabels, onChange: () => model.setDrawLabels(!drawLabels), label: \"Draw labels\" }),\n        !noTree ? (React.createElement(\"div\", null,\n            React.createElement(Checkbox2, { checked: treeWidthMatchesArea, onChange: () => model.setTreeWidthMatchesArea(!treeWidthMatchesArea), label: \"Make tree width fit to tree area?\" }),\n            !treeWidthMatchesArea ? (React.createElement(\"div\", { className: classes.flex },\n                React.createElement(Typography, null,\n                    \"Tree width (\",\n                    treeWidth,\n                    \"px)\"),\n                React.createElement(Slider, { className: classes.field, min: 50, max: 600, value: treeWidth, onChange: (_, val) => model.setTreeWidth(val) }))) : null)) : null));\n});\nconst MSASettings = observer(function MSASettings({ model, }) {\n    const { classes } = useStyles();\n    const { bgColor, colWidth, colorSchemeName, rowHeight } = model;\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"MSA options\"),\n        React.createElement(Checkbox2, { checked: bgColor, onChange: () => model.setBgColor(!bgColor), label: \"Color background tiles of MSA?\" }),\n        React.createElement(\"div\", { className: classes.flex },\n            React.createElement(Typography, null,\n                \"Column width (\",\n                colWidth,\n                \"px)\"),\n            React.createElement(Slider, { className: classes.field, min: 1, max: 50, value: colWidth, onChange: (_, val) => model.setColWidth(val) })),\n        React.createElement(\"div\", { className: classes.flex },\n            React.createElement(Typography, null,\n                \"Row height (\",\n                rowHeight,\n                \"px)\"),\n            React.createElement(Slider, { className: classes.field, min: 1, max: 50, value: rowHeight, onChange: (_, val) => model.setRowHeight(val) })),\n        React.createElement(TextField, { select: true, label: \"Color scheme\", value: colorSchemeName, onChange: event => model.setColorSchemeName(event.target.value) }, Object.keys(colorSchemes).map(option => (React.createElement(MenuItem, { key: option, value: option }, option))))));\n});\nconst SettingsDialog = observer(function ({ model, onClose, }) {\n    return (React.createElement(Dialog, { open: true, onClose: () => onClose(), title: \"Settings\", maxWidth: \"xl\" },\n        React.createElement(DialogContent, { style: { width: '80em' } },\n            React.createElement(SettingsContent, { model: model }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { onClick: () => onClose(), variant: \"contained\", color: \"primary\" }, \"Submit\")))));\n});\nexport default SettingsDialog;\n//# sourceMappingURL=SettingsDialog.js.map"],"names":["useStyles","makeStyles","theme","SettingsContent","observer","model","React","TreeSettings","MSASettings","classes","drawTree","drawLabels","drawNodeBubbles","labelsAlignRight","noTree","showBranchLen","treeWidthMatchesArea","treeWidth","Checkbox2","Typography","Slider","_","val","bgColor","colWidth","colorSchemeName","rowHeight","TextField","event","colorSchemes","option","MenuItem","SettingsDialog","onClose","Dialog","DialogContent","DialogActions","Button"],"mappings":"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"}