{"version":3,"file":"InterProScanDialog-AVXd1iEI.js","sources":["../../../lib/dist/launchInterProScan.js","../../../lib/dist/components/dialogs/InterProScanDialog.js"],"sourcesContent":["import { getSession } from '@jbrowse/core/util';\nimport { jsonfetch, textfetch, timeout } from './fetchUtils';\nconst base = 'https://www.ebi.ac.uk/Tools/services/rest';\nasync function runInterProScan({ seq, onProgress, onJobId, programs, model, }) {\n    const jobId = await textfetch(`${base}/iprscan5/run`, {\n        method: 'POST',\n        body: new URLSearchParams({\n            email: 'colin.diesh@gmail.com',\n            sequence: seq,\n            programs: programs.join(','),\n        }),\n    });\n    onJobId?.(jobId);\n    await wait({\n        jobId,\n        onProgress,\n    });\n    await loadInterProScanResultsWithStatus({ jobId, model });\n}\nexport function loadInterProScanResults(jobId) {\n    return jsonfetch(`${base}/iprscan5/result/${jobId}/json`);\n}\nasync function wait({ onProgress, jobId, }) {\n    const url = `${base}/iprscan5/status/${jobId}`;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        while (true) {\n            for (let i = 0; i < 10; i++) {\n                await timeout(1000);\n                onProgress({ msg: `Checking status ${10 - i}`, url });\n            }\n            const result = await textfetch(url);\n            if (result.includes('FINISHED')) {\n                break;\n            }\n            if (result.includes('FAILURE')) {\n                throw new Error(`Failed to run: jobId ${jobId}`);\n            }\n        }\n    }\n    finally {\n        onProgress();\n    }\n}\nexport async function launchInterProScan({ algorithm, seq, programs, onJobId, onProgress, model, }) {\n    try {\n        onProgress({ msg: `Launching ${algorithm} MSA` });\n        if (algorithm === 'interproscan') {\n            await runInterProScan({\n                seq,\n                onJobId,\n                onProgress,\n                programs,\n                model,\n            });\n        }\n        throw new Error('unknown algorithm');\n    }\n    finally {\n        onProgress();\n    }\n}\nexport async function loadInterProScanResultsWithStatus({ jobId, model, }) {\n    try {\n        model.setStatus({\n            msg: `Downloading results of ${jobId} (for larger sequences this can be slow, click status to download and upload in the manual tab)`,\n            url: `https://www.ebi.ac.uk/Tools/services/rest/iprscan5/result/${jobId}/json`,\n        });\n        const ret = await loadInterProScanResults(jobId);\n        model.setInterProAnnotations(Object.fromEntries(ret.results.map(r => [r.xref[0].id, r])));\n        model.setShowDomains(true);\n        getSession(model).notify(`Loaded interproscan ${jobId} results`, 'success');\n    }\n    catch (e) {\n        console.error(e);\n        getSession(model).notifyError(`${e}`, e);\n    }\n    finally {\n        model.setStatus();\n    }\n}\n//# sourceMappingURL=launchInterProScan.js.map","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, DialogActions, DialogContent, Typography } from '@mui/material';\nimport { getSession } from '@jbrowse/core/util';\nimport { launchInterProScan } from '../../launchInterProScan';\nimport { Dialog } from '@jbrowse/core/ui';\nconst InterProScanDialog = observer(function ({ handleClose, model, }) {\n    const [vals, setVals] = useState([\n        {\n            name: 'NCBIfam',\n            description: 'NCBI RefSeq FAMs including TIGRFAMs',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'SFLD',\n            description: 'Structure function linkage database',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'Phobius',\n            checked: true,\n            description: 'A combined transmembrane topology and signal peptide predictor',\n            category: 'Other sequence features',\n        },\n        {\n            name: 'SignalP',\n            checked: true,\n            category: 'Other sequence features',\n        },\n        {\n            name: 'SignalP_EUK',\n            category: 'Other category',\n            checked: true,\n        },\n        {\n            name: 'SignalP_GRAM_POSITIVE',\n            category: 'Other category',\n            checked: true,\n        },\n        {\n            name: 'SignalP_GRAM_NEGATIVE',\n            checked: true,\n            category: 'Other category',\n        },\n        {\n            name: 'SUPERFAMILY',\n            category: 'Structural domains',\n            checked: true,\n        },\n        {\n            name: 'PANTHER',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'Gene3D',\n            category: 'Structural domains',\n            checked: true,\n        },\n        {\n            name: 'Hamap',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'ProSiteProfiles',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'ProSitePatterns',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'Coils',\n            category: 'Other sequence features',\n            checked: true,\n        },\n        {\n            name: 'SMART',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'CDD',\n            description: 'Conserved Domains Database',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'PRINTS',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'Pfam',\n            category: 'Families, domains, sites & repeats',\n            checked: true,\n        },\n        {\n            name: 'MobiDBLite',\n            checked: true,\n            category: 'Other sequence features',\n        },\n        {\n            name: 'PIRSF',\n            checked: true,\n            category: 'Other category',\n        },\n        {\n            name: 'TMHMM',\n            checked: true,\n            category: 'Other sequence features',\n        },\n        {\n            name: 'AntiFam',\n            checked: true,\n            category: 'Other category',\n        },\n        {\n            name: 'FunFam',\n            checked: true,\n            category: 'Other category',\n        },\n        {\n            name: 'PIRSR',\n            checked: true,\n            category: 'Families, domains, sites & repeats',\n        },\n    ]);\n    const programs = vals.filter(e => e.checked).map(e => e.name);\n    const [show, setShow] = useState(false);\n    return (React.createElement(Dialog, { maxWidth: \"xl\", title: \"Query InterProScan API for domains\", onClose: () => {\n            handleClose();\n        }, open: true },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"This will run InterProScan via the InterProScan API on all rows of the current MSA\"),\n            React.createElement(Button, { onClick: () => {\n                    setShow(!show);\n                } },\n                show ? 'Hide' : 'Show',\n                \" advanced options\"),\n            show ? (React.createElement(\"div\", null,\n                React.createElement(Typography, null, \"Select algorithms for InterProScan to run\"),\n                React.createElement(\"div\", null,\n                    React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                            setVals(vals.map(v => ({ ...v, checked: false })));\n                        } }, \"Select none\"),\n                    React.createElement(Button, { variant: \"contained\", color: \"primary\", onClick: () => {\n                            setVals(vals.map(v => ({ ...v, checked: true })));\n                        } }, \"Select all\")),\n                React.createElement(\"table\", null,\n                    React.createElement(\"tbody\", null, vals\n                        .sort((a, b) => a.category.localeCompare(b.category))\n                        .map(({ name, checked, category }) => (React.createElement(\"tr\", { key: name },\n                        React.createElement(\"td\", null,\n                            React.createElement(\"input\", { type: \"checkbox\", key: name, checked: checked, onChange: () => {\n                                    setVals(vals.map(e => e.name === name\n                                        ? { ...e, checked: !e.checked }\n                                        : e));\n                                } })),\n                        React.createElement(\"td\", null, name),\n                        React.createElement(\"td\", null, category)))))))) : null),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    handleClose();\n                } }, \"Cancel\"),\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", onClick: () => {\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    ;\n                    (async () => {\n                        try {\n                            const { rows } = model;\n                            if (rows.length > 140) {\n                                throw new Error('Too many sequences, please run InterProScan offline');\n                            }\n                            await launchInterProScan({\n                                algorithm: 'interproscan',\n                                programs: programs,\n                                seq: rows\n                                    .map(row => [row[0], row[1].replaceAll('-', '')])\n                                    .filter(f => !!f[1])\n                                    .map(row => `>${row[0]}\\n${row[1]}`)\n                                    .join('\\n'),\n                                onProgress: arg => {\n                                    model.setStatus(arg);\n                                },\n                                model,\n                            });\n                        }\n                        catch (e) {\n                            console.error(e);\n                            getSession(model).notifyError(`${e}`, e);\n                        }\n                        finally {\n                            model.setStatus();\n                        }\n                    })();\n                    handleClose();\n                } }, \"Send sequences to InterProScan\"))));\n});\nexport default InterProScanDialog;\n//# sourceMappingURL=InterProScanDialog.js.map"],"names":["base","runInterProScan","seq","onProgress","onJobId","programs","model","jobId","textfetch","wait","loadInterProScanResultsWithStatus","loadInterProScanResults","jsonfetch","url","i","timeout","result","launchInterProScan","algorithm","ret","r","getSession","e","InterProScanDialog","observer","handleClose","vals","setVals","useState","show","setShow","React","Dialog","DialogContent","Typography","Button","v","a","b","name","checked","category","DialogActions","rows","row","f","arg"],"mappings":"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"}