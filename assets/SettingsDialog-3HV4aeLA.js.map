{"version":3,"file":"SettingsDialog-3HV4aeLA.js","sources":["../../../lib/dist/components/dialogs/SettingsDialog.js"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, MenuItem, Slider, TextField, Typography, } from '@mui/material';\nimport colorSchemes from '../../colorSchemes';\nconst useStyles = makeStyles()(theme => ({\n    field: {\n        margin: theme.spacing(4),\n    },\n}));\nconst SettingsDialog = observer(function ({ model, onClose, }) {\n    const { classes } = useStyles();\n    const { bgColor, colWidth, colorSchemeName, drawTree, drawNodeBubbles, labelsAlignRight, noTree, rowHeight, showBranchLen, treeWidthMatchesArea, treeWidth, } = model;\n    return (React.createElement(Dialog, { open: true, onClose: () => onClose(), title: \"Settings\" },\n        React.createElement(DialogContent, null,\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: showBranchLen, onChange: () => model.setShowBranchLen(!showBranchLen) }), label: \"Show branch length\" }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: bgColor, onChange: () => model.setBgColor(!bgColor) }), label: \"Color background\" }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: drawNodeBubbles, onChange: () => model.setDrawNodeBubbles(!drawNodeBubbles) }), label: \"Draw node bubbles\" }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: drawTree, onChange: () => model.setDrawTree(!drawTree) }), label: \"Draw tree (if available)\" }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: labelsAlignRight, onChange: () => model.setLabelsAlignRight(!labelsAlignRight) }), label: \"Labels align right\" }),\n            !noTree ? (React.createElement(\"div\", null,\n                React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: treeWidthMatchesArea, onChange: () => model.setTreeWidthMatchesArea(!treeWidthMatchesArea) }), label: \"Make tree width fit to tree area?\" }),\n                !treeWidthMatchesArea ? (React.createElement(\"div\", { style: { display: 'flex' } },\n                    React.createElement(Typography, null,\n                        \"Tree width (\",\n                        treeWidth,\n                        \"px)\"),\n                    React.createElement(Slider, { className: classes.field, min: 50, max: 600, value: treeWidth, onChange: (_, val) => model.setTreeWidth(val) }))) : null)) : null,\n            React.createElement(\"div\", { style: { display: 'flex' } },\n                React.createElement(Typography, null,\n                    \"Column width (\",\n                    colWidth,\n                    \"px)\"),\n                React.createElement(Slider, { className: classes.field, min: 1, max: 50, value: colWidth, onChange: (_, val) => model.setColWidth(val) })),\n            React.createElement(\"div\", { style: { display: 'flex' } },\n                React.createElement(Typography, null,\n                    \"Row height (\",\n                    rowHeight,\n                    \"px)\"),\n                React.createElement(Slider, { className: classes.field, min: 1, max: 50, value: rowHeight, onChange: (_, val) => model.setRowHeight(val) })),\n            React.createElement(TextField, { select: true, label: \"Color scheme\", value: colorSchemeName, onChange: event => model.setColorSchemeName(event.target.value) }, Object.keys(colorSchemes).map(option => (React.createElement(MenuItem, { key: option, value: option }, option)))),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { onClick: () => {\n                        model.setRowHeight(+rowHeight);\n                        model.setColWidth(+colWidth);\n                        if (!noTree) {\n                            model.setTreeWidth(+treeWidth);\n                        }\n                        onClose();\n                    }, variant: \"contained\", color: \"primary\" }, \"Submit\")))));\n});\nexport default SettingsDialog;\n//# sourceMappingURL=SettingsDialog.js.map"],"names":["useStyles","makeStyles","theme","SettingsDialog","observer","model","onClose","classes","bgColor","colWidth","colorSchemeName","drawTree","drawNodeBubbles","labelsAlignRight","noTree","rowHeight","showBranchLen","treeWidthMatchesArea","treeWidth","React","Dialog","DialogContent","FormControlLabel","Checkbox","Typography","Slider","_","val","TextField","event","colorSchemes","option","MenuItem","DialogActions","Button"],"mappings":"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"}