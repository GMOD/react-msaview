{"version":3,"file":"SettingsDlg-0c26f77f.js","sources":["../../../lib/dist/components/dialogs/SettingsDlg.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, MenuItem, TextField, } from '@mui/material';\nimport colorSchemes from '../../colorSchemes';\nconst useStyles = makeStyles()(theme => ({\n    field: {\n        margin: theme.spacing(4),\n    },\n}));\nconst SettingsDialog = observer(function ({ model, onClose, }) {\n    const { classes } = useStyles();\n    const { colorSchemeName, noTree } = model;\n    const [rowHeight, setRowHeight] = useState(`${model.rowHeight}`);\n    const [colWidth, setColWidth] = useState(`${model.colWidth}`);\n    const [treeWidth, setTreeWidth] = useState(`${model.treeWidth}`);\n    function error(n) {\n        return Number.isNaN(+n) || +n < 0;\n    }\n    const rowHeightError = error(rowHeight);\n    const colWidthError = error(colWidth);\n    const treeWidthError = error(treeWidth);\n    return (React.createElement(Dialog, { open: true, onClose: () => onClose(), title: \"Settings\" },\n        React.createElement(DialogContent, null,\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: model.showBranchLen, onChange: () => model.toggleBranchLen() }), label: \"Show branch length\" }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: model.bgColor, onChange: () => model.toggleBgColor() }), label: \"Color background\" }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: model.drawNodeBubbles, onChange: () => model.toggleNodeBubbles() }), label: \"Draw node bubbles\" }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: model.drawTree, onChange: () => model.toggleDrawTree() }), label: \"Draw tree (if available)\" }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: model.labelsAlignRight, onChange: () => model.toggleLabelsAlignRight() }), label: \"Labels align right (note: labels may draw over tree, but can adjust tree width or tree area width in UI)\" }),\n            React.createElement(TextField, { className: classes.field, label: \"Row height (px)\", value: rowHeight, error: rowHeightError, onChange: event => setRowHeight(event.target.value) }),\n            React.createElement(TextField, { className: classes.field, label: \"Column width (px)\", value: colWidth, error: colWidthError, onChange: event => setColWidth(event.target.value) }),\n            React.createElement(\"br\", null),\n            !noTree ? (React.createElement(TextField, { className: classes.field, label: \"Tree width (px)\", value: treeWidth, error: treeWidthError, onChange: event => setTreeWidth(event.target.value) })) : null,\n            React.createElement(\"br\", null),\n            React.createElement(TextField, { select: true, label: \"Color scheme\", value: colorSchemeName, onChange: event => model.setColorSchemeName(event.target.value) }, Object.keys(colorSchemes).map(option => (React.createElement(MenuItem, { key: option, value: option }, option)))),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { disabled: rowHeightError || colWidthError || treeWidthError, onClick: () => {\n                        model.setRowHeight(+rowHeight);\n                        model.setColWidth(+colWidth);\n                        if (!noTree) {\n                            model.setTreeWidth(+treeWidth);\n                        }\n                        onClose();\n                    }, variant: \"contained\", color: \"primary\" }, \"Submit\")))));\n});\nexport default SettingsDialog;\n//# sourceMappingURL=SettingsDlg.js.map"],"names":["useStyles","makeStyles","theme","SettingsDialog","observer","model","onClose","classes","colorSchemeName","noTree","rowHeight","setRowHeight","useState","colWidth","setColWidth","treeWidth","setTreeWidth","error","n","rowHeightError","colWidthError","treeWidthError","React","Dialog","DialogContent","FormControlLabel","Checkbox","TextField","event","colorSchemes","option","MenuItem","DialogActions","Button"],"mappings":"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"}