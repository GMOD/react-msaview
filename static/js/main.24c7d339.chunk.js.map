{"version":3,"sources":["../../src/util.js","../../src/colorSchemes.js","../../src/components/SettingsDlg.tsx","../../src/components/AboutDlg.tsx","../../src/components/DetailsDlg.tsx","../../src/components/ImportForm.tsx","../../src/components/data/seq2.js","../../src/components/Tree.tsx","../../src/components/MSA.tsx","../../src/components/MsaView.tsx","../../../node_modules/regenerator-runtime/runtime.js","../../src/parseNewick.js","../../src/model.ts","App.js","reportWebVitals.js","index.js"],"names":["transform","obj","cb","Object","clustal","G","P","S","T","H","K","R","F","W","Y","I","L","M","V","lesk","A","C","N","Q","D","E","maeditor","flower","rainbow_dna","U","clustalx_protein","clustalx_dna","jalview_buried","B","X","Z","jalview_hydrophobicity","jalview_prophelix","jalview_propstrand","jalview_propturn","jalview_taylor","jalview_zappo","cinema","letter","color","Color","observer","model","onClose","open","rowHeightInit","rowHeight","colWidthInit","colWidth","nameWidthInit","nameWidth","treeWidthInit","treeWidth","colorSchemeName","noTree","useState","setRowHeight","setColWidth","setNameWidth","setTreeWidth","Number","n","rowHeightError","error","colWidthError","nameWidthError","treeWidthError","React","control","checked","showBranchLen","onChange","label","bgColor","drawNodeBubbles","value","event","select","option","key","disabled","onClick","variant","LicenseDialog","style","height","overflow","AboutDialog","dlgOpen","setDlgOpen","href","alignmentDetails","attributes","msaFile","setMsaFile","treeFile","setTreeFile","className","importFormContainer","width","container","spacing","justify","alignItems","item","location","setLocation","localFileAllowed","uri","msa","tree","transaction","radius","TreeBlock","offsetY","ref","useRef","menuRef","clickRef","colorMap","setColorMap","hovering","setHovering","hierarchy","scrollY","collapsed","margin","blockSize","x","y","clickCtx","data","col","useEffect","ctx","colorHash","context","font","Math","source","target","sy","sx","ty","tx","y1","y2","node","val","r","g","b","len","name","position","left","top","anchorEl","current","transitionDuration","keepMounted","Boolean","handleClose","dense","onMouseMove","decode","display","TreeCanvas","scheduled","deltaY","blocksY","curr","normalizeWheel","requestAnimationFrame","origEvent","block","MSABlock","offsetX","MSA","columns","scrollX","colorScheme","colorSchemes","colorContrast","useMemo","leaves","yStart","yEnd","xStart","xEnd","visibleLeaves","str","i","contrast","MSACanvas","msaFilehandle","blocksX","deltaX","blocks","blockY","blockX","Header","settingsDialogVisible","setSettingsDialogVisible","aboutDialogVisible","setAboutDialogVisible","detailsDialogVisible","setDetailsDialogVisible","currentAlignment","alignmentNames","native","index","done","initialized","console","runtime","exports","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","enumerable","configurable","writable","define","err","protoGenerator","outerFn","generator","Context","tryLocsList","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","record","tryCatch","innerFn","self","makeInvokeMethod","type","fn","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","prototype","this","_invoke","result","PromiseImpl","invoke","resolve","reject","previousPromise","callInvokeWithMethodAndArg","TypeError","info","entry","tryLoc","locs","iteratorMethod","iterable","isNaN","next","GeneratorFunction","ctor","genFun","__await","defineIteratorMethods","AsyncIterator","iter","wrap","keys","constructor","reset","_sent","stop","rootRecord","tryEntries","dispatchException","length","handle","hasCatch","hasFinally","prev","abrupt","finallyEntry","complete","finish","resetTryEntry","thrown","delegateYield","iterator","resultName","nextLoc","module","regeneratorRuntime","accidentalStrictMode","Function","parse","s","ancestors","tokens","token","subtree","parseFloat","JSON","ClustalMSA","Clustal","getMSA","getRow","alns","find","aln","getWidth","seq","getDetails","getTree","branchset","map","id","FastaMSA","re","text","line","match","seqdata","StockholmMSA","res","Stockholm","generateNodeIds","parseNewick","setBrLength","d","y0","maxLength","max","getRoot","ascending","a","parent","depth","filter","rest","clamp","min","types","treeAreaWidth","treeFilehandle","setTree","setMSA","volatileWidth","setError","setColorSchemeName","setScrollY","setScrollX","setCurrentAlignment","toggleCollapsed","toggleBranchLen","toggleBgColor","toggleNodeBubbles","setData","setWidth","setMSAFilehandle","blob","openLocation","setTreeFilehandle","afterCreate","addDisposer","autorun","f","oldBlocksX","oldBlocksY","oldValX","oldValY","size","ret","blanks","strs","counter","j","rows","row","root","cluster","clust","treeWidthMinusNames","doScrollY","doScrollX","postProcessor","theme","createJBrowseTheme","MSAModel","create","random","ThemeProvider","border","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24c7d339.chunk.js","sourcesContent":["// typescript error https://github.com/typescript-eslint/typescript-eslint/issues/2446 if this version is used, maybe due to outdated tsdx dependencies\n// export function transform<T>(\n//   obj: Record<string, T>,\n//   cb: (arg0: [string, T]) => [string, T],\n// ) {\n//   return Object.fromEntries(Object.entries(obj).map(cb));\n// }\n\nexport function transform(obj, cb) {\n  return Object.fromEntries(Object.entries(obj).map(cb));\n}\n","import Color from \"color\";\nimport { transform } from \"./util\";\n\nconst colorSchemes = {\n  clustal: {\n    G: \"orange\",\n    P: \"orange\",\n    S: \"orange\",\n    T: \"orange\",\n    H: \"red\",\n    K: \"red\",\n    R: \"red\",\n    F: \"blue\",\n    W: \"blue\",\n    Y: \"blue\",\n    I: \"green\",\n    L: \"green\",\n    M: \"green\",\n    V: \"green\",\n  },\n  lesk: {\n    G: \"orange\",\n    A: \"orange\",\n    S: \"orange\",\n    T: \"orange\",\n    C: \"green\",\n    V: \"green\",\n    I: \"green\",\n    L: \"green\",\n    P: \"green\",\n    F: \"green\",\n    Y: \"green\",\n    M: \"green\",\n    W: \"green\",\n    N: \"magenta\",\n    Q: \"magenta\",\n    H: \"magenta\",\n    D: \"red\",\n    E: \"red\",\n    K: \"blue\",\n    R: \"blue\",\n  },\n  maeditor: {\n    A: \"lightgreen\",\n    G: \"lightgreen\",\n    C: \"green\",\n    D: \"darkgreen\",\n    E: \"darkgreen\",\n    N: \"darkgreen\",\n    Q: \"darkgreen\",\n    I: \"blue\",\n    L: \"blue\",\n    M: \"blue\",\n    V: \"blue\",\n    F: \"#c8a2c8\",\n    W: \"#c8a2c8\",\n    Y: \"#c8a2c8\",\n    H: \"darkblue\",\n    K: \"orange\",\n    R: \"orange\",\n    P: \"pink\",\n    S: \"red\",\n    T: \"red\",\n  },\n\n  //https://github.com/biotite-dev/biotite/blob/8c460972f8ab904312f130dfb80f3efc8c9bd7c5/src/biotite/sequence/graphics/color_schemes/flower.json\n  flower: {\n    A: \"#b18a51\",\n    C: \"#ff5701\",\n    D: \"#01a578\",\n    E: \"#2da0a1\",\n    F: \"#fa559d\",\n    G: \"#b1c23c\",\n    H: \"#0194f9\",\n    I: \"#f27663\",\n    K: \"#7fc3d7\",\n    L: \"#df6e75\",\n    M: \"#fe9daf\",\n    N: \"#0bcec6\",\n    P: \"#4fa32a\",\n    Q: \"#7295ae\",\n    R: \"#83bff1\",\n    S: \"#b4bd9b\",\n    T: \"#d2b576\",\n    V: \"#fd997b\",\n    W: \"#ff2ded\",\n    Y: \"#c96ecf\",\n  },\n  rainbow_dna: {\n    A: \"#3737f5\",\n    C: \"#37f537\",\n    G: \"#f5f537\",\n    T: \"#f53737\",\n    U: \"#f53737\",\n  },\n\n  //https://github.com/biotite-dev/biotite/blob/8c460972f8ab904312f130dfb80f3efc8c9bd7c5/src/biotite/sequence/graphics/color_schemes/clustalx_protein.json\n  clustalx_protein: {\n    A: \"#197fe5\",\n    C: \"#e57f7f\",\n    D: \"#cc4ccc\",\n    E: \"#cc4ccc\",\n    F: \"#197fe5\",\n    G: \"#e5994c\",\n    H: \"#19b2b2\",\n    I: \"#197fe5\",\n    K: \"#e53319\",\n    L: \"#197fe5\",\n    M: \"#197fe5\",\n    N: \"#19cc19\",\n    P: \"#cccc00\",\n    Q: \"#19cc19\",\n    R: \"#e53319\",\n    S: \"#19cc19\",\n    T: \"#19cc19\",\n    V: \"#197fe5\",\n    W: \"#197fe5\",\n    Y: \"#19b2b2\",\n  },\n\n  clustalx_dna: {\n    A: \"#e53319\",\n    C: \"#197fe5\",\n    G: \"#e5994c\",\n    T: \"#19cc19\",\n    U: \"#19cc19\",\n  },\n  jalview_buried: {\n    A: \"#00a35c\",\n    R: \"#00fc03\",\n    N: \"#00eb14\",\n    D: \"#00eb14\",\n    C: \"#0000ff\",\n    Q: \"#00f10e\",\n    E: \"#00f10e\",\n    G: \"#009d62\",\n    H: \"#00d52a\",\n    I: \"#0054ab\",\n    L: \"#007b84\",\n    K: \"#00ff00\",\n    M: \"#009768\",\n    F: \"#008778\",\n    P: \"#00e01f\",\n    S: \"#00d52a\",\n    T: \"#00db24\",\n    W: \"#00a857\",\n    Y: \"#00e619\",\n    V: \"#005fa0\",\n    B: \"#00eb14\",\n    X: \"#00b649\",\n    Z: \"#00f10e\",\n  },\n\n  jalview_hydrophobicity: {\n    A: \"#ad0052\",\n    R: \"#0000ff\",\n    N: \"#0c00f3\",\n    D: \"#0c00f3\",\n    C: \"#c2003d\",\n    Q: \"#0c00f3\",\n    E: \"#0c00f3\",\n    G: \"#6a0095\",\n    H: \"#1500ea\",\n    I: \"#ff0000\",\n    L: \"#ea0015\",\n    K: \"#0000ff\",\n    M: \"#b0004f\",\n    F: \"#cb0034\",\n    P: \"#4600b9\",\n    S: \"#5e00a1\",\n    T: \"#61009e\",\n    W: \"#5b00a4\",\n    Y: \"#4f00b0\",\n    V: \"#f60009\",\n    B: \"#0c00f3\",\n    X: \"#680097\",\n    Z: \"#0c00f3\",\n  },\n\n  jalview_prophelix: {\n    A: \"#e718e7\",\n    R: \"#6f906f\",\n    N: \"#1be41b\",\n    D: \"#778877\",\n    C: \"#23dc23\",\n    Q: \"#926d92\",\n    E: \"#ff00ff\",\n    G: \"#00ff00\",\n    H: \"#758a75\",\n    I: \"#8a758a\",\n    L: \"#ae51ae\",\n    K: \"#a05fa0\",\n    M: \"#ef10ef\",\n    F: \"#986798\",\n    P: \"#00ff00\",\n    S: \"#36c936\",\n    T: \"#47b847\",\n    W: \"#8a758a\",\n    Y: \"#21de21\",\n    V: \"#857a85\",\n    B: \"#49b649\",\n    X: \"#758a75\",\n    Z: \"#c936c9\",\n  },\n\n  jalview_propstrand: {\n    A: \"#5858a7\",\n    R: \"#6b6b94\",\n    N: \"#64649b\",\n    D: \"#2121de\",\n    C: \"#9d9d62\",\n    Q: \"#8c8c73\",\n    E: \"#0000ff\",\n    G: \"#4949b6\",\n    H: \"#60609f\",\n    I: \"#ecec13\",\n    L: \"#b2b24d\",\n    K: \"#4747b8\",\n    M: \"#82827d\",\n    F: \"#c2c23d\",\n    P: \"#2323dc\",\n    S: \"#4949b6\",\n    T: \"#9d9d62\",\n    W: \"#c0c03f\",\n    Y: \"#d3d32c\",\n    V: \"#ffff00\",\n    B: \"#4343bc\",\n    X: \"#797986\",\n    Z: \"#4747b8\",\n  },\n\n  jalview_propturn: {\n    A: \"#2cd3d3\",\n    R: \"#708f8f\",\n    N: \"#ff0000\",\n    D: \"#e81717\",\n    C: \"#a85757\",\n    Q: \"#3fc0c0\",\n    E: \"#778888\",\n    G: \"#ff0000\",\n    H: \"#708f8f\",\n    I: \"#00ffff\",\n    L: \"#1ce3e3\",\n    K: \"#7e8181\",\n    M: \"#1ee1e1\",\n    F: \"#1ee1e1\",\n    P: \"#f60909\",\n    S: \"#e11e1e\",\n    T: \"#738c8c\",\n    W: \"#738c8c\",\n    Y: \"#9d6262\",\n    V: \"#07f8f8\",\n    B: \"#f30c0c\",\n    X: \"#7c8383\",\n    Z: \"#5ba4a4\",\n  },\n\n  jalview_taylor: {\n    A: \"#ccff00\",\n    R: \"#0000ff\",\n    N: \"#cc00ff\",\n    D: \"#ff0000\",\n    C: \"#ffff00\",\n    Q: \"#ff00cc\",\n    E: \"#ff0066\",\n    G: \"#ff9900\",\n    H: \"#0066ff\",\n    I: \"#66ff00\",\n    L: \"#33ff00\",\n    K: \"#6600ff\",\n    M: \"#00ff00\",\n    F: \"#00ff66\",\n    P: \"#ffcc00\",\n    S: \"#ff3300\",\n    T: \"#ff6600\",\n    W: \"#00ccff\",\n    Y: \"#00ffcc\",\n    V: \"#99ff00\",\n  },\n\n  jalview_zappo: {\n    A: \"#ffafaf\",\n    R: \"#6464ff\",\n    N: \"#00ff00\",\n    D: \"#ff0000\",\n    C: \"#ffff00\",\n    Q: \"#00ff00\",\n    E: \"#ff0000\",\n    G: \"#ff00ff\",\n    H: \"#6464ff\",\n    I: \"#ffafaf\",\n    L: \"#ffafaf\",\n    K: \"#6464ff\",\n    M: \"#ffafaf\",\n    F: \"#ffc800\",\n    P: \"#ff00ff\",\n    S: \"#00ff00\",\n    T: \"#00ff00\",\n    W: \"#ffc800\",\n    Y: \"#ffc800\",\n    V: \"#ffafaf\",\n  },\n\n  cinema: {\n    H: \"blue\",\n    K: \"blue\",\n    R: \"blue\",\n    D: \"red\",\n    E: \"red\",\n    S: \"green\",\n    T: \"green\",\n    N: \"green\",\n    Q: \"green\",\n    A: \"white\",\n    V: \"white\",\n    L: \"white\",\n    I: \"white\",\n    M: \"white\",\n    F: \"magenta\",\n    W: \"magenta\",\n    Y: \"magenta\",\n    P: \"brown\",\n    G: \"brown\",\n    C: \"yellow\",\n    B: \"gray\",\n    Z: \"gray\",\n    X: \"gray\",\n    \"-\": \"gray\",\n    \".\": \"gray\",\n  },\n};\n\n// turn all supplied colors to hex colors which getContrastText from mui\n// requires\nexport default transform(colorSchemes, ([key, val]) => [\n  key,\n  transform(val, ([letter, color]) => [letter, Color(color).hex()]),\n]);\n","import { MsaViewModel } from '../model';\nimport colorSchemes from '../colorSchemes';\n\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\n\nexport default observer(\n  ({\n    model,\n    onClose,\n    open,\n  }: {\n    model: MsaViewModel;\n    onClose: Function;\n    open: boolean;\n  }) => {\n    const {\n      rowHeight: rowHeightInit,\n      colWidth: colWidthInit,\n      nameWidth: nameWidthInit,\n      treeWidth: treeWidthInit,\n      colorSchemeName,\n      noTree,\n    } = model;\n    const [rowHeight, setRowHeight] = useState('' + rowHeightInit);\n    const [colWidth, setColWidth] = useState('' + colWidthInit);\n    const [nameWidth, setNameWidth] = useState('' + nameWidthInit);\n    const [treeWidth, setTreeWidth] = useState('' + treeWidthInit);\n\n    function error(n: string) {\n      return Number.isNaN(+n) || +n < 0;\n    }\n    const rowHeightError = error(rowHeight);\n    const colWidthError = error(colWidth);\n    const nameWidthError = error(nameWidth);\n    const treeWidthError = error(treeWidth);\n\n    return (\n      <Dialog onClose={() => onClose()} open={open}>\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={model.showBranchLen}\n                onChange={() => model.toggleBranchLen()}\n              />\n            }\n            label=\"Show branch length\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={model.bgColor}\n                onChange={() => model.toggleBgColor()}\n              />\n            }\n            label=\"Color background\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={model.drawNodeBubbles}\n                onChange={() => model.toggleNodeBubbles()}\n              />\n            }\n            label=\"Draw node bubbles\"\n          />\n          <br />\n          <TextField\n            label=\"Row height (px)\"\n            value={rowHeight}\n            error={rowHeightError}\n            onChange={event => setRowHeight(event.target.value)}\n          />\n          <TextField\n            label=\"Column width (px)\"\n            value={colWidth}\n            error={colWidthError}\n            onChange={event => setColWidth(event.target.value)}\n          />\n          <br />\n          {!noTree ? (\n            <TextField\n              label=\"Tree width (px)\"\n              value={treeWidth}\n              error={treeWidthError}\n              onChange={event => setTreeWidth(event.target.value)}\n            />\n          ) : null}\n          <TextField\n            label=\"Name width (px)\"\n            value={nameWidth}\n            error={nameWidthError}\n            onChange={event => setNameWidth(event.target.value)}\n          />\n          <br />\n\n          <TextField\n            select\n            label=\"Color scheme\"\n            value={colorSchemeName}\n            onChange={event => model.setColorSchemeName(event.target.value)}\n          >\n            {Object.keys(colorSchemes).map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          <br />\n          <br />\n          <br />\n          <Button\n            disabled={\n              rowHeightError ||\n              colWidthError ||\n              nameWidthError ||\n              treeWidthError\n            }\n            onClick={() => {\n              model.setRowHeight(+rowHeight);\n              model.setColWidth(+colWidth);\n              model.setNameWidth(+nameWidth);\n              if (!noTree) {\n                model.setTreeWidth(+treeWidth);\n              }\n              onClose();\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Typography,\n  Link,\n} from '@material-ui/core';\n\nfunction LicenseDialog({\n  onClose,\n  open,\n}: {\n  onClose: Function;\n  open: boolean;\n}) {\n  return (\n    <Dialog onClose={() => onClose()} open={open}>\n      <DialogTitle>Settings</DialogTitle>\n      <DialogContent>\n        <pre style={{ height: 100, overflow: 'auto' }}>\n          {`\nCopyright 2017 - 2020, The Biotite contributors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n        `}\n        </pre>\n      </DialogContent>\n    </Dialog>\n  );\n}\nexport default function AboutDialog({\n  onClose,\n  open,\n}: {\n  onClose: Function;\n  open: boolean;\n}) {\n  const [dlgOpen, setDlgOpen] = useState(false);\n  return (\n    <>\n      <LicenseDialog onClose={() => setDlgOpen(false)} open={dlgOpen} />\n      <Dialog onClose={() => onClose()} open={open}>\n        <DialogTitle>About this plugin</DialogTitle>\n        <DialogContent>\n          <Typography>\n            JBrowse 2 MSAView plugin v1.0.0 (\n            <Link href=\"https://github.com/gmod/jbrowse-plugin-msaview\">\n              Github\n            </Link>\n            )\n          </Typography>\n\n          <ul>\n            <li>\n              We use some color schemes from the{' '}\n              <Link href=\"https://github.com/biotite-dev/biotite\">biotite</Link>{' '}\n              project, and their license is reproduced{' '}\n              <Link onClick={() => setDlgOpen(true)}>here</Link>\n            </li>\n            <li>\n              See this page for some information on jalview colorings{' '}\n              <Link href=\"https://www.jalview.org/help/html/colourSchemes/\">\n                here\n              </Link>\n            </li>\n            <li>\n              See this page for some info on the clustal, cinema, maeditor, and\n              lesk color schemes{' '}\n              <Link href=\"http://www.bioinformatics.nl/~berndb/aacolour.html\">\n                here\n              </Link>\n            </li>\n            <li>\n              See this paper about the flower color scheme{' '}\n              <Link href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7245768/\">\n                here\n              </Link>\n            </li>\n          </ul>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","import { MsaViewModel } from '../model';\n\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\nimport { Attributes } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';\n\nexport default observer(\n  ({\n    model,\n    onClose,\n    open,\n  }: {\n    model: MsaViewModel;\n    onClose: Function;\n    open: boolean;\n  }) => {\n    const { alignmentDetails } = model;\n\n    return (\n      <Dialog onClose={() => onClose()} open={open}>\n        <DialogTitle>Metadata</DialogTitle>\n        <DialogContent>\n          <Attributes attributes={alignmentDetails} />\n        </DialogContent>\n      </Dialog>\n    );\n  }\n);\n","import { smallTree, smallMSA } from './data/seq2';\n\nimport { observer } from 'mobx-react';\nimport { transaction } from 'mobx';\nimport React, { useState } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport { Button, Container, Grid, Typography, Link } from '@material-ui/core';\nimport { FileSelector } from '@jbrowse/core/ui';\n\n// const useStyles = makeStyles((theme: any) => ({\n//   importFormContainer: {\n//     padding: theme.spacing(2),\n//   },\n//   importFormEntry: {\n//     minWidth: 180,\n//   },\n// }));\n\nexport default observer(({ model }: { model: any }) => {\n  const classes = {} as any;\n  // const classes = useStyles();\n  const [msaFile, setMsaFile] = useState();\n  const [treeFile, setTreeFile] = useState();\n\n  return (\n    <Container className={classes.importFormContainer}>\n      <div style={{ width: '50%' }}>\n        <Typography>\n          Open an MSA file (stockholm or clustal format) and/or a tree file\n          (newick format).\n        </Typography>\n        <Typography color=\"error\">\n          Note: you can open up just an MSA or just a tree, both are not\n          required. Some MSA files e.g. stockholm format have an embedded tree\n          also and this is fine, and opening a separate tree file is not\n          required.\n        </Typography>\n      </div>\n\n      <Grid container spacing={10} justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Typography>MSA file or URL</Typography>\n          <FileSelector\n            location={msaFile}\n            //@ts-ignore\n            setLocation={setMsaFile}\n            localFileAllowed\n          />\n          <Typography>Tree file or URL</Typography>\n          <FileSelector\n            location={treeFile}\n            //@ts-ignore\n            setLocation={setTreeFile}\n            localFileAllowed\n          />\n        </Grid>\n\n        <Grid item>\n          <Button\n            onClick={() => {\n              if (msaFile) {\n                model.setMSAFilehandle(msaFile);\n              }\n              if (treeFile) {\n                model.setTreeFilehandle(treeFile);\n              }\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!msaFile && !treeFile}\n          >\n            Open\n          </Button>\n        </Grid>\n\n        <Grid item>\n          <Typography>Examples</Typography>\n          <ul>\n            <li>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  model.setTreeFilehandle({\n                    uri:\n                      'https://jbrowse.org/genomes/newick_trees/sarscov2phylo.pub.ft.nh',\n                  });\n                }}\n              >\n                230k COVID-19 samples (tree only)\n              </Link>\n            </li>\n            <li>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  model.setData({ msa: smallMSA, tree: smallTree });\n                }}\n              >\n                Small protein+tree\n              </Link>\n            </li>\n            <li>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  model.setMSAFilehandle({\n                    uri: 'https://ihh.github.io/abrowse/build/pfam-cov2.stock',\n                  });\n                }}\n              >\n                PFAM SARS-CoV2 multi-stockholm\n              </Link>\n            </li>\n            <li>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  model.setMSAFilehandle({\n                    uri:\n                      'https://jbrowse.org/genomes/multiple_sequence_alignments/Lysine.stock',\n                  });\n                }}\n              >\n                Lysine stockholm file\n              </Link>\n            </li>\n            <li>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  model.setMSAFilehandle({\n                    uri:\n                      'https://jbrowse.org/genomes/multiple_sequence_alignments/PF01601_full.txt',\n                  });\n                }}\n              >\n                PF01601 stockholm file (SARS-CoV2 spike protein)\n              </Link>\n            </li>\n            <li>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  model.setMSAFilehandle({\n                    uri:\n                      'https://jbrowse.org/genomes/multiple_sequence_alignments/europe_covid.fa',\n                  });\n                }}\n              >\n                Europe COVID full genomes (LR883044.1 and 199 other sequences)\n              </Link>\n            </li>\n            <li>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  transaction(() => {\n                    model.setMSAFilehandle({\n                      uri:\n                        'https://jbrowse.org/genomes/multiple_sequence_alignments/rhv_test-only.aligned_with_mafft_auto.fa',\n                    });\n                    model.setTreeFilehandle({\n                      uri:\n                        'https://jbrowse.org/genomes/multiple_sequence_alignments/rhv_test-only.aligned_with_mafft_auto.nh',\n                    });\n                  });\n                }}\n              >\n                MAFFT+VeryFastTree(17.9k samples)\n              </Link>\n            </li>\n          </ul>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n});\n","export const smallMSA = `CLUSTAL O(1.2.3) multiple sequence alignment\nUniProt/Swiss-Prot|P26898|IL2RA_SHEEP      MEPSLLMWRFFVFIVVPGCVTEACHDDPPSLRNA----------MFKVLRYE----VGTM\nUniProt/Swiss-Prot|P01590|IL2RA_MOUSE      MEPRLLMLGFLSLTIVPSCRAELCLYDPPEVPNA----------TFKALSYK----NGTI\nUniProt/Swiss-Prot|P41690|IL2RA_FELCA      MEPSLLLWGILTFVVVHGHVTELCDENPPDIQHA----------TFKALTYK----TGTM\nUniProt/Swiss-Prot|P01589|IL2RA_HUMAN      MDSYLLMWGLLTFIMVPGCQAELCDDDPPEIPHA----------TFKAMAYK----EGTM\nUniProt/Swiss-Prot|Q5MNY4|IL2RA_MACMU      MDPYLLMWGLLTFITVPGCQAELCDDDPPKITHA----------TFKAVAYK----EGTM\nUniProt/Swiss-Prot|Q95118|IL2RG_BOVIN      -----------------------------------LLMWGLLT-----------------\nUniProt/Swiss-Prot|P40321|IL2RG_CANFA      MLKPPLPLRSLLFLQLSLLGVGLNSTVPMPNGNEDIT------PDFFLTATPSETLSVSS\nUniProt/Swiss-Prot|P26896|IL2RB_RAT        MATVDLSWRLPLYILLLLLATT--------------------------------WVSAAV\nUniProt/Swiss-Prot|Q8BZM1|GLMN_MOUSE       PLPLRSLLFLQLPLLGVGLNP------------------PLPLRSLLFLQLPLLGVGLNP\nUniProt/Swiss-Prot|P36835|IL2_CAPHI        -----------LLGVGLNPKFLTP------------------------------------\nUniProt/Swiss-Prot|Q7JFM4|IL2_AOTVO        MLKPPLPLRSLLFLQLPLLGVGLNPKFLTPSGNEDIGGKPGTGGDFFLTSTPAGTLDVST\nUniProt/Swiss-Prot|Q29416|IL2_CANFA        --------------LFLQLSLLG-------------------------------------\n`;\n\nexport const smallTree =\n  \"(((UniProt/Swiss-Prot|P26898|IL2RA_SHEEP:0.24036,(UniProt/Swiss-Prot|P41690|IL2RA_FELCA:0.17737,(UniProt/Swiss-Prot|P01589|IL2RA_HUMAN:0.03906,UniProt/Swiss-Prot|Q5MNY4|IL2RA_MACMU:0.03787):0.13033):0.04964):0.02189,UniProt/Swiss-Prot|P01590|IL2RA_MOUSE:0.23072):0.06814,(((UniProt/Swiss-Prot|Q95118|IL2RG_BOVIN:0.09600,UniProt/Swiss-Prot|P40321|IL2RG_CANFA:0.09845):0.25333,UniProt/Swiss-Prot|Q29416|IL2_CANFA:-0.35055):0.10231,(UniProt/Swiss-Prot|P26896|IL2RB_RAT:0.33631,UniProt/Swiss-Prot|Q7JFM4|IL2_AOTVO:-0.33631):0.10166):0.01607,(UniProt/Swiss-Prot|Q8BZM1|GLMN_MOUSE:0.32378,UniProt/Swiss-Prot|P36835|IL2_CAPHI:-0.32378):0.09999)\";\n","import { MsaViewModel } from '../model';\nimport normalizeWheel from 'normalize-wheel';\n\nimport { observer } from 'mobx-react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\nconst extendBounds = 5;\nconst radius = 3.5;\nconst d = radius * 2;\n\nfunction randomColor() {\n  return [\n    Math.floor(Math.random() * 255),\n    Math.floor(Math.random() * 255),\n    Math.floor(Math.random() * 255),\n  ];\n}\n\ntype StrMap = { [key: string]: { id: string; name: string } };\ninterface TooltipData {\n  name: string;\n  id: string;\n  x: number;\n  y: number;\n}\nconst TreeBlock = observer(\n  ({ model, offsetY }: { model: MsaViewModel; offsetY: number }) => {\n    const ref = useRef<HTMLCanvasElement>(null);\n    const menuRef = useRef<HTMLDivElement>(null);\n    const clickRef = useRef<HTMLCanvasElement>(null);\n    const [colorMap, setColorMap] = useState<StrMap>({});\n    const [hovering, setHovering] = useState<TooltipData>();\n    const {\n      hierarchy,\n      rowHeight,\n      scrollY,\n      treeWidth: width,\n      showBranchLen,\n      collapsed,\n      margin,\n      noTree,\n      blockSize,\n      drawNodeBubbles,\n    } = model;\n\n    useEffect(() => {\n      if (!ref.current || !clickRef.current) {\n        return;\n      }\n      const ctx = ref.current.getContext('2d');\n      const clickCtx = clickRef.current.getContext('2d');\n      if (!ctx || !clickCtx) {\n        return;\n      }\n      const colorHash: StrMap = {};\n      [ctx, clickCtx].forEach(context => {\n        context.resetTransform();\n        context.clearRect(0, 0, width, blockSize);\n        context.translate(margin.left, -offsetY);\n      });\n\n      const font = ctx.font;\n      ctx.font = font.replace(/\\d+px/, `${Math.max(8, rowHeight - 8)}px`);\n\n      if (!noTree) {\n        hierarchy.links().forEach(({ source, target }: any) => {\n          const y = showBranchLen ? 'len' : 'y';\n          const { x: sy, [y]: sx } = source;\n          const { x: ty, [y]: tx } = target;\n\n          const y1 = Math.min(sy, ty);\n          const y2 = Math.max(sy, ty);\n          //1d line intersection to check if line crosses block at all, this\n          //is an optimization that allows us to skip drawing most tree links\n          //outside the block\n          if (offsetY + blockSize >= y1 && y2 >= offsetY) {\n            ctx.beginPath();\n            ctx.moveTo(sx, sy);\n            ctx.lineTo(sx, ty);\n            ctx.lineTo(tx, ty);\n            ctx.stroke();\n          }\n        });\n\n        if (drawNodeBubbles) {\n          hierarchy.descendants().forEach(node => {\n            const val = showBranchLen ? 'len' : 'y';\n            const {\n              //@ts-ignore\n              x: y,\n              //@ts-ignore\n              [val]: x,\n              data,\n            } = node;\n\n            if (\n              y > offsetY - extendBounds &&\n              y < offsetY + blockSize + extendBounds\n            ) {\n              ctx.strokeStyle = 'black';\n              ctx.fillStyle = collapsed.includes(data.id) ? 'black' : 'white';\n              ctx.beginPath();\n              ctx.arc(x, y, radius, 0, 2 * Math.PI);\n              ctx.fill();\n              ctx.stroke();\n\n              const col = randomColor();\n              const [r, g, b] = col;\n              colorHash[`${col}`] = data;\n\n              clickCtx.fillStyle = `rgb(${r},${g},${b})`;\n              clickCtx.fillRect(x - radius, y - radius, d, d);\n            }\n          });\n        }\n      }\n\n      if (rowHeight >= 10) {\n        ctx.fillStyle = 'black';\n        hierarchy.leaves().forEach((node: any) => {\n          const { x: y, y: x, data, len } = node;\n          const { name } = data;\n          if (\n            y > offsetY - extendBounds &&\n            y < offsetY + blockSize + extendBounds\n          ) {\n            //note: +rowHeight/4 matches with -rowHeight/4 in msa\n            ctx.fillText(\n              name,\n              (showBranchLen ? len : x) + d,\n              y + rowHeight / 4\n            );\n          }\n        });\n      }\n      setColorMap(colorHash);\n    }, [\n      collapsed,\n      rowHeight,\n      margin.left,\n      hierarchy,\n      offsetY,\n      width,\n      showBranchLen,\n      noTree,\n      blockSize,\n      drawNodeBubbles,\n    ]);\n\n    function decode(event: React.MouseEvent) {\n      const x = event.nativeEvent.offsetX;\n      const y = event.nativeEvent.offsetY;\n      if (!clickRef.current) {\n        return;\n      }\n      const clickCtx = clickRef.current.getContext('2d');\n      if (!clickCtx) {\n        return;\n      }\n      const { data } = clickCtx.getImageData(x, y, 1, 1);\n\n      const col = [data[0], data[1], data[2]];\n      return { ...colorMap[`${col}`], x, y };\n    }\n    function handleClose() {\n      setHovering(undefined);\n    }\n    return (\n      <>\n        <div\n          ref={menuRef}\n          style={{\n            position: 'absolute',\n            left: hovering?.x || 0,\n            top: scrollY + offsetY + (hovering?.y || 0),\n          }}\n        />\n        {hovering && hovering.id ? (\n          <Menu\n            anchorEl={menuRef.current}\n            transitionDuration={0}\n            keepMounted\n            open={Boolean(menuRef.current)}\n            onClose={handleClose}\n          >\n            <MenuItem\n              dense\n              onClick={() => {\n                model.toggleCollapsed(hovering.id);\n                handleClose();\n              }}\n            >\n              {model.collapsed.includes(hovering.id) ? 'Expand' : 'Collapse'}\n            </MenuItem>\n          </Menu>\n        ) : null}\n        <canvas\n          width={width}\n          height={blockSize}\n          style={{\n            width,\n            height: blockSize,\n            top: scrollY + offsetY,\n            left: 0,\n            position: 'absolute',\n          }}\n          onMouseMove={event => {\n            if (!ref.current) {\n              return;\n            }\n            const data = decode(event);\n            if (data) {\n              if (data.id) {\n                ref.current.style.cursor = 'pointer';\n              } else {\n                ref.current.style.cursor = 'default';\n              }\n            }\n          }}\n          onClick={event => {\n            const data = decode(event);\n            if (data && data.id) {\n              setHovering(data);\n            }\n          }}\n          ref={ref}\n        />\n        <canvas\n          style={{ display: 'none' }}\n          width={width}\n          height={blockSize}\n          ref={clickRef}\n        />\n      </>\n    );\n  }\n);\nconst TreeCanvas = observer(({ model }: { model: MsaViewModel }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const scheduled = useRef(false);\n  const deltaY = useRef(0);\n  const { treeWidth: width, height, blocksY } = model;\n\n  useEffect(() => {\n    const curr = ref.current;\n    if (!curr) {\n      return;\n    }\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent);\n      deltaY.current += event.pixelY;\n\n      if (!scheduled.current) {\n        scheduled.current = true;\n        requestAnimationFrame(() => {\n          model.doScrollY(-deltaY.current);\n          deltaY.current = 0;\n          scheduled.current = false;\n        });\n      }\n      origEvent.preventDefault();\n    }\n    curr.addEventListener('wheel', onWheel);\n    return () => {\n      curr.removeEventListener('wheel', onWheel);\n    };\n  }, [model]);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        height,\n        position: 'relative',\n        overflow: 'hidden',\n        width,\n      }}\n    >\n      {blocksY.map(block => (\n        <TreeBlock key={block} model={model} offsetY={block} />\n      ))}\n    </div>\n  );\n});\n\nexport default TreeCanvas;\n","import normalizeWheel from 'normalize-wheel';\nimport Color from 'color';\nimport colorSchemes from '../colorSchemes';\nimport { transform } from '../util';\nimport { MsaViewModel } from '../model';\n\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport { observer } from 'mobx-react';\nimport { Typography, CircularProgress } from '@material-ui/core';\n\nconst MSABlock = observer(\n  ({\n    model,\n    offsetX,\n    offsetY,\n  }: {\n    model: MsaViewModel;\n    offsetX: number;\n    offsetY: number;\n  }) => {\n    const {\n      MSA,\n      colWidth,\n      bgColor,\n      columns,\n      rowHeight,\n      scrollY,\n      scrollX,\n      hierarchy,\n      colorSchemeName,\n      blockSize,\n    } = model;\n\n    const colorScheme = colorSchemes[colorSchemeName];\n    const colorContrast = useMemo(\n      () =>\n        transform(colorScheme, ([letter, color]: any) => [\n          letter,\n          'black',\n          // theme.palette.getContrastText(Color(color).hex()),\n        ]),\n      [colorScheme]\n    );\n    const ref = useRef<HTMLCanvasElement>(null);\n    useEffect(() => {\n      if (!ref.current) {\n        return;\n      }\n\n      const ctx = ref.current.getContext('2d');\n      if (!ctx) {\n        return;\n      }\n\n      ctx.resetTransform();\n      ctx.clearRect(0, 0, blockSize, blockSize);\n      ctx.translate(-offsetX, rowHeight / 2 - offsetY);\n      ctx.textAlign = 'center';\n      ctx.font = ctx.font.replace(/\\d+px/, `${Math.max(8, rowHeight - 12)}px`);\n\n      const leaves = hierarchy.leaves();\n      const b = blockSize;\n\n      // slice vertical rows, e.g. tree leaves, avoid negative slice\n      const yStart = Math.max(0, Math.floor((offsetY - rowHeight) / rowHeight));\n      const yEnd = Math.max(\n        0,\n        Math.ceil((offsetY + b + rowHeight) / rowHeight)\n      );\n\n      // slice horizontal visible letters, avoid negative slice\n      const xStart = Math.max(0, Math.floor(offsetX / colWidth));\n      const xEnd = Math.max(0, Math.ceil((offsetX + b) / colWidth));\n      const visibleLeaves = leaves.slice(yStart, yEnd);\n      visibleLeaves.forEach((node: any) => {\n        const {\n          x: y,\n          data: { name },\n        } = node;\n\n        const str = columns[name]?.slice(xStart, xEnd);\n        for (let i = 0; i < str?.length; i++) {\n          const letter = str[i];\n          const color = colorScheme[letter.toUpperCase()];\n          if (bgColor) {\n            const x = i * colWidth + offsetX - (offsetX % colWidth);\n            ctx.fillStyle = color || 'white';\n            ctx.fillRect(x, y - rowHeight, colWidth, rowHeight);\n          }\n        }\n      });\n\n      if (rowHeight >= 10 && colWidth >= rowHeight / 2) {\n        visibleLeaves.forEach((node: any) => {\n          const {\n            x: y,\n            data: { name },\n          } = node;\n\n          const str = columns[name]?.slice(xStart, xEnd);\n          for (let i = 0; i < str?.length; i++) {\n            const letter = str[i];\n            const color = colorScheme[letter.toUpperCase()];\n            const contrast = colorContrast[letter.toUpperCase()] || 'black';\n            const x = i * colWidth + offsetX - (offsetX % colWidth);\n\n            //note: -rowHeight/4 matches +rowHeight/4 in tree\n            ctx.fillStyle = bgColor ? contrast : color || 'black';\n            ctx.fillText(\n              letter,\n              Math.floor(x + colWidth / 2),\n              Math.floor(y - rowHeight / 4)\n            );\n          }\n        });\n      }\n    }, [\n      MSA,\n      columns,\n      colorScheme,\n      colorContrast,\n      bgColor,\n      rowHeight,\n      colWidth,\n      hierarchy,\n      offsetX,\n      offsetY,\n      blockSize,\n    ]);\n\n    return (\n      <canvas\n        ref={ref}\n        width={blockSize}\n        height={blockSize}\n        style={{\n          position: 'absolute',\n          top: scrollY + offsetY,\n          left: scrollX + offsetX,\n          width: blockSize,\n          height: blockSize,\n        }}\n      />\n    );\n  }\n);\n\nconst MSACanvas = observer(({ model }: { model: MsaViewModel }) => {\n  const {\n    MSA,\n    msaFilehandle,\n    width,\n    height,\n    treeWidth,\n    blocksX,\n    blocksY,\n  } = model;\n  const ref = useRef<HTMLDivElement>(null);\n  const scheduled = useRef(false);\n  const deltaX = useRef(0);\n  const deltaY = useRef(0);\n  useEffect(() => {\n    const curr = ref.current;\n    if (!curr) {\n      return;\n    }\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent);\n      deltaX.current += event.pixelX;\n      deltaY.current += event.pixelY;\n\n      if (!scheduled.current) {\n        scheduled.current = true;\n        requestAnimationFrame(() => {\n          model.doScrollX(-deltaX.current);\n          model.doScrollY(-deltaY.current);\n          deltaX.current = 0;\n          deltaY.current = 0;\n          scheduled.current = false;\n        });\n      }\n      origEvent.preventDefault();\n    }\n    curr.addEventListener('wheel', onWheel);\n    return () => {\n      curr.removeEventListener('wheel', onWheel);\n    };\n  }, [model]);\n  let blocks: any[] = [];\n  blocksY.forEach(blockY =>\n    blocksX.forEach(blockX => {\n      const key = `${blockX}_${blockY}`;\n      blocks.push(\n        <MSABlock key={key} model={model} offsetX={blockX} offsetY={blockY} />\n      );\n    })\n  );\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        position: 'relative',\n        height,\n        width: width - treeWidth,\n        overflow: 'hidden',\n      }}\n    >\n      {!MSA && !msaFilehandle ? null : !MSA ? (\n        <div style={{ position: 'absolute', left: '50%', top: '50%' }}>\n          <CircularProgress />\n          <Typography>Loading...</Typography>\n        </div>\n      ) : (\n        blocks\n      )}\n    </div>\n  );\n});\n\nexport default MSACanvas;\n","//icons\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport InfoIcon from '@material-ui/icons/Info';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\n//components\nimport SettingsDialog from './SettingsDlg';\nimport AboutDialog from './AboutDlg';\nimport DetailsDialog from './DetailsDlg';\nimport ImportForm from './ImportForm';\nimport TreeCanvas from './Tree';\nimport MSACanvas from './MSA';\n\nimport { MsaViewModel } from '../model';\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { IconButton, Typography, Select } from '@material-ui/core';\n\nconst Header = observer(({ model }: { model: MsaViewModel }) => {\n  const [settingsDialogVisible, setSettingsDialogVisible] = useState(false);\n  const [aboutDialogVisible, setAboutDialogVisible] = useState(false);\n  const [detailsDialogVisible, setDetailsDialogVisible] = useState(false);\n  const { currentAlignment, alignmentNames } = model;\n\n  return (\n    <div style={{ display: 'block' }}>\n      <IconButton\n        onClick={() => {\n          model.setData({ tree: '', msa: '' });\n          model.setTreeFilehandle(undefined);\n          model.setMSAFilehandle(undefined);\n          model.setScrollY(0);\n          model.setScrollX(0);\n          model.setCurrentAlignment(0);\n        }}\n      >\n        <FolderOpenIcon />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          setSettingsDialogVisible(true);\n        }}\n      >\n        <SettingsIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={() => {\n          setAboutDialogVisible(true);\n        }}\n      >\n        <InfoIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={() => {\n          setDetailsDialogVisible(true);\n        }}\n      >\n        <AssignmentIcon />\n      </IconButton>\n      <SettingsDialog\n        open={settingsDialogVisible}\n        model={model}\n        onClose={() => setSettingsDialogVisible(false)}\n      />\n      <AboutDialog\n        open={aboutDialogVisible}\n        onClose={() => setAboutDialogVisible(false)}\n      />\n\n      <DetailsDialog\n        open={detailsDialogVisible}\n        model={model}\n        onClose={() => setDetailsDialogVisible(false)}\n      />\n      {alignmentNames.length > 0 ? (\n        <Select\n          native\n          value={currentAlignment}\n          onChange={event => {\n            //@ts-ignore\n            model.setCurrentAlignment(+event.target.value);\n            model.setScrollX(0);\n            model.setScrollY(0);\n          }}\n        >\n          {alignmentNames.map((option, index) => (\n            <option key={option + '-' + index} value={index}>\n              {option}\n            </option>\n          ))}\n        </Select>\n      ) : null}\n    </div>\n  );\n});\n\nexport default observer(({ model }: { model: MsaViewModel }) => {\n  const { done, initialized } = model;\n\n  console.log(done, initialized);\n  if (!initialized) {\n    return <ImportForm model={model} />;\n  } else if (!done) {\n    console.log('wthyyy', done, initialized);\n    return <Typography variant=\"h4\">Loading...</Typography>;\n  } else {\n    console.log('wthyyy');\n    const { height } = model;\n\n    return (\n      <div style={{ height, overflow: 'hidden' }}>\n        <Header model={model} />\n        <div\n          style={{\n            position: 'relative',\n            display: 'flex',\n          }}\n        >\n          <TreeCanvas model={model} />\n          <MSACanvas model={model} />\n        </div>\n      </div>\n    );\n  }\n});\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * Newick format parser in JavaScript.\n *\n * Copyright (c) Jason Davies 2010.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Example tree (from http://en.wikipedia.org/wiki/Newick_format):\n *\n * +--0.1--A\n * F-----0.2-----B            +-------0.3----C\n * +------------------0.5-----E\n *                            +---------0.4------D\n *\n * Newick format:\n * (A:0.1,B:0.2,(C:0.3,D:0.4)E:0.5)F;\n *\n * Converted to JSON:\n * {\n *   name: \"F\",\n *   branchset: [\n *     {name: \"A\", length: 0.1},\n *     {name: \"B\", length: 0.2},\n *     {\n *       name: \"E\",\n *       length: 0.5,\n *       branchset: [\n *         {name: \"C\", length: 0.3},\n *         {name: \"D\", length: 0.4}\n *       ]\n *     }\n *   ]\n * }\n *\n * Converted to JSON, but with no names or lengths:\n * {\n *   branchset: [\n *     {}, {}, {\n *       branchset: [{}, {}]\n *     }\n *   ]\n * }\n */\nexport default function parse(s) {\n  const ancestors = [];\n  let tree = {};\n  const tokens = s.split(/\\s*(;|\\(|\\)|,|:)\\s*/);\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const subtree = {};\n    switch (token) {\n      case \"(\": // new branchset\n        tree.branchset = [subtree];\n        ancestors.push(tree);\n        tree = subtree;\n        break;\n      case \",\": // another branch\n        ancestors[ancestors.length - 1].branchset.push(subtree);\n        tree = subtree;\n        break;\n      case \")\": // optional name next\n        tree = ancestors.pop();\n        break;\n      case \":\": // optional length next\n        break;\n      default:\n        const x = tokens[i - 1];\n        if (x === \")\" || x === \"(\" || x === \",\") {\n          tree.name = token;\n        } else if (x === \":\") {\n          tree.length = parseFloat(token);\n        }\n    }\n  }\n  return tree;\n}\n","import BaseViewModel from '@jbrowse/core/pluggableElementTypes/models/BaseViewModel';\nimport * as Clustal from 'clustal-js';\nimport { hierarchy, cluster } from 'd3-hierarchy';\nimport { ascending, max } from 'd3-array';\nimport parseNewick from './parseNewick';\nimport Stockholm from 'stockholm-js';\nimport { Instance, types, addDisposer } from 'mobx-state-tree';\nimport { FileLocation, ElementId } from '@jbrowse/core/util/types/mst';\n\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { autorun } from 'mobx';\n\nlet str = JSON.stringify;\n\nclass ClustalMSA {\n  private MSA: any;\n  constructor(text: string) {\n    this.MSA = Clustal.parse(text);\n  }\n\n  getMSA() {\n    return this.MSA;\n  }\n\n  getRow(name: string) {\n    return this.MSA.alns.find((aln: any) => aln.id === name)?.seq.split('');\n  }\n\n  getWidth() {\n    return this.MSA.alns[0].seq.length;\n  }\n\n  getDetails() {\n    return this.MSA.header;\n  }\n\n  getTree() {\n    return {\n      name: 'root',\n      noTree: true,\n      branchset: this.MSA.alns.map((aln: any) => ({\n        name: aln.id,\n      })),\n    };\n  }\n}\n\ntype StrMap = { [key: string]: string };\nclass FastaMSA {\n  private MSA: any;\n  constructor(text: string) {\n    let seq: StrMap = {};\n    let name = '';\n    let re = /^>(\\S+)/;\n    text.split('\\n').forEach(line => {\n      const match = re.exec(line);\n      if (match) {\n        seq[(name = match[1])] = '';\n      } else if (name) {\n        seq[name] = seq[name] + line.replace(/[ \\t]/g, '');\n      }\n    });\n    this.MSA = { seqdata: seq };\n  }\n\n  getMSA() {\n    return this.MSA;\n  }\n\n  getRow(name: string) {\n    return this.MSA?.seqdata[name]?.split('');\n  }\n\n  getWidth() {\n    const name = Object.keys(this.MSA?.seqdata)[0];\n    return this.getRow(name).length;\n  }\n\n  getDetails() {\n    return {};\n  }\n\n  getTree() {\n    return {\n      name: 'root',\n      noTree: true,\n      branchset: Object.keys(this.MSA.seqdata).map(name => ({\n        name,\n      })),\n    };\n  }\n}\n\nclass StockholmMSA {\n  private MSA: any;\n  private data: any;\n  constructor(text: string, currentAlignment: number) {\n    const res = Stockholm.parseAll(text);\n    this.data = res;\n    this.MSA = res[currentAlignment];\n  }\n\n  getMSA() {\n    return this.MSA;\n  }\n\n  getRow(name: string) {\n    return this.MSA?.seqdata[name]?.split('');\n  }\n\n  getWidth() {\n    const name = Object.keys(this.MSA?.seqdata)[0];\n    return this.getRow(name).length;\n  }\n\n  alignmentNames() {\n    return this.data.map(\n      (aln: any, index: number) => aln.gf.DE?.[0] || `Alignment ${index + 1}`\n    );\n  }\n\n  getDetails() {\n    return this.MSA.gf;\n  }\n\n  getTree() {\n    const tree = this.MSA?.gf?.NH?.[0];\n    return tree\n      ? generateNodeIds(parseNewick(tree))\n      : {\n          name: 'root',\n          noTree: true,\n          branchset: Object.keys(this.MSA.seqdata).map((name: any) => ({\n            name,\n          })),\n        };\n  }\n}\n\nfunction setBrLength(d: any, y0: number, k: number) {\n  d.len = (y0 += Math.max(d.data.length || 0, 0)) * k;\n  if (d.children) {\n    d.children.forEach((d: any) => {\n      setBrLength(d, y0, k);\n    });\n  }\n}\n\nfunction maxLength(d: any): number {\n  return (d.data.length || 1) + (d.children ? max(d.children, maxLength) : 0);\n}\n\n// note: we don't use this.root because it won't update in response to changes\n// in realWidth/totalHeight here otherwise, needs to generate a new object\nfunction getRoot(tree: any) {\n  return hierarchy(tree, d => d.branchset)\n    .sum(d => (d.branchset ? 0 : 1))\n    .sort((a, b) => {\n      return ascending(a.data.length || 1, b.data.length || 1);\n    });\n}\n\nfunction generateNodeIds(tree: any, parent = 'node', depth = 0, index = 0) {\n  tree.id = `${parent}-${depth}-${index}`;\n  if (tree.branchset?.length) {\n    tree.branchset.forEach((b: any, index: number) =>\n      generateNodeIds(b, tree.id, depth + 1, index)\n    );\n  }\n\n  return tree;\n}\nfunction filter(tree: any, collapsed: string[]) {\n  const { branchset, ...rest } = tree;\n  if (collapsed.includes(tree.id)) {\n    return rest;\n  } else if (tree.branchset) {\n    return {\n      ...rest,\n      branchset: branchset.map((b: any) => filter(b, collapsed)),\n    };\n  } else {\n    return tree;\n  }\n}\n\nfunction clamp(min: number, num: number, max: number) {\n  return Math.min(Math.max(num, min), max);\n}\n\nconst model = types.snapshotProcessor(\n  types\n    .compose(\n      BaseViewModel,\n      types\n        .model('MsaView', {\n          id: ElementId,\n          type: types.literal('MsaView'),\n          height: 680,\n          treeAreaWidth: 600,\n          nameWidth: 200,\n          rowHeight: 20,\n          scrollY: 0,\n          scrollX: 0,\n          blockSize: 1000,\n          colWidth: 16,\n          showBranchLen: true,\n          bgColor: true,\n          drawNodeBubbles: true,\n          colorSchemeName: 'maeditor',\n          treeFilehandle: types.maybe(FileLocation),\n          msaFilehandle: types.maybe(FileLocation),\n          currentAlignment: 0,\n          collapsed: types.array(types.string),\n          data: types.optional(\n            types\n              .model({\n                tree: types.maybe(types.string),\n                msa: types.maybe(types.string),\n              })\n              .actions(self => ({\n                setTree(tree?: string) {\n                  self.tree = tree;\n                },\n                setMSA(msa?: string) {\n                  self.msa = msa;\n                },\n              })),\n            { tree: '', msa: '' }\n          ),\n        })\n        .volatile(() => ({\n          error: undefined as Error | undefined,\n          volatileWidth: 0,\n          margin: { left: 20, top: 20 },\n        }))\n        .actions(self => ({\n          setError(error?: Error) {\n            self.error = error;\n          },\n          setRowHeight(n: number) {\n            self.rowHeight = n;\n          },\n          setColWidth(n: number) {\n            self.colWidth = n;\n          },\n          setColorSchemeName(name: string) {\n            self.colorSchemeName = name;\n          },\n          setScrollY(n: number) {\n            self.scrollY = n;\n          },\n          setScrollX(n: number) {\n            self.scrollX = n;\n          },\n          setTreeWidth(n: number) {\n            self.treeAreaWidth = n;\n          },\n          setNameWidth(n: number) {\n            self.nameWidth = n;\n          },\n          setCurrentAlignment(n: number) {\n            self.currentAlignment = n;\n          },\n          toggleCollapsed(node: string) {\n            if (self.collapsed.includes(node)) {\n              self.collapsed.remove(node);\n            } else {\n              self.collapsed.push(node);\n            }\n          },\n          toggleBranchLen() {\n            self.showBranchLen = !self.showBranchLen;\n          },\n          toggleBgColor() {\n            self.bgColor = !self.bgColor;\n          },\n          toggleNodeBubbles() {\n            self.drawNodeBubbles = !self.drawNodeBubbles;\n          },\n          setData(data: any) {\n            self.data = data;\n          },\n          setWidth(width: number) {\n            self.volatileWidth = width;\n          },\n          async setMSAFilehandle(r?: typeof FileLocation) {\n            //@ts-ignore\n            if (r?.blob) {\n              //@ts-ignore\n              const text = await openLocation(r).readFile('utf8');\n              this.setMSA(text);\n            } else {\n              //@ts-ignore\n              self.msaFilehandle = r;\n            }\n          },\n          async setTreeFilehandle(r?: typeof FileLocation) {\n            //@ts-ignore\n            if (r?.blob) {\n              //@ts-ignore\n              const text = await openLocation(r).readFile('utf8');\n              this.setTree(text);\n            } else {\n              //@ts-ignore\n              self.treeFilehandle = r;\n            }\n          },\n          setMSA(result: any) {\n            self.data.setMSA(result);\n          },\n          setTree(result: any) {\n            self.data.setTree(result);\n          },\n\n          afterCreate() {\n            addDisposer(\n              self,\n              autorun(async () => {\n                const { treeFilehandle } = self;\n                if (treeFilehandle) {\n                  const f = openLocation(treeFilehandle);\n                  const result = await f.readFile('utf8');\n                  this.setTree(result);\n                }\n              })\n            );\n            addDisposer(\n              self,\n              autorun(async () => {\n                const { msaFilehandle } = self;\n\n                if (msaFilehandle) {\n                  const f = openLocation(msaFilehandle);\n                  const result = await f.readFile('utf8');\n                  this.setMSA(result);\n                }\n              })\n            );\n          },\n        }))\n        .views(self => {\n          let oldBlocksX: number[] = [];\n          let oldBlocksY: number[] = [];\n          let oldValX = 0;\n          let oldValY = 0;\n          return {\n            get initialized() {\n              return (\n                self.data.msa ||\n                self.data.tree ||\n                self.msaFilehandle ||\n                self.treeFilehandle\n              );\n            },\n\n            get blocksX() {\n              const { scrollX, blockSize: size, colWidth } = self;\n              const ret = -(size * Math.floor(scrollX / size)) - size;\n\n              const b = [];\n              for (let i = ret; i < ret + size * 3; i += size) {\n                if (i + size > 0) {\n                  b.push(i);\n                }\n              }\n              if (str(b) !== str(oldBlocksX) || colWidth !== oldValX) {\n                oldBlocksX = b;\n                oldValX = colWidth;\n              }\n              return oldBlocksX;\n            },\n\n            get blocksY() {\n              const { scrollY, blockSize: size, rowHeight } = self;\n              const ret = -(size * Math.floor(scrollY / size)) - 2 * size;\n\n              const b = [];\n              for (let i = ret; i < ret + size * 3; i += size) {\n                if (i + size > 0) {\n                  b.push(i);\n                }\n              }\n              if (str(b) !== str(oldBlocksY) || rowHeight !== oldValY) {\n                oldBlocksY = b;\n                oldValY = rowHeight;\n              }\n              return oldBlocksY;\n            },\n\n            get done() {\n              return (\n                self.volatileWidth > 0 &&\n                this.initialized &&\n                (self.data.msa || self.data.tree)\n              );\n            },\n\n            get alignmentDetails() {\n              return this.MSA?.getDetails() || {};\n            },\n\n            get currentAlignmentName() {\n              return this.alignmentNames[self.currentAlignment];\n            },\n\n            get alignmentNames(): string[] {\n              //@ts-ignore\n              return this.MSA?.alignmentNames?.() || [];\n            },\n\n            get noTree() {\n              return !!this.tree.noTree;\n            },\n\n            get menuItems() {\n              return [];\n            },\n\n            get MSA() {\n              const text = self.data.msa;\n              if (text) {\n                if (Stockholm.sniff(text)) {\n                  return new StockholmMSA(text, self.currentAlignment);\n                } else if (text.startsWith('>')) {\n                  return new FastaMSA(text);\n                } else {\n                  return new ClustalMSA(text);\n                }\n              }\n              return null;\n            },\n            get width() {\n              return self.volatileWidth;\n            },\n\n            get msaWidth() {\n              return (\n                (this.MSA?.getWidth() - this.blanks.length) * self.colWidth\n              );\n            },\n\n            get tree() {\n              const {\n                data: { tree },\n                collapsed,\n              } = self;\n              return filter(\n                tree ? generateNodeIds(parseNewick(tree)) : this.MSA?.getTree(),\n                collapsed\n              );\n            },\n\n            get root() {\n              return getRoot(this.tree);\n            },\n\n            get treeWidthMinusNames() {\n              return self.treeAreaWidth - self.nameWidth;\n            },\n\n            get treeWidth() {\n              return this.noTree ? self.nameWidth : self.treeAreaWidth;\n            },\n\n            get blanks() {\n              const nodes = this.hierarchy.leaves();\n              const blanks = [];\n              const strs = nodes\n                .map(({ data }) => this.MSA?.getRow(data.name))\n                .filter(f => !!f);\n\n              for (let i = 0; i < strs?.[0].length; i++) {\n                let counter = 0;\n                for (let j = 0; j < strs.length; j++) {\n                  if (strs[j][i] === '-') {\n                    counter++;\n                  }\n                }\n                if (counter === strs.length) {\n                  blanks.push(i);\n                }\n              }\n              return blanks;\n            },\n\n            get columns(): Record<string, string> {\n              const nodes = this.hierarchy.leaves();\n              const rows = nodes\n                .map(({ data }) => [data.name, this.MSA?.getRow(data.name)])\n                .filter(f => !!f[1]);\n              const strs = rows.map(row => row[1]);\n\n              const ret: string[] = [];\n              for (let i = 0; i < strs.length; i++) {\n                let s = '';\n                let b = 0;\n                for (let j = 0; j < strs[i].length; j++) {\n                  if (j === this.blanks[b]) {\n                    b++;\n                  } else {\n                    s += strs[i][j];\n                  }\n                }\n                ret.push(s);\n              }\n              return Object.fromEntries(\n                rows.map((row, index) => [row[0], ret[index]])\n              );\n            },\n\n            // generates a new tree that is clustered with x,y positions\n            get hierarchy() {\n              const root = getRoot(this.tree);\n              const clust = cluster()\n                .size([this.totalHeight, this.treeWidthMinusNames])\n                .separation(() => 1);\n              clust(root);\n              setBrLength(\n                root,\n                (root.data.length = 0),\n                this.treeWidthMinusNames / maxLength(root)\n              );\n              return root;\n            },\n\n            get totalHeight() {\n              return this.root.leaves().length * self.rowHeight;\n            },\n          };\n        })\n    )\n    .actions(self => ({\n      doScrollY(deltaY: number) {\n        self.scrollY = clamp(-self.totalHeight + 10, self.scrollY + deltaY, 10);\n      },\n\n      doScrollX(deltaX: number) {\n        self.scrollX = clamp(\n          -self.msaWidth + (self.width - self.treeWidth - 20),\n          self.scrollX + deltaX,\n          0\n        );\n      },\n    })),\n  {\n    postProcessor(result) {\n      const { data, ...rest } = result;\n      return rest;\n    },\n  }\n);\n\nexport default model;\n\nexport type MsaViewStateModel = typeof model;\nexport type MsaViewModel = Instance<MsaViewStateModel>;\n","import { observer } from \"mobx-react\";\nimport { MSAView, MSAModel } from \"msaview\";\nimport { createJBrowseTheme } from \"@jbrowse/core/ui/theme\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nfunction App() {\n  const theme = createJBrowseTheme();\n  const model = MSAModel.create({ id: `${Math.random()}`, type: \"MsaView\" });\n  model.setWidth(1800);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ border: \"1px solid black\", margin: 20 }}>\n        <MSAView model={model} />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}